{"version":3,"file":"js/app.712f886e.js","mappings":"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","sources":["webpack://sdcs-dashboard/./src/components/sidebar/SideBarList.vue?0541","webpack://sdcs-dashboard/./src/components/sidebar/SideBarList.vue","webpack://sdcs-dashboard/./src/components/sidebar/SideBarList.vue?2bef","webpack://sdcs-dashboard/./src/service/hasura.ts","webpack://sdcs-dashboard/./src/store/landingSites.ts","webpack://sdcs-dashboard/./src/components/layers/natural/OceanDepthAnalyzer.vue?5fbd","webpack://sdcs-dashboard/./src/components/layers/natural/OceanDepthAnalyzer.vue","webpack://sdcs-dashboard/./src/components/layers/natural/OceanDepthAnalyzer.vue?fe95","webpack://sdcs-dashboard/./src/components/sidebar/ElevationProfile.vue?ee4a","webpack://sdcs-dashboard/./src/components/sidebar/ElevationProfile.vue","webpack://sdcs-dashboard/./src/components/sidebar/ElevationProfile.vue?fe7e","webpack://sdcs-dashboard/./src/components/sidebar/CableViewer.vue?3a26","webpack://sdcs-dashboard/./src/components/sidebar/CableViewer.vue","webpack://sdcs-dashboard/./src/components/sidebar/CableViewer.vue?7294","webpack://sdcs-dashboard/./src/components/controls/FunctionalityOverview.vue","webpack://sdcs-dashboard/./src/components/controls/FunctionalityOverview.vue?5865","webpack://sdcs-dashboard/./src/components/LayerManager.vue?1a99","webpack://sdcs-dashboard/./src/components/LayerManager.vue","webpack://sdcs-dashboard/./src/components/LayerManager.vue?ebdd","webpack://sdcs-dashboard/./src/components/controls/CableSourceSelector.vue","webpack://sdcs-dashboard/./src/components/controls/CableSourceSelector.vue?098d","webpack://sdcs-dashboard/./src/components/controls/TimelineSlider.vue","webpack://sdcs-dashboard/./src/components/controls/TimelineSlider.vue?3c38","webpack://sdcs-dashboard/./src/components/layers/maritime/VesselTracking.vue?a73a","webpack://sdcs-dashboard/./src/components/layers/maritime/VesselTracking.vue","webpack://sdcs-dashboard/./src/components/layers/maritime/VesselTracking.vue?1748","webpack://sdcs-dashboard/./src/components/layers/infrastructure/MaintenanceLayerToggle.vue","webpack://sdcs-dashboard/./src/components/layers/infrastructure/MaintenanceLayerToggle.vue?4cd8","webpack://sdcs-dashboard/./src/components/layers/natural/DrawingLayer.vue?79ea","webpack://sdcs-dashboard/./src/components/layers/natural/DrawingLayer.vue","webpack://sdcs-dashboard/./src/components/layers/natural/DrawingLayer.vue?9d40","webpack://sdcs-dashboard/./src/components/layers/natural/OceanDepth.vue?0939","webpack://sdcs-dashboard/./src/components/layers/natural/OceanDepth.vue","webpack://sdcs-dashboard/./src/components/layers/natural/OceanDepth.vue?97ac","webpack://sdcs-dashboard/./src/components/controls/FishingDatePicker.vue?8cac","webpack://sdcs-dashboard/./src/components/controls/FishingDatePicker.vue","webpack://sdcs-dashboard/./src/components/controls/FishingDatePicker.vue?0f39","webpack://sdcs-dashboard/./src/components/layers/infrastructure/GasPipelines.vue?22f2","webpack://sdcs-dashboard/./src/components/layers/infrastructure/GasPipelines.vue","webpack://sdcs-dashboard/./src/components/layers/infrastructure/GasPipelines.vue?862d","webpack://sdcs-dashboard/./src/components/layers/infrastructure/ClusteredDataCenters.vue","webpack://sdcs-dashboard/./src/components/layers/infrastructure/ClusteredDataCenters.vue?76e4","webpack://sdcs-dashboard/./src/components/layers/infrastructure/AnchorageLayerToggle.vue","webpack://sdcs-dashboard/./src/components/layers/infrastructure/AnchorageLayerToggle.vue?bfcd","webpack://sdcs-dashboard/./src/components/layers/infrastructure/ClusteredAnchorage.vue","webpack://sdcs-dashboard/./src/components/layers/infrastructure/ClusteredAnchorage.vue?d44e","webpack://sdcs-dashboard/./src/components/layers/natural/SeismicActivity.vue?1705","webpack://sdcs-dashboard/./src/components/layers/natural/SeismicActivity.vue","webpack://sdcs-dashboard/./src/components/layers/natural/SeismicActivity.vue?c5ac","webpack://sdcs-dashboard/./src/components/layers/risk/EuropeanRiskMap.vue?7040","webpack://sdcs-dashboard/./src/components/layers/risk/EuropeanRiskMap.vue","webpack://sdcs-dashboard/./src/components/layers/risk/EuropeanRiskMap.vue?8003","webpack://sdcs-dashboard/./src/components/layers/risk/GlobalRiskMap.vue?8754","webpack://sdcs-dashboard/./src/components/layers/risk/GlobalRiskMap.vue","webpack://sdcs-dashboard/./src/components/layers/risk/GlobalRiskMap.vue?9d90","webpack://sdcs-dashboard/./src/components/layers/risk/VolcanoLayer.vue","webpack://sdcs-dashboard/./src/components/layers/risk/VolcanoLayer.vue?7305","webpack://sdcs-dashboard/./src/components/layers/risk/CableAgeLayer.vue?9a5c","webpack://sdcs-dashboard/./src/components/layers/risk/CableAgeLayer.vue","webpack://sdcs-dashboard/./src/components/layers/risk/CableAgeLayer.vue?a2e9","webpack://sdcs-dashboard/./src/components/layers/risk/DistanceToShips.vue?e9f4","webpack://sdcs-dashboard/./src/components/layers/risk/DistanceToShips.vue","webpack://sdcs-dashboard/./src/components/layers/risk/DistanceToShips.vue?1113","webpack://sdcs-dashboard/./src/components/layers/risk/RiskLayers.vue?8c79","webpack://sdcs-dashboard/./src/components/layers/risk/RiskLayers.vue","webpack://sdcs-dashboard/./src/components/layers/risk/RiskLayers.vue?4557","webpack://sdcs-dashboard/./src/components/layers/risk/RiskLayersToggle.vue","webpack://sdcs-dashboard/./src/components/layers/risk/RiskLayersToggle.vue?eba8","webpack://sdcs-dashboard/./src/components/LeafletMap.vue?786e","webpack://sdcs-dashboard/./src/components/LeafletMap.vue","webpack://sdcs-dashboard/./src/components/LeafletMap.vue?aa93","webpack://sdcs-dashboard/./src/components/sidebar/LandingSiteViewer.vue?b2ce","webpack://sdcs-dashboard/./src/components/sidebar/LandingSiteViewer.vue","webpack://sdcs-dashboard/./src/components/sidebar/LandingSiteViewer.vue?fe68","webpack://sdcs-dashboard/./src/router/index.ts","webpack://sdcs-dashboard/./src/store/datacables.ts","webpack://sdcs-dashboard/./src/components/sidebar/SourcesModal.vue","webpack://sdcs-dashboard/./src/components/sidebar/SourcesModal.vue?886e","webpack://sdcs-dashboard/./src/components/sidebar/TheSidebar.vue?d476","webpack://sdcs-dashboard/./src/components/sidebar/TheSidebar.vue","webpack://sdcs-dashboard/./src/components/sidebar/TheSidebar.vue?9c10","webpack://sdcs-dashboard/./src/views/HomeView.vue?71c7","webpack://sdcs-dashboard/./src/views/HomeView.vue","webpack://sdcs-dashboard/./src/views/HomeView.vue?1da1","webpack://sdcs-dashboard/./src/App.vue?2a5e","webpack://sdcs-dashboard/./src/App.vue","webpack://sdcs-dashboard/./src/App.vue?7ccd","webpack://sdcs-dashboard/./src/main.ts","webpack://sdcs-dashboard/./src/assets/functionalityOverview/ sync ^\\.\\/.*$","webpack://sdcs-dashboard/webpack/bootstrap","webpack://sdcs-dashboard/webpack/runtime/chunk loaded","webpack://sdcs-dashboard/webpack/runtime/compat get default export","webpack://sdcs-dashboard/webpack/runtime/create fake namespace object","webpack://sdcs-dashboard/webpack/runtime/define property getters","webpack://sdcs-dashboard/webpack/runtime/ensure chunk","webpack://sdcs-dashboard/webpack/runtime/get javascript chunk filename","webpack://sdcs-dashboard/webpack/runtime/get mini-css chunk filename","webpack://sdcs-dashboard/webpack/runtime/global","webpack://sdcs-dashboard/webpack/runtime/hasOwnProperty shorthand","webpack://sdcs-dashboard/webpack/runtime/load script","webpack://sdcs-dashboard/webpack/runtime/make namespace object","webpack://sdcs-dashboard/webpack/runtime/publicPath","webpack://sdcs-dashboard/webpack/runtime/jsonp chunk loading","webpack://sdcs-dashboard/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7261f9d4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"onClick\"]\nconst _hoisted_2 = { class: \"item-content\" }\nconst _hoisted_3 = { class: \"item-name\" }\n\nimport { useDataCablesStore } from \"@/store/datacables\";\n\n// Store initialization\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SideBarList',\n  setup(__props) {\n\n// Store imports\nconst dataCableStore = useDataCablesStore();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(dataCableStore).getDataCables, (listItems) => {\n    return (_openBlock(), _createElementBlock(\"div\", {\n      class: \"item-container\",\n      key: listItems.id\n    }, [\n      _createElementVNode(\"a\", {\n        onClick: ($event: any) => (_unref(dataCableStore).setSelectCable(listItems.id, true)),\n        class: _normalizeClass([\"list-item\", { 'active': _unref(dataCableStore).selectedCableId === listItems.id }])\n      }, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"strong\", _hoisted_3, _toDisplayString(listItems.name), 1)\n        ])\n      ], 10, _hoisted_1)\n    ]))\n  }), 128))\n}\n}\n\n})","<!--\n  SideBarList.vue\n  \n  A sidebar component that displays a list of data cables.\n  Each cable can be selected by clicking on it, which updates the store\n  and applies visual styling to indicate the active selection.\n-->\n\n<template>\n  <div\n    class=\"item-container\"\n    v-for=\"listItems in dataCableStore.getDataCables\"\n    :key=\"listItems.id\"\n  >\n    <!-- Clickable list item with conditional active styling -->\n    <a\n      @click=\"dataCableStore.setSelectCable(listItems.id, true)\"\n      class=\"list-item\"\n      :class=\"{ 'active': dataCableStore.selectedCableId === listItems.id }\"\n    >\n      <div class=\"item-content\">\n        <!-- Cable name display -->\n        <strong class=\"item-name\">{{ listItems.name }}</strong>\n      </div>\n    </a>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// Store imports\nimport { useDataCablesStore } from \"@/store/datacables\";\n\n// Store initialization\nconst dataCableStore = useDataCablesStore();\n</script>\n\n<style scoped>\n/* Container for each list item */\n.item-container {\n  margin-bottom: 0.25rem;\n}\n\n/* Base styling for list items */\n.list-item {\n  display: block;\n  padding: 0.75rem 1rem;\n  color: #e2e8f0;\n  background-color: rgba(255, 255, 255, 0.05);\n  border-radius: 0.375rem;\n  transition: all 0.2s ease;\n  text-decoration: none;\n  cursor: pointer;\n  border-left: 3px solid transparent;\n}\n\n/* Hover state for list items */\n.list-item:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n  color: #ffffff;\n}\n\n/* Active/selected state styling */\n.list-item.active {\n  background-color: rgba(37, 99, 235, 0.2);\n  border-left-color: #2563eb;\n  color: #ffffff;\n}\n\n/* Content wrapper styling */\n.item-content {\n  display: block;\n  width: 100%;\n  text-align: left;\n}\n\n/* Cable name text styling */\n.item-name {\n  font-size: 1rem;\n  font-weight: 500;\n  white-space: normal;\n  word-break: break-word;\n  line-height: 1.4;\n}\n</style>","import script from \"./SideBarList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SideBarList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SideBarList.vue?vue&type=style&index=0&id=7261f9d4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7261f9d4\"]])\n\nexport default __exports__","import { gql, useClientHandle } from \"@urql/vue\";\nexport async function loadCables() {\n  const handle = useClientHandle();\n  const result = await handle.useQuery({\n    query: gql`\n      query loadCables {\n        CableSystems {\n          id\n          abbreviation\n          name\n          geoData\n          readyForService\n          outOfService\n          color\n          CableSystem_X_Landingsites {\n            Landingsite {\n              id\n              name\n              country\n            }\n          }\n        }\n      }\n    `,\n  });\n  return result;\n}\n\nexport async function loadLandingSites() {\n  const handle = useClientHandle();\n  const result = await handle.useQuery({\n    query: gql`\n      query loadLandingSites {\n        Landingsites {\n          country\n          id\n          name\n          geoData\n        }\n      }\n    `,\n  });\n  return result;\n}\nexport const queryCableById = `\n  query loadCableById ($id: String!) {\n    CableSystems(where: {id: {_eq: $id}}) {\n      id\n      eu_relations\n      endOfService\n      constructionCost\n      chineseInvolvement\n      abbreviation\n      length\n      name\n      outOfService\n      readyForService\n      seaRegion\n      stateOwnership\n      CableSystem_X_Landingsites {\n        Landingsite {\n          id\n          name\n        }\n      }\n      Ownerships {\n        companyId\n        Company {\n              id\n              name\n              nationality  \n        }\n      }\n    }\n  }`;\n\nexport const queryLandingSiteById = `\n  query loadLandingSiteById($id: String!) {\n    Landingsites(where: {id: {_eq: $id}}) {\n      country\n      id\n      name\n      CableSystem_X_Landingsites {\n        CableSystem {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n","import { defineStore } from \"pinia\"; \nimport router from \"@/router/index\"; \nimport { loadLandingSites } from \"@/service/hasura\"; \nimport { toRaw } from \"vue\"; \n\nexport const useLandingSitesStore = defineStore(\"landingSites\", { \n  state: () => ({ \n    landingSites: [] as any[], \n    selectLandingSites: [] as any[], \n    isLoading: true, \n    selectedFromSidebar: false, \n  }), \n  \n  getters: { \n    getLandingSites: (state) => { \n      return state.landingSites; \n    }, \n  }, \n  \n  actions: { \n    async fetchLandingSites() { \n      const landingSites = ((await loadLandingSites()) as any).data._rawValue.Landingsites; \n      landingSites.forEach((e: any) => (e.geoData = JSON.parse(e.geoData))); \n      this.landingSites = landingSites; \n    }, \n    \n    setSelectLandingSiteById(landingSiteId: string, fromSidebar = false) { \n      const landingSite = this.landingSites.find( \n        (site: any) => landingSiteId === site.id \n      ); \n      \n      if (landingSite) { \n        this.setSelectLandingSite(toRaw(landingSite), fromSidebar); \n      } else { \n        console.error(\"No landing site found!\"); \n      } \n    }, \n    \n    setSelectLandingSite(landingSite: any, fromSidebar = false) {\n      console.log(\"STORE: SELECT LANDING SITE: \", landingSite);\n      console.log(\"FROM SIDEBAR: \", fromSidebar);\n      this.selectLandingSites = [landingSite]; \n      this.selectedFromSidebar = fromSidebar; \n      // you could set the selected cables here. You need to change the request loadLandingSites and copy the code from LandingViewer in this method! \n      router.push({ path: `/landingSites/${landingSite.id}` }); \n    }, \n    \n    deselectLandingSite() {\n      if (this.selectLandingSites.length) { \n        this.selectLandingSites = []; \n        this.selectedFromSidebar = false; \n        router.push({ path: \"/\" }); \n      } \n    }, \n    \n    isOneSelected() { \n      return !!this.landingSites.length; \n    }, \n    \n    isLandingSiteSelectedById(landingSiteId: string): boolean { \n      return this.selectLandingSites.some( \n        (site: any) => landingSiteId === site.id \n      ); \n    }, \n    \n    isLandingSiteSelected(landingSite: any): boolean {\n      return this.selectLandingSites.some(\n        (site: any) => landingSite.id === site.id\n      );\n    }, \n  }, \n});","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4d42f207\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"depth-analysis-popup\"\n}\nconst _hoisted_2 = { class: \"highlight-green\" }\nconst _hoisted_3 = { class: \"analysis-content\" }\nconst _hoisted_4 = {\n  key: 1,\n  class: \"loading-overlay\"\n}\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"spinner\" }, null, -1))\n\nimport { ref, watch, onMounted } from 'vue';\nimport axios from 'axios';\nimport L from 'leaflet';\n\n// Props\ninterface PopupData {\n  popup: L.Popup;\n  analysis: {\n    averageDepth: number;\n    deepestPoint: number;\n    shallowestPoint: number;\n    samplePoints: L.LatLng[];\n  };\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'OceanDepthAnalyzer',\n  props: {\n  currentTranslations: { type: Object, required: false},\n  mapInstance: { type: Object, required: true },\n  drawnGeometry: { type: Object, default: null },\n  samplePointCount: { type: Number, default: 200 },\n  showPopup: { type: Boolean, default: false }\n},\n  emits: ['depth-analysis-complete'],\n  setup(__props, { expose: __expose, emit: __emit }) {\n\n/**\n * OceanDepthAnalyzer.vue\n * \n * This Vue component analyzes ocean depth data for a drawn geometry on a Leaflet map.\n * It supports depth sampling for different geometry types (Marker, Polygon, Rectangle, Polyline, Circle)\n * using the GEBCO WMS service. Results include average, shallowest, and deepest depth values.\n * The analysis is shown via popups on the map and a styled overlay if enabled.\n */\n\nconst props = __props;\n\n// Emits\nconst emit = __emit;\n\n// State\nconst depthAnalysis = ref<{\n  averageDepth: number;\n  deepestPoint: number;\n  shallowestPoint: number;\n  samplePoints: L.LatLng[];\n} | null>(null);\n\nconst isAnalyzing = ref(false);\nconst analysisStore = ref(new Map<string, any>());\nlet geometryIdCounter = 0;\n\n// Maps for managing popup and analysis data\nconst geometryPopups = new Map<L.Layer, PopupData>();\nconst geometryAnalyses = new Map();\nconst analysisData = new WeakMap();\n\n/**\n * Utility: Calculate distance (in meters) between two coordinates.\n */\nfunction calculateDistance(point1: L.LatLng, point2: L.LatLng): number {\n  const R = 6371000; // Earth's radius in meters\n  const lat1 = point1.lat * Math.PI / 180;\n  const lat2 = point2.lat * Math.PI / 180;\n  const deltaLat = (point2.lat - point1.lat) * Math.PI / 180;\n  const deltaLng = (point2.lng - point1.lng) * Math.PI / 180;\n\n  const a = Math.sin(deltaLat / 2) ** 2 +\n            Math.cos(lat1) * Math.cos(lat2) *\n            Math.sin(deltaLng / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\n/**\n * Interpolate points along a polyline based on segment lengths.\n */\nfunction interpolateLinePoints(segments: L.LatLng[], totalPoints: number): L.LatLng[] {\n  let totalLength = 0;\n  const segmentLengths: number[] = [];\n\n  for (let i = 0; i < segments.length - 1; i++) {\n    const length = calculateDistance(segments[i], segments[i + 1]);\n    segmentLengths.push(length);\n    totalLength += length;\n  }\n\n  const pointsPerSegment = segmentLengths.map(length => \n    Math.max(2, Math.round((length / totalLength) * totalPoints))\n  );\n\n  const interpolatedPoints: L.LatLng[] = [];\n  for (let i = 0; i < segments.length - 1; i++) {\n    const start = segments[i];\n    const end = segments[i + 1];\n    const numPoints = pointsPerSegment[i];\n\n    for (let j = 0; j < numPoints; j++) {\n      const fraction = j / (numPoints - 1);\n      const interpolatedLat = start.lat + fraction * (end.lat - start.lat);\n      const interpolatedLng = start.lng + fraction * (end.lng - start.lng);\n      interpolatedPoints.push(L.latLng(interpolatedLat, interpolatedLng));\n    }\n  }\n\n  interpolatedPoints.push(segments[segments.length - 1]);\n  return interpolatedPoints;\n}\n\n/**\n * Point-in-polygon algorithm using ray casting.\n */\nfunction isPointInPolygon(point: L.LatLng, polygon: L.LatLng[]): boolean {\n  let inside = false;\n  const x = point.lng, y = point.lat;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].lng, yi = polygon[i].lat;\n    const xj = polygon[j].lng, yj = polygon[j].lat;\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n  return inside;\n}\n\n/**\n * Sampling points inside a polygon geometry.\n */\nfunction samplePolygonPoints(polygon: L.Polygon, numPoints = 500): L.LatLng[] {\n  const bounds = polygon.getBounds();\n  const polygonLatLngs = polygon.getLatLngs()[0] as L.LatLng[];\n  const points: L.LatLng[] = [];\n\n  const area = L.GeometryUtil.geodesicArea(polygonLatLngs);\n  const adjustedPoints = Math.min(Math.max(numPoints, 100), props.samplePointCount);\n\n  const maxAttempts = adjustedPoints * 10;\n  let attempts = 0;\n\n  while (points.length < adjustedPoints && attempts < maxAttempts) {\n    const lat = bounds.getSouth() + Math.random() * (bounds.getNorth() - bounds.getSouth());\n    const lng = bounds.getWest() + Math.random() * (bounds.getEast() - bounds.getWest());\n    const point = L.latLng(lat, lng);\n\n    if (bounds.contains(point) && isPointInPolygon(point, polygonLatLngs)) {\n      points.push(point);\n    }\n    attempts++;\n  }\n\n  return points;\n}\n\n/**\n * Sampling points within a circle geometry.\n */\nfunction sampleCirclePoints(circle: L.Circle, numPoints = 250): L.LatLng[] {\n  const center = circle.getLatLng();\n  const radius = circle.getRadius();\n  const adjustedPoints = Math.min(Math.max(numPoints, 50), props.samplePointCount);\n  const points: L.LatLng[] = [center];\n\n  for (let i = 0; i < adjustedPoints; i++) {\n    const angle = Math.random() * 2 * Math.PI;\n    const r = Math.sqrt(Math.random()) * radius;\n    const lat = center.lat + (r / 111000) * Math.sin(angle);\n    const lng = center.lng + (r / (111000 * Math.cos(center.lat * Math.PI / 180))) * Math.cos(angle);\n    points.push(L.latLng(lat, lng));\n  }\n\n  return points;\n}\n\n/**\n * Determine sample points from drawn geometry.\n */\nfunction extractSamplePoints(geometry: any): L.LatLng[] {\n  if (geometry instanceof L.Marker) {\n    return [geometry.getLatLng()];\n  } else if (geometry instanceof L.Polygon || geometry instanceof L.Rectangle) {\n    return samplePolygonPoints(geometry as L.Polygon, props.samplePointCount);\n  } else if (geometry instanceof L.Polyline) {\n    return interpolateLinePoints(geometry.getLatLngs() as L.LatLng[], props.samplePointCount);\n  } else if (geometry instanceof L.Circle) {\n    return sampleCirclePoints(geometry, props.samplePointCount);\n  }\n  return [];\n}\n\n/**\n * Fetch ocean depth at given coordinates using GEBCO WMS.\n */\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n\n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n\n    return parseFloat(extractedText);\n  } catch {\n    return NaN;\n  }\n}\n\n/**\n * Perform depth analysis on the drawn geometry.\n */\nasync function analyzeGeometryDepths() {\n  if (!props.drawnGeometry || !(props.drawnGeometry instanceof L.Layer)) return;\n\n  isAnalyzing.value = true;\n  const geometry = props.drawnGeometry;\n\n  try {\n    const samplePoints = extractSamplePoints(geometry);\n    if (samplePoints.length === 0) return;\n\n    const depthPromises = samplePoints.map(coord => fetchOceanDepth(coord.lat, coord.lng));\n    const depths = await Promise.all(depthPromises);\n    const validDepths = depths.filter(depth => !isNaN(depth));\n    if (validDepths.length === 0) return;\n\n    const fullDepthAnalysis = {\n      averageDepth: Math.round(validDepths.reduce((a, b) => a + b, 0) / validDepths.length),\n      deepestPoint: Math.round(Math.min(...validDepths)),\n      shallowestPoint: Math.round(Math.max(...validDepths)),\n      samplePoints\n    };\n\n    depthAnalysis.value = fullDepthAnalysis;\n    emit('depth-analysis-complete', fullDepthAnalysis);\n\n    if (props.showPopup && props.mapInstance && samplePoints.length > 0) {\n      const geomId = `geometry_${geometryIdCounter++}`;\n      analysisStore.value.set(geomId, fullDepthAnalysis);\n\n      if (geometry instanceof L.Path) {\n        geometry.feature = geometry.feature || {};\n        geometry.feature.properties = geometry.feature.properties || {};\n        geometry.feature.properties.analysisId = geomId;\n      }\n      console.log(\"CURRENT TRANSLATIONS: \", props.currentTranslations);\n      const createPopupContent = (analysis: typeof fullDepthAnalysis) => `\n        <div style=\"padding: 10px;\">\n          <strong>${props.currentTranslations?.depthAnalysisTitle || 'Depth Analysis:'}</strong>\n          <ul style=\"padding-left: 20px; margin: 10px 0;\">\n            <li>${props.currentTranslations?.averageDepth || 'Average Depth'}: ${analysis.averageDepth} ${props.currentTranslations?.meters || 'meters'}</li>\n            <li>${props.currentTranslations?.deepestPoint || 'Deepest Point'}: ${analysis.deepestPoint} ${props.currentTranslations?.meters || 'meters'}</li>\n            <li>${props.currentTranslations?.shallowestPoint || 'Shallowest Point'}: ${analysis.shallowestPoint} ${props.currentTranslations?.meters || 'meters'}</li>\n            <li>${props.currentTranslations?.totalSamplePoints || 'Total Sample Points'}: ${analysis.samplePoints.length}</li>\n          </ul>\n        </div>\n      `;\n\n      geometry.off('click');\n      geometry.on('click', function(e: L.LeafletMouseEvent) {\n        L.DomEvent.stop(e);\n        const layer = e.target;\n        if (layer instanceof L.Path && layer.feature?.properties) {\n          const analysisId = layer.feature.properties.analysisId;\n          const analysis = analysisStore.value.get(analysisId);\n          if (analysis) {\n            L.popup()\n              .setLatLng(e.latlng)\n              .setContent(createPopupContent(analysis))\n              .openOn(props.mapInstance);\n          }\n        }\n      });\n\n      L.popup()\n        .setLatLng(samplePoints[0])\n        .setContent(createPopupContent(fullDepthAnalysis))\n        .openOn(props.mapInstance);\n    }\n  } finally {\n    isAnalyzing.value = false;\n  }\n}\n\n// Watch for new geometry to trigger analysis\nwatch(() => props.drawnGeometry, (newGeometry) => {\n  if (newGeometry) analyzeGeometryDepths();\n});\n\n// Analyze geometry on initial mount\nonMounted(() => {\n  if (props.drawnGeometry) analyzeGeometryDepths();\n});\n\n// Expose API\n__expose({\n  analyzeGeometryDepths,\n  depthAnalysis,\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (depthAnalysis.value && props.showPopup)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"h3\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(__props.currentTranslations?.oceanDepthAnalysis || '🌊 Ocean Depth Analysis'), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, [\n              _createTextVNode(_toDisplayString(__props.currentTranslations?.forLastGeometry || 'for') + \" \", 1),\n              _createElementVNode(\"span\", _hoisted_2, _toDisplayString(__props.currentTranslations?.lastGeometry || 'last geometry'), 1),\n              _createTextVNode(\" \" + _toDisplayString(__props.currentTranslations?.drawn || 'drawn'), 1)\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"p\", null, [\n              _createElementVNode(\"strong\", null, _toDisplayString(__props.currentTranslations?.averageDepth || 'Average Depth') + \":\", 1),\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.averageDepth) + _toDisplayString(__props.currentTranslations?.meters || 'm'), 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _createElementVNode(\"strong\", null, _toDisplayString(__props.currentTranslations?.deepestPoint || 'Deepest Point') + \":\", 1),\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.deepestPoint) + _toDisplayString(__props.currentTranslations?.meters || 'm'), 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _createElementVNode(\"strong\", null, _toDisplayString(__props.currentTranslations?.shallowestPoint || 'Shallowest Point') + \":\", 1),\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.shallowestPoint) + _toDisplayString(__props.currentTranslations?.meters || 'm'), 1)\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (isAnalyzing.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          _hoisted_5,\n          _createElementVNode(\"p\", null, _toDisplayString(__props.currentTranslations?.analyzingDepthData || 'Analyzing depth data...'), 1)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<script setup lang=\"ts\">\n/**\n * OceanDepthAnalyzer.vue\n * \n * This Vue component analyzes ocean depth data for a drawn geometry on a Leaflet map.\n * It supports depth sampling for different geometry types (Marker, Polygon, Rectangle, Polyline, Circle)\n * using the GEBCO WMS service. Results include average, shallowest, and deepest depth values.\n * The analysis is shown via popups on the map and a styled overlay if enabled.\n */\n\nimport { ref, watch, onMounted } from 'vue';\nimport axios from 'axios';\nimport L from 'leaflet';\n\n// Props\nconst props = defineProps({\n  currentTranslations: { type: Object, required: false},\n  mapInstance: { type: Object, required: true },\n  drawnGeometry: { type: Object, default: null },\n  samplePointCount: { type: Number, default: 200 },\n  showPopup: { type: Boolean, default: false }\n});\n\n// Emits\nconst emit = defineEmits(['depth-analysis-complete']);\n\n// State\nconst depthAnalysis = ref<{\n  averageDepth: number;\n  deepestPoint: number;\n  shallowestPoint: number;\n  samplePoints: L.LatLng[];\n} | null>(null);\n\nconst isAnalyzing = ref(false);\nconst analysisStore = ref(new Map<string, any>());\nlet geometryIdCounter = 0;\n\n// Maps for managing popup and analysis data\ninterface PopupData {\n  popup: L.Popup;\n  analysis: {\n    averageDepth: number;\n    deepestPoint: number;\n    shallowestPoint: number;\n    samplePoints: L.LatLng[];\n  };\n}\n\nconst geometryPopups = new Map<L.Layer, PopupData>();\nconst geometryAnalyses = new Map();\nconst analysisData = new WeakMap();\n\n/**\n * Utility: Calculate distance (in meters) between two coordinates.\n */\nfunction calculateDistance(point1: L.LatLng, point2: L.LatLng): number {\n  const R = 6371000; // Earth's radius in meters\n  const lat1 = point1.lat * Math.PI / 180;\n  const lat2 = point2.lat * Math.PI / 180;\n  const deltaLat = (point2.lat - point1.lat) * Math.PI / 180;\n  const deltaLng = (point2.lng - point1.lng) * Math.PI / 180;\n\n  const a = Math.sin(deltaLat / 2) ** 2 +\n            Math.cos(lat1) * Math.cos(lat2) *\n            Math.sin(deltaLng / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\n/**\n * Interpolate points along a polyline based on segment lengths.\n */\nfunction interpolateLinePoints(segments: L.LatLng[], totalPoints: number): L.LatLng[] {\n  let totalLength = 0;\n  const segmentLengths: number[] = [];\n\n  for (let i = 0; i < segments.length - 1; i++) {\n    const length = calculateDistance(segments[i], segments[i + 1]);\n    segmentLengths.push(length);\n    totalLength += length;\n  }\n\n  const pointsPerSegment = segmentLengths.map(length => \n    Math.max(2, Math.round((length / totalLength) * totalPoints))\n  );\n\n  const interpolatedPoints: L.LatLng[] = [];\n  for (let i = 0; i < segments.length - 1; i++) {\n    const start = segments[i];\n    const end = segments[i + 1];\n    const numPoints = pointsPerSegment[i];\n\n    for (let j = 0; j < numPoints; j++) {\n      const fraction = j / (numPoints - 1);\n      const interpolatedLat = start.lat + fraction * (end.lat - start.lat);\n      const interpolatedLng = start.lng + fraction * (end.lng - start.lng);\n      interpolatedPoints.push(L.latLng(interpolatedLat, interpolatedLng));\n    }\n  }\n\n  interpolatedPoints.push(segments[segments.length - 1]);\n  return interpolatedPoints;\n}\n\n/**\n * Point-in-polygon algorithm using ray casting.\n */\nfunction isPointInPolygon(point: L.LatLng, polygon: L.LatLng[]): boolean {\n  let inside = false;\n  const x = point.lng, y = point.lat;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].lng, yi = polygon[i].lat;\n    const xj = polygon[j].lng, yj = polygon[j].lat;\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n  return inside;\n}\n\n/**\n * Sampling points inside a polygon geometry.\n */\nfunction samplePolygonPoints(polygon: L.Polygon, numPoints = 500): L.LatLng[] {\n  const bounds = polygon.getBounds();\n  const polygonLatLngs = polygon.getLatLngs()[0] as L.LatLng[];\n  const points: L.LatLng[] = [];\n\n  const area = L.GeometryUtil.geodesicArea(polygonLatLngs);\n  const adjustedPoints = Math.min(Math.max(numPoints, 100), props.samplePointCount);\n\n  const maxAttempts = adjustedPoints * 10;\n  let attempts = 0;\n\n  while (points.length < adjustedPoints && attempts < maxAttempts) {\n    const lat = bounds.getSouth() + Math.random() * (bounds.getNorth() - bounds.getSouth());\n    const lng = bounds.getWest() + Math.random() * (bounds.getEast() - bounds.getWest());\n    const point = L.latLng(lat, lng);\n\n    if (bounds.contains(point) && isPointInPolygon(point, polygonLatLngs)) {\n      points.push(point);\n    }\n    attempts++;\n  }\n\n  return points;\n}\n\n/**\n * Sampling points within a circle geometry.\n */\nfunction sampleCirclePoints(circle: L.Circle, numPoints = 250): L.LatLng[] {\n  const center = circle.getLatLng();\n  const radius = circle.getRadius();\n  const adjustedPoints = Math.min(Math.max(numPoints, 50), props.samplePointCount);\n  const points: L.LatLng[] = [center];\n\n  for (let i = 0; i < adjustedPoints; i++) {\n    const angle = Math.random() * 2 * Math.PI;\n    const r = Math.sqrt(Math.random()) * radius;\n    const lat = center.lat + (r / 111000) * Math.sin(angle);\n    const lng = center.lng + (r / (111000 * Math.cos(center.lat * Math.PI / 180))) * Math.cos(angle);\n    points.push(L.latLng(lat, lng));\n  }\n\n  return points;\n}\n\n/**\n * Determine sample points from drawn geometry.\n */\nfunction extractSamplePoints(geometry: any): L.LatLng[] {\n  if (geometry instanceof L.Marker) {\n    return [geometry.getLatLng()];\n  } else if (geometry instanceof L.Polygon || geometry instanceof L.Rectangle) {\n    return samplePolygonPoints(geometry as L.Polygon, props.samplePointCount);\n  } else if (geometry instanceof L.Polyline) {\n    return interpolateLinePoints(geometry.getLatLngs() as L.LatLng[], props.samplePointCount);\n  } else if (geometry instanceof L.Circle) {\n    return sampleCirclePoints(geometry, props.samplePointCount);\n  }\n  return [];\n}\n\n/**\n * Fetch ocean depth at given coordinates using GEBCO WMS.\n */\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n\n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n\n    return parseFloat(extractedText);\n  } catch {\n    return NaN;\n  }\n}\n\n/**\n * Perform depth analysis on the drawn geometry.\n */\nasync function analyzeGeometryDepths() {\n  if (!props.drawnGeometry || !(props.drawnGeometry instanceof L.Layer)) return;\n\n  isAnalyzing.value = true;\n  const geometry = props.drawnGeometry;\n\n  try {\n    const samplePoints = extractSamplePoints(geometry);\n    if (samplePoints.length === 0) return;\n\n    const depthPromises = samplePoints.map(coord => fetchOceanDepth(coord.lat, coord.lng));\n    const depths = await Promise.all(depthPromises);\n    const validDepths = depths.filter(depth => !isNaN(depth));\n    if (validDepths.length === 0) return;\n\n    const fullDepthAnalysis = {\n      averageDepth: Math.round(validDepths.reduce((a, b) => a + b, 0) / validDepths.length),\n      deepestPoint: Math.round(Math.min(...validDepths)),\n      shallowestPoint: Math.round(Math.max(...validDepths)),\n      samplePoints\n    };\n\n    depthAnalysis.value = fullDepthAnalysis;\n    emit('depth-analysis-complete', fullDepthAnalysis);\n\n    if (props.showPopup && props.mapInstance && samplePoints.length > 0) {\n      const geomId = `geometry_${geometryIdCounter++}`;\n      analysisStore.value.set(geomId, fullDepthAnalysis);\n\n      if (geometry instanceof L.Path) {\n        geometry.feature = geometry.feature || {};\n        geometry.feature.properties = geometry.feature.properties || {};\n        geometry.feature.properties.analysisId = geomId;\n      }\n      console.log(\"CURRENT TRANSLATIONS: \", props.currentTranslations);\n      const createPopupContent = (analysis: typeof fullDepthAnalysis) => `\n        <div style=\"padding: 10px;\">\n          <strong>${props.currentTranslations?.depthAnalysisTitle || 'Depth Analysis:'}</strong>\n          <ul style=\"padding-left: 20px; margin: 10px 0;\">\n            <li>${props.currentTranslations?.averageDepth || 'Average Depth'}: ${analysis.averageDepth} ${props.currentTranslations?.meters || 'meters'}</li>\n            <li>${props.currentTranslations?.deepestPoint || 'Deepest Point'}: ${analysis.deepestPoint} ${props.currentTranslations?.meters || 'meters'}</li>\n            <li>${props.currentTranslations?.shallowestPoint || 'Shallowest Point'}: ${analysis.shallowestPoint} ${props.currentTranslations?.meters || 'meters'}</li>\n            <li>${props.currentTranslations?.totalSamplePoints || 'Total Sample Points'}: ${analysis.samplePoints.length}</li>\n          </ul>\n        </div>\n      `;\n\n      geometry.off('click');\n      geometry.on('click', function(e: L.LeafletMouseEvent) {\n        L.DomEvent.stop(e);\n        const layer = e.target;\n        if (layer instanceof L.Path && layer.feature?.properties) {\n          const analysisId = layer.feature.properties.analysisId;\n          const analysis = analysisStore.value.get(analysisId);\n          if (analysis) {\n            L.popup()\n              .setLatLng(e.latlng)\n              .setContent(createPopupContent(analysis))\n              .openOn(props.mapInstance);\n          }\n        }\n      });\n\n      L.popup()\n        .setLatLng(samplePoints[0])\n        .setContent(createPopupContent(fullDepthAnalysis))\n        .openOn(props.mapInstance);\n    }\n  } finally {\n    isAnalyzing.value = false;\n  }\n}\n\n// Watch for new geometry to trigger analysis\nwatch(() => props.drawnGeometry, (newGeometry) => {\n  if (newGeometry) analyzeGeometryDepths();\n});\n\n// Analyze geometry on initial mount\nonMounted(() => {\n  if (props.drawnGeometry) analyzeGeometryDepths();\n});\n\n// Expose API\ndefineExpose({\n  analyzeGeometryDepths,\n  depthAnalysis,\n});\n</script>\n\n<template>\n  <div v-if=\"depthAnalysis && props.showPopup\" class=\"depth-analysis-popup\">\n    <h3><strong>{{ currentTranslations?.oceanDepthAnalysis || '🌊 Ocean Depth Analysis' }}</strong></h3>\n    <p><strong>{{ currentTranslations?.forLastGeometry || 'for' }} <span class=\"highlight-green\">{{ currentTranslations?.lastGeometry || 'last geometry' }}</span> {{ currentTranslations?.drawn || 'drawn' }}</strong></p>\n    <div class=\"analysis-content\">\n      <p><strong>{{ currentTranslations?.averageDepth || 'Average Depth' }}:</strong> {{ depthAnalysis.averageDepth }}{{ currentTranslations?.meters || 'm' }}</p>\n      <p><strong>{{ currentTranslations?.deepestPoint || 'Deepest Point' }}:</strong> {{ depthAnalysis.deepestPoint }}{{ currentTranslations?.meters || 'm' }}</p>\n      <p><strong>{{ currentTranslations?.shallowestPoint || 'Shallowest Point' }}:</strong> {{ depthAnalysis.shallowestPoint }}{{ currentTranslations?.meters || 'm' }}</p>\n    </div>\n  </div>\n\n  <div v-if=\"isAnalyzing\" class=\"loading-overlay\">\n    <div class=\"spinner\"></div>\n    <p>{{ currentTranslations?.analyzingDepthData || 'Analyzing depth data...' }}</p>\n  </div>\n</template>\n\n<style scoped>\n.depth-analysis-popup {\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  color: #ecf0f1;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  padding: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  max-width: 300px;\n  width: auto;\n  max-height: 80vh;\n  overflow-y: auto;\n  z-index: 3000;\n  font-size: 13px;\n  text-align: center;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.highlight-green {\n  color: #68d391;\n}\n\n.depth-analysis-popup h3 {\n  margin: 0 0 8px;\n  font-size: 16px;\n  color: white;\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-weight: 600;\n}\n\n.analysis-content {\n  font-size: 13px;\n  line-height: 1.4;\n}\n\n.analysis-content p {\n  margin: 4px 0;\n}\n\n.analysis-content strong {\n  color: #63b3ed;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(26, 32, 44, 0.8) 0%, rgba(45, 55, 72, 0.8) 100%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 2000;\n  backdrop-filter: blur(5px);\n}\n\n.spinner {\n  border: 3px solid rgba(99, 179, 237, 0.3);\n  border-top: 3px solid #63b3ed;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  animation: spin 0.8s linear infinite;\n  margin-bottom: 10px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.depth-analysis-popup::-webkit-scrollbar {\n  width: 8px;\n}\n\n.depth-analysis-popup::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 6px;\n  margin: 4px;\n}\n\n.depth-analysis-popup::-webkit-scrollbar-thumb {\n  background: rgba(99, 179, 237, 0.4);\n  border-radius: 6px;\n  border: 2px solid rgba(26, 32, 44, 0.5);\n  transition: background 0.2s ease;\n}\n\n.depth-analysis-popup::-webkit-scrollbar-thumb:hover {\n  background: rgba(99, 179, 237, 0.6);\n}\n\n.depth-analysis-popup::-webkit-scrollbar-thumb:active {\n  background: rgba(99, 179, 237, 0.8);\n}\n</style>","import script from \"./OceanDepthAnalyzer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./OceanDepthAnalyzer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./OceanDepthAnalyzer.vue?vue&type=style&index=0&id=4d42f207&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4d42f207\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-10e43de8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"elevation-container\" }\nconst _hoisted_2 = [\"disabled\"]\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = { key: 2 }\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = { key: 1 }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"progress-bar-container\"\n}\n\nimport { ref, watch, onBeforeUnmount, computed, onMounted } from 'vue';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport '@raruto/leaflet-elevation';\nimport '@raruto/leaflet-elevation/dist/leaflet-elevation.css';\nimport 'leaflet/dist/leaflet.css';\n\n// ==============================================\n// Component Props\n// ==============================================\ninterface Point {\n  lat: number;\n  lng: number;\n}\n\ninterface Segment {\n  points: Point[];\n  used?: boolean;\n}\n\n// ==============================================\n// Safe Elevation Control Wrapper\n// ==============================================\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ElevationProfile',\n  props: {\n    mapInstance: {},\n    geoData: {}\n  },\n  setup(__props: any) {\n\nwindow.d3 = d3;\nconst props = __props;\n\n// ==============================================\n// Reactive State\n// ==============================================\nconst showProfile = ref(false);\nconst isLoading = ref(false);\nconst isFullscreen = ref(false);\nconst fetchingPoints = ref(false);\nconst fetchedPoints = ref(0);\nconst totalPoints = ref(0);\nconst isComponentMounted = ref(true);\nconst resizeObserver = ref<ResizeObserver | null>(null);\nconst isOceanDepthActive = ref(false);\nconst isCableShipsActive = ref(false);\nconst isAnchorageActive = ref(false);\n\n// ==============================================\n// Leaflet Elevation Control Instances\n// ==============================================\nlet currentElevationControl: any = null;\nlet currentElevationLayer: any = null;\nlet resizeTimeout: ReturnType<typeof setTimeout> | null = null;\n\n// ==============================================\n// Computed Properties\n// ==============================================\nconst oceanDepthFullscreenClass = computed(() => {\n  const baseClasses = {\n    fullscreen: isFullscreen.value,\n    \"ocean-depth-fullscreen\": isFullscreen.value && isOceanDepthActive.value,\n    \"anchorage-fullscreen\": isFullscreen.value && isAnchorageActive.value,\n    \"cable-ships-fullscreen\": isFullscreen.value && isCableShipsActive.value,\n    \"elevation-detached\": true,\n  };\n  return baseClasses;\n});\n\n// ==============================================\n// Elevation Control Configuration\n// ==============================================\nconst elevationOptions = {\n  theme: \"lightblue-theme\",\n  detached: true,\n  elevationDiv: \"#elevation-div\",\n  followMarker: false,\n  reverseCoords: false,\n  autofitBounds: false,\n  imperial: false,\n  altitude: false,\n  distance: false,\n  summary: false,\n  ruler: false,\n  legend: false,\n  edgeScale: true,\n  hotline: true,\n  preferCanvas: true,\n  waypoints: false,\n  onRemove: function(this: any) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n      resizeObserver.value = null;\n    }\n    if (this._onRemove) {\n      this._onRemove();\n    }\n  }\n};\n\n// ==============================================\n// Lifecycle Hooks\n// ==============================================\nonMounted(() => {\n  if (props.mapInstance?._container) {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n          const classList = props.mapInstance._container.classList;\n          isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n          isAnchorageActive.value = classList.contains(\"anchorage-active\");\n          isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n        }\n      });\n    });\n\n    observer.observe(props.mapInstance._container, {\n      attributes: true,\n      attributeFilter: [\"class\"],\n    });\n\n    const classList = props.mapInstance._container.classList;\n    isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n    isAnchorageActive.value = classList.contains(\"anchorage-active\");\n    isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n\n    isComponentMounted.value = true;\n\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n  }\n});\n\nonBeforeUnmount(() => {\n  isComponentMounted.value = false;\n  cleanupElevationProfile(true);\n});\n\n// ==============================================\n// Watchers\n// ==============================================\nwatch(oceanDepthFullscreenClass, () => {\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    showElevationProfile();\n  }\n});\n\nwatch(() => props.geoData, () => {\n  if (showProfile.value) {\n    cleanupElevationProfile(true);\n  }\n});\n\n// ==============================================\n// Helper Types\n// ==============================================\nclass SafeElevationControl extends (L.Control as any).Elevation {\n  constructor(options: any) {\n    super(options);\n    this._originalResizeChart = this._resizeChart;\n    this._resizeChart = this._safeResizeChart.bind(this);\n  }\n\n  _safeResizeChart() {\n    try {\n      if (!this._container || !this._map || !this._data || !this._data.length) return;\n      const chart = this._chart;\n      const area = this._area;\n      if (!chart || !area) return;\n      if (typeof chart.select !== 'function' || typeof area.select !== 'function') return;\n      if (!document.body.contains(this._container)) return;\n      if (!this._map._container || !document.body.contains(this._map._container)) return;\n      if (typeof this._originalResizeChart === 'function') this._originalResizeChart();\n    } catch (error) {\n      console.warn('Safe resize handling prevented error:', error);\n    }\n  }\n\n  onAdd(map: L.Map) {\n    try {\n      if (!map || !map._container) return this;\n      const result = super.onAdd(map);\n      if (!this._container) return result;\n      if (typeof this._initEvents === 'function') this._initEvents();\n      return result;\n    } catch (error) {\n      console.warn('Error during elevation control addition:', error);\n      return this;\n    }\n  }\n\n  onRemove(map: L.Map) {\n    try {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = null;\n      }\n\n      if (this._container) {\n        const listeners = ['mousemove', 'mouseout', 'mouseover', 'click'];\n        listeners.forEach(event => this._container.removeEventListener(event, this._mousemoveHandler));\n      }\n\n      this._chart = null;\n      this._area = null;\n      this._data = null;\n      super.onRemove(map);\n    } catch (error) {\n      console.warn('Error during elevation control removal:', error);\n    }\n  }\n}\n\n// ==============================================\n// Core Functions\n// ==============================================\nconst toggleFullscreen = () => {\n  isFullscreen.value = !isFullscreen.value;\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    elevationOptions.height = isFullscreen.value ? 400 : 300;\n    showElevationProfile();\n  }\n};\n\nconst showElevationProfile = async () => {\n  if (!props.geoData || !isComponentMounted.value) return;\n  isLoading.value = true;\n  showProfile.value = true;\n\n  try {\n    removeCurrentElevationControl();\n    const geoJson = await convertToGeoJSON(props.geoData);\n    \n    if (!isComponentMounted.value) return;\n    elevationOptions.height = isFullscreen.value ? 600 : 300;\n    \n    if (!window.d3) window.d3 = d3;\n    currentElevationControl = new SafeElevationControl(elevationOptions).addTo(props.mapInstance);\n\n    if (currentElevationControl) {\n      currentElevationControl.load(geoJson);\n      setupResizeHandling();\n    }\n  } catch (error) {\n    console.error('Error loading elevation profile:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// ==============================================\n// Data Processing Functions\n// ==============================================\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lng - 0.0001;\n    const miny = lat - 0.0001;\n    const maxx = lng + 0.0001;\n    const maxy = lat + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    fetchedPoints.value++;\n    return parseFloat(extractedText);\n  } catch (error) {\n    fetchedPoints.value++;\n    return 0;\n  }\n}\n\nconst convertToGeoJSON = async (coordinates: any) => {\n  const rawCoordinates = JSON.parse(JSON.stringify(coordinates));\n  const unsortedSegments = [...rawCoordinates[0]].filter(Array.isArray);\n  const sortedSegments = sortCableSegments(unsortedSegments);\n  const maxDistanceThreshold = 0.50;\n  const minPointDensity = 10;\n\n  totalPoints.value = calculateTotalPoints(sortedSegments, minPointDensity, maxDistanceThreshold);\n  fetchedPoints.value = 0;\n  fetchingPoints.value = true;\n\n  const processedCoordinates: ([number, number, number] | null)[] = [];\n\n  for (const segment of sortedSegments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      if (processedCoordinates.length > 0) processedCoordinates.push(null);\n\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n\n      for (const [lat, lng] of segmentToProcess) {\n        const depth = await fetchOceanDepth(lng, lat);\n        processedCoordinates.push([lng, lat, depth]);\n      }\n    }\n  }\n\n  fetchingPoints.value = false;\n\n  const multiLineString = processedCoordinates.reduce((acc: number[][][], coord: [number, number, number] | null) => {\n    if (coord === null) {\n      acc.push([]);\n    } else {\n      if (acc.length === 0) acc.push([]);\n      acc[acc.length - 1].push(coord);\n    }\n    return acc;\n  }, []);\n\n  return {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"MultiLineString\",\n      coordinates: multiLineString,\n    },\n  };\n};\n\n// ==============================================\n// Segment Processing Functions\n// ==============================================\nfunction sortCableSegments(rawSegments: number[][][]): number[][][] {\n  const segments: Segment[] = rawSegments.map(segment => ({\n    points: segment.map(([lat, lng]) => ({ lat, lng })),\n    used: false\n  }));\n\n  const sortedSegments: number[][][] = [];\n  if (segments.length === 0) return [];\n  \n  segments[0].used = true;\n  sortedSegments.push(rawSegments[0]);\n  let currentEndPoint = segments[0].points[segments[0].points.length - 1];\n\n  while (segments.some(segment => !segment.used)) {\n    const nextSegment = findClosestSegment(currentEndPoint, segments);\n    if (!nextSegment) break;\n    \n    const { segmentIndex, shouldReverse } = nextSegment;\n    segments[segmentIndex].used = true;\n    const segmentToAdd = shouldReverse \n      ? [...rawSegments[segmentIndex]].reverse()\n      : rawSegments[segmentIndex];\n    \n    sortedSegments.push(segmentToAdd);\n    currentEndPoint = shouldReverse \n      ? segments[segmentIndex].points[0]\n      : segments[segmentIndex].points[segments[segmentIndex].points.length - 1];\n  }\n\n  return sortedSegments;\n}\n\nfunction findClosestSegment(\n  currentEndPoint: Point,\n  segments: Segment[]\n): { segmentIndex: number; shouldReverse: boolean } | null {\n  let minDistance = Infinity;\n  let closestSegmentIndex = -1;\n  let shouldReverse = false;\n\n  segments.forEach((segment, index) => {\n    if (segment.used) return;\n\n    const distanceToStart = calculateDistance(currentEndPoint, segment.points[0]);\n    if (distanceToStart < minDistance) {\n      minDistance = distanceToStart;\n      closestSegmentIndex = index;\n      shouldReverse = false;\n    }\n\n    const distanceToEnd = calculateDistance(\n      currentEndPoint,\n      segment.points[segment.points.length - 1]\n    );\n    if (distanceToEnd < minDistance) {\n      minDistance = distanceToEnd;\n      closestSegmentIndex = index;\n      shouldReverse = true;\n    }\n  });\n\n  if (closestSegmentIndex === -1) return null;\n  return { segmentIndex: closestSegmentIndex, shouldReverse };\n}\n\nfunction calculateDistance(p1: Point, p2: Point): number {\n  return Math.sqrt(Math.pow(p2.lat - p1.lat, 2) + Math.pow(p2.lng - p1.lng, 2));\n}\n\nconst calculateSegmentLength = (segment: [number, number][]): number => {\n  let length = 0;\n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    length += Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n  }\n  return length;\n};\n\nconst shouldInterpolateSegment = (segment: [number, number][], minPointDensity: number): boolean => {\n  const segmentLength = calculateSegmentLength(segment);\n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_MIN_DENSITY = 20;\n  const NORMAL_SEGMENT_MIN_DENSITY = 10;\n  \n  const pointDensity = segment.length / segmentLength;\n  const requiredDensity = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_MIN_DENSITY \n    : NORMAL_SEGMENT_MIN_DENSITY;\n    \n  return pointDensity < requiredDensity;\n};\n\nconst interpolateSegment = (segment: [number, number][], maxDistanceThreshold: number): [number, number][] => {\n  const interpolatedSegment: [number, number][] = [];\n  const segmentLength = calculateSegmentLength(segment);\n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_DISTANCE = 0.25;\n  const NORMAL_SEGMENT_DISTANCE = 0.50;\n  \n  const actualThreshold = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_DISTANCE \n    : NORMAL_SEGMENT_DISTANCE;\n  \n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    interpolatedSegment.push([lat1, lng1]);\n    \n    const distance = Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n    if (distance > actualThreshold) {\n      const numExtraPoints = Math.ceil(distance / actualThreshold) - 1;\n      for (let j = 1; j <= numExtraPoints; j++) {\n        const fraction = j / (numExtraPoints + 1);\n        interpolatedSegment.push([\n          lat1 + fraction * (lat2 - lat1),\n          lng1 + fraction * (lng2 - lng1),\n        ]);\n      }\n    }\n  }\n  \n  interpolatedSegment.push(segment[segment.length - 1]);\n  return interpolatedSegment;\n};\n\nfunction calculateTotalPoints(segments: number[][][], minPointDensity: number, maxDistanceThreshold: number): number {\n  let total = 0;\n  for (const segment of segments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n      total += segmentToProcess.length;\n    }\n  }\n  return total;\n}\n\n// ==============================================\n// Cleanup Functions\n// ==============================================\nconst removeCurrentElevationControl = () => {\n  if (currentElevationControl && props.mapInstance) {\n    props.mapInstance.removeControl(currentElevationControl);\n    currentElevationControl = null;\n  }\n  if (currentElevationLayer && props.mapInstance) {\n    props.mapInstance.removeLayer(currentElevationLayer);\n    currentElevationLayer = null;\n  }\n  \n  props.mapInstance.eachLayer((layer: any) => {\n    if (layer.options && (\n      layer.options.className === 'elevation-profile' ||\n      (layer.options.style && layer.options.style.className === 'elevation-profile')\n    )) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n};\n\nconst cleanupElevationProfile = (resetFullscreen = false) => {\n  if (resizeObserver.value) {\n    resizeObserver.value.disconnect();\n    resizeObserver.value = null;\n  }\n  \n  if (currentElevationControl) {\n    try {\n      if (typeof currentElevationControl.clear === 'function') {\n        const originalRemoveClass = L.DomUtil.removeClass;\n        L.DomUtil.removeClass = function(el: HTMLElement, name: string) {\n          safeRemoveClasses(el, name);\n        };\n        currentElevationControl.clear();\n        L.DomUtil.removeClass = originalRemoveClass;\n      }\n      \n      const elevationDiv = document.getElementById('elevation-div');\n      if (elevationDiv) elevationDiv.innerHTML = '';\n      if (props.mapInstance) props.mapInstance.removeControl(currentElevationControl);\n    } catch (error) {\n      console.error('Error during elevation control cleanup:', error);\n    }\n    currentElevationControl = null;\n  }\n\n  const selectors = [\n    '.elevation-polyline',\n    '.elevation-profile',\n    '.elevation-line',\n    '.elevation-point',\n    '.elevation-marker',\n    '.elevation-summary',\n    '.elevation-tooltip',\n    '.leaflet-elevation'\n  ];\n\n  selectors.forEach(selector => {\n    document.querySelectorAll(selector).forEach(element => {\n      if (element instanceof HTMLElement) {\n        try {\n          if (element.className) safeRemoveClasses(element, element.className);\n          element.remove();\n        } catch (error) {\n          console.error(`Error removing element with selector ${selector}:`, error);\n        }\n      }\n    });\n  });\n\n  if (props.mapInstance) {\n    props.mapInstance.eachLayer((layer: any) => {\n      try {\n        if (layer.options && (\n          layer.options.className === 'elevation-profile' ||\n          (layer.options.style && layer.options.style.className === 'elevation-profile') ||\n          layer._path?.classList?.contains('elevation-polyline') ||\n          layer.options.className?.includes('elevation-') ||\n          layer._container?.classList?.contains('leaflet-elevation')\n        )) {\n          props.mapInstance.removeLayer(layer);\n        }\n      } catch (error) {\n        console.error('Error removing map layer:', error);\n      }\n    });\n  }\n\n  if (currentElevationLayer && props.mapInstance) {\n    try {\n      props.mapInstance.removeLayer(currentElevationLayer);\n    } catch (error) {\n      console.error('Error removing current elevation layer:', error);\n    }\n    currentElevationLayer = null;\n  }\n\n  showProfile.value = false;\n  if (resetFullscreen) isFullscreen.value = false;\n};\n\n// ==============================================\n// Utility Functions\n// ==============================================\nconst safeRemoveClasses = (element: HTMLElement, classNames: string) => {\n  if (!element) return;\n  const classes = classNames.split(' ').filter(className => className.trim());\n  classes.forEach(className => {\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.warn(`Failed to remove class: ${className}`, error);\n    }\n  });\n};\n\nconst debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  \n  return function executedFunction(\n    this: any,\n    ...args: Parameters<T>\n  ) {\n    const later = () => {\n      clearTimeout(timeout);\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nconst setupResizeHandling = () => {\n  const elevationDiv = document.getElementById('elevation-div');\n  if (elevationDiv && isComponentMounted.value) {\n    if (resizeObserver.value) resizeObserver.value.disconnect();\n\n    resizeObserver.value = new ResizeObserver(debounce(() => {\n      if (currentElevationControl && isComponentMounted.value) {\n        try {\n          if (currentElevationControl._container && \n              currentElevationControl._map && \n              document.body.contains(currentElevationControl._container) &&\n              typeof currentElevationControl._resizeChart === 'function') {\n            currentElevationControl._resizeChart();\n          }\n        } catch (error) {\n          console.warn('Safe resize handling:', error);\n        }\n      }\n    }, 250));\n\n    resizeObserver.value.observe(elevationDiv);\n  }\n};\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"button-group\", {'has-two-buttons': showProfile.value}])\n    }, [\n      _createElementVNode(\"button\", {\n        onClick: showElevationProfile,\n        class: \"btn-elevation\",\n        disabled: isLoading.value\n      }, [\n        (!isLoading.value && !fetchingPoints.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"Elevation Profile\"))\n          : (fetchingPoints.value)\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"Fetching points: \" + _toDisplayString(fetchedPoints.value) + \"/\" + _toDisplayString(totalPoints.value), 1))\n            : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"Loading...\"))\n      ], 8, _hoisted_2),\n      (showProfile.value)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: toggleFullscreen,\n            class: _normalizeClass([\"btn-elevation\", {'active': isFullscreen.value}])\n          }, [\n            (!isFullscreen.value)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"Expand View\"))\n              : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Minimize View\"))\n          ], 2))\n        : _createCommentVNode(\"\", true)\n    ], 2),\n    (fetchingPoints.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"div\", {\n            class: \"progress-bar\",\n            style: _normalizeStyle({width: `${(fetchedPoints.value/totalPoints.value)*100}%`})\n          }, null, 4)\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      id: \"elevation-div\",\n      class: _normalizeClass([\"elevation-div\", oceanDepthFullscreenClass.value])\n    }, null, 2)\n  ]))\n}\n}\n\n})","<!--\nElevationProfile.vue - Displays an elevation profile for geographic data\n\nFeatures:\n- Shows elevation profile for cable routes\n- Supports fullscreen mode\n- Fetches ocean depth data from GEBCO WMS service\n- Handles complex cable segments with interpolation\n- Responsive design that adapts to other map layers\n-->\n\n<template>\n  <div class=\"elevation-container\">\n    <div class=\"button-group\" :class=\"{'has-two-buttons': showProfile}\">\n      <button @click=\"showElevationProfile\" class=\"btn-elevation\" :disabled=\"isLoading\">\n        <span v-if=\"!isLoading && !fetchingPoints\">Elevation Profile</span>\n        <span v-else-if=\"fetchingPoints\">Fetching points: {{fetchedPoints}}/{{totalPoints}}</span>\n        <span v-else>Loading...</span>\n      </button>\n      <button v-if=\"showProfile\" @click=\"toggleFullscreen\" class=\"btn-elevation\" :class=\"{'active': isFullscreen}\">\n        <span v-if=\"!isFullscreen\">Expand View</span>\n        <span v-else>Minimize View</span>\n      </button>\n    </div>\n    <div v-if=\"fetchingPoints\" class=\"progress-bar-container\">\n      <div class=\"progress-bar\" :style=\"{width: `${(fetchedPoints/totalPoints)*100}%`}\"></div>\n    </div>\n    <div id=\"elevation-div\" class=\"elevation-div\" :class=\"oceanDepthFullscreenClass\"></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onBeforeUnmount, computed, onMounted } from 'vue';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nwindow.d3 = d3;\nimport '@raruto/leaflet-elevation';\nimport '@raruto/leaflet-elevation/dist/leaflet-elevation.css';\nimport 'leaflet/dist/leaflet.css';\n\n// ==============================================\n// Component Props\n// ==============================================\nconst props = defineProps<{\n  mapInstance: any;\n  geoData: any;\n}>();\n\n// ==============================================\n// Reactive State\n// ==============================================\nconst showProfile = ref(false);\nconst isLoading = ref(false);\nconst isFullscreen = ref(false);\nconst fetchingPoints = ref(false);\nconst fetchedPoints = ref(0);\nconst totalPoints = ref(0);\nconst isComponentMounted = ref(true);\nconst resizeObserver = ref<ResizeObserver | null>(null);\nconst isOceanDepthActive = ref(false);\nconst isCableShipsActive = ref(false);\nconst isAnchorageActive = ref(false);\n\n// ==============================================\n// Leaflet Elevation Control Instances\n// ==============================================\nlet currentElevationControl: any = null;\nlet currentElevationLayer: any = null;\nlet resizeTimeout: ReturnType<typeof setTimeout> | null = null;\n\n// ==============================================\n// Computed Properties\n// ==============================================\nconst oceanDepthFullscreenClass = computed(() => {\n  const baseClasses = {\n    fullscreen: isFullscreen.value,\n    \"ocean-depth-fullscreen\": isFullscreen.value && isOceanDepthActive.value,\n    \"anchorage-fullscreen\": isFullscreen.value && isAnchorageActive.value,\n    \"cable-ships-fullscreen\": isFullscreen.value && isCableShipsActive.value,\n    \"elevation-detached\": true,\n  };\n  return baseClasses;\n});\n\n// ==============================================\n// Elevation Control Configuration\n// ==============================================\nconst elevationOptions = {\n  theme: \"lightblue-theme\",\n  detached: true,\n  elevationDiv: \"#elevation-div\",\n  followMarker: false,\n  reverseCoords: false,\n  autofitBounds: false,\n  imperial: false,\n  altitude: false,\n  distance: false,\n  summary: false,\n  ruler: false,\n  legend: false,\n  edgeScale: true,\n  hotline: true,\n  preferCanvas: true,\n  waypoints: false,\n  onRemove: function(this: any) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n      resizeObserver.value = null;\n    }\n    if (this._onRemove) {\n      this._onRemove();\n    }\n  }\n};\n\n// ==============================================\n// Lifecycle Hooks\n// ==============================================\nonMounted(() => {\n  if (props.mapInstance?._container) {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n          const classList = props.mapInstance._container.classList;\n          isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n          isAnchorageActive.value = classList.contains(\"anchorage-active\");\n          isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n        }\n      });\n    });\n\n    observer.observe(props.mapInstance._container, {\n      attributes: true,\n      attributeFilter: [\"class\"],\n    });\n\n    const classList = props.mapInstance._container.classList;\n    isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n    isAnchorageActive.value = classList.contains(\"anchorage-active\");\n    isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n\n    isComponentMounted.value = true;\n\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n  }\n});\n\nonBeforeUnmount(() => {\n  isComponentMounted.value = false;\n  cleanupElevationProfile(true);\n});\n\n// ==============================================\n// Watchers\n// ==============================================\nwatch(oceanDepthFullscreenClass, () => {\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    showElevationProfile();\n  }\n});\n\nwatch(() => props.geoData, () => {\n  if (showProfile.value) {\n    cleanupElevationProfile(true);\n  }\n});\n\n// ==============================================\n// Helper Types\n// ==============================================\ninterface Point {\n  lat: number;\n  lng: number;\n}\n\ninterface Segment {\n  points: Point[];\n  used?: boolean;\n}\n\n// ==============================================\n// Safe Elevation Control Wrapper\n// ==============================================\nclass SafeElevationControl extends (L.Control as any).Elevation {\n  constructor(options: any) {\n    super(options);\n    this._originalResizeChart = this._resizeChart;\n    this._resizeChart = this._safeResizeChart.bind(this);\n  }\n\n  _safeResizeChart() {\n    try {\n      if (!this._container || !this._map || !this._data || !this._data.length) return;\n      const chart = this._chart;\n      const area = this._area;\n      if (!chart || !area) return;\n      if (typeof chart.select !== 'function' || typeof area.select !== 'function') return;\n      if (!document.body.contains(this._container)) return;\n      if (!this._map._container || !document.body.contains(this._map._container)) return;\n      if (typeof this._originalResizeChart === 'function') this._originalResizeChart();\n    } catch (error) {\n      console.warn('Safe resize handling prevented error:', error);\n    }\n  }\n\n  onAdd(map: L.Map) {\n    try {\n      if (!map || !map._container) return this;\n      const result = super.onAdd(map);\n      if (!this._container) return result;\n      if (typeof this._initEvents === 'function') this._initEvents();\n      return result;\n    } catch (error) {\n      console.warn('Error during elevation control addition:', error);\n      return this;\n    }\n  }\n\n  onRemove(map: L.Map) {\n    try {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = null;\n      }\n\n      if (this._container) {\n        const listeners = ['mousemove', 'mouseout', 'mouseover', 'click'];\n        listeners.forEach(event => this._container.removeEventListener(event, this._mousemoveHandler));\n      }\n\n      this._chart = null;\n      this._area = null;\n      this._data = null;\n      super.onRemove(map);\n    } catch (error) {\n      console.warn('Error during elevation control removal:', error);\n    }\n  }\n}\n\n// ==============================================\n// Core Functions\n// ==============================================\nconst toggleFullscreen = () => {\n  isFullscreen.value = !isFullscreen.value;\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    elevationOptions.height = isFullscreen.value ? 400 : 300;\n    showElevationProfile();\n  }\n};\n\nconst showElevationProfile = async () => {\n  if (!props.geoData || !isComponentMounted.value) return;\n  isLoading.value = true;\n  showProfile.value = true;\n\n  try {\n    removeCurrentElevationControl();\n    const geoJson = await convertToGeoJSON(props.geoData);\n    \n    if (!isComponentMounted.value) return;\n    elevationOptions.height = isFullscreen.value ? 600 : 300;\n    \n    if (!window.d3) window.d3 = d3;\n    currentElevationControl = new SafeElevationControl(elevationOptions).addTo(props.mapInstance);\n\n    if (currentElevationControl) {\n      currentElevationControl.load(geoJson);\n      setupResizeHandling();\n    }\n  } catch (error) {\n    console.error('Error loading elevation profile:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// ==============================================\n// Data Processing Functions\n// ==============================================\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lng - 0.0001;\n    const miny = lat - 0.0001;\n    const maxx = lng + 0.0001;\n    const maxy = lat + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    fetchedPoints.value++;\n    return parseFloat(extractedText);\n  } catch (error) {\n    fetchedPoints.value++;\n    return 0;\n  }\n}\n\nconst convertToGeoJSON = async (coordinates: any) => {\n  const rawCoordinates = JSON.parse(JSON.stringify(coordinates));\n  const unsortedSegments = [...rawCoordinates[0]].filter(Array.isArray);\n  const sortedSegments = sortCableSegments(unsortedSegments);\n  const maxDistanceThreshold = 0.50;\n  const minPointDensity = 10;\n\n  totalPoints.value = calculateTotalPoints(sortedSegments, minPointDensity, maxDistanceThreshold);\n  fetchedPoints.value = 0;\n  fetchingPoints.value = true;\n\n  const processedCoordinates: ([number, number, number] | null)[] = [];\n\n  for (const segment of sortedSegments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      if (processedCoordinates.length > 0) processedCoordinates.push(null);\n\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n\n      for (const [lat, lng] of segmentToProcess) {\n        const depth = await fetchOceanDepth(lng, lat);\n        processedCoordinates.push([lng, lat, depth]);\n      }\n    }\n  }\n\n  fetchingPoints.value = false;\n\n  const multiLineString = processedCoordinates.reduce((acc: number[][][], coord: [number, number, number] | null) => {\n    if (coord === null) {\n      acc.push([]);\n    } else {\n      if (acc.length === 0) acc.push([]);\n      acc[acc.length - 1].push(coord);\n    }\n    return acc;\n  }, []);\n\n  return {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"MultiLineString\",\n      coordinates: multiLineString,\n    },\n  };\n};\n\n// ==============================================\n// Segment Processing Functions\n// ==============================================\nfunction sortCableSegments(rawSegments: number[][][]): number[][][] {\n  const segments: Segment[] = rawSegments.map(segment => ({\n    points: segment.map(([lat, lng]) => ({ lat, lng })),\n    used: false\n  }));\n\n  const sortedSegments: number[][][] = [];\n  if (segments.length === 0) return [];\n  \n  segments[0].used = true;\n  sortedSegments.push(rawSegments[0]);\n  let currentEndPoint = segments[0].points[segments[0].points.length - 1];\n\n  while (segments.some(segment => !segment.used)) {\n    const nextSegment = findClosestSegment(currentEndPoint, segments);\n    if (!nextSegment) break;\n    \n    const { segmentIndex, shouldReverse } = nextSegment;\n    segments[segmentIndex].used = true;\n    const segmentToAdd = shouldReverse \n      ? [...rawSegments[segmentIndex]].reverse()\n      : rawSegments[segmentIndex];\n    \n    sortedSegments.push(segmentToAdd);\n    currentEndPoint = shouldReverse \n      ? segments[segmentIndex].points[0]\n      : segments[segmentIndex].points[segments[segmentIndex].points.length - 1];\n  }\n\n  return sortedSegments;\n}\n\nfunction findClosestSegment(\n  currentEndPoint: Point,\n  segments: Segment[]\n): { segmentIndex: number; shouldReverse: boolean } | null {\n  let minDistance = Infinity;\n  let closestSegmentIndex = -1;\n  let shouldReverse = false;\n\n  segments.forEach((segment, index) => {\n    if (segment.used) return;\n\n    const distanceToStart = calculateDistance(currentEndPoint, segment.points[0]);\n    if (distanceToStart < minDistance) {\n      minDistance = distanceToStart;\n      closestSegmentIndex = index;\n      shouldReverse = false;\n    }\n\n    const distanceToEnd = calculateDistance(\n      currentEndPoint,\n      segment.points[segment.points.length - 1]\n    );\n    if (distanceToEnd < minDistance) {\n      minDistance = distanceToEnd;\n      closestSegmentIndex = index;\n      shouldReverse = true;\n    }\n  });\n\n  if (closestSegmentIndex === -1) return null;\n  return { segmentIndex: closestSegmentIndex, shouldReverse };\n}\n\nfunction calculateDistance(p1: Point, p2: Point): number {\n  return Math.sqrt(Math.pow(p2.lat - p1.lat, 2) + Math.pow(p2.lng - p1.lng, 2));\n}\n\nconst calculateSegmentLength = (segment: [number, number][]): number => {\n  let length = 0;\n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    length += Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n  }\n  return length;\n};\n\nconst shouldInterpolateSegment = (segment: [number, number][], minPointDensity: number): boolean => {\n  const segmentLength = calculateSegmentLength(segment);\n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_MIN_DENSITY = 20;\n  const NORMAL_SEGMENT_MIN_DENSITY = 10;\n  \n  const pointDensity = segment.length / segmentLength;\n  const requiredDensity = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_MIN_DENSITY \n    : NORMAL_SEGMENT_MIN_DENSITY;\n    \n  return pointDensity < requiredDensity;\n};\n\nconst interpolateSegment = (segment: [number, number][], maxDistanceThreshold: number): [number, number][] => {\n  const interpolatedSegment: [number, number][] = [];\n  const segmentLength = calculateSegmentLength(segment);\n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_DISTANCE = 0.25;\n  const NORMAL_SEGMENT_DISTANCE = 0.50;\n  \n  const actualThreshold = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_DISTANCE \n    : NORMAL_SEGMENT_DISTANCE;\n  \n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    interpolatedSegment.push([lat1, lng1]);\n    \n    const distance = Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n    if (distance > actualThreshold) {\n      const numExtraPoints = Math.ceil(distance / actualThreshold) - 1;\n      for (let j = 1; j <= numExtraPoints; j++) {\n        const fraction = j / (numExtraPoints + 1);\n        interpolatedSegment.push([\n          lat1 + fraction * (lat2 - lat1),\n          lng1 + fraction * (lng2 - lng1),\n        ]);\n      }\n    }\n  }\n  \n  interpolatedSegment.push(segment[segment.length - 1]);\n  return interpolatedSegment;\n};\n\nfunction calculateTotalPoints(segments: number[][][], minPointDensity: number, maxDistanceThreshold: number): number {\n  let total = 0;\n  for (const segment of segments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n      total += segmentToProcess.length;\n    }\n  }\n  return total;\n}\n\n// ==============================================\n// Cleanup Functions\n// ==============================================\nconst removeCurrentElevationControl = () => {\n  if (currentElevationControl && props.mapInstance) {\n    props.mapInstance.removeControl(currentElevationControl);\n    currentElevationControl = null;\n  }\n  if (currentElevationLayer && props.mapInstance) {\n    props.mapInstance.removeLayer(currentElevationLayer);\n    currentElevationLayer = null;\n  }\n  \n  props.mapInstance.eachLayer((layer: any) => {\n    if (layer.options && (\n      layer.options.className === 'elevation-profile' ||\n      (layer.options.style && layer.options.style.className === 'elevation-profile')\n    )) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n};\n\nconst cleanupElevationProfile = (resetFullscreen = false) => {\n  if (resizeObserver.value) {\n    resizeObserver.value.disconnect();\n    resizeObserver.value = null;\n  }\n  \n  if (currentElevationControl) {\n    try {\n      if (typeof currentElevationControl.clear === 'function') {\n        const originalRemoveClass = L.DomUtil.removeClass;\n        L.DomUtil.removeClass = function(el: HTMLElement, name: string) {\n          safeRemoveClasses(el, name);\n        };\n        currentElevationControl.clear();\n        L.DomUtil.removeClass = originalRemoveClass;\n      }\n      \n      const elevationDiv = document.getElementById('elevation-div');\n      if (elevationDiv) elevationDiv.innerHTML = '';\n      if (props.mapInstance) props.mapInstance.removeControl(currentElevationControl);\n    } catch (error) {\n      console.error('Error during elevation control cleanup:', error);\n    }\n    currentElevationControl = null;\n  }\n\n  const selectors = [\n    '.elevation-polyline',\n    '.elevation-profile',\n    '.elevation-line',\n    '.elevation-point',\n    '.elevation-marker',\n    '.elevation-summary',\n    '.elevation-tooltip',\n    '.leaflet-elevation'\n  ];\n\n  selectors.forEach(selector => {\n    document.querySelectorAll(selector).forEach(element => {\n      if (element instanceof HTMLElement) {\n        try {\n          if (element.className) safeRemoveClasses(element, element.className);\n          element.remove();\n        } catch (error) {\n          console.error(`Error removing element with selector ${selector}:`, error);\n        }\n      }\n    });\n  });\n\n  if (props.mapInstance) {\n    props.mapInstance.eachLayer((layer: any) => {\n      try {\n        if (layer.options && (\n          layer.options.className === 'elevation-profile' ||\n          (layer.options.style && layer.options.style.className === 'elevation-profile') ||\n          layer._path?.classList?.contains('elevation-polyline') ||\n          layer.options.className?.includes('elevation-') ||\n          layer._container?.classList?.contains('leaflet-elevation')\n        )) {\n          props.mapInstance.removeLayer(layer);\n        }\n      } catch (error) {\n        console.error('Error removing map layer:', error);\n      }\n    });\n  }\n\n  if (currentElevationLayer && props.mapInstance) {\n    try {\n      props.mapInstance.removeLayer(currentElevationLayer);\n    } catch (error) {\n      console.error('Error removing current elevation layer:', error);\n    }\n    currentElevationLayer = null;\n  }\n\n  showProfile.value = false;\n  if (resetFullscreen) isFullscreen.value = false;\n};\n\n// ==============================================\n// Utility Functions\n// ==============================================\nconst safeRemoveClasses = (element: HTMLElement, classNames: string) => {\n  if (!element) return;\n  const classes = classNames.split(' ').filter(className => className.trim());\n  classes.forEach(className => {\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.warn(`Failed to remove class: ${className}`, error);\n    }\n  });\n};\n\nconst debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  \n  return function executedFunction(\n    this: any,\n    ...args: Parameters<T>\n  ) {\n    const later = () => {\n      clearTimeout(timeout);\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nconst setupResizeHandling = () => {\n  const elevationDiv = document.getElementById('elevation-div');\n  if (elevationDiv && isComponentMounted.value) {\n    if (resizeObserver.value) resizeObserver.value.disconnect();\n\n    resizeObserver.value = new ResizeObserver(debounce(() => {\n      if (currentElevationControl && isComponentMounted.value) {\n        try {\n          if (currentElevationControl._container && \n              currentElevationControl._map && \n              document.body.contains(currentElevationControl._container) &&\n              typeof currentElevationControl._resizeChart === 'function') {\n            currentElevationControl._resizeChart();\n          }\n        } catch (error) {\n          console.warn('Safe resize handling:', error);\n        }\n      }\n    }, 250));\n\n    resizeObserver.value.observe(elevationDiv);\n  }\n};\n</script>\n\n<style scoped>\n.elevation-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  position: relative;\n}\n\n.button-group {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.button-group.has-two-buttons {\n  justify-content: flex-start;\n}\n\n.btn-elevation {\n  background: rgba(99, 179, 237, 0.2);\n  color: white;\n  border: 1px solid rgba(99, 179, 237, 0.3);\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  transition: all 0.2s ease;\n  font-size: 0.85rem;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.btn-elevation:hover:not(:disabled) {\n  background: rgba(99, 179, 237, 0.3);\n  transform: translateY(-1px);\n}\n\n.btn-elevation:disabled {\n  background: rgba(74, 85, 104, 0.3);\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.btn-elevation.active {\n  background: rgba(128, 90, 213, 0.3);\n  border-color: rgba(128, 90, 213, 0.4);\n}\n\n.progress-bar-container {\n  width: 100%;\n  height: 4px;\n  background-color: rgba(75, 86, 115, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n  margin-top: -0.5rem;\n}\n\n.progress-bar {\n  height: 100%;\n  background-color: #63b3ed;\n}\n\n.elevation-div {\n  height: 300px;\n  width: 100%;\n  font: 12px/1.5 \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n  background-color: rgba(75, 86, 115, 0.5);\n  border-radius: 4px;\n  padding: 0.75rem;\n}\n\n.elevation-div.fullscreen {\n  position: fixed;\n  bottom: 1rem;\n  left: min(310px, 30%);\n  right: 1rem;\n  width:  auto !important; \n  height: 300px;\n  z-index: 1000;\n  background-color: rgba(46, 53, 71, 0.95);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n  margin-left: 1.5rem;\n}\n\n.elevation-div.fullscreen.ocean-depth-fullscreen {\n  width: 60vw !important;\n  right: 11vw !important;\n}\n\n.elevation-div.fullscreen.anchorage-fullscreen {\n  width: 72vw !important;\n  right: 11vw !important;\n}\n\n.elevation-div.fullscreen.cable-ships-fullscreen {\n  width: 70vw !important;\n  right: 13vw !important;\n}\n\n@keyframes pulse {\n  0% { opacity: 0.6; }\n  50% { opacity: 1; }\n  100% { opacity: 0.6; }\n}\n\n.btn-elevation:disabled span {\n  animation: pulse 1.5s infinite ease-in-out;\n}\n</style>\n\n<style>\n.leaflet-elevation-toggle {\n  background-color: rgba(99, 179, 237, 0.8) !important;\n}\n\n.leaflet-elevation-control .area {\n  fill: rgba(99, 179, 237, 0.2) !important;\n}\n\n.leaflet-elevation-control .line {\n  stroke: #63b3ed !important;\n}\n</style>","import script from \"./ElevationProfile.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ElevationProfile.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ElevationProfile.vue?vue&type=style&index=0&id=10e43de8&scoped=true&lang=css\"\nimport \"./ElevationProfile.vue?vue&type=style&index=1&id=10e43de8&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-10e43de8\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-18fbfaec\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"cable-details-container\" }\nconst _hoisted_2 = { class: \"header-section\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-arrow-left\" }, null, -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Back to Cables\", -1))\nconst _hoisted_5 = { class: \"cable-title\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"content-grid\"\n}\nconst _hoisted_7 = { class: \"info-card\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"card-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-info-circle\" }),\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Cable Information\")\n], -1))\nconst _hoisted_9 = { class: \"card-content\" }\nconst _hoisted_10 = { class: \"info-row\" }\nconst _hoisted_11 = { class: \"info-item\" }\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"label\" }, \"Total Length\", -1))\nconst _hoisted_13 = { class: \"value\" }\nconst _hoisted_14 = { class: \"info-item\" }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"label\" }, \"Service Date\", -1))\nconst _hoisted_16 = { class: \"value\" }\nconst _hoisted_17 = {\n  key: 0,\n  class: \"info-card\"\n}\nconst _hoisted_18 = { class: \"card-header\" }\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-geo-alt\" }, null, -1))\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Landing Sites\", -1))\nconst _hoisted_21 = { class: \"count-badge\" }\nconst _hoisted_22 = { class: \"card-content\" }\nconst _hoisted_23 = { class: \"landing-sites-grid\" }\nconst _hoisted_24 = [\"onClick\"]\nconst _hoisted_25 = {\n  key: 1,\n  class: \"info-card\"\n}\nconst _hoisted_26 = { class: \"card-header\" }\nconst _hoisted_27 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-building\" }, null, -1))\nconst _hoisted_28 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Ownership\", -1))\nconst _hoisted_29 = { class: \"count-badge\" }\nconst _hoisted_30 = { class: \"card-content\" }\nconst _hoisted_31 = { class: \"ownership-list\" }\nconst _hoisted_32 = { class: \"company-info\" }\nconst _hoisted_33 = { class: \"company-name\" }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"nationality\"\n}\nconst _hoisted_35 = { class: \"info-card analysis-card\" }\nconst _hoisted_36 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"card-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-water\" }),\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Ocean Depth Analysis\")\n], -1))\nconst _hoisted_37 = { class: \"card-content\" }\nconst _hoisted_38 = { class: \"analysis-controls\" }\nconst _hoisted_39 = { class: \"control-group\" }\nconst _hoisted_40 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"samplePointCount\" }, \"Sample Points\", -1))\nconst _hoisted_41 = [\"value\"]\nconst _hoisted_42 = [\"disabled\"]\nconst _hoisted_43 = {\n  key: 0,\n  class: \"bi bi-search\"\n}\nconst _hoisted_44 = {\n  key: 1,\n  class: \"bi bi-arrow-clockwise spin\"\n}\nconst _hoisted_45 = {\n  key: 0,\n  class: \"depth-results\"\n}\nconst _hoisted_46 = { class: \"result-item\" }\nconst _hoisted_47 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"result-label\" }, \"Average Depth\", -1))\nconst _hoisted_48 = { class: \"result-value\" }\nconst _hoisted_49 = { class: \"result-item\" }\nconst _hoisted_50 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"result-label\" }, \"Maximum Depth\", -1))\nconst _hoisted_51 = { class: \"result-value\" }\nconst _hoisted_52 = { class: \"info-card analysis-card\" }\nconst _hoisted_53 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"card-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-graph-up\" }),\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Cable Analysis\")\n], -1))\nconst _hoisted_54 = { class: \"card-content\" }\nconst _hoisted_55 = { class: \"analysis-buttons\" }\nconst _hoisted_56 = [\"disabled\"]\nconst _hoisted_57 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-bar-chart\" }, null, -1))\nconst _hoisted_58 = {\n  key: 1,\n  class: \"analysis-container\"\n}\n\nimport { ref, watch, nextTick } from \"vue\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport L from 'leaflet';\n\n// Store imports\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\n\n// Component imports\nimport OceanDepthAnalyzer from \"@/components/layers/natural/OceanDepthAnalyzer.vue\";\nimport ElevationProfile from '@/components/sidebar/ElevationProfile.vue';\n\n// Service imports\nimport { queryCableById } from \"@/service/hasura\";\n\n// Initialize stores and router\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CableViewer',\n  setup(__props) {\n\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\nconst route = useRoute();\nconst handle = useClientHandle();\n\n// Component state\nconst geoData = ref(null);\nconst cable = ref();\nconst drawnGeometry = ref(null);\nconst isAnalyzing = ref(false);\nconst filteredDepthAnalysis = ref(null);\nconst samplePointCount = ref(100);\nconst activeAnalysis = ref(null); // 'elevation' | 'risk' | null\n\n// Template refs\nconst oceanDepthAnalyzerRef = ref(null);\nconst elevationProfileRef = ref(null);\n\n// Map instance from store\nconst mapInstance = dataCableStore.getMapInstance;\n\n// Watch for cable selection changes\nwatch(() => dataCableStore.selectCable, () => {\n  geoData.value = dataCableStore.cableDetails.geoData;\n});\n\n// Watch for cable data changes\nwatch(() => cable.value, async () => {\n  await clearAnalysis();\n  drawnGeometry.value = null;\n  filteredDepthAnalysis.value = null;\n  isAnalyzing.value = false;\n  geoData.value = dataCableStore.cableDetails.geoData;\n});\n\n// Load initial cable data\nlet id = route.params.cableId.toString();\nif (!dataCableStore.isCableSelected(id)) {\n  dataCableStore.setSelectCable(id, true);\n}\n\n// Handle route updates\nonBeforeRouteUpdate((to) => {\n  loadCable(to.params.cableId.toString());\n});\n\n\n/**\nFetches cable data by ID from the GraphQL API\n@param id - The cable system ID to load\n */\nconst loadCable = async (id: string) => {\n  const result = await handle.client.query(queryCableById, { id: id }).toPromise();\n  if (result.error) return;\n  cable.value = result.data.CableSystems[0];\n};\n\n/**\nFormats a date string to a human-readable format\n@param dateString - The date string to format\n@returns Formatted date string\n */\nfunction formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric', \n    month: 'long', \n    day: 'numeric'\n  });\n}\n\n/**\nCleans up active analysis components\n */\nconst cleanupAnalysis = async () => {\n  if (activeAnalysis.value === 'elevation' && elevationProfileRef.value) {\n    if (typeof elevationProfileRef.value.cleanup === 'function') {\n      await elevationProfileRef.value.cleanup();\n    }\n  } else if (activeAnalysis.value === 'risk' && cableRiskAnalysisRef.value) {\n    if (typeof cableRiskAnalysisRef.value.cleanup === 'function') {\n      await cableRiskAnalysisRef.value.cleanup();\n    }\n  }\n};\n\n/**\nToggles the elevation profile visualization\n */\nconst toggleElevationProfile = async () => {\n  if (activeAnalysis.value === 'elevation') {\n    await clearAnalysis();\n  } else {\n    await cleanupAnalysis();\n    activeAnalysis.value = 'elevation';\n    \n    await nextTick();\n    \n    if (elevationProfileRef.value?.showElevationProfile) {\n      elevationProfileRef.value.showElevationProfile();\n    }\n  }\n};\n\n/**\nClears all active analysis visualizations\n */\nconst clearAnalysis = async () => {\n  await cleanupAnalysis();\n  activeAnalysis.value = null;\n};\n\n/**\nExtracts depth information for the cable\n */\nconst extractDepthInfo = async () => {\n  let cableGeo = dataCableStore.cableDetails;\n  if (!cableGeo?.geoData) return;\n  \n  isAnalyzing.value = true;\n  try {\n    const flattenedCoordinates = cableGeo.geoData.flatMap(segment => \n      segment[0].map(coord => [coord[1], coord[0]])\n    );\n\n    const geoData = {\n      type: 'LineString',\n      coordinates: flattenedCoordinates\n    };\n\n    const latlngs = geoData.coordinates.map((coord: number[]) => \n      L.latLng(coord[1], coord[0])\n    );\n    const geometry = L.polyline(latlngs);\n\n    drawnGeometry.value = geometry;\n  } finally {\n    isAnalyzing.value = false;\n  }\n};\n\n/**\nFilters and stores depth analysis results\n@param fullAnalysis - The complete depth analysis results\n */\nconst filterDepthAnalysis = (fullAnalysis) => {\n  filteredDepthAnalysis.value = {\n    averageDepth: fullAnalysis.averageDepth,\n    deepestPoint: fullAnalysis.deepestPoint,\n    samplePoints: fullAnalysis.samplePoints\n  };\n};\n\nloadCable(id);\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(dataCableStore).deselectCables())),\n        class: \"back-button\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_3,\n          _hoisted_4\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"h1\", null, _toDisplayString(cable.value?.name || 'Loading...'), 1),\n        (cable.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: _normalizeClass([\"status-badge\", cable.value.outOfService ? 'status-offline' : 'status-online'])\n            }, [\n              _createElementVNode(\"i\", {\n                class: _normalizeClass(['bi', !cable.value.outOfService ? 'bi-check-circle-fill' : 'bi-x-circle-fill'])\n              }, null, 2),\n              _createElementVNode(\"span\", null, _toDisplayString(cable.value.outOfService ? 'Out of Service' : 'Operational'), 1)\n            ], 2))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (cable.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _hoisted_8,\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _hoisted_12,\n                  _createElementVNode(\"span\", _hoisted_13, _toDisplayString(cable.value.length?.toLocaleString()) + \" km\", 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_14, [\n                  _hoisted_15,\n                  _createElementVNode(\"span\", _hoisted_16, _toDisplayString(formatDate(cable.value.readyForService)), 1)\n                ])\n              ])\n            ])\n          ]),\n          (cable.value.CableSystem_X_Landingsites?.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n                _createElementVNode(\"div\", _hoisted_18, [\n                  _hoisted_19,\n                  _hoisted_20,\n                  _createElementVNode(\"span\", _hoisted_21, _toDisplayString(cable.value.CableSystem_X_Landingsites.length), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_22, [\n                  _createElementVNode(\"div\", _hoisted_23, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.value.CableSystem_X_Landingsites, (point) => {\n                      return (_openBlock(), _createElementBlock(\"div\", {\n                        key: point.Landingsite.id,\n                        class: \"landing-site-chip\",\n                        onClick: ($event: any) => (_unref(landingSitesStore).setSelectLandingSiteById(point.Landingsite.id))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(point.Landingsite.name), 1)\n                      ], 8, _hoisted_24))\n                    }), 128))\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (cable.value.Ownerships?.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [\n                _createElementVNode(\"div\", _hoisted_26, [\n                  _hoisted_27,\n                  _hoisted_28,\n                  _createElementVNode(\"span\", _hoisted_29, _toDisplayString(cable.value.Ownerships.length), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_30, [\n                  _createElementVNode(\"div\", _hoisted_31, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.value.Ownerships, (entry) => {\n                      return (_openBlock(), _createElementBlock(\"div\", {\n                        key: entry.Company.id,\n                        class: \"ownership-item\"\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_32, [\n                          _createElementVNode(\"span\", _hoisted_33, _toDisplayString(entry.Company.name), 1),\n                          (entry.Company.nationality)\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_34, _toDisplayString(entry.Company.nationality), 1))\n                            : _createCommentVNode(\"\", true)\n                        ])\n                      ]))\n                    }), 128))\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_35, [\n            _hoisted_36,\n            _createElementVNode(\"div\", _hoisted_37, [\n              _createElementVNode(\"div\", _hoisted_38, [\n                _createElementVNode(\"div\", _hoisted_39, [\n                  _hoisted_40,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    id: \"samplePointCount\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((samplePointCount).value = $event)),\n                    class: \"select-input\"\n                  }, [\n                    (_openBlock(), _createElementBlock(_Fragment, null, _renderList([100, 200, 500, 1000, 2000, 5000], (count) => {\n                      return _createElementVNode(\"option\", {\n                        key: count,\n                        value: count\n                      }, _toDisplayString(count.toLocaleString()) + \" points \", 9, _hoisted_41)\n                    }), 64))\n                  ], 512), [\n                    [_vModelSelect, samplePointCount.value]\n                  ])\n                ]),\n                _createElementVNode(\"button\", {\n                  onClick: extractDepthInfo,\n                  class: \"primary-button\",\n                  disabled: isAnalyzing.value\n                }, [\n                  (!isAnalyzing.value)\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_43))\n                    : (_openBlock(), _createElementBlock(\"i\", _hoisted_44)),\n                  _createElementVNode(\"span\", null, _toDisplayString(isAnalyzing.value ? 'Analyzing...' : 'Analyze Depth'), 1)\n                ], 8, _hoisted_42)\n              ]),\n              (filteredDepthAnalysis.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, [\n                    _createElementVNode(\"div\", _hoisted_46, [\n                      _hoisted_47,\n                      _createElementVNode(\"span\", _hoisted_48, _toDisplayString(Math.round(filteredDepthAnalysis.value.averageDepth).toLocaleString()) + \"m\", 1)\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_49, [\n                      _hoisted_50,\n                      _createElementVNode(\"span\", _hoisted_51, _toDisplayString(Math.round(filteredDepthAnalysis.value.deepestPoint).toLocaleString()) + \"m\", 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_52, [\n            _hoisted_53,\n            _createElementVNode(\"div\", _hoisted_54, [\n              _createElementVNode(\"div\", _hoisted_55, [\n                _createElementVNode(\"button\", {\n                  onClick: toggleElevationProfile,\n                  class: _normalizeClass([\"analysis-button\", { active: activeAnalysis.value === 'elevation' }]),\n                  disabled: isAnalyzing.value\n                }, [\n                  _hoisted_57,\n                  _createElementVNode(\"span\", null, _toDisplayString(activeAnalysis.value === 'elevation' ? 'Hide' : 'Show') + \" Elevation Profile\", 1)\n                ], 10, _hoisted_56)\n              ])\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (activeAnalysis.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_58, [\n          (activeAnalysis.value === 'elevation')\n            ? (_openBlock(), _createBlock(ElevationProfile, {\n                key: 0,\n                ref_key: \"elevationProfileRef\",\n                ref: elevationProfileRef,\n                mapInstance: _unref(mapInstance),\n                geoData: geoData.value,\n                autoStart: true\n              }, null, 8, [\"mapInstance\", \"geoData\"]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (drawnGeometry.value)\n      ? (_openBlock(), _createBlock(OceanDepthAnalyzer, {\n          key: 2,\n          ref_key: \"oceanDepthAnalyzerRef\",\n          ref: oceanDepthAnalyzerRef,\n          mapInstance: _unref(mapInstance),\n          drawnGeometry: drawnGeometry.value,\n          samplePointCount: samplePointCount.value,\n          onDepthAnalysisComplete: filterDepthAnalysis,\n          style: {\"display\":\"none\"}\n        }, null, 8, [\"mapInstance\", \"drawnGeometry\", \"samplePointCount\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!--\nCableViewer.vue - Component for displaying detailed information about a submarine cable\n\nFeatures:\n- Displays cable information, landing sites, and ownership details\n- Provides ocean depth analysis capabilities\n- Includes elevation profile and risk analysis visualizations\n- Responsive design for various screen sizes\n\nDependencies:\n- Vue Router for navigation\n- Pinia stores for state management\n- Leaflet for map interactions\n- Urql for GraphQL queries\n-->\n\n<template>\n  <div class=\"cable-details-container\">\n    <!-- Header Section -->\n    <div class=\"header-section\">\n      <router-link to=\"/\" @click=\"dataCableStore.deselectCables()\" class=\"back-button\">\n        <i class=\"bi bi-arrow-left\"></i>\n        <span>Back to Cables</span>\n      </router-link>\n      \n      <div class=\"cable-title\">\n        <h1>{{ cable?.name || 'Loading...' }}</h1>\n        <div v-if=\"cable\" class=\"status-badge\" :class=\"cable.outOfService ? 'status-offline' : 'status-online'\">\n          <i :class=\"['bi', !cable.outOfService ? 'bi-check-circle-fill' : 'bi-x-circle-fill']\"></i>\n          <span>{{ cable.outOfService ? 'Out of Service' : 'Operational' }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Main Content Grid -->\n    <div v-if=\"cable\" class=\"content-grid\">\n      <!-- Basic Information Card -->\n      <div class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-info-circle\"></i>\n          <h3>Cable Information</h3>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"info-row\">\n            <div class=\"info-item\">\n              <span class=\"label\">Total Length</span>\n              <span class=\"value\">{{ cable.length?.toLocaleString() }} km</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">Service Date</span>\n              <span class=\"value\">{{ formatDate(cable.readyForService) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Landing Sites Card -->\n      <div v-if=\"cable.CableSystem_X_Landingsites?.length\" class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-geo-alt\"></i>\n          <h3>Landing Sites</h3>\n          <span class=\"count-badge\">{{ cable.CableSystem_X_Landingsites.length }}</span>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"landing-sites-grid\">\n            <div \n              v-for=\"point in cable.CableSystem_X_Landingsites\" \n              :key=\"point.Landingsite.id\" \n              class=\"landing-site-chip\"\n              @click=\"landingSitesStore.setSelectLandingSiteById(point.Landingsite.id)\"\n            >\n              <span>{{ point.Landingsite.name }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Ownership Card -->\n      <div v-if=\"cable.Ownerships?.length\" class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-building\"></i>\n          <h3>Ownership</h3>\n          <span class=\"count-badge\">{{ cable.Ownerships.length }}</span>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"ownership-list\">\n            <div v-for=\"entry in cable.Ownerships\" :key=\"entry.Company.id\" class=\"ownership-item\">\n              <div class=\"company-info\">\n                <span class=\"company-name\">{{ entry.Company.name }}</span>\n                <span v-if=\"entry.Company.nationality\" class=\"nationality\">{{ entry.Company.nationality }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Ocean Depth Analysis Card -->\n      <div class=\"info-card analysis-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-water\"></i>\n          <h3>Ocean Depth Analysis</h3>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"analysis-controls\">\n            <div class=\"control-group\">\n              <label for=\"samplePointCount\">Sample Points</label>\n              <select id=\"samplePointCount\" v-model=\"samplePointCount\" class=\"select-input\">\n                <option v-for=\"count in [100, 200, 500, 1000, 2000, 5000]\" :key=\"count\" :value=\"count\">\n                  {{ count.toLocaleString() }} points\n                </option>\n              </select>\n            </div>\n            \n            <button @click=\"extractDepthInfo\" class=\"primary-button\" :disabled=\"isAnalyzing\">\n              <i v-if=\"!isAnalyzing\" class=\"bi bi-search\"></i>\n              <i v-else class=\"bi bi-arrow-clockwise spin\"></i>\n              <span>{{ isAnalyzing ? 'Analyzing...' : 'Analyze Depth' }}</span>\n            </button>\n          </div>\n\n          <div v-if=\"filteredDepthAnalysis\" class=\"depth-results\">\n            <div class=\"result-item\">\n              <span class=\"result-label\">Average Depth</span>\n              <span class=\"result-value\">{{ Math.round(filteredDepthAnalysis.averageDepth).toLocaleString() }}m</span>\n            </div>\n            <div class=\"result-item\">\n              <span class=\"result-label\">Maximum Depth</span>\n              <span class=\"result-value\">{{ Math.round(filteredDepthAnalysis.deepestPoint).toLocaleString() }}m</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Cable Analysis Card -->\n      <div class=\"info-card analysis-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-graph-up\"></i>\n          <h3>Cable Analysis</h3>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"analysis-buttons\">\n            <button \n              @click=\"toggleElevationProfile\" \n              class=\"analysis-button\" \n              :class=\"{ active: activeAnalysis === 'elevation' }\"\n              :disabled=\"isAnalyzing\"\n            >\n              <i class=\"bi bi-bar-chart\"></i>\n              <span>{{ activeAnalysis === 'elevation' ? 'Hide' : 'Show' }} Elevation Profile</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Analysis Visualization Components -->\n    <div v-if=\"activeAnalysis\" class=\"analysis-container\">\n      <ElevationProfile \n        v-if=\"activeAnalysis === 'elevation'\"\n        ref=\"elevationProfileRef\"\n        :mapInstance=\"mapInstance\" \n        :geoData=\"geoData\"\n        :autoStart=\"true\"\n      />\n      \n    </div>\n\n    <!-- Hidden Analysis Utility -->\n    <OceanDepthAnalyzer \n      v-if=\"drawnGeometry\"\n      ref=\"oceanDepthAnalyzerRef\"\n      :mapInstance=\"mapInstance\"\n      :drawnGeometry=\"drawnGeometry\"\n      :samplePointCount=\"samplePointCount\"\n      @depth-analysis-complete=\"filterDepthAnalysis\"\n      style=\"display: none;\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, nextTick } from \"vue\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport L from 'leaflet';\n\n// Store imports\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\n\n// Component imports\nimport OceanDepthAnalyzer from \"@/components/layers/natural/OceanDepthAnalyzer.vue\";\nimport ElevationProfile from '@/components/sidebar/ElevationProfile.vue';\n\n// Service imports\nimport { queryCableById } from \"@/service/hasura\";\n\n// Initialize stores and router\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\nconst route = useRoute();\nconst handle = useClientHandle();\n\n// Component state\nconst geoData = ref(null);\nconst cable = ref();\nconst drawnGeometry = ref(null);\nconst isAnalyzing = ref(false);\nconst filteredDepthAnalysis = ref(null);\nconst samplePointCount = ref(100);\nconst activeAnalysis = ref(null); // 'elevation' | 'risk' | null\n\n// Template refs\nconst oceanDepthAnalyzerRef = ref(null);\nconst elevationProfileRef = ref(null);\n\n// Map instance from store\nconst mapInstance = dataCableStore.getMapInstance;\n\n// Watch for cable selection changes\nwatch(() => dataCableStore.selectCable, () => {\n  geoData.value = dataCableStore.cableDetails.geoData;\n});\n\n// Watch for cable data changes\nwatch(() => cable.value, async () => {\n  await clearAnalysis();\n  drawnGeometry.value = null;\n  filteredDepthAnalysis.value = null;\n  isAnalyzing.value = false;\n  geoData.value = dataCableStore.cableDetails.geoData;\n});\n\n// Load initial cable data\nlet id = route.params.cableId.toString();\nif (!dataCableStore.isCableSelected(id)) {\n  dataCableStore.setSelectCable(id, true);\n}\n\n// Handle route updates\nonBeforeRouteUpdate((to) => {\n  loadCable(to.params.cableId.toString());\n});\n\n\n/**\nFetches cable data by ID from the GraphQL API\n@param id - The cable system ID to load\n */\nconst loadCable = async (id: string) => {\n  const result = await handle.client.query(queryCableById, { id: id }).toPromise();\n  if (result.error) return;\n  cable.value = result.data.CableSystems[0];\n};\n\n/**\nFormats a date string to a human-readable format\n@param dateString - The date string to format\n@returns Formatted date string\n */\nfunction formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric', \n    month: 'long', \n    day: 'numeric'\n  });\n}\n\n/**\nCleans up active analysis components\n */\nconst cleanupAnalysis = async () => {\n  if (activeAnalysis.value === 'elevation' && elevationProfileRef.value) {\n    if (typeof elevationProfileRef.value.cleanup === 'function') {\n      await elevationProfileRef.value.cleanup();\n    }\n  } else if (activeAnalysis.value === 'risk' && cableRiskAnalysisRef.value) {\n    if (typeof cableRiskAnalysisRef.value.cleanup === 'function') {\n      await cableRiskAnalysisRef.value.cleanup();\n    }\n  }\n};\n\n/**\nToggles the elevation profile visualization\n */\nconst toggleElevationProfile = async () => {\n  if (activeAnalysis.value === 'elevation') {\n    await clearAnalysis();\n  } else {\n    await cleanupAnalysis();\n    activeAnalysis.value = 'elevation';\n    \n    await nextTick();\n    \n    if (elevationProfileRef.value?.showElevationProfile) {\n      elevationProfileRef.value.showElevationProfile();\n    }\n  }\n};\n\n/**\nClears all active analysis visualizations\n */\nconst clearAnalysis = async () => {\n  await cleanupAnalysis();\n  activeAnalysis.value = null;\n};\n\n/**\nExtracts depth information for the cable\n */\nconst extractDepthInfo = async () => {\n  let cableGeo = dataCableStore.cableDetails;\n  if (!cableGeo?.geoData) return;\n  \n  isAnalyzing.value = true;\n  try {\n    const flattenedCoordinates = cableGeo.geoData.flatMap(segment => \n      segment[0].map(coord => [coord[1], coord[0]])\n    );\n\n    const geoData = {\n      type: 'LineString',\n      coordinates: flattenedCoordinates\n    };\n\n    const latlngs = geoData.coordinates.map((coord: number[]) => \n      L.latLng(coord[1], coord[0])\n    );\n    const geometry = L.polyline(latlngs);\n\n    drawnGeometry.value = geometry;\n  } finally {\n    isAnalyzing.value = false;\n  }\n};\n\n/**\nFilters and stores depth analysis results\n@param fullAnalysis - The complete depth analysis results\n */\nconst filterDepthAnalysis = (fullAnalysis) => {\n  filteredDepthAnalysis.value = {\n    averageDepth: fullAnalysis.averageDepth,\n    deepestPoint: fullAnalysis.deepestPoint,\n    samplePoints: fullAnalysis.samplePoints\n  };\n};\n\nloadCable(id);\n</script>\n\n<style scoped>\n/* Layout and Container Styles */\n.cable-details-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  color: white;\n  padding: 0.5rem;\n  max-width: 100%;\n}\n\n/* Header Section Styles */\n.header-section {\n  margin-bottom: 0.75rem;\n}\n\n.back-button {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #cbd5e0;\n  text-decoration: none;\n  font-size: 0.95rem;\n  padding: 0.5rem 0.75rem;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 0.8rem;\n  width: fit-content;\n}\n\n.back-button:hover {\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  text-decoration: none;\n  transform: translateX(-2px);\n}\n\n.cable-title {\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n}\n\n.cable-title h1 {\n  font-size: 1.3rem;\n  font-weight: 700;\n  margin: 0;\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  line-height: 1.2;\n}\n\n.status-badge {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.5rem 0.75rem;\n  border-radius: 16px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  width: fit-content;\n  margin: 0 auto;\n}\n\n.status-online {\n  background: rgba(72, 187, 120, 0.2);\n  color: #68d391;\n  border: 1px solid rgba(72, 187, 120, 0.3);\n}\n\n.status-offline {\n  background: rgba(245, 101, 101, 0.2);\n  color: #fc8181;\n  border: 1px solid rgba(245, 101, 101, 0.3);\n}\n\n/* Content Grid Styles */\n.content-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  flex: 1;\n}\n\n/* Card Styles */\n.info-card {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n  transition: all 0.2s ease;\n}\n\n.info-card:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  border-color: rgba(255, 255, 255, 0.15);\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.6rem 0.8rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.card-header i {\n  font-size: 1rem;\n  color: #63b3ed;\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 600;\n  flex: 1;\n}\n\n.count-badge {\n  background: rgba(99, 179, 237, 0.2);\n  color: #63b3ed;\n  padding: 0.2rem 0.5rem;\n  border-radius: 10px;\n  font-size: 0.75rem;\n  font-weight: 700;\n  min-width: 1.5rem;\n  text-align: center;\n}\n\n.card-content {\n  padding: 0.75rem;\n}\n\n/* Information Item Styles */\n.info-row {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  padding: 0.75rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 6px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.info-item .label {\n  font-size: 0.75rem;\n  color: #a0aec0;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  font-weight: 500;\n}\n\n.info-item .value {\n  font-size: 1rem;\n  font-weight: 600;\n  color: white;\n  text-align: center;\n}\n\n/* Landing Sites Styles */\n.landing-sites-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.5rem;\n}\n\n.landing-site-chip {\n  align-items: center;\n  text-align: center;\n  gap: 0.5rem;\n  padding: 0.4rem 0.6rem;\n  background: rgba(99, 179, 237, 0.1);\n  border: 1px solid rgba(99, 179, 237, 0.2);\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.85rem;\n  width: 100%;\n}\n\n.landing-site-chip:hover {\n  background: rgba(99, 179, 237, 0.25);\n  transform: translateY(-2px);\n  box-shadow: 0 2px 8px rgba(99, 179, 237, 0.2);\n}\n\n/* Ownership Styles */\n.ownership-list {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.ownership-item {\n  padding: 0.75rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 6px;\n  border-left: 3px solid #63b3ed;\n}\n\n.company-info {\n  display: flex;  \n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.company-name {\n  font-weight: 600;\n  color: white;\n  font-size: 0.9rem;\n}\n\n.nationality {\n  background: rgba(99, 179, 237, 0.2);\n  color: #63b3ed;\n  padding: 0.2rem 0.5rem;\n  border-radius: 10px;\n  font-size: 0.75rem;\n  width: fit-content;\n}\n\n/* Analysis Control Styles */\n.analysis-controls {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.control-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.control-group label {\n  font-size: 0.8rem;\n  color: #a0aec0;\n  font-weight: 500;\n}\n\n.select-input {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  padding: 0.4rem 0.6rem;\n  color: white;\n  font-size: 0.8rem;\n}\n\n.select-input option {\n  background: #2d3748;\n  color: white;\n}\n\n.select-input:focus {\n  outline: none;\n  border-color: #63b3ed;\n  box-shadow: 0 0 0 3px rgba(99, 179, 237, 0.1);\n}\n\n/* Button Styles */\n.primary-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  background: linear-gradient(135deg, #4299e1, #3182ce);\n  border: none;\n  border-radius: 6px;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.8rem;\n  width: 100%;\n}\n\n.primary-button:hover:not(:disabled) {\n  background: linear-gradient(135deg, #3182ce, #2c5282);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);\n}\n\n.primary-button:disabled {\n  background: rgba(74, 85, 104, 0.5);\n  cursor: not-allowed;\n  transform: none;\n}\n\n.analysis-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.analysis-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  background: linear-gradient(135deg, #4299e1, #3182ce);\n  border: none;\n  border-radius: 6px;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.8rem;\n  width: 100%;\n  max-width: 280px;\n}\n\n.analysis-button:hover:not(:disabled) {\n  background: linear-gradient(135deg, #3182ce, #2c5282);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);\n}\n\n.analysis-button.active {\n  background: linear-gradient(135deg, #805ad5, #6b46c1);\n  border-color: #805ad5;\n}\n\n.analysis-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Depth Results Styles */\n.depth-results {\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.result-item {\n  padding: 0.75rem;\n  background: rgba(72, 187, 120, 0.1);\n  border: 1px solid rgba(72, 187, 120, 0.2);\n  border-radius: 6px;\n  text-align: center;\n}\n\n.result-label {\n  display: block;\n  font-size: 0.75rem;\n  color: #a0aec0;\n  margin-bottom: 0.25rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.result-value {\n  display: block;\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #68d391;\n}\n\n/* Analysis Container Styles */\n.analysis-container {\n  margin-top: 1rem;\n  padding: 1rem 0.5rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n/* Animation Styles */\n.spin {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .cable-details-container {\n    padding: 0.75rem;\n  }\n  \n  .cable-title h1 {\n    font-size: 1.1rem;\n  }\n  \n  .card-header {\n    padding: 0.5rem 0.75rem;\n  }\n  \n  .card-content {\n    padding: 0.75rem;\n  }\n}\n</style>","import script from \"./CableViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CableViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./CableViewer.vue?vue&type=style&index=0&id=18fbfaec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-18fbfaec\"]])\n\nexport default __exports__","<template>\n  <!-- Consent modal -->\n  <VueFinalModal v-model=\"showConsent\" :clickToClose=\"false\" :styles=\"modalStyles\">\n  <div class=\"modal-overlay\"></div>\n  <div class=\"modal-content consent-modal-content\">\n    <!-- Show both languages -->\n<div class=\"language-section\">\n  <h2>Einverständniserklärung zur Aufzeichnung</h2>\n  <p>\n    Im Rahmen einer Studie der TU Darmstadt wird dieses Dashboard evaluiert.\n    Dabei werden Ihre anonymisierten Interaktionen auf der Webseite mit dem Open-Source-Tool „OpenReplay\" aufgezeichnet, \n    um die Benutzbarkeit zu verbessern. Es werden keine IP-Adressen, Zeitstempel oder persönliche Daten gespeichert.\n    Sie können die Teilnahme jederzeit abbrechen, indem Sie auf <span class=\"inline-abort-button\">✕</span> in der oberen rechten Ecke der Karte klicken. \n    In diesem Fall werden alle erhobenen Session-Daten gelöscht.\n    Ihre Einwilligung ist freiwillig und Sie können selbst entscheiden, ob Sie teilnehmen möchten.\n  </p>\n</div>\n\n<div class=\"language-section\">\n  <h2>Consent for Session Recording</h2>\n  <p>\n    As part of a study conducted by TU Darmstadt, this dashboard is being evaluated.\n    Your anonymized interactions on the site may be recorded using the open-source tool \"OpenReplay\" to help improve usability.\n    No IP addresses, timestamps, or personal data are stored. You may withdraw at any time by clicking the <span class=\"inline-abort-button\">✕</span> button \n    in the top-right corner of the map, and all collected session data will be deleted. \n    Your participation is voluntary and you decide whether to consent.\n  </p>\n</div>\n\n    <div class=\"button-container\">\n      <button class=\"consent-button\" @click=\"acceptTracking\">\n        Einverstanden & Fortfahren / Accept & Continue\n      </button>\n      <button class=\"consent-button\" @click=\"declineTracking\">\n        Ablehnen / Decline\n      </button>\n    </div>\n  </div>\n</VueFinalModal>\n\n  <!-- Interactive functionality overview modal -->\n  <VueFinalModal\n    v-model=\"show\"\n    :clickToClose=\"false\"\n    :styles=\"modalStyles\"\n  >\n    <!-- Modal backdrop overlay -->\n    <div class=\"modal-overlay\" @click=\"closeModal\"></div>\n    \n    <!-- Main modal content -->\n    <div class=\"modal-content interactive-modal\">\n      <!-- Language picker widget -->\n      <div class=\"lang-picker-widget\">\n        <div class=\"lang-picker-container\">\n          <button \n            class=\"lang-picker-btn\"\n            @click=\"toggleLanguageDropdown\"\n            :title=\"getCurrentLanguageName()\"\n            :class=\"{ 'expanded': showLanguageDropdown }\"\n          >\n            <span class=\"globe-icon\">🌐</span>\n            <div class=\"lang-details\" :class=\"{ 'visible': showLanguageDropdown }\">\n              <span class=\"current-lang-code\">{{ currentLanguage.toUpperCase() }}</span>\n              <span class=\"current-lang-name\">{{ getCurrentLanguageName() }}</span>\n            </div>\n            <span class=\"expand-arrow\" :class=\"{ 'rotated': showLanguageDropdown }\">▼</span>\n          </button>\n          <div v-if=\"showLanguageDropdown\" class=\"lang-picker-menu\">\n            <button \n              v-for=\"lang in availableLanguages\" \n              :key=\"lang.code\"\n              @click=\"changeLanguage(lang.code)\"\n              :class=\"['lang-picker-option', { 'selected': currentLanguage === lang.code }]\"\n              :title=\"lang.name\"\n            >\n              <span class=\"option-lang-code\">{{ lang.code.toUpperCase() }}</span>\n              <span class=\"option-lang-name\">{{ lang.name }}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Modal header -->\n      <h2>{{ translations.welcomeOverview }}</h2>\n      <p>{{ translations.belowSummary }}</p>\n      \n      <!-- Step indicator -->\n      <div class=\"step-indicator\">\n        <div \n          v-for=\"(step, index) in steps\" \n          :key=\"index\"\n          class=\"step-dot\"\n          :class=\"{ active: currentStep === index }\"\n          @click=\"setCurrentStep(index)\"\n        >\n          {{ index + 1 }}\n        </div>\n      </div>\n      \n      <!-- GIF display area -->\n      <div class=\"gif-container\">\n        <img \n          :src=\"getCurrentGif()\" \n          :alt=\"getCurrentStepTitle()\"\n          class=\"step-gif\"\n          :key=\"currentStep\"\n        >\n      </div>\n      \n      <!-- Current step content -->\n      <div class=\"step-content\">\n        <div class=\"step-title\">\n          <span class=\"step-number-large\">{{ currentStep + 1 }}</span>\n          <h3>{{ getCurrentStepTitle() }}</h3>\n        </div>\n        <p class=\"step-description\">{{ getCurrentStepDescription() }}</p>\n      </div>\n      \n      <!-- Navigation buttons -->\n      <div class=\"navigation-buttons\">\n        <button \n          @click=\"previousStep\" \n          :disabled=\"currentStep === 0\"\n          class=\"nav-button prev-button\"\n        >\n          ← {{ translations.previous || 'Previous' }}\n        </button>\n        \n        <button \n          v-if=\"currentStep < steps.length - 1\"\n          @click=\"nextStep\" \n          class=\"nav-button next-button\"\n        >\n          {{ translations.next || 'Next' }} →\n        </button>\n        \n        <button \n          v-else\n          @click=\"closeModal\" \n          class=\"nav-button close-button-nav\"\n        >\n          {{ translations.getStarted || 'Get Started!' }}\n        </button>\n      </div>\n      \n      <!-- Close button (always available) -->\n      <button @click=\"closeModal\" class=\"close-button-x\">\n        ×\n      </button>\n    </div>\n  </VueFinalModal>\n</template>\n\n<script>\nimport { ref, computed, onMounted, provide } from 'vue';\nimport { VueFinalModal } from 'vue-final-modal';\nimport Tracker from '@openreplay/tracker';\n\nexport default {\n  name: 'FunctionalityOverview',\n  \n  components: {\n    VueFinalModal\n  },\n  \n  props: {\n    currentTranslations: {\n      type: Object,\n      required: true\n    },\n    currentLanguage: {\n      type: String,\n      required: true\n    }\n  },\n  \n  setup(props) {\n    // Modal visibility states\n    const show = ref(false);\n    const showConsent = ref(false);\n    const hasConsented = ref(false);\n    const tracker = ref(null);\n    const currentStep = ref(0);\n    const showLanguageDropdown = ref(false);\n\n    // Define the steps with their corresponding GIFs and content\n    const steps = [\n      {\n        gif: 'cables.gif',\n        titleKey: 'cableInteractionTitle',\n        descriptionKey: 'cableInteractionDesc'\n      },\n      {\n        gif: 'landingSite.gif',\n        titleKey: 'landingSiteTitle',\n        descriptionKey: 'landingSiteDesc'\n      },\n      {\n        gif: 'layers.gif',\n        titleKey: 'layerSwitchTitle',\n        descriptionKey: 'layerSwitchDesc'\n      },\n      {\n        gif: 'tools.gif',\n        titleKey: 'mapToolsTitle',\n        descriptionKey: 'mapToolsDesc'\n      }\n    ];\n\n    // Initialize OpenReplay tracker\n    const initializeTracker = () => {\n      tracker.value = new Tracker({\n        projectKey: 'eMRBZNonYJms799KwZqT',\n        ingestPoint: \"https://openreplay.dev.peasec.de/ingest\",\n        privateMode: false,\n        canvas: { disableCanvas: false, useAnimationFrame: true, fileExt: 'webp' },\n        resourceBaseHref: 'https://ubiquitous-hummingbird-229317.netlify.app',\n      });\n      \n      provide('openreplay-tracker', tracker.value);\n      window._trackerInstance = tracker.value;\n    };\n\n    // Start tracker if consented\n    const startTracker = () => {\n      if (tracker.value && !tracker.value.isActive()) {\n        try {\n          tracker.value.start();\n          console.log('[OpenReplay] Tracker started after consent');\n        } catch (error) {\n          console.error('[OpenReplay] Failed to start tracker:', error);\n        }\n      }\n    };\n\n    // Check for consent on mount\n    onMounted(() => {\n      initializeTracker();\n      \n      const consent = localStorage.getItem('openreplay-consent');\n      if (consent === 'true') {\n        hasConsented.value = true;\n        startTracker();\n        show.value = true;\n      } else {\n        showConsent.value = true;\n      }\n    });\n\n    // Consent handlers\n    const acceptTracking = () => {\n      localStorage.setItem('openreplay-consent', 'true');\n      hasConsented.value = true;\n      showConsent.value = false;\n      startTracker();\n      show.value = true;\n    };\n\n    const declineTracking = () => {\n      localStorage.setItem('openreplay-consent', 'false');\n      hasConsented.value = false;\n      showConsent.value = false;\n      show.value = true;\n    };\n\n    // Method to reset consent (useful for testing)\n    const resetConsent = () => {\n      localStorage.removeItem('openreplay-consent');\n      hasConsented.value = false;\n      showConsent.value = true;\n      show.value = false;\n      if (tracker.value && tracker.value.isActive()) {\n        tracker.value.stop();\n      }\n    };\n\n    // Modal handlers\n    const closeModal = () => {\n      show.value = false;\n      currentStep.value = 0; // Reset to first step\n      showLanguageDropdown.value = false;\n    };\n\n    const openModal = () => {\n      show.value = true;\n      currentStep.value = 0; // Start from first step\n    };\n\n    // Step navigation\n    const nextStep = () => {\n      if (currentStep.value < steps.length - 1) {\n        currentStep.value++;\n      }\n    };\n\n    const previousStep = () => {\n      if (currentStep.value > 0) {\n        currentStep.value--;\n      }\n    };\n\n    const setCurrentStep = (stepIndex) => {\n      if (stepIndex >= 0 && stepIndex < steps.length) {\n        currentStep.value = stepIndex;\n      }\n    };\n\n    // Get current step data\n    const getCurrentGif = () => {\n      return require(`@/assets/functionalityOverview/${steps[currentStep.value].gif}`);\n    };\n\n    const getCurrentStepTitle = () => {\n      const titleKey = steps[currentStep.value].titleKey;\n      return translations.value[titleKey] || getDefaultTitle(currentStep.value);\n    };\n\n    const getCurrentStepDescription = () => {\n      const descKey = steps[currentStep.value].descriptionKey;\n      return translations.value[descKey] || getDefaultDescription(currentStep.value);\n    };\n\n    // Default content fallbacks\n    const getDefaultTitle = (stepIndex) => {\n      const titles = [\n        'Cable Interaction',\n        'Landing Site Information',\n        'Layer Management',\n        'Map Tools'\n      ];\n      return titles[stepIndex] || 'Step';\n    };\n\n    const getDefaultDescription = (stepIndex) => {\n  const descriptions = [\n    'Click on any cable to view detailed information about that specific cable in the sidebar.',\n    'Click on landing sites to explore detailed data and information about specific locations.',\n    'Switch between different layers and overlays to inspect various types of data like fishing activity, ocean depth, gas pipelines, and more.',\n    'Explore the tools in the top-left corner: switch languages, change cable data sources, and use the distance measuring tool to calculate distances between points on the map.' // Updated description\n  ];\n  return descriptions[stepIndex] || 'Step description';\n};\n\n    // Language management\n    const currentLanguage = ref(props.currentLanguage || 'en');\n    const availableLanguages = [\n      { code: 'en', name: 'English' },\n      { code: 'de', name: 'Deutsch' },\n      { code: 'es', name: 'Español' },\n      { code: 'fr', name: 'Français' },\n      { code: 'it', name: 'Italiano' },\n      { code: 'zh', name: '中文' }\n    ];\n\n    // Built-in translations\n    const builtInTranslations = {\n  en: {\n    welcomeOverview: 'Welcome to the SDCS Dashboard!',\n    belowSummary: 'Learn how to use the core functionalities:',\n    cableInteractionTitle: 'Cable Interaction',\n    landingSiteTitle: 'Landing Site Information',\n    layerSwitchTitle: 'Layer Management',\n    mapToolsTitle: 'Map Tools',\n    cableInteractionDesc: 'Click on any cable to view detailed information about that specific cable in the sidebar.',\n    landingSiteDesc: 'Click on landing sites to explore detailed data and information about specific locations.',\n    layerSwitchDesc: 'Switch between different layers and overlays to inspect various types of data like fishing activity, ocean depth, gas pipelines, and more.',\n    mapToolsDesc: 'Explore the tools in the top-left corner: switch languages, change cable data sources, and use the distance measuring tool to calculate distances between points on the map.', // Updated description\n    previous: 'Previous',\n    next: 'Next',\n    getStarted: 'Get Started!',\n    close: 'Close',\n    language: 'Language'\n  },\n  de: {\n    welcomeOverview: 'Willkommen zum SDCS Dashboard!',\n    belowSummary: 'Lernen Sie, wie Sie die Kernfunktionen verwenden:',\n    cableInteractionTitle: 'Kabel-Interaktion',\n    landingSiteTitle: 'Landeplatz-Informationen',\n    layerSwitchTitle: 'Layer-Verwaltung',\n    mapToolsTitle: 'Karten-Werkzeuge',\n    cableInteractionDesc: 'Klicken Sie auf ein Kabel, um detaillierte Informationen über dieses spezifische Kabel in der Seitenleiste anzuzeigen.',\n    landingSiteDesc: 'Klicken Sie auf Landeplätze, um detaillierte Daten und Informationen über bestimmte Standorte zu erkunden.',\n    layerSwitchDesc: 'Wechseln Sie zwischen verschiedenen Layern und Overlays, um verschiedene Datentypen wie Fischereiaktivitäten, Meerestiefendaten, Gaspipelines und mehr zu untersuchen.',\n    mapToolsDesc: 'Entdecken Sie die Werkzeuge in der oberen linken Ecke: Sprachen wechseln, Kabeldatenquellen ändern und das Entfernungsmesswerkzeug verwenden, um Entfernungen zwischen Punkten auf der Karte zu berechnen.', // Updated description\n    previous: 'Zurück',\n    next: 'Weiter',\n    getStarted: 'Los geht\\'s!',\n    close: 'Schließen',\n    language: 'Sprache'\n  },\n  es: {\n    welcomeOverview: '¡Bienvenido al Panel SDCS!',\n    belowSummary: 'Aprende a usar las funcionalidades principales:',\n    cableInteractionTitle: 'Interacción con Cables',\n    landingSiteTitle: 'Información de Sitios de Aterrizaje',\n    layerSwitchTitle: 'Gestión de Capas',\n    mapToolsTitle: 'Herramientas del Mapa',\n    cableInteractionDesc: 'Haz clic en cualquier cable para ver información detallada sobre ese cable específico en la barra lateral.',\n    landingSiteDesc: 'Haz clic en los sitios de aterrizaje para explorar datos detallados e información sobre ubicaciones específicas.',\n    layerSwitchDesc: 'Cambia entre diferentes capas y superposiciones para inspeccionar varios tipos de datos como actividad pesquera, datos de profundidad oceánica, gasoductos y más.',\n    mapToolsDesc: 'Explora las herramientas en la esquina superior izquierda: cambiar idiomas, modificar fuentes de datos de cables y usar la herramienta de medición de distancia para calcular distancias entre puntos en el mapa.', // Updated description\n    previous: 'Anterior',\n    next: 'Siguiente',\n    getStarted: '¡Comenzar!',\n    close: 'Cerrar',\n    language: 'Idioma'\n  },\n  fr: {\n    welcomeOverview: 'Bienvenue sur le Tableau de Bord SDCS !',\n    belowSummary: 'Apprenez à utiliser les fonctionnalités principales :',\n    cableInteractionTitle: 'Interaction avec les Câbles',\n    landingSiteTitle: 'Informations sur les Sites d\\'Atterrissage',\n    layerSwitchTitle: 'Gestion des Couches',\n    mapToolsTitle: 'Outils de Carte',\n    cableInteractionDesc: 'Cliquez sur n\\'importe quel câble pour voir des informations détaillées sur ce câble spécifique dans la barre latérale.',\n    landingSiteDesc: 'Cliquez sur les sites d\\'atterrissage pour explorer des données détaillées et des informations sur des emplacements spécifiques.',\n    layerSwitchDesc: 'Basculez entre différentes couches et superpositions pour inspecter divers types de données comme l\\'activité de pêche, les données de profondeur océanique, les gazoducs, et plus encore.',\n    mapToolsDesc: 'Explorez les outils dans le coin supérieur gauche : changer de langue, modifier les sources de données de câbles et utiliser l\\'outil de mesure de distance pour calculer les distances entre différents points sur la carte.', // Updated description\n    previous: 'Précédent',\n    next: 'Suivant',\n    getStarted: 'Commencer !',\n    close: 'Fermer',\n    language: 'Langue'\n  },\n  it: {\n    welcomeOverview: 'Benvenuto nella Dashboard SDCS!',\n    belowSummary: 'Impara ad usare le funzionalità principali:',\n    cableInteractionTitle: 'Interazione con i Cavi',\n    landingSiteTitle: 'Informazioni sui Siti di Atterraggio',\n    layerSwitchTitle: 'Gestione dei Livelli',\n    mapToolsTitle: 'Strumenti della Mappa',\n    cableInteractionDesc: 'Clicca su qualsiasi cavo per visualizzare informazioni dettagliate su quel cavo specifico nella barra laterale.',\n    landingSiteDesc: 'Clicca sui siti di atterraggio per esplorare dati dettagliati e informazioni su ubicazioni specifiche.',\n    layerSwitchDesc: 'Passa tra diversi livelli e sovrapposizioni per ispezionare vari tipi di dati come attività di pesca, dati di profondità oceanica, gasdotti e altro ancora.',\n    mapToolsDesc: 'Esplora gli strumenti nell\\'angolo in alto a sinistra: cambiare lingua, modificare le fonti dei dati dei cavi e usare lo strumento di misurazione distanza per calcolare le distanze tra diversi punti sulla mappa.', // Updated description\n    previous: 'Precedente',\n    next: 'Successivo',\n    getStarted: 'Inizia!',\n    close: 'Chiudi',\n    language: 'Lingua'\n  },\n  zh: {\n    welcomeOverview: '欢迎使用SDCS仪表板！',\n    belowSummary: '学习如何使用核心功能：',\n    cableInteractionTitle: '电缆交互',\n    landingSiteTitle: '登陆站点信息',\n    layerSwitchTitle: '图层管理',\n    mapToolsTitle: '地图工具',\n    cableInteractionDesc: '点击任何电缆以在侧边栏中查看该特定电缆的详细信息。',\n    landingSiteDesc: '点击登陆站点以探索特定位置的详细数据和信息。',\n    layerSwitchDesc: '在不同的图层和叠加层之间切换，以检查各种类型的数据，如渔业活动、海洋深度数据、天然气管道等。',\n    mapToolsDesc: '探索左上角的工具：切换语言、更改电缆数据源，以及使用距离测量工具计算地图上不同点之间的距离。', // Updated description\n    previous: '上一步',\n    next: '下一步',\n    getStarted: '开始使用！',\n    close: '关闭',\n    language: '语言'\n  }\n};\n\n    // Language dropdown functions\n    const toggleLanguageDropdown = () => {\n      showLanguageDropdown.value = !showLanguageDropdown.value;\n    };\n\n    const getCurrentLanguageName = () => {\n      const lang = availableLanguages.find(l => l.code === currentLanguage.value);\n      return lang ? lang.name : 'English';\n    };\n\n    // Language change handler\n    const changeLanguage = (langCode) => {\n      currentLanguage.value = langCode;\n      showLanguageDropdown.value = false;\n    };\n\n    // Computed translations with fallback values\n    const translations = computed(() => {\n      const current = builtInTranslations[currentLanguage.value] || builtInTranslations.en;\n      return {\n        ...current,\n      };\n    });\n    \n    // Modal styling configuration\n    const modalStyles = {\n      overlay: {\n        zIndex: 1000,\n      },\n      content: {\n        zIndex: 1001,\n      },\n    };\n    \n    return {\n      show,\n      showConsent,\n      hasConsented,\n      currentStep,\n      steps,\n      currentLanguage,\n      availableLanguages,\n      showLanguageDropdown,\n      translations,\n      modalStyles,\n      acceptTracking,\n      declineTracking,\n      resetConsent,\n      closeModal,\n      openModal,\n      nextStep,\n      previousStep,\n      setCurrentStep,\n      getCurrentGif,\n      getCurrentStepTitle,\n      getCurrentStepDescription,\n      toggleLanguageDropdown,\n      getCurrentLanguageName,\n      changeLanguage\n    };\n  },\n}\n</script>\n\n<style scoped>\n/* Close X button */\n.inline-abort-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #dc3545;\n  color: white;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  font-weight: bold;\n  font-size: 12px;\n  margin: 0 2px;\n  vertical-align: middle;\n  transition: background-color 0.3s ease;\n}\n\n.inline-abort-button:hover {\n  background-color: #c82333;\n}\n.close-button-x {\n  position: absolute;\n  top: 15px;\n  right: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 50%;\n  width: 35px;\n  height: 35px;\n  font-size: 18px;\n  color: #cbd5e0;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  z-index: 10;\n}\n\n.close-button-x:hover {\n  background: rgba(245, 101, 101, 0.2);\n  color: #fc8181;\n  border-color: rgba(245, 101, 101, 0.3);\n  transform: scale(1.05);\n}\n\n/* Modal overlay styles */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 110%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n}\n\n/* Modal content styles */\n.modal-content {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border-radius: 20px;\n  z-index: 1001;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  width: 80%;\n  max-width: 900px;\n  max-height: 95vh;\n  overflow: hidden;\n  backdrop-filter: blur(20px);\n  display: flex;\n  flex-direction: column;\n  min-height: auto;\n}\n\n.modal-body {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.consent-modal-content {\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border-radius: 20px;\n  z-index: 1001;\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  width: 80%;\n  max-width: 700px; \n  max-height: 80vh; \n  overflow-y: auto;\n  backdrop-filter: blur(20px);\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: #e2e8f0;\n}\n\n/* Interactive modal specific styles */\n.interactive-modal {\n  text-align: center;\n  color: white;\n}\n\n.interactive-modal h2 {\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin-bottom: 0.3rem;\n}\n\n.interactive-modal p {\n  color: #cbd5e0;\n  font-size: 0.95rem;\n  margin-bottom: 1rem;\n}\n\n/* Language picker widget - completely new naming */\n.lang-picker-widget {\n  position: absolute;\n  top: 1rem;\n  left: 1rem;\n  z-index: 15;\n}\n\n.lang-picker-container {\n  position: relative;\n}\n\n.lang-picker-btn {\n  display: flex !important;\n  align-items: center !important;\n  gap: 0.5rem !important;\n  padding: 0.5rem !important;\n  background: rgba(255, 255, 255, 0.05) !important;\n  border: 1px solid rgba(255, 255, 255, 0.1) !important;\n  border-radius: 8px !important;\n  color: #cbd5e0 !important;\n  cursor: pointer !important;\n  transition: all 0.3s ease !important;\n  min-width: 40px !important;\n  justify-content: center !important;\n  outline: none !important;\n}\n\n.lang-picker-btn:hover,\n.lang-picker-btn.expanded {\n  background: rgba(99, 179, 237, 0.1) !important;\n  border-color: rgba(99, 179, 237, 0.3) !important;\n  transform: translateY(-1px) !important;\n  min-width: 130px !important;\n  justify-content: flex-start !important;\n}\n\n.globe-icon {\n  font-size: 1rem !important;\n  flex-shrink: 0 !important;\n}\n\n.lang-details {\n  display: flex !important;\n  align-items: center !important;\n  gap: 0.5rem !important;\n  opacity: 0 !important;\n  width: 0 !important;\n  overflow: hidden !important;\n  transition: all 0.3s ease !important;\n}\n\n.lang-picker-btn:hover .lang-details,\n.lang-picker-btn.expanded .lang-details,\n.lang-details.visible {\n  opacity: 1 !important;\n  width: auto !important;\n}\n\n.current-lang-code {\n  font-size: 0.75rem !important;\n  font-weight: 600 !important;\n  white-space: nowrap !important;\n}\n\n.current-lang-name {\n  font-size: 0.7rem !important;\n  opacity: 0.8 !important;\n  white-space: nowrap !important;\n}\n\n.expand-arrow {\n  font-size: 0.6rem !important;\n  transition: transform 0.3s ease !important;\n  opacity: 0 !important;\n  flex-shrink: 0 !important;\n}\n\n.lang-picker-btn:hover .expand-arrow,\n.lang-picker-btn.expanded .expand-arrow,\n.expand-arrow.rotated {\n  opacity: 1 !important;\n}\n\n.expand-arrow.rotated {\n  transform: rotate(180deg) !important;\n}\n\n.lang-picker-menu {\n  position: absolute !important;\n  top: 100% !important;\n  left: 0 !important;\n  right: 0 !important;\n  background: rgba(26, 32, 44, 0.95) !important;\n  border: 1px solid rgba(255, 255, 255, 0.1) !important;\n  border-radius: 8px !important;\n  backdrop-filter: blur(20px) !important;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3) !important;\n  z-index: 100 !important;\n  margin-top: 0.25rem !important;\n  max-height: 200px !important;\n  overflow-y: auto !important;\n  min-width: 150px !important;\n}\n\n.lang-picker-option {\n  display: flex !important;\n  align-items: center !important;\n  justify-content: space-between !important;\n  padding: 0.5rem 0.75rem !important;\n  background: transparent !important;\n  border: none !important;\n  color: #cbd5e0 !important;\n  cursor: pointer !important;\n  transition: all 0.3s ease !important;\n  width: 100% !important;\n  text-align: left !important;\n  outline: none !important;\n}\n\n.lang-picker-option:hover {\n  background: rgba(99, 179, 237, 0.1) !important;\n  color: #63b3ed !important;\n}\n\n.lang-picker-option.selected {\n  background: rgba(99, 179, 237, 0.2) !important;\n  color: #63b3ed !important;\n}\n\n.option-lang-code {\n  font-size: 0.75rem !important;\n  font-weight: 600 !important;\n}\n\n.option-lang-name {\n  font-size: 0.7rem !important;\n  opacity: 0.8 !important;\n}\n\n/* Language sections in consent modal */\n.language-section {\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #e0e0e0;\n  color: #e2e8f0;\n}\n\n.language-section:last-of-type {\n  border-bottom: none;\n  margin-bottom: 15px;\n}\n\n.language-section h2 {\n  color: #63b3ed !important;\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-size: 1.3rem;\n  font-weight: 700;\n  margin-bottom: 0.75rem;\n}\n\n.language-section p {\n  color: #cbd5e0 !important;\n  font-size: 0.9rem;\n  line-height: 1.5;\n  margin: 0; \n}\n\n/* Step indicator */\n.step-indicator {\n  display: flex;\n  justify-content: center;\n  margin: 0rem 0 0.5rem 0;\n  gap: 12px;\n}\n\n.step-dot {\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.1);\n  color: #a0aec0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  font-size: 0.9rem;\n}\n\n.step-dot.active {\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  color: white;\n  transform: scale(1.1);\n  border-color: #63b3ed;\n  box-shadow: 0 0 15px rgba(99, 179, 237, 0.4);\n}\n\n.step-dot:hover:not(.active) {\n  background: rgba(99, 179, 237, 0.2);\n  color: #63b3ed;\n  border-color: rgba(99, 179, 237, 0.3);\n  transform: scale(1.05);\n}\n\n/* GIF container - Made larger */\n.gif-container {\n  margin: 0.5rem 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 380px;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  position: relative;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.gif-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n}\n\n.step-gif {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  border-radius: 10px;\n  transition: all 0.3s ease;\n}\n\n.step-gif:hover {\n  transform: scale(1.01);\n}\n\n/* Step content - Made more compact */\n.step-content {\n  margin: 0.25rem 0;\n  text-align: left;\n  padding: 0.5rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 70px;\n}\n\n.step-title {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.25rem; \n}\n\n.step-number-large {\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  color: white;\n  border-radius: 50%;\n  width: 25px; \n  height: 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px; \n  font-weight: bold;\n  margin-right: 10px;\n  box-shadow: 0 4px 15px rgba(99, 179, 237, 0.3);\n  flex-shrink: 0;\n}\n\n.step-title h3 {\n  margin: 0;\n  color: white;\n  font-size: 0.9rem;\n  font-weight: 600;\n}\n\n.step-description {\n  font-size: 0.75rem;\n  line-height: 1.3;\n  color: #cbd5e0;\n  margin-left: 35px;\n}\n\n/* Navigation buttons - Made more compact */\n.navigation-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  flex-shrink: 0;\n  padding-top: 0.5rem;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  margin-top: auto;\n  position: sticky;\n  bottom: 0;\n  z-index: 10;\n}\n\n.nav-button {\n  padding: 6px 16px;\n  border: none;\n  border-radius: 6px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  min-width: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.3rem;\n}\n\n.prev-button {\n  background: rgba(255, 255, 255, 0.1);\n  color: #cbd5e0;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.prev-button:hover:not(:disabled) {\n  background: rgba(255, 255, 255, 0.15);\n  color: white;\n  transform: translateX(-2px);\n}\n\n.prev-button:disabled {\n  background: rgba(255, 255, 255, 0.05);\n  color: #4a5568;\n  cursor: not-allowed;\n  border-color: rgba(255, 255, 255, 0.1);\n}\n\n.next-button, .close-button-nav {\n  background: linear-gradient(135deg, #4299e1, #3182ce);\n  color: white;\n  border: 1px solid #4299e1;\n}\n\n.next-button:hover, .close-button-nav:hover {\n  background: linear-gradient(135deg, #3182ce, #2c5282);\n  transform: translateX(2px);\n  box-shadow: 0 4px 12px rgba(66, 153, 225, 0.4);\n}\n\n.close-button-nav {\n  background: linear-gradient(135deg, #48bb78, #38a169);\n  border-color: #48bb78;\n}\n\n.close-button-nav:hover {\n  background: linear-gradient(135deg, #38a169, #2f855a);\n  transform: scale(1.02);\n  box-shadow: 0 4px 12px rgba(72, 187, 120, 0.4);\n}\n\n/* Button container for consent modal */\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n  margin-bottom: 0;\n  gap: 16px;\n  flex-wrap: wrap;\n}\n\n/* Consent button styling */\n.consent-button {\n  flex: 1;\n  min-width: 200px;\n  padding: 15px 25px;\n  background: linear-gradient(135deg, #4299e1, #3182ce);\n  color: white;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  white-space: normal;\n  text-align: center;\n}\n\n.consent-button:hover {\n  background: linear-gradient(135deg, #3182ce, #2c5282);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(66, 153, 225, 0.4);\n}\n\n.consent-button:first-child {\n  background: linear-gradient(135deg, #48bb78, #38a169);\n}\n\n.consent-button:first-child:hover {\n  background: linear-gradient(135deg, #38a169, #2f855a);\n  box-shadow: 0 4px 15px rgba(72, 187, 120, 0.4);\n}\n\n.consent-button:last-child {\n  background: linear-gradient(135deg, #f56565, #e53e3e);\n}\n\n.consent-button:last-child:hover {\n  background: linear-gradient(135deg, #e53e3e, #c53030);\n  box-shadow: 0 4px 15px rgba(245, 101, 101, 0.4);\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .modal-content {\n    width: 95%;\n    padding: 1rem;\n    height: 90vh;\n  }\n  \n  .interactive-modal h2 {\n    font-size: 1.3rem;\n  }\n  \n  .interactive-modal p {\n    font-size: 0.85rem;\n  }\n  \n  .step-indicator {\n    gap: 8px;\n    margin: 0.5rem 0;\n  }\n  \n  .step-dot {\n    width: 30px;\n    height: 30px;\n    font-size: 0.8rem;\n  }\n  \n  .navigation-buttons {\n    flex-direction: column;\n    gap: 8px;\n    padding-top: 0.4rem;\n  }\n  \n  .nav-button {\n    width: 100%;\n    min-width: auto;\n    padding: 6px 12px;\n    font-size: 0.75rem;\n  }\n  \n  .step-description {\n    margin-left: 0;\n    font-size: 0.7rem;\n  }\n  \n  .step-title {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 6px;\n  }\n  \n  .step-number-large {\n    margin-right: 0;\n    width: 22px;\n    height: 22px;\n    font-size: 11px;\n  }\n  \n  .step-title h3 {\n    font-size: 0.85rem;\n  }\n  \n  .lang-picker-container {\n    position: static !important;\n  }\n  \n  .lang-picker-menu {\n    position: fixed !important;\n    top: 50% !important;\n    left: 50% !important;\n    transform: translate(-50%, -50%) !important;\n    width: 200px !important;\n    max-height: 300px !important;\n  }\n  \n  .gif-container {\n    height: 280px;\n    margin: 0.3rem 0;\n  }\n  \n  .close-button-x {\n    top: 10px;\n    right: 15px;\n    width: 30px;\n    height: 30px;\n    font-size: 16px;\n  }\n  \n  .step-content {\n    padding: 0.4rem;\n    margin: 0.2rem 0;\n    min-height: 60px;\n  }\n  \n  .lang-picker-widget {\n    top: 0.75rem !important;\n    left: 0.75rem !important;\n  }\n}\n\n@media (max-width: 480px) {\n  .modal-content {\n    width: 98%;\n    padding: 0.75rem;\n    height: 92vh;\n  }\n  \n  .step-content {\n    padding: 0.3rem;\n    min-height: 50px;\n  }\n  \n  .gif-container {\n    height: 240px;\n  }\n  \n  .lang-picker-widget {\n    position: static !important;\n    justify-content: center !important;\n    margin-bottom: 0.5rem !important;\n    padding: 0.5rem !important;\n    background: rgba(255, 255, 255, 0.05) !important;\n    border-radius: 8px !important;\n  }\n  \n  .navigation-buttons {\n    gap: 6px;\n  }\n  \n  .nav-button {\n    padding: 5px 10px;\n    font-size: 0.7rem;\n  }\n  \n  .step-description {\n    font-size: 0.65rem;\n    line-height: 1.2;\n  }\n}\n@media (max-height: 700px) {\n  .modal-content {\n    height: 90vh;\n    max-height: 90vh;\n    padding: 1rem;\n  }\n  \n  .gif-container {\n    height: 250px; \n  }\n  \n  .step-content {\n    min-height: 50px;\n    padding: 0.4rem;\n  }\n  \n  .interactive-modal h2 {\n    font-size: 1.3rem;\n    margin-bottom: 0.5rem;\n  }\n  \n  .interactive-modal p {\n    font-size: 0.85rem;\n    margin-bottom: 0.75rem;\n  }\n}\n@media (max-width: 768px) {\n  .consent-modal-content {\n    width: 95%;\n    padding: 1.25rem;\n    max-height: 85vh;\n  }\n  \n  .language-section h2 {\n    font-size: 1.2rem;\n  }\n  \n  .language-section p {\n    font-size: 0.85rem;\n  }\n  \n  .button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: auto;\n  gap: 16px;\n  flex-wrap: wrap;\n  flex-shrink: 0;\n  padding-top: 1rem;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  position: sticky;\n  bottom: 0;\n}\n  \n  .consent-button {\n    min-width: auto;\n    width: 100%;\n  }\n}\n\n@media (max-width: 480px) {\n  .consent-modal-content {\n    width: 98%;\n    padding: 1rem;\n    max-height: 90vh;\n  }\n  \n  .language-section h2 {\n    font-size: 1.1rem;\n  }\n  \n  .language-section p {\n    font-size: 0.8rem;\n    line-height: 1.4;\n  }\n}\n</style>","import { render } from \"./FunctionalityOverview.vue?vue&type=template&id=2be6ab98&scoped=true\"\nimport script from \"./FunctionalityOverview.vue?vue&type=script&lang=js\"\nexport * from \"./FunctionalityOverview.vue?vue&type=script&lang=js\"\n\nimport \"./FunctionalityOverview.vue?vue&type=style&index=0&id=2be6ab98&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2be6ab98\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"layer-manager\" }\n\nimport { ref, watch, computed, onBeforeUnmount } from 'vue';\n  import L from 'leaflet';\n  import { LControlLayers } from '@vue-leaflet/vue-leaflet';\n  import layerTranslations from \"@/assets/translations/layerTranslations.json\";\n  \n  // ======================\n  // === TYPE DEFINITIONS ===\n  // ======================\n  \n  interface Props {\n    mapInstance: L.Map | null;\n    currentLanguage: string;\n    currentTranslations: any;\n    clusteredDataCentersRef: any;\n    resetMapLayer: L.LayerGroup | null;\n  }\n  \n  // ======================\n  // === PROPS & EMITS ===\n  // ======================\n  \n  \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LayerManager',\n  props: {\n    mapInstance: {},\n    currentLanguage: {},\n    currentTranslations: {},\n    clusteredDataCentersRef: {},\n    resetMapLayer: {}\n  },\n  emits: [\"layerControlReady\", \"resetMap\"],\n  setup(__props: any, { expose: __expose, emit: __emit }) {\n\n  const props = __props;\n  \n  const emit = __emit;\n  \n  // ======================\n  // === REACTIVE STATE ===\n  // ======================\n  \n  const layerControl = ref<any>(null);\n  let controlInstance: L.Control.Layers | null = null;\n  let mtLayer: any = null;\n  const resetMapButton = ref<HTMLDivElement | null>(null);\n  \n  // ======================\n  // === COMPUTED PROPERTIES ===\n  // ======================\n  \n  /**\n   * Gets translated layer name based on current language\n   */\n  const getLayerTranslation = (layerName: string): string => {\n    if (layerTranslations[props.currentLanguage] && layerTranslations[props.currentLanguage][layerName]) {\n      return layerTranslations[props.currentLanguage][layerName];\n    }\n    console.log(\"TRANSLATION NOT FOUND FOR: \", layerName);\n    return layerName;\n  };\n  \n  // ======================\n  // === LAYER CONTROL METHODS ===\n  // ======================\n  \n  /**\n   * Initializes layer control when ready\n   */\n  const onLayerControlReady = (controlIns: L.Control.Layers) => {\n    controlInstance = controlIns;\n    \n    // Add Reset Map functionality\n    setupResetMapControl();\n  \n    // Add Data Centers layer if available\n    if (props.clusteredDataCentersRef?.dataCenterLayer) {\n      controlInstance.addOverlay(props.clusteredDataCentersRef.dataCenterLayer, 'Data Centers');\n    }\n  \n    updateLayerControlNames();\n    emit('layerControlReady', controlInstance);\n  };\n  \n  /**\n   * Sets up custom reset map control button\n   */\n   const setupResetMapControl = () => {\n    if (!props.resetMapLayer) return;\n    const resetMapContainer = document.createElement('div');\n    resetMapContainer.className = 'reset-map-container hidden';\n\n    const button = document.createElement('div');\n    button.className = 'reset-map-button';\n   button.textContent = getLayerTranslation(\"Reset Map\");\n  \n    // Store the button reference\n    resetMapButton.value = button;\n\n    resetMapContainer.appendChild(button);\n\n    const layerControlContainer = controlInstance?.getContainer();\n    if (layerControlContainer) {\n     layerControlContainer.appendChild(resetMapContainer);\n      button.addEventListener('click', () => emit('resetMap'));\n    }\n  };\n  \n  /**\n   * Updates all layer names with current language translations\n   */\n   const updateLayerControlNames = () => {\n  if (!controlInstance) return;\n\n  // Update layer names\n  (controlInstance as any)._layers.forEach((layerObj: any) => {\n    if (layerObj.originalName == null) layerObj.originalName = layerObj.name;\n    const translatedName = getLayerTranslation(layerObj.originalName);\n    layerObj.name = translatedName;\n  });\n  (controlInstance as any)._update();\n\n  // Update reset button text if it exists\n  if (resetMapButton.value) {\n    resetMapButton.value.textContent = getLayerTranslation(\"Reset Map\");\n  }\n};\n  \n  // ======================\n  // === BASE LAYER MANAGEMENT ===\n  // ======================\n  \n  /**\n   * Initializes base map layers\n   */\n  const initializeBaseLayers = () => {\n    if (!props.mapInstance) return;\n  \n    mtLayer = new (L as any).MaptilerLayer({\n      apiKey: \"fpBo6pC8RABDYTlWtD7U\",\n      language: (L as any).MaptilerLanguage[props.currentLanguage],\n      style: (L as any).MaptilerStyle.DATAVIZ,\n      name: \"Ocean Depth\",\n      layertype: \"base\",\n    });\n    mtLayer.addTo(props.mapInstance);\n  };\n  \n  /**\n   * Changes language of base map layers\n   */\n  const changeLanguage = (language: string) => {\n    if (props.mapInstance && mtLayer) {\n      mtLayer.setLanguage((L as any).MaptilerLanguage[language]);\n      updateLayerControlNames();\n    }\n  };\n  \n  // ======================\n  // === OVERLAY MANAGEMENT ===\n  // ======================\n  \n  /**\n   * Removes all overlay layers from map\n   */\n  const removeAllOverlays = () => {\n    if (!props.mapInstance || !controlInstance) {\n      console.warn('Map instance or control instance not available');\n      return;\n    }\n  \n    // Remove all overlay layers from the map\n    (controlInstance as any)._layers.forEach((layerObj: any) => {\n      if (layerObj.overlay && props.mapInstance!.hasLayer(layerObj.layer)) {\n        props.mapInstance!.removeLayer(layerObj.layer);\n      }\n    });\n  \n    // Uncheck all overlay layers in the layer control\n    if ((controlInstance as any)._layerControlInputs) {\n      (controlInstance as any)._layerControlInputs.forEach((input: any) => {\n        if (input.overlay) {\n          input.checked = false;\n        }\n      });\n    }\n  \n    (controlInstance as any)._update();\n  };\n  \n  /**\n   * Switches to specified base layer\n   */\n  const switchToBaseLayer = (layerName: string = \"Base Layer\") => {\n    if (!controlInstance || !props.mapInstance) return;\n  \n    const baseLayer = (controlInstance as any)._layers.find((layer: any) => \n      !layer.overlay && layer.originalName === layerName\n    );\n  \n    if (baseLayer?.layer) {\n      // Remove current base layer\n      (controlInstance as any)._layers\n        .filter((layer: any) => !layer.overlay && props.mapInstance!.hasLayer(layer.layer))\n        .forEach((layer: any) => props.mapInstance!.removeLayer(layer.layer));\n      \n      // Add new base layer\n      props.mapInstance.addLayer(baseLayer.layer);\n      (controlInstance as any)._update();\n    }\n  };\n  \n  /**\n   * Adds overlay layer to control\n   */\n  const addOverlay = (layer: L.Layer, name: string) => {\n    controlInstance?.addOverlay(layer, name);\n  };\n  \n  /**\n   * Removes overlay layer from control\n   */\n  const removeOverlay = (layer: L.Layer) => {\n    controlInstance?.removeLayer(layer);\n  };\n  \n  // ======================\n  // === WATCHERS ===\n  // ======================\n  \n  watch(() => props.currentLanguage, (newLanguage) => {\n    changeLanguage(newLanguage);\n  });\n  \n  watch(() => props.mapInstance, (newMapInstance) => {\n    if (newMapInstance) {\n      initializeBaseLayers();\n    }\n  });\n\n  onBeforeUnmount(() => {\n  resetMapButton.value = null;\n});\n  \n  // ======================\n  // === EXPOSED METHODS ===\n  // ======================\n  \n  __expose({\n    controlInstance: computed(() => controlInstance),\n    updateLayerControlNames,\n    removeAllOverlays,\n    switchToBaseLayer,\n    addOverlay,\n    removeOverlay,\n    changeLanguage\n  });\n  \nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_unref(LControlLayers), {\n      ref_key: \"layerControl\",\n      ref: layerControl,\n      onReady: onLayerControlReady\n    }, null, 512)\n  ]))\n}\n}\n\n})","<!--\nLayerManager.vue - Map Layer Control Component\n\nProvides layer management functionality for the Leaflet map including:\n- Base layer switching\n- Overlay management\n- Layer translations\n- Reset map functionality\n\nFeatures:\n- Dynamic layer control with translations\n- Integration with MapTiler basemaps\n- Custom reset map functionality\n- Data center layer integration\n-->\n\n<template>\n    <div class=\"layer-manager\">\n      <!-- Leaflet Layer Control Component -->\n      <l-control-layers ref=\"layerControl\" @ready=\"onLayerControlReady\"></l-control-layers>\n    </div>\n  </template>\n  \n  <script setup lang=\"ts\">\n  import { ref, watch, computed, onBeforeUnmount } from 'vue';\n  import L from 'leaflet';\n  import { LControlLayers } from '@vue-leaflet/vue-leaflet';\n  import layerTranslations from \"@/assets/translations/layerTranslations.json\";\n  \n  // ======================\n  // === TYPE DEFINITIONS ===\n  // ======================\n  \n  interface Props {\n    mapInstance: L.Map | null;\n    currentLanguage: string;\n    currentTranslations: any;\n    clusteredDataCentersRef: any;\n    resetMapLayer: L.LayerGroup | null;\n  }\n  \n  // ======================\n  // === PROPS & EMITS ===\n  // ======================\n  \n  const props = defineProps<Props>();\n  \n  const emit = defineEmits<{\n    layerControlReady: [controlInstance: L.Control.Layers];\n    resetMap: [];\n  }>();\n  \n  // ======================\n  // === REACTIVE STATE ===\n  // ======================\n  \n  const layerControl = ref<any>(null);\n  let controlInstance: L.Control.Layers | null = null;\n  let mtLayer: any = null;\n  const resetMapButton = ref<HTMLDivElement | null>(null);\n  \n  // ======================\n  // === COMPUTED PROPERTIES ===\n  // ======================\n  \n  /**\n   * Gets translated layer name based on current language\n   */\n  const getLayerTranslation = (layerName: string): string => {\n    if (layerTranslations[props.currentLanguage] && layerTranslations[props.currentLanguage][layerName]) {\n      return layerTranslations[props.currentLanguage][layerName];\n    }\n    console.log(\"TRANSLATION NOT FOUND FOR: \", layerName);\n    return layerName;\n  };\n  \n  // ======================\n  // === LAYER CONTROL METHODS ===\n  // ======================\n  \n  /**\n   * Initializes layer control when ready\n   */\n  const onLayerControlReady = (controlIns: L.Control.Layers) => {\n    controlInstance = controlIns;\n    \n    // Add Reset Map functionality\n    setupResetMapControl();\n  \n    // Add Data Centers layer if available\n    if (props.clusteredDataCentersRef?.dataCenterLayer) {\n      controlInstance.addOverlay(props.clusteredDataCentersRef.dataCenterLayer, 'Data Centers');\n    }\n  \n    updateLayerControlNames();\n    emit('layerControlReady', controlInstance);\n  };\n  \n  /**\n   * Sets up custom reset map control button\n   */\n   const setupResetMapControl = () => {\n    if (!props.resetMapLayer) return;\n    const resetMapContainer = document.createElement('div');\n    resetMapContainer.className = 'reset-map-container hidden';\n\n    const button = document.createElement('div');\n    button.className = 'reset-map-button';\n   button.textContent = getLayerTranslation(\"Reset Map\");\n  \n    // Store the button reference\n    resetMapButton.value = button;\n\n    resetMapContainer.appendChild(button);\n\n    const layerControlContainer = controlInstance?.getContainer();\n    if (layerControlContainer) {\n     layerControlContainer.appendChild(resetMapContainer);\n      button.addEventListener('click', () => emit('resetMap'));\n    }\n  };\n  \n  /**\n   * Updates all layer names with current language translations\n   */\n   const updateLayerControlNames = () => {\n  if (!controlInstance) return;\n\n  // Update layer names\n  (controlInstance as any)._layers.forEach((layerObj: any) => {\n    if (layerObj.originalName == null) layerObj.originalName = layerObj.name;\n    const translatedName = getLayerTranslation(layerObj.originalName);\n    layerObj.name = translatedName;\n  });\n  (controlInstance as any)._update();\n\n  // Update reset button text if it exists\n  if (resetMapButton.value) {\n    resetMapButton.value.textContent = getLayerTranslation(\"Reset Map\");\n  }\n};\n  \n  // ======================\n  // === BASE LAYER MANAGEMENT ===\n  // ======================\n  \n  /**\n   * Initializes base map layers\n   */\n  const initializeBaseLayers = () => {\n    if (!props.mapInstance) return;\n  \n    mtLayer = new (L as any).MaptilerLayer({\n      apiKey: \"fpBo6pC8RABDYTlWtD7U\",\n      language: (L as any).MaptilerLanguage[props.currentLanguage],\n      style: (L as any).MaptilerStyle.DATAVIZ,\n      name: \"Ocean Depth\",\n      layertype: \"base\",\n    });\n    mtLayer.addTo(props.mapInstance);\n  };\n  \n  /**\n   * Changes language of base map layers\n   */\n  const changeLanguage = (language: string) => {\n    if (props.mapInstance && mtLayer) {\n      mtLayer.setLanguage((L as any).MaptilerLanguage[language]);\n      updateLayerControlNames();\n    }\n  };\n  \n  // ======================\n  // === OVERLAY MANAGEMENT ===\n  // ======================\n  \n  /**\n   * Removes all overlay layers from map\n   */\n  const removeAllOverlays = () => {\n    if (!props.mapInstance || !controlInstance) {\n      console.warn('Map instance or control instance not available');\n      return;\n    }\n  \n    // Remove all overlay layers from the map\n    (controlInstance as any)._layers.forEach((layerObj: any) => {\n      if (layerObj.overlay && props.mapInstance!.hasLayer(layerObj.layer)) {\n        props.mapInstance!.removeLayer(layerObj.layer);\n      }\n    });\n  \n    // Uncheck all overlay layers in the layer control\n    if ((controlInstance as any)._layerControlInputs) {\n      (controlInstance as any)._layerControlInputs.forEach((input: any) => {\n        if (input.overlay) {\n          input.checked = false;\n        }\n      });\n    }\n  \n    (controlInstance as any)._update();\n  };\n  \n  /**\n   * Switches to specified base layer\n   */\n  const switchToBaseLayer = (layerName: string = \"Base Layer\") => {\n    if (!controlInstance || !props.mapInstance) return;\n  \n    const baseLayer = (controlInstance as any)._layers.find((layer: any) => \n      !layer.overlay && layer.originalName === layerName\n    );\n  \n    if (baseLayer?.layer) {\n      // Remove current base layer\n      (controlInstance as any)._layers\n        .filter((layer: any) => !layer.overlay && props.mapInstance!.hasLayer(layer.layer))\n        .forEach((layer: any) => props.mapInstance!.removeLayer(layer.layer));\n      \n      // Add new base layer\n      props.mapInstance.addLayer(baseLayer.layer);\n      (controlInstance as any)._update();\n    }\n  };\n  \n  /**\n   * Adds overlay layer to control\n   */\n  const addOverlay = (layer: L.Layer, name: string) => {\n    controlInstance?.addOverlay(layer, name);\n  };\n  \n  /**\n   * Removes overlay layer from control\n   */\n  const removeOverlay = (layer: L.Layer) => {\n    controlInstance?.removeLayer(layer);\n  };\n  \n  // ======================\n  // === WATCHERS ===\n  // ======================\n  \n  watch(() => props.currentLanguage, (newLanguage) => {\n    changeLanguage(newLanguage);\n  });\n  \n  watch(() => props.mapInstance, (newMapInstance) => {\n    if (newMapInstance) {\n      initializeBaseLayers();\n    }\n  });\n\n  onBeforeUnmount(() => {\n  resetMapButton.value = null;\n});\n  \n  // ======================\n  // === EXPOSED METHODS ===\n  // ======================\n  \n  defineExpose({\n    controlInstance: computed(() => controlInstance),\n    updateLayerControlNames,\n    removeAllOverlays,\n    switchToBaseLayer,\n    addOverlay,\n    removeOverlay,\n    changeLanguage\n  });\n  </script>","import script from \"./LayerManager.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LayerManager.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\n  CableSourceSelector Component\n  \n  A dropdown component that allows users to switch between different cable data sources:\n  - Telegeography: Primary cable data source\n  - Mixed Sources: Alternative data from grouped cables JSON\n  \n  Features:\n  - Dropdown selection with hover states\n  - Tooltips for each source option\n  - Automatic cable data updating when source changes\n  - Preserves original data when switching back from mixed sources\n-->\n\n<template>\n  <div class=\"cable-source-selector\">\n    <!-- Main dropdown toggle button -->\n    <button @click.stop=\"toggleDropdown\" class=\"select-button\">\n      {{ currentTranslations.cableSource }}\n      <i :class=\"['arrow', isOpen ? 'up' : 'down']\"></i>\n    </button>\n\n    <!-- Dropdown options -->\n    <div v-if=\"isOpen\" class=\"dropdown\">\n      <!-- Telegeography source option -->\n      <div \n        class=\"dropdown-item\" \n        @mouseenter=\"currentHoveredItem = 'Telegeography'\" \n        @mouseleave=\"currentHoveredItem = ''\"\n      >\n        <div class=\"source-container\">\n          <button \n            @click=\"selectSource('Telegeography')\" \n            :class=\"{ active: selectedSource === 'Telegeography' }\" \n            class=\"dropdown-button\"\n          >\n            {{ currentTranslations.telegeography }}\n          </button>\n          <div \n            class=\"info-icon-wrapper\" \n            :class=\"{ \n              'hovered': currentHoveredItem === 'Telegeography', \n              'selected': selectedSource === 'Telegeography' \n            }\"\n          >\n            <span class=\"info-icon\">ℹ️\n              <span class=\"tooltip\">{{ currentTranslations.telegeographyTooltip }}</span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Mixed sources option -->\n      <div \n        class=\"dropdown-item\" \n        @mouseenter=\"currentHoveredItem = 'MixedSources'\" \n        @mouseleave=\"currentHoveredItem = ''\"\n      >\n        <div class=\"source-container\">\n          <button \n            @click=\"selectSource('MixedSources')\" \n            :class=\"{ active: selectedSource === 'MixedSources' }\" \n            class=\"dropdown-button\"\n          >\n            {{ currentTranslations.mixedSources }}\n          </button>\n          <div \n            class=\"info-icon-wrapper\" \n            :class=\"{ \n              'hovered': currentHoveredItem === 'MixedSources', \n              'selected': selectedSource === 'MixedSources' \n            }\"\n          >\n            <span class=\"info-icon\">ℹ️\n              <span class=\"tooltip\">{{ currentTranslations.mixedSourcesTooltip }}</span>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport groupedCables from \"@/assets/groupedCables.json\";\n\n// ========================\n// PROPS DEFINITION\n// ========================\n\nconst props = defineProps({\n  currentTranslations: {\n    type: Object,\n    required: true\n  },\n  currentLanguage: {\n    type: String,\n    required: true\n  }\n});\n\n// ========================\n// STATE MANAGEMENT\n// ========================\n\n// Store reference\nconst dataCablesStore = useDataCablesStore();\n\n// Component state\nconst selectedSource = ref(\"Telegeography\");\nconst isOpen = ref(false);\nconst currentHoveredItem = ref(\"\");\n\n// Data preservation for source switching\nconst originalCableData = ref([]);\n\n// ========================\n// UI INTERACTION METHODS\n// ========================\n\n/**\n * Toggles the dropdown open/closed state\n */\nconst toggleDropdown = () => {\n  isOpen.value = !isOpen.value;\n};\n\n/**\n * Handles source selection from dropdown\n * @param {string} source - The selected source ('Telegeography' or 'MixedSources')\n */\nconst selectSource = (source) => {\n  selectedSource.value = source;\n  isOpen.value = false;\n  updateCableSource(source);\n};\n\n// ========================\n// DATA MANAGEMENT METHODS\n// ========================\n\n/**\n * Updates cable data based on selected source\n * @param {string} source - The source to switch to\n */\nconst updateCableSource = async (source) => {\n  if (source === \"MixedSources\") {\n    // Store original data if not already stored\n    if (originalCableData.value.length === 0) {\n      originalCableData.value = dataCablesStore.dataCables.map((cable) => ({\n        name: cable.name,\n        geoData: JSON.parse(JSON.stringify(cable.geoData)),\n      }));\n    }\n    updateMixedSourceCables();\n  } else {\n    // Restore original data if switching back to Telegeography\n    if (originalCableData.value.length > 0) {\n      dataCablesStore.dataCables.forEach((cable) => {\n        const originalCable = originalCableData.value.find((orig) => orig.name === cable.name);\n        if (originalCable) {\n          cable.geoData = originalCable.geoData;\n        }\n      });\n      originalCableData.value = [];\n    }\n    await dataCablesStore.initialize();\n  }\n};\n\n/**\n * Updates cable data with mixed source coordinates\n */\nconst updateMixedSourceCables = () => {\n  dataCablesStore.dataCables.forEach((cable) => {\n    const mixedSourceCable = groupedCables.features.find((item) => item.properties.name === cable.name);\n    if (mixedSourceCable) {\n      const geoData = [\n        mixedSourceCable.geometry.coordinates.map((segment) => segment.map((coord) => [coord[0], coord[1]])),\n      ];\n      cable.geoData = geoData;\n    }\n  });\n};\n</script>\n\n<style>\n/* ========================\n   MAIN COMPONENT STYLES\n   ======================== */\n\n.cable-source-selector {\n  background-color: #48506a;\n  position: absolute;\n  top: -80px;\n  left: 0px;\n  z-index: 1000;\n  color: #ffffff;\n}\n\n/* ========================\n   DROPDOWN TOGGLE BUTTON\n   ======================== */\n\n/* Arrow icon for dropdown state indication */\n.arrow {\n  border: solid #ffffff;\n  color: #ffffff;\n  border-width: 0 2px 2px 0;\n  display: inline-block;\n  padding: 3px;\n  margin-left: 8px;\n}\n\n.arrow.down {\n  transform: rotate(45deg);\n  -webkit-transform: rotate(45deg);\n}\n\n.arrow.up {\n  transform: rotate(-135deg);\n  -webkit-transform: rotate(-135deg);\n}\n\n/* ========================\n   DROPDOWN MENU STYLES\n   ======================== */\n\n.dropdown {\n  position: absolute;\n  background-color: #48506a;\n  color: #ffffff;\n  border: none;\n  padding: 6px 0;\n  width: 100%;\n  z-index: 1;\n}\n\n.dropdown-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 3px 0;\n}\n\n.source-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n}\n\n/* ========================\n   DROPDOWN BUTTON STYLES\n   ======================== */\n\n.dropdown button {\n  width: 0px;\n  padding: 6px 6px;\n  text-align: left;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  color: #ffffff;\n  flex-grow: 1;\n}\n\n.dropdown button:hover,\n.dropdown button.active {\n  background-color: #697fc7;\n  color: #ffffff;\n}\n\n/* ========================\n   INFO ICON & TOOLTIP STYLES\n   ======================== */\n\n.info-icon-wrapper {\n  display: flex;\n  align-items: center;\n  padding: 4.5px;\n  height: 120%;\n  border-radius: 0px;\n}\n\n.info-icon-wrapper.hovered,\n.info-icon-wrapper.selected {\n  background-color: #697fc7;\n  height: 120%;\n}\n\n.info-icon {\n  position: relative;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n/* Tooltip styling */\n.info-icon .tooltip {\n  position: absolute;\n  top: 100%;\n  left: 20px;\n  width: 300px;\n  background-color: #333;\n  color: #ffffff;\n  border: none;\n  font-size: 12px;\n  padding: 10px;\n  border-radius: 4px;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.2s, opacity 0.2s;\n  z-index: 10;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  white-space: normal;\n  line-height: 1.4;\n}\n\n.info-icon:hover .tooltip {\n  visibility: visible;\n  opacity: 1;\n}\n</style>","import script from \"./CableSourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CableSourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CableSourceSelector.vue?vue&type=style&index=0&id=47ea605e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\n  TimelineSlider Component\n  \n  A Vue 3 component that provides an interactive timeline with draggable sliders for selecting date ranges.\n  Features include:\n  - Dual-handle range slider for date selection\n  - Event bars visualization on the timeline\n  - Inter-event connection lines with hover interpolation\n  - Dynamic timeline markers and tooltips\n  - Auto-extending visible range when dragging near edges\n  - Hover effects and event tooltips\n-->\n\n<template>\n  <div class=\"timeline-slider\">\n    <!-- Main timeline container -->\n    <div \n      class=\"timeline\"\n      ref=\"timeline\"\n      @mousemove=\"updateHoverPosition\"\n      @mouseleave=\"hideHoverEffect\"\n    >\n      <!-- Hover effect indicator -->\n      <div class=\"hover-effect\" :style=\"hoverEffectStyle\">\n        <div class=\"hover-line\"></div>\n      </div>\n      \n      <!-- Left slider handle -->\n      <div \n        class=\"slider left\" \n        :style=\"{ left: leftPosition + '%' }\" \n        @mousedown=\"startDrag('left', $event)\" \n        @mouseover=\"showTooltip('left')\" \n        @mouseout=\"hideTooltip('left')\"\n      >\n        <div v-if=\"showLeftTooltip\" class=\"slider-tooltip\">\n          {{ formatDate(currentStartDate) }}\n        </div>\n      </div>\n      \n      <!-- Right slider handle -->\n      <div \n        class=\"slider right\" \n        :style=\"{ left: rightPosition + '%' }\" \n        @mousedown=\"startDrag('right', $event)\" \n        @mouseover=\"showTooltip('right')\" \n        @mouseout=\"hideTooltip('right')\"\n      >\n        <div v-if=\"showRightTooltip\" class=\"slider-tooltip\">\n          {{ formatDate(currentEndDate) }}\n        </div>\n      </div>\n      \n      <!-- Selected range highlight -->\n      <div \n        class=\"selected-range\" \n        :style=\"{ \n          left: leftPosition + '%', \n          width: (rightPosition - leftPosition) + '%' \n        }\"\n      ></div>\n      \n      <!-- Timeline markers (date labels) -->\n      <div \n        v-for=\"(marker, index) in timelineMarkers\" \n        :key=\"index\" \n        class=\"timeline-marker\" \n        :style=\"{ left: marker.position + '%' }\"\n      >\n        {{ marker.label }}\n      </div>\n      \n      <!-- Event bars -->\n      <div \n        v-for=\"(event, index) in visibleEvents\" \n        :key=\"'event-' + index\" \n        class=\"event-bar\" \n        :style=\"getEventBarStyle(event)\"\n        @mouseover=\"showEventTooltip(event, $event)\"\n        @mouseout=\"hideEventTooltip\"\n        @mouseenter=\"emitEventHover(event)\"\n      ></div>\n      \n      <!-- Inter-event connection lines -->\n      <div \n        v-for=\"(line, index) in interEventLines\" \n        :key=\"'line-' + index\"\n        class=\"inter-event-line\"\n        :style=\"getInterEventLineStyle(line)\"\n        @mousemove=\"handleLineHover(line, $event)\"\n      ></div>\n    </div>\n    \n    <!-- Event tooltip -->\n    <div \n      v-if=\"isEventTooltipVisible\" \n      class=\"event-tooltip\" \n      :style=\"eventTooltipStyle\"\n    >\n      {{ eventTooltipContent }}\n    </div>\n    \n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue';\n\n// ============================================================================\n// PROPS AND EMITS\n// ============================================================================\n\nconst props = defineProps({\n  events: { type: Array, default: () => [] },\n  startDate: Date,\n  endDate: Date,\n});\n\nconst emit = defineEmits([\n  'update:startDate', \n  'update:endDate', \n  'eventHover', \n  'eventLeave', \n  'interEventHover'\n]);\n\n// ============================================================================\n// REACTIVE REFERENCES\n// ============================================================================\n\n// DOM reference\nconst timeline = ref(null);\n\n// Slider positions (percentages)\nconst leftPosition = ref(10);\nconst rightPosition = ref(90);\n\n// Hover effect\nconst hoverPosition = ref(null);\n\n// Date ranges\nconst currentStartDate = ref(new Date());\nconst currentEndDate = ref(new Date());\nconst minDate = ref(new Date('2000-01-01'));\nconst maxDate = ref(new Date(new Date().setMonth(new Date().getMonth() + 6)));\nconst visibleRangeStart = ref(new Date());\nconst visibleRangeEnd = ref(new Date());\n\n// Tooltip states\nconst showLeftTooltip = ref(false);\nconst showRightTooltip = ref(false);\nconst isEventTooltipVisible = ref(false);\nconst eventTooltipContent = ref('');\nconst eventTooltipStyle = ref({});\n\n// ============================================================================\n// COMPUTED PROPERTIES\n// ============================================================================\n\n// Hover effect styling\nconst hoverEffectStyle = computed(() => {\n  if (hoverPosition.value === null) {\n    return { display: 'none' };\n  }\n  \n  // Check if hover position overlaps with any event or inter-event line\n  const hoveredEvent = visibleEvents.value.find(event => {\n    return hoverPosition.value >= event.startPosition && hoverPosition.value <= event.endPosition;\n  });\n  \n  const hoveredLine = interEventLines.value.find(line => {\n    return hoverPosition.value >= line.start && hoverPosition.value <= line.end;\n  });\n  \n  return {\n    left: `${hoverPosition.value}%`,\n    display: 'block',\n    backgroundColor: (hoveredEvent || hoveredLine) ? 'rgba(255, 255, 255, 0.5)' : 'rgba(255, 255, 255, 0.2)'\n  };\n});\n\n\n// Visible events within the timeline range\nconst visibleEvents = computed(() => {\n  const { start, end, timeRange } = extendedVisibleRangeForEvents.value;\n  return props.events.map(event => {\n    const startDate = new Date(event.start);\n    const endDate = new Date(event.end);\n    const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n    let startPosition = ((startDate.getTime() - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    let endPosition = ((endDate.getTime() - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    startPosition = Math.max(0, Math.min(startPosition, 100));\n    endPosition = Math.max(0, Math.min(endPosition, 100));\n    return { ...event, startPosition, endPosition };\n  }).filter(event => {\n    const eventStart = new Date(event.start);\n    const eventEnd = new Date(event.end);\n    return eventStart <= end && eventEnd >= start;\n  });\n});\n\n\n// Lines connecting non-overlapping events\nconst interEventLines = computed(() => {\n  const lines = [];\n  const sortedEvents = [...visibleEvents.value].sort((a, b) => new Date(a.start) - new Date(b.start));\n  for (let i = 0; i < sortedEvents.length - 1; i++) {\n    const currentEvent = sortedEvents[i];\n    const nextEvent = sortedEvents[i + 1];\n    if (new Date(nextEvent.start) > new Date(currentEvent.end)) {\n      lines.push({ start: currentEvent.endPosition, end: nextEvent.startPosition, startEvent: currentEvent, endEvent: nextEvent });\n    }\n  }\n  return lines;\n});\n\n\n// Timeline markers (date labels along the timeline)\nconst timelineMarkers = computed(() => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  const leftSliderTime = currentStartDate.value.getTime();\n  const rightSliderTime = currentEndDate.value.getTime();\n  const selectedTimeRange = rightSliderTime - leftSliderTime;\n  const dayInMs = 24 * 60 * 60 * 1000;\n  const monthInMs = 30 * dayInMs;\n  const yearInMs = 365 * dayInMs;\n\n  let interval, format;\n  if (selectedTimeRange <= 30 * dayInMs) {\n    interval = dayInMs;\n    format = 'day';\n  } else if (selectedTimeRange <= 1.5 * yearInMs) {\n    interval = monthInMs;\n    format = 'month';\n  } else {\n    interval = yearInMs;\n    format = 'year';\n  }\n\n  const markers = [];\n  // Subtract 10 days from the visible range start\n  let current = new Date(visibleRangeStart.value.getTime() - 10 * dayInMs);\n\n  while (current.getTime() <= visibleRangeEnd.value.getTime()) {\n    const currentTime = current.getTime();\n    const position = ((currentTime - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    const closeToSlider = Math.abs(position - leftPosition.value) < 5 || Math.abs(position - rightPosition.value) < 5;\n    if (position >= 0 && position <= 100) {\n      let label;\n      switch (format) {\n        case 'day':\n          label = current.getDate().toString();\n          break;\n        case 'month':\n          label = current.toLocaleString('default', { month: 'short' });\n          if (current.getMonth() === 0) {\n            label = `${label}\\n${current.getFullYear()}`;\n          }\n          break;\n        case 'year':\n          label = current.getFullYear().toString();\n          break;\n      }\n      markers.push({ position, label, isFixed: false });\n    }\n    current = new Date(current.getTime() + interval);\n  }\n\n  //markers.push({ position: leftPosition.value, label: formatDate(currentStartDate.value), isFixed: true });\n  //markers.push({ position: rightPosition.value, label: formatDate(currentEndDate.value), isFixed: true });\n\n  return markers.sort((a, b) => a.position - b.position);\n});\n\n// ============================================================================\n// INITIALIZATION FUNCTIONS\n// ============================================================================\n\n// Initialize date ranges and visible timeline bounds\nconst initializeDates = () => {\n  const now = new Date();\n  const oneYearAgo = new Date(now.getFullYear() - 1, now.getMonth(), now.getDate());\n  \n  // Set initial visible range (14 months total)\n  visibleRangeEnd.value = new Date(now.getFullYear(), now.getMonth() + 2, now.getDate());\n  visibleRangeStart.value = new Date(oneYearAgo.getFullYear(), oneYearAgo.getMonth() - 2, oneYearAgo.getDate());\n  \n  // Set initial slider positions\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n  \n  // Calculate initial dates based on slider positions\n  updateDates('left', true);\n  updateDates('right', true);\n};\n\n// Initialize slider positions\nconst initializePositions = () => {\n  leftPosition.value = 0;\n  rightPosition.value = 100;\n};\n\n// ============================================================================\n// DATE AND POSITIONING FUNCTIONS\n// ============================================================================\n\n// Format date for display\nconst formatDate = (date) => {\n  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\n};\n\n// Update date values based on slider positions\nconst updateDates = (slider, emitValue) => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  if (slider === 'left') {\n    const leftTime = visibleRangeStart.value.getTime() + (leftPosition.value / 100) * visibleTimeRange *0.835;\n    currentStartDate.value = new Date(Math.max(leftTime, minDate.value.getTime()));\n    if (emitValue) emit('update:startDate', currentStartDate.value);\n  } else {\n    const rightTime = visibleRangeStart.value.getTime() + (rightPosition.value / 100) * visibleTimeRange * 1.019;\n    currentEndDate.value = new Date(Math.min(rightTime, maxDate.value.getTime()));\n    if (emitValue) emit('update:endDate', currentEndDate.value);\n  }\n};\n\nconst adjustVisibleRange = () => {\n  const newVisibleStart = new Date(currentStartDate.value);\n  const newVisibleEnd = new Date(currentEndDate.value);\n  const visibleTimeRange = newVisibleEnd.getTime() - newVisibleStart.getTime();\n  newVisibleStart.setTime(newVisibleStart.getTime() - visibleTimeRange * 0.1);\n  newVisibleEnd.setTime(newVisibleEnd.getTime() + visibleTimeRange * 0.1);\n  visibleRangeStart.value = new Date(Math.max(newVisibleStart, minDate.value));\n  visibleRangeEnd.value = new Date(Math.min(newVisibleEnd, maxDate.value));\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n};\n\nconst resetSliderPositions = () => {\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n};\n\nconst extendedVisibleRangeForEvents = computed(() => {\n  const start = new Date(visibleRangeStart.value);\n  const end = new Date(visibleRangeEnd.value);\n  start.setMonth(start.getMonth() - 4);\n  end.setMonth(end.getMonth() + 4);\n  return { start, end, timeRange: end.getTime() - start.getTime() };\n});\n\n\n// Extend visible range when dragging near edges\nconst extendVisibleRange = (direction, distanceDragged) => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  const expansionFactor = 0.0001;\n  if (direction === 'left') {\n    const newVisibleStart = new Date(visibleRangeStart.value.getTime() - visibleTimeRange * Math.abs(distanceDragged) * expansionFactor);\n    visibleRangeStart.value = new Date(Math.max(newVisibleStart, minDate.value));\n    leftPosition.value = 10;\n    const leftTime = visibleRangeStart.value.getTime() + (leftPosition.value / 100) * visibleTimeRange;\n    currentStartDate.value = new Date(Math.max(leftTime, minDate.value.getTime()));\n  } else {\n    const newVisibleEnd = new Date(visibleRangeEnd.value.getTime() + visibleTimeRange * Math.abs(distanceDragged) * expansionFactor);\n    visibleRangeEnd.value = new Date(Math.min(newVisibleEnd, maxDate.value));\n    rightPosition.value = 90;\n    const rightTime = visibleRangeEnd.value.getTime() + (rightPosition.value / 100) * visibleTimeRange;\n    currentEndDate.value = new Date(Math.min(rightTime, maxDate.value.getTime()));\n  }\n  updateDates(direction, false);\n};\n\n\n// ============================================================================\n// EVENT HANDLING FUNCTIONS\n// ============================================================================\n\n// Handle slider drag interactions\nconst startDrag = (slider, event) => {\n  event.preventDefault();\n  const initialX = event.clientX;\n  const initialLeft = leftPosition.value;\n  const initialRight = rightPosition.value;\n  const timelineRect = timeline.value.getBoundingClientRect();\n\n  const move = (e) => {\n    const deltaX = e.clientX - initialX;\n    const deltaPct = (deltaX / timelineRect.width) * 100;\n    if (slider === 'left') {\n      if (leftPosition.value <= 10) {\n        extendVisibleRange('left', deltaX);\n      }\n      leftPosition.value = Math.max(0, Math.min(initialLeft + deltaPct, rightPosition.value - 1));\n    } else {\n      if (rightPosition.value >= 90) {\n        extendVisibleRange('right', deltaX);\n      }\n      rightPosition.value = Math.max(leftPosition.value + 1, Math.min(initialRight + deltaPct, 100));\n    }\n  };\n\n  const stop = () => {\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', stop);\n    updateDates(slider, true);\n    adjustVisibleRange();\n    resetSliderPositions();\n  };\n\n  window.addEventListener('mousemove', move);\n  window.addEventListener('mouseup', stop);\n};\n\n\n// Update hover position for visual feedback\nconst updateHoverPosition = (event) => {\n  const timelineRect = timeline.value.getBoundingClientRect();\n  hoverPosition.value = ((event.clientX - timelineRect.left) / timelineRect.width) * 100;\n  \n  // Find any event at this hover position\n  const hoveredEvent = visibleEvents.value.find(event => {\n    return hoverPosition.value >= event.startPosition && hoverPosition.value <= event.endPosition;\n  });\n  \n  if (hoveredEvent) {\n    // Use the existing emitEventHover function\n    emitEventHover(hoveredEvent);\n    showEventTooltip(hoveredEvent, event);\n  } else {\n    hideEventTooltip();\n  }\n  \n  // Find any inter-event line at this hover position\n  const hoveredLine = interEventLines.value.find(line => {\n    return hoverPosition.value >= line.start && hoverPosition.value <= line.end;\n  });\n  \n  if (hoveredLine) {\n    handleLineHover(hoveredLine, event);\n  }\n};\n\n// Hide hover effect\nconst hideHoverEffect = () => {\n  hoverPosition.value = null;\n  hideEventTooltip();\n};\n\n\n// Handle inter-event line hover for interpolation\nconst handleLineHover = (line, event) => {\n  try {\n    const timelineRect = timeline.value.getBoundingClientRect();\n    \n    // Calculate position along the line\n    const lineStart = line.start;\n    const lineEnd = line.end;\n    const lineWidth = lineEnd - lineStart;\n    const position = (hoverPosition.value - lineStart) / lineWidth;\n    const normalizedPosition = Math.max(0, Math.min(1, position));\n    \n    const startTime = new Date(line.startEvent.end).getTime();\n    const endTime = new Date(line.endEvent.start).getTime();\n    const interpolatedTime = startTime + (endTime - startTime) * normalizedPosition;\n    \n    const startLat = line.startEvent.position?.lat ?? 0;\n    const endLat = line.endEvent.position?.lat ?? 0;\n    const interpolatedLat = startLat + (endLat - startLat) * normalizedPosition;\n    \n    const startLon = line.startEvent.position?.lon ?? 0;\n    const endLon = line.endEvent.position?.lon ?? 0;\n    const interpolatedLon = startLon + (endLon - startLon) * normalizedPosition;\n    \n    emit('interEventHover', {\n      time: new Date(interpolatedTime),\n      position: {\n        lat: interpolatedLat,\n        lon: interpolatedLon\n      },\n      startEvent: line.startEvent,\n      endEvent: line.endEvent\n    });\n  } catch (error) {\n    console.error('Error in handleLineHover:', error);\n  }\n};\n\n// ============================================================================\n// TOOLTIP FUNCTIONS\n// ============================================================================\n\n// Show slider tooltips\nconst showTooltip = (slider) => {\n  if (slider === 'left') {\n    showLeftTooltip.value = true;\n  } else {\n    showRightTooltip.value = true;\n  }\n};\n\n// Hide slider tooltips\nconst hideTooltip = (slider) => {\n  if (slider === 'left') {\n    showLeftTooltip.value = false;\n  } else {\n    showRightTooltip.value = false;\n  }\n};\n\n// Show event tooltip on hover\nconst showEventTooltip = (event, e) => {\n  const startDate = new Date(event.start);\n  const endDate = new Date(event.end);\n  eventTooltipContent.value = `${formatDate(startDate)} - ${formatDate(endDate)}`;\n  \n  if (e) {\n    eventTooltipStyle.value = {\n      left: `${e.clientX}px`,\n      top: `${e.clientY - 30}px`\n    };\n  }\n  \n  isEventTooltipVisible.value = true;\n};\n\n\n// Hide event tooltip\nconst hideEventTooltip = () => {\n  isEventTooltipVisible.value = false;\n};\n\n// ============================================================================\n// EVENT BAR STYLING FUNCTIONS\n// ============================================================================\n\n// Get styling for event bars\nconst getEventBarStyle = (event) => {\n  return {\n    left: `${event.startPosition}%`,\n    width: `${event.endPosition - event.startPosition}%`,\n    backgroundColor: '#48bb78'\n  };\n};\n\n// Get styling for inter-event lines\nconst getInterEventLineStyle = (line) => {\n  const start = Math.min(line.start, line.end);\n  const end = Math.max(line.start, line.end);\n  \n  return {\n    left: `${start}%`,\n    width: `${end - start}%`,\n    backgroundColor: '#718096',\n    height: '3px',\n    top: 'calc(50% - 1.5px)',\n  };\n};\n\n// ============================================================================\n// EVENT EMISSION FUNCTIONS\n// ============================================================================\n\n// Emit event hover for external handling\nconst emitEventHover = (event) => {\n  emit('eventHover', event);\n};\n\n// ============================================================================\n// WATCHERS\n// ============================================================================\n\n// Watch for external startDate changes\nwatch(() => props.startDate, (startDate) => {\n  currentStartDate.value = startDate;\n  adjustVisibleRange();\n  emit('update:startDate', currentStartDate.value);\n});\n\n// Watch for external endDate changes\nwatch(() => props.endDate, (endDate) => {\n  currentEndDate.value = endDate;\n  adjustVisibleRange();\n  emit('update:endDate', currentEndDate.value);\n});\n\n// Watch for dataPoints changes (if prop exists)\nwatch(() => props.dataPoints, () => {\n  initializeDates();\n}, { deep: true });\n\n// ============================================================================\n// LIFECYCLE HOOKS\n// ============================================================================\n\nonMounted(() => {\n  initializeDates();\n  initializePositions();\n  adjustVisibleRange();\n});\n</script>\n\n<style scoped>\n/* ============================================================================\n   MAIN CONTAINER STYLES\n   ============================================================================ */\n\n.timeline-slider {\n  width: 100%;\n  padding: 0.75rem;\n  user-select: none;\n  touch-action: none;\n}\n\n/* ============================================================================\n   TIMELINE STYLES\n   ============================================================================ */\n\n.timeline {\n  position: relative;\n  height: 24px; /* Reduced from 40px */\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 1rem;\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  transition: border-color 0.2s ease, box-shadow 0.2s ease;\n}\n\n.timeline:hover {\n  border-color: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.selected-range {\n  position: absolute;\n  height: 100%;\n  background: linear-gradient(135deg, #805ad5 0%, #6b46c1 50%, #553c9a 100%);\n  opacity: 0.5;\n  border-radius: 12px;\n  z-index: 1;\n  transition: all 0.3s ease;\n  box-shadow: \n    0 2px 8px rgba(128, 90, 213, 0.3),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(128, 90, 213, 0.4);\n}\n\n/* ============================================================================\n   SLIDER HANDLE STYLES\n   ============================================================================ */\n\n.slider {\n  position: absolute;\n  width: 28px; /* Reduced from 40px */\n  height: 28px; /* Reduced from 40px */\n  background: rgba(255, 255, 255, 0.05);\n  border: 2px solid #805ad5; /* Changed to purple to match selected range */\n  border-radius: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  z-index: 1000;\n  backdrop-filter: blur(10px);\n  transition: background 0.2s ease, border-color 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.slider:hover {\n  background: rgba(128, 90, 213, 0.1); /* Changed to purple hover */\n  border-color: #9f7aea;\n  transform: translate(-50%, -50%) scale(1.1);\n  box-shadow: 0 4px 12px rgba(128, 90, 213, 0.3); /* Purple glow */\n}\n\n/* ============================================================================\n   EVENT BAR STYLES\n   ============================================================================ */\n\n.event-bar {\n  position: absolute;\n  height: 12px; /* Reduced from 20px */\n  top: 50%;\n  transform: translateY(-50%);\n  background: linear-gradient(135deg, #48bb78, #38a169); /* Changed to green gradient */\n  opacity: 0.8;\n  border-radius: 6px;\n  z-index: 2;\n  transition: all 0.2s ease;\n  border: 1px solid rgba(72, 187, 120, 0.3); /* Green border */\n}\n\n.event-bar:hover {\n  opacity: 1;\n  transform: translateY(-50%) scaleY(1.2);\n  box-shadow: 0 2px 8px rgba(72, 187, 120, 0.4); /* Green glow */\n}\n\n.inter-event-line {\n  position: absolute;\n  height: 3px;\n  background: rgba(113, 128, 150, 0.6);\n  top: calc(50% - 1.5px);\n  z-index: 1;\n  border-radius: 1.5px;\n  transition: all 0.2s ease;\n}\n\n.inter-event-line:hover {\n  background: rgba(113, 128, 150, 0.8);\n  height: 4px;\n  top: calc(50% - 2px);\n}\n\n/* ============================================================================\n   HOVER EFFECTS\n   ============================================================================ */\n\n.hover-effect {\n  position: absolute;\n  top: 0;\n  width: 14px; /* Reduced from 20px */\n  height: 100%;\n  background: rgba(255, 255, 255, 0.1);\n  transform: translateX(-50%);\n  pointer-events: none;\n  z-index: 10;\n  border-radius: 12px;\n}\n\n.hover-line {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 1px;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.8);\n  transform: translateX(-50%);\n}\n\n/* ============================================================================\n   MARKER AND TOOLTIP STYLES\n   ============================================================================ */\n\n.timeline-marker {\n  position: absolute;\n  top: 100%;\n  transform: translateX(-50%);\n  font-size: 0.75rem; /* Reduced from 12px */\n  color: #a0aec0;\n  text-align: center;\n  white-space: pre-line;\n  margin-top: 0.5rem; /* Increased from 0.25rem for better spacing */\n  font-weight: 500;\n  z-index: 100; /* Ensure markers are above other elements */\n}\n\n.timeline-marker::before {\n  content: '';\n  position: absolute;\n  top: -12px; /* Increased from -8px to reach timeline */\n  left: 50%;\n  transform: translateX(-50%);\n  width: 1px;\n  height: 12px; /* Increased from 8px to reach timeline */\n  background: rgba(160, 174, 192, 0.5);\n}\n\n.slider-tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(45, 55, 72, 0.95);\n  color: #fff;\n  padding: 0.4rem 0.6rem;\n  border-radius: 6px;\n  font-size: 0.75rem;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 0.5rem;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n}\n\n.event-tooltip {\n  position: fixed;\n  background: rgba(45, 55, 72, 0.95);\n  color: #fff;\n  padding: 0.4rem 0.6rem;\n  border-radius: 6px;\n  font-size: 0.75rem;\n  white-space: nowrap;\n  z-index: 1000;\n  pointer-events: none;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n}\n\n/* ============================================================================\n   DISPLAY ELEMENTS\n   ============================================================================ */\n\n.date-range-display {\n  text-align: center;\n  margin-top: 2rem; /* Increased from 1.5rem to give more space for markers */\n  font-size: 0.85rem;\n  color: #a0aec0;\n  font-weight: 500;\n  padding: 0.5rem 0.75rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 6px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n/* ============================================================================\n   RESPONSIVE DESIGN\n   ============================================================================ */\n\n@media (max-width: 768px) {\n  .timeline-slider {\n    padding: 0.5rem;\n  }\n  \n  .timeline {\n    height: 20px;\n  }\n  \n  .slider {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .event-bar {\n    height: 10px;\n  }\n  \n  .timeline-marker {\n    font-size: 0.7rem;\n  }\n  \n}\n</style>","import script from \"./TimelineSlider.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimelineSlider.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TimelineSlider.vue?vue&type=style&index=0&id=364205d3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-364205d3\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, createBlock as _createBlock, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-71412dce\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"tracking-controls\" }\nconst _hoisted_2 = { class: \"date-picker-container\" }\n\nimport { ref, watch, computed, nextTick, PropType } from 'vue';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport TimelineSlider from '@/components/controls/TimelineSlider.vue';\nimport vesselIds from \"@/assets/vesselIds.json\";\nimport translations from \"@/assets/translations/translations.json\";\n\n// ==============================================\n// PROPS AND EMITS\n// ==============================================\n\nconst interpolationInterval = 3600000; // 1 hour in ms\n\n// Date range state\nconst format = 'dd/MM/yyyy';\nconst vesselTrackingUrl = 'https://karte2-api.sdcs.dev.peasec.de/fishing/v3/events';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'VesselTracking',\n  props: {\n  mapInstance: { type: Object as PropType<L.Map>, required: false },\n  currentLanguage: { type: String, required: false },\n  cableStore: { type: Object, required: false },\n  controlInstance: { type: Object, required: false },\n  layerGroup: { type: Object, required: false },\n  mapReady: { type: Boolean, required: false },\n  vesselPositions: { type: Array as PropType<any[]>, default: () => [] },\n},\n  emits: ['update:vesselPositions', 'update:hoveredMarker', 'update:viewingVesselTrack'],\n  setup(__props, { expose: __expose, emit: __emit }) {\n\nconst props = __props;\n\nconst emit = __emit;\n\n// ==============================================\n// REACTIVE STATE\n// ==============================================\n\n// Vessel data and tracking state\nconst localVesselPositions = ref(props.vesselPositions ? [...props.vesselPositions] : []);\nconst vesselLayerReady = ref(false);\nconst vesselPostResponse = ref(null);\nconst vesselModifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{y}/{x}.png');\nconst isVesselTrackingMode = ref(false);\nconst vesselTrackingSelected = ref(false);\nconst vesselEvents = ref([]);\nconst hoveredMarker = ref();\nconst currentTrackedVessel = ref(null);\nconst vesselTrackLayer = ref(null);\nconst interpolatedEvents = ref([]);\nconst startDate = ref(new Date(new Date().setMonth(new Date().getMonth() - 1)));\nconst endDate = ref(new Date());\nconst dateRange = ref<[Date, Date]>([new Date(new Date().setMonth(new Date().getMonth() - 1)), new Date()]);\nconst formattedEndDate = ref(new Date());\nconst formattedStartDate = ref(new Date(formattedEndDate.value.getFullYear() - 1, formattedEndDate.value.getMonth(), formattedEndDate.value.getDate()));\n\n// API endpoints\nconst vesselTrackingParams = {\n  limit: 1,\n  offset: 0,\n  sort: '-start',\n};\n\n// ==============================================\n// COMPUTED PROPERTIES\n// ==============================================\n\nconst currentTranslations = computed(() => translations[props.currentLanguage]);\n\n// ==============================================\n// WATCHERS\n// ==============================================\n\nwatch(() => props.vesselPositions, (newPositions) => {\n  if (newPositions) {\n    localVesselPositions.value = [...newPositions];\n  }\n}, { deep: true });\n\nwatch(() => props.mapReady, (isReady) => {\n  if (isReady) {\n    vesselTracking();\n  }\n});\n\nwatch([startDate, endDate], () => {\n  dateRange.value = [startDate.value, endDate.value];\n});\n\n// ==============================================\n// DATE HANDLING FUNCTIONS\n// ==============================================\n\n/**\nHandles date picker changes and updates the date range\n */\nconst onDatePickerChange = (selectedDates: [Date, Date]) => {\n  if (selectedDates && selectedDates.length === 2) {\n    startDate.value = selectedDates[0];\n    endDate.value = selectedDates[1];\n  }\n};\n\n/**\nHandles date changes from the timeline slider\n */\nconst onDateChange = () => {\n  if (vesselTrackingSelected.value) {\n    formattedStartDate.value = formatDate(startDate.value);\n    formattedEndDate.value = formatDate(endDate.value);\n    vesselTrack(formattedStartDate.value, formattedEndDate.value);\n  }\n};\n\n/**\nFormats a date object into YYYY-MM-DD string\n */\nconst formatDate = (date) => {\n  const d = new Date(date);\n  let month = '' + (d.getMonth() + 1);\n  let day = '' + d.getDate();\n  const year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\n// ==============================================\n// VESSEL TRACKING AND POSITION FUNCTIONS\n// ==============================================\n\n/**\nMain function to fetch and display vessel positions\n */\nasync function vesselTracking() {\n  try {\n    const vesselIdsArray = vesselIdsToArray(vesselIds);\n    const allVesselPositions = [];\n    props.layerGroup.clearLayers();\n\n    // First get all vessel data from GFW API\n    for (const vesselId of vesselIdsArray) {\n      const loiteringParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-loitering-events:latest',\n      };\n      const portVisitParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-port-visits-c2-events:latest',\n      };\n      \n      const [loiteringResponse, portVisitResponse] = await Promise.all([\n        axios.get(vesselTrackingUrl, { params: loiteringParams }),\n        axios.get(vesselTrackingUrl, { params: portVisitParams })\n      ]);\n\n      let latestEvent = null;\n      let eventType = '';\n      let speedValue = null;\n      \n      if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n        latestEvent = loiteringResponse.data.entries[0];\n        eventType = 'Loitering';\n        speedValue = latestEvent.vessel?.speed !== undefined ? msToKnots(latestEvent.vessel.speed) : null;\n      }\n      \n      if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n        const portVisitEvent = portVisitResponse.data.entries[0];\n        const portVisitSpeed = portVisitEvent.vessel?.speed !== undefined ? msToKnots(portVisitEvent.vessel.speed) : null;\n        \n        if (!latestEvent || new Date(portVisitEvent.end) > new Date(latestEvent.end)) {\n          latestEvent = portVisitEvent;\n          eventType = 'Port Visit';\n          speedValue = portVisitSpeed;\n        }\n      }\n      \n      if (latestEvent) {\n        allVesselPositions.push({\n          id: vesselId,\n          name: latestEvent.vessel?.name || 'Unknown Vessel',\n          position: latestEvent.position,\n          lastSeen: latestEvent.end,\n          eventType: eventType,\n          ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n          flag: latestEvent.vessel?.flag || 'ARE',\n          speed: speedValue,\n          aprsLastSeen: null\n        });\n      }\n    }\n    \n    // Collect valid callsigns for APRS.fi batch query\n    const validCallsigns = allVesselPositions\n      .filter(vessel => vessel.ssvid && vessel.ssvid !== 'Unknown')\n      .map(vessel => vessel.ssvid);\n    \n    // If we have valid callsigns, make batch API requests to APRS.fi\n    if (validCallsigns.length > 0) {\n      const batchSize = 20;\n      const batches = [];\n      \n      for (let i = 0; i < validCallsigns.length; i += batchSize) {\n        batches.push(validCallsigns.slice(i, i + batchSize));\n      }\n      \n      // Process each batch\n      for (const batch of batches) {\n        try {\n          const batchCallsigns = batch.join(',');\n          \n          const response = await axios.get(`https://sdcs-api.dev.peasec.de/aprs/get`, {\n            params: {\n              name: batchCallsigns,\n              what: 'loc',\n              format: 'json'\n            }\n          });\n          \n          if (response.data.result === 'ok' && response.data.found > 0) {\n            response.data.entries.forEach(entry => {\n              const vessel = allVesselPositions.find(v => v.ssvid === entry.mmsi);\n              if (vessel) {\n                const aprsTimestamp = entry.lasttime ? parseInt(entry.lasttime) * 1000 : null;\n                const currentLastSeen = new Date(vessel.lastSeen).getTime();\n                \n                if (aprsTimestamp && aprsTimestamp > currentLastSeen) {\n                  vessel.lastSeen = new Date(aprsTimestamp).toISOString();\n                  vessel.lastSeenSource = 'APRS.fi';\n                }\n                \n                if (entry.speed) {\n                  vessel.speed = parseFloat(entry.speed) * 0.539957; // Convert km/h to knots\n                  vessel.speedSource = 'APRS.fi';\n                }\n                \n                vessel.aprsLastSeen = entry.lasttime || null;\n              }\n            });\n          }\n        } catch (error) {\n          console.error(\"Error fetching batch vessel speed from APRS.fi:\", error);\n        }\n      }\n    }\n    \n    // Add additional vessel attributes and finalize\n    allVesselPositions.forEach(vessel => {\n      const ssvid = vessel.ssvid;\n      if (vesselIds[ssvid]) {\n        vessel.length = vesselIds[ssvid].length || 'Unknown';\n        vessel.beam = vesselIds[ssvid].beam || 'Unknown';\n        vessel.grossTonage = vesselIds[ssvid].grossTonage || 'Unknown';\n        vessel.purpose = vesselIds[ssvid].purpose || 'Unknown';\n        vessel.cableCapacity = vesselIds[ssvid].cableCapacity || 'Unknown';\n        vessel.notes = vesselIds[ssvid].notes || 'Unknown';\n        vessel.baseport = vesselIds[ssvid].baseport || 'Unknown';\n        vessel.owner = vesselIds[ssvid].owner || 'Unknown';\n      } else {\n        vessel.length = 'Unknown';\n        vessel.beam = 'Unknown';\n        vessel.grossTonage = 'Unknown';\n      }\n    });\n\n    localVesselPositions.value = allVesselPositions;\n    emit('update:vesselPositions', localVesselPositions.value);\n    vesselPostResponse.value = { data: { entries: allVesselPositions } };\n    vesselModifiedPostUrl.value = vesselTrackingUrl.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n  } catch (error) {\n    console.error(\"Error fetching vessel tracking data:\", error);\n  }\n  vesselLayerReady.value = true;\n}\n\n/**\nFetches and displays track for a specific vessel within a date range\n */\nasync function vesselTrack(startDate, endDate) {\n  if (!currentTrackedVessel.value) return;\n\n  const extendedStartDate = new Date(startDate);\n  const extendedEndDate = new Date(endDate);\n\n  extendedStartDate.setMonth(extendedStartDate.getMonth() - 5);\n  extendedEndDate.setMonth(extendedEndDate.getMonth() + 5);\n\n  const baseParams = {\n    limit: 1000,\n    offset: 0,\n    sort: '-start',\n    vessels: [currentTrackedVessel.value],\n    'start-date': formatDate(extendedStartDate),\n    'end-date': formatDate(extendedEndDate),\n  };\n\n  try {\n    const [portVisitsResponse, loiteringResponse] = await Promise.all([\n      axios.get(vesselTrackingUrl, {\n        params: {\n          ...baseParams,\n          'datasets[0]': 'public-global-port-visits-c2-events:latest'\n        }\n      }),\n      axios.get(vesselTrackingUrl, {\n        params: {\n          ...baseParams,\n          'datasets[0]': 'public-global-loitering-events:latest'\n        }\n      })\n    ]);\n\n    // Combine and sort the events from both responses\n    const allEvents = [\n      ...portVisitsResponse.data.entries.map(entry => ({\n        ...entry,\n        type: 'Port Visit',\n        speed: entry.vessel?.speed !== undefined ? msToKnots(entry.vessel.speed) : null\n      })),\n      ...loiteringResponse.data.entries.map(entry => ({\n        ...entry,\n        type: 'Loitering',\n        speed: entry.vessel?.speed !== undefined ? msToKnots(entry.vessel.speed) : null\n      }))\n    ].sort((a, b) => new Date(b.start) - new Date(a.start));\n\n    const formattedEvents = allEvents.map(entry => ({\n      start: entry.start,\n      end: entry.end,\n      position: {\n        ...entry.position,\n        speed: entry.vessel?.speed ? msToKnots(entry.vessel.speed) : null\n      },\n      speed: entry.speed,\n      flag: entry.vessel.flag,\n      name: entry.vessel.name,\n      mmsi: entry.vessel.ssvid,\n      type: entry.type\n    }));\n\n    interpolatedEvents.value = generateInterpolatedEvents(formattedEvents);\n    drawVesselTrack(interpolatedEvents.value);\n  } catch (error) {\n    console.error(\"Error fetching vessel track data:\", error);\n  }\n}\n\n// ==============================================\n// TRACK VISUALIZATION FUNCTIONS\n// ==============================================\n\n/**\nDraws the vessel track on the map as a polyline with arrowheads\n */\nconst drawVesselTrack = (trackData) => {\n  let mapInstanceToUse = props.mapInstance;\n  \n  if (!mapInstanceToUse && props.cableStore) {\n    mapInstanceToUse = props.cableStore.getMapInstance;\n  }\n  \n  if (!trackData || trackData.length === 0) {\n    return;\n  }\n  \n  const startDate = new Date(formattedStartDate.value);\n  const endDate = new Date(formattedEndDate.value);\n  \n  if (isNaN(startDate) || isNaN(endDate)) {\n    console.error(\"Invalid date range provided:\", formattedStartDate.value, formattedEndDate.value);\n    return;\n  }\n  \n  // Filter the track data within the date range\n  const filteredData = trackData.filter(event => {\n    const eventStartDate = new Date(event.start);\n    const eventEndDate = new Date(event.end);\n    return (\n      (eventStartDate >= startDate && eventStartDate <= endDate) ||\n      (eventEndDate >= startDate && eventEndDate <= endDate)\n    );\n  });\n    \n  if (filteredData.length === 0) {\n    console.warn(\"No track data within the specified date range.\");\n    return;\n  }\n  \n  // Remove existing vessel track layer if it exists\n  if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n    mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n  }\n  \n  // Get the track points\n  const trackPoints = filteredData.map(event => {\n    if (event.isInterpolated) {\n      return [event.position.lat, event.position.lon];\n    }\n    return [event.position.lat, event.position.lon];\n  }).reverse();\n    \n  try {\n    vesselTrackLayer.value = L.polyline(trackPoints, {\n      color: '#ad7dad',\n      weight: 3,\n      opacity: 0.7\n    }).arrowheads({\n      size: '20px',\n      yawn: 30,\n      fill: true\n    }).addTo(mapInstanceToUse);\n    \n    // Fit the map to the bounds of the track\n    if (vesselTrackLayer.value.getBounds) {\n      mapInstanceToUse.fitBounds(vesselTrackLayer.value.getBounds());\n    }\n  } catch (error) {\n    console.error(\"Error creating polyline:\", error);\n  }\n};\n\n// ==============================================\n// INTERPOLATION FUNCTIONS\n// ==============================================\n\n/**\nInterpolates between two positions based on a fraction\n */\nconst interpolatePosition = (start, end, fraction) => {\n  return {\n    lat: start.lat + (end.lat - start.lat) * fraction,\n    lon: start.lon + (end.lon - start.lon) * fraction,\n    speed: start.speed && end.speed ? start.speed + (end.speed - start.speed) * fraction : null\n  };\n};\n\n/**\nGenerates interpolated events between actual vessel events\n */\nconst generateInterpolatedEvents = (events) => {\n  if (!events || events.length < 2) return events;\n\n  const allEvents = [];\n  const visibleTimeRange = {\n    start: startDate.value.getTime(),\n    end: endDate.value.getTime()\n  };\n\n  // Helper function to check if a time falls within the visible range\n  const isTimeInRange = (time) => {\n    const timestamp = new Date(time).getTime();\n    return timestamp >= visibleTimeRange.start && timestamp <= visibleTimeRange.end;\n  };\n\n  // Helper function to get the visible portion of an interpolation range\n  const getVisibleInterpolationRange = (startTime, endTime) => {\n    return {\n      start: Math.max(startTime, visibleTimeRange.start),\n      end: Math.min(endTime, visibleTimeRange.end)\n    };\n  };\n\n  for (let i = 0; i < events.length - 1; i++) {\n    const startEvent = events[i];\n    const endEvent = events[i + 1];\n    const startTime = new Date(startEvent.end).getTime();\n    const endTime = new Date(endEvent.start).getTime();\n\n    // Add the start event if it's in range\n    if (isTimeInRange(startEvent.start) || isTimeInRange(startEvent.end)) {\n      allEvents.push(startEvent);\n    }\n\n    // Handle interpolation between events\n    const duration = endTime - startTime;\n    if (duration > interpolationInterval && (isTimeInRange(startTime) || isTimeInRange(endTime) || (startTime < visibleTimeRange.end && endTime > visibleTimeRange.start))) {\n      const visibleRange = getVisibleInterpolationRange(startTime, endTime);\n      const visibleDuration = visibleRange.end - visibleRange.start;\n\n      if (visibleDuration > 0) {\n        // Calculate number of interpolation steps based on the visible duration\n        const steps = Math.floor(visibleDuration / interpolationInterval);\n        for (let step = 0; step <= steps; step++) {\n          const currentTime = visibleRange.start + stepinterpolationInterval;\n          const fraction = (currentTime - startTime) / duration;\n          if (currentTime <= visibleRange.end) {\n            const interpolatedPos = interpolatePosition(startEvent.position, endEvent.position, fraction);\n            allEvents.push({\n              isInterpolated: true,\n              time: new Date(currentTime).toISOString(),\n              position: interpolatedPos,\n              startEvent,\n              endEvent,\n              speed: interpolatedPos.speed\n            });\n          }\n        }\n      }\n    }\n  }\n\n  // Add the last event if it's in range\n  if (events.length > 0 && isTimeInRange(events[events.length - 1].start)) {\n    allEvents.push(events[events.length - 1]);\n  }\n\n  return allEvents.sort((a, b) => {\n    const timeA = a.isInterpolated ? new Date(a.time).getTime() : new Date(a.start).getTime();\n    const timeB = b.isInterpolated ? new Date(b.time).getTime() : new Date(b.start).getTime();\n    return timeA - timeB;\n  });\n};\n\n// ==============================================\n// EVENT HANDLERS\n// ==============================================\n\n/**\nHandles ship click events and shows vessel info popup\n */\nconst onShipClick = (e, vessel) => {\n  // Determine which last seen date to show and its source\n  let lastSeenDate, lastSeenSource;\n  if (vessel.lastSeenSource === 'APRS.fi' && vessel.aprsLastSeen) {\n    lastSeenDate = new Date(parseInt(vessel.aprsLastSeen) * 1000);\n    lastSeenSource = 'APRS.fi';\n  } else {\n    lastSeenDate = new Date(vessel.lastSeen);\n    lastSeenSource = 'Global Fishing Watch';\n  }\n  \n  const formattedDate = lastSeenDate.toLocaleString('en-GB', {\n    year: 'numeric', month: 'numeric', day: 'numeric',\n    hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: false\n  });\n  \n  // Format APRS last seen timestamp if available\n  let aprsTimeInfo = '';\n  if (vessel.aprsLastSeen) {\n    const aprsDate = new Date(parseInt(vessel.aprsLastSeen) * 1000);\n    const formattedAprsDate = aprsDate.toLocaleString('en-GB', {\n      year: 'numeric', month: 'numeric', day: 'numeric',\n      hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: false\n    });\n    aprsTimeInfo = ` (Updated: ${formattedAprsDate})`;\n  }\n\n  // Format speed information with source\n  const speedInfo = vessel.speed !== null && vessel.speed !== undefined \n    ? `<strong>${currentTranslations.value.speed || 'Speed'}:</strong> ${vessel.speed.toFixed(1)} knots` +\n      `${vessel.aprsLastSeen ? ' (APRS.fi data' + aprsTimeInfo + ')' : ''}<br/>`\n    : '';\n  \n    const popup = L.popup().setLatLng(e.latlng).setContent(\n  `<div>\n    <strong>${vessel.name}</strong><br/>\n    <strong>${currentTranslations.value.lastSeen}:</strong> ${formattedDate} (${lastSeenSource})<br/>\n    <strong>${currentTranslations.value.event}:</strong> ${vessel.eventType}<br/>\n    ${speedInfo}\n    <strong>MMSI:</strong> ${vessel.ssvid}<br/>\n    <strong>${currentTranslations.value.flag}:</strong> ${getFlagEmoji(vessel.flag)} ${vessel.flag}<br/>\n    <strong>${currentTranslations.value.length}:</strong> ${vessel.length}<br/>\n    <strong>${currentTranslations.value.beam}:</strong> ${vessel.beam}<br/>\n    <strong>${currentTranslations.value.grossTonnage}:</strong> ${vessel.grossTonage}<br/>\n    <strong>${currentTranslations.value.purpose}:</strong> ${vessel.purpose}<br/>\n    <strong>${currentTranslations.value.cableCapacity}:</strong> ${vessel.cableCapacity}<br/>\n    <strong>${currentTranslations.value.notes}:</strong> ${vessel.notes}<br/>\n    <strong>${currentTranslations.value.baseport}:</strong> ${vessel.baseport}<br/>\n    <strong>${currentTranslations.value.owner}:</strong> ${vessel.owner}<br/>\n\n    <a href=\"https://www.vesselfinder.com/vessels/details/${vessel.ssvid}\" target=\"_blank\" style=\"display: inline-block; margin-top: 8px; margin-bottom: 8px; color: #007bff; text-decoration: underline;\">\n      ${currentTranslations.value.viewOn}\n    </a><br/>\n\n    <button id=\"getVesselTrack\" style=\"\n      margin-top: 6px; \n      padding: 8px 14px; \n      background-color: #007bff; \n      color: white; \n      border: none; \n      border-radius: 6px; \n      cursor: pointer; \n      display: inline-flex; \n      align-items: center; \n      font-weight: 600; \n      font-size: 14px;\n      transition: background-color 0.3s ease;\n    \" \n    onmouseover=\"this.style.backgroundColor='#0056b3'\" \n    onmouseout=\"this.style.backgroundColor='#007bff'\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewBox=\"0 0 24 24\" width=\"18\" fill=\"white\" style=\"margin-right: 8px;\">\n        <path d=\"M12 4a8 8 0 1 0 8 8 8.01 8.01 0 0 0-8-8zm.5 8.5h3v-1h-2.5V7h-1v5.5z\"/>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      </svg>\n      ${currentTranslations.value.viewVesselTrack}\n    </button>\n  </div>`\n).openOn(props.mapInstance);\n  \n  document.getElementById(\"getVesselTrack\").addEventListener(\"click\", function(event) {\n    event.preventDefault();\n    viewVesselTrack(vessel);\n  });\n  \n  vessel.popup = popup;\n};\n\n/**\nHandles entering vessel tracking mode for a specific vessel\n */\nconst viewVesselTrack = async(vessel) => {\n  try {\n    if (!vessel || !vessel.ssvid) {\n      console.error('Invalid vessel data provided to viewVesselTrack');\n      return;\n    }\n    \n    vesselTrackingSelected.value = true;\n    isVesselTrackingMode.value = true;\n    \n    // Ensure we have the vessel Id\n    if (vesselIds[vessel.ssvid]) {\n      currentTrackedVessel.value = vesselIds[vessel.ssvid].vesselId;\n    } else {\n      console.error('Vessel ID not found for ssvid:', vessel.ssvid);\n      return;\n    }\n    \n    // Deselect cables\n    props.cableStore.deselectCables();\n    \n    await nextTick();\n    \n    // Don't filter vessel positions if it's from sidebar\n    if (!vessel.fromSidebar && Array.isArray(localVesselPositions.value)) {\n      localVesselPositions.value = localVesselPositions.value.filter(v => v.id === vessel.id);\n      emit('update:vesselPositions', localVesselPositions.value);\n    }\n    \n    // Start tracking\n    await vesselTrack(formattedStartDate.value, formattedEndDate.value);\n    \n    emit('update:viewingVesselTrack', true);\n    // Adjust cable opacity\n    props.cableStore.setAllCablesOpacity(0.15);\n  } catch (error) {\n    console.error('Error in viewVesselTrack:', error);\n    isVesselTrackingMode.value = false;\n    vesselTrackingSelected.value = false;\n  }\n};\n\n/**\nHandles exiting vessel tracking mode and cleaning up\n */\nconst exitVesselTrackingMode = () => {\n  isVesselTrackingMode.value = false;\n  vesselTrackingSelected.value = false;\n  currentTrackedVessel.value = null;\n  hoveredMarker.value = null;\n  emit('update:hoveredMarker', null);\n  \n  // Clear the cable ships layer group\n  const updatedPositions = props.vesselPositions.filter(vessel => {\n    if (vessel.fromSidebar) {\n      if (vessel.marker && props.mapInstance.hasLayer(vessel.marker)) {\n        props.mapInstance.removeLayer(vessel.marker);\n      }\n      if (vessel.popup && props.mapInstance.hasLayer(vessel.popup)) {\n        props.mapInstance.removeLayer(vessel.popup);        \n      }        \n    }\n    props.layerGroup.clearLayers();\n  });\n\n  emit('update:viewingVesselTrack', false);\n  vesselTracking();\n  props.cableStore.dataCables.forEach(cable => {\n    cable.opacity = 1;\n  });\n  if (vesselTrackLayer.value) {\n    props.mapInstance.removeLayer(vesselTrackLayer.value);\n    vesselTrackLayer.value = null;\n  }\n};\n\n/**\nHandles hover events on timeline events\n */\nconst onEventHover = (event) => onMarkerHover(event, false);\n\n/**\nHandles hover events on interpolated timeline events\n */\nconst onInterEventHover = (data) => onMarkerHover(data, true);\n\n/**\nHandles marker hover events for both actual and interpolated events\n */\nconst onMarkerHover = (eventData, isInterpolated = false) => {\n  if (!hoveredMarker.value) {\n    const markerData = {\n      id: eventData.mmsi || 'Unknown',\n      position: [eventData.position.lat, eventData.position.lon],\n      flag: isInterpolated ? eventData.startEvent.flag || 'Unknown' : eventData.flag || 'Unknown',\n      tooltip: L.tooltip({\n        permanent: false,\n        direction: 'top',\n        className: 'custom-tooltip',\n        offset: [0, -10],\n        html: true\n      }).setContent(\n        isInterpolated ?\n          `${eventData.startEvent.name || 'Unknown Vessel'}<br>\n          Interpolated Time: ${formatDate(eventData.time)}<br>\n${(eventData.speed || eventData.position?.speed) ? `Speed: ${(eventData.speed || eventData.position.speed).toFixed(1)} knots<br>` : ''}\n          Between events:<br>\n          Start: ${formatDate(eventData.startEvent.end)}<br>\n          End: ${formatDate(eventData.endEvent.start)}` :\n          `${eventData.name || 'Unknown Vessel'}<br>\n          Event: ${eventData.type}<br>\n          ${eventData.speed ? `Speed: ${eventData.speed.toFixed(1)} knots<br>` : ''}\n          Start: ${formatDate(eventData.start)}<br>\n          End: ${formatDate(eventData.end)}`\n      )\n    };\n    \n    // Check if vesselPositions has at least one element\n    const vesselData = props.vesselPositions.length > 0 \n      ? props.vesselPositions[0]\n      : {\n          id: eventData.mmsi || 'Unknown',\n          name: eventData.name || 'Unknown Vessel',\n          position: {\n            lat: eventData.position.lat,\n            lon: eventData.position.lon\n          },\n          lastSeen: eventData.end || new Date().toISOString(),\n          eventType: eventData.type || 'Unknown'\n        };\n    \n    const marker = L.marker(markerData.position, {\n      icon: createShipIcon('#636363', markerData.flag, vesselData),\n    }).bindTooltip(markerData.tooltip).on('click', () => {\n      marker.openTooltip();\n    });\n    \n    hoveredMarker.value = marker;\n  } else {\n    hoveredMarker.value.setLatLng([eventData.position.lat, eventData.position.lon]);\n  }\n  \n  emit('update:hoveredMarker', hoveredMarker.value);\n};\n\n// ==============================================\n// UTILITY FUNCTIONS\n// ==============================================\n\n/**\nConverts vessel IDs object to array\n */\nfunction vesselIdsToArray(vessels) {\n  let vesselIds = [];\n  for (let key in vessels) {\n    vesselIds.push(vessels[key].vesselId);\n  }\n  return vesselIds;\n}\n\n/**\nConverts speed from m/s to knots\n */\nfunction msToKnots(metersPerSecond) {\n  return metersPerSecond * 1.94384;\n}\n\n/**\nFunction to stop default event propagation\n */\nconst stopEvent = (e) => {\n  e.stopPropagation();\n};\n\n/**\nCreates a ship icon with flag and color based on last seen date\n */\nconst createShipIcon = (baseColor = '#ff7800', countryCode = 'Unknown', vessel) => {\n  const flagEmoji = countryCode !== 'Unknown' ? getFlagEmoji(countryCode) : '🏴‍☠️';\n  const lastDateSeen = new Date(vessel.lastSeen);\n  const currentDate = new Date();\n  const daysSinceLastSeen = (currentDate - lastDateSeen) / (1000606024);\n\n  const getColorComponent = (start, end, fraction) => {\n    return Math.round(start + fraction * (end - start));\n  };\n\n  const calculateColor = (daysSinceLastSeen) => {\n    // Use a non-linear function to make color change faster initially\n    const fraction = Math.min(Math.pow(daysSinceLastSeen / 60, 1.5), 1);\n    const startColor = hexToRgb(baseColor);\n    const endColor = hexToRgb('#8B4513'); // Brown\n    const r = getColorComponent(startColor.r, endColor.r, fraction);\n    const g = getColorComponent(startColor.g, endColor.g, fraction);\n    const b = getColorComponent(startColor.b, endColor.b, fraction);\n    return rgbToHex(r, g, b);\n  };\n\n  const color = calculateColor(daysSinceLastSeen);\n\n  const icon = L.divIcon({\n    html: `\n      <div class=\"ship-icon-container\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n          <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\" fill=\"${color}\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n        <span class=\"ship-flag\">${flagEmoji}</span>\n      </div>\n    `,\n    className: 'ship-icon',\n    iconSize: [24, 24],\n    iconAnchor: [12, 12],\n  });\n  return icon;\n};\n\n/**\nHelper function to convert hex to RGB\n */\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n/**\nHelper function to convert RGB to hex\n */\nfunction rgbToHex(r, g, b) {\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n}\n\n/**\nConverts country code to flag emoji\n */\nconst getFlagEmoji = (countryCode) => {\n  // Handle specific cases for country codes\n  if (countryCode === 'KOR') { // South Korea\n    countryCode = 'KR';\n  } else if (countryCode === 'SWE') { // Sweden\n    countryCode = 'SE';\n  } else if (countryCode === 'ARE') { // United Arab Emirates\n    countryCode = 'AE';\n  } else if (countryCode === 'ATG') { // Antigua and Barbuda\n    countryCode = 'AG';\n  } else if (countryCode === 'BRB') { // Barbados\n    countryCode = 'BB';\n  }\n\n  const codePoints = countryCode\n    .toUpperCase()\n    .slice(0, 2)\n    .split('')\n    .map(char => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n};\n\n// ==============================================\n// EXPOSED METHODS\n// ==============================================\n\n__expose({\n  vesselLayerReady,\n  isVesselTrackingMode,\n  vesselTrackingSelected,\n  vesselEvents,\n  hoveredMarker,\n  startDate,\n  endDate,\n  localVesselPositions,\n  onShipClick,\n  createShipIcon,\n  exitVesselTrackingMode,\n  vesselTracking,\n  viewVesselTrack\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (vesselTrackingSelected.value)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: \"date-popup-vesselTrack\",\n        onMousedown: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"])),\n        onTouchstart: stopEvent\n      }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          (isVesselTrackingMode.value)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: exitVesselTrackingMode,\n                class: \"deselect-vessel-tracking-btn\"\n              }, _toDisplayString(currentTranslations.value?.exitVesselTracking || 'Exit Vessel Tracking'), 1))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createVNode(_unref(VueDatePicker), {\n              modelValue: dateRange.value,\n              \"onUpdate:modelValue\": [\n                _cache[0] || (_cache[0] = ($event: any) => ((dateRange).value = $event)),\n                onDatePickerChange\n              ],\n              placeholder: currentTranslations.value?.datePlaceholder || 'Select date range',\n              \"preview-format\": format,\n              format: format,\n              \"enable-time-picker\": false,\n              range: { partialRange: false },\n              dark: \"\",\n              class: \"custom-datepicker\",\n              \"no-today\": \"\",\n              \"max-date\": new Date()\n            }, null, 8, [\"modelValue\", \"placeholder\", \"max-date\"])\n          ])\n        ]),\n        (vesselTrackingSelected.value)\n          ? (_openBlock(), _createBlock(TimelineSlider, {\n              key: 0,\n              startDate: startDate.value,\n              \"onUpdate:startDate\": [\n                _cache[1] || (_cache[1] = ($event: any) => ((startDate).value = $event)),\n                onDateChange\n              ],\n              endDate: endDate.value,\n              \"onUpdate:endDate\": [\n                _cache[2] || (_cache[2] = ($event: any) => ((endDate).value = $event)),\n                onDateChange\n              ],\n              events: interpolatedEvents.value,\n              onEventHover: onEventHover,\n              onInterEventHover: onInterEventHover\n            }, null, 8, [\"startDate\", \"endDate\", \"events\"]))\n          : _createCommentVNode(\"\", true)\n      ], 32))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<!--\nVesselTracking.vue - Component for tracking and displaying vessel movements on a map\n\nFeatures:\n- Displays vessel tracking controls and timeline\n- Shows vessel positions from multiple data sources\n- Allows viewing historical vessel tracks\n- Provides interactive timeline with event hovering\n- Supports date range selection for tracking\n-->\n\n<template>\n  <div v-if=\"vesselTrackingSelected\" class=\"date-popup-vesselTrack\" @mousedown.stop @touchstart=\"stopEvent\">\n    <div class=\"tracking-controls\">\n      <button \n        v-if=\"isVesselTrackingMode\" \n        @click=\"exitVesselTrackingMode\" \n        class=\"deselect-vessel-tracking-btn\"\n      >\n        {{ currentTranslations?.exitVesselTracking || 'Exit Vessel Tracking' }}\n      </button>\n      <div class=\"date-picker-container\">\n        <VueDatePicker\n          v-model=\"dateRange\"\n          @update:model-value=\"onDatePickerChange\"\n          :placeholder=\"currentTranslations?.datePlaceholder || 'Select date range'\"\n          :preview-format=\"format\"\n          :format=\"format\"\n          :enable-time-picker=\"false\"\n          :range=\"{ partialRange: false }\"\n          dark\n          class=\"custom-datepicker\"\n          no-today\n          :max-date=\"new Date()\"\n        />\n      </div>\n    </div>\n    <TimelineSlider\n      v-if=\"vesselTrackingSelected\"\n      v-model:startDate=\"startDate\"\n      v-model:endDate=\"endDate\"\n      :events=\"interpolatedEvents\"\n      @update:startDate=\"onDateChange\"\n      @update:endDate=\"onDateChange\"\n      @eventHover=\"onEventHover\"\n      @interEventHover=\"onInterEventHover\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, computed, defineEmits, defineExpose, nextTick, PropType } from 'vue';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport TimelineSlider from '@/components/controls/TimelineSlider.vue';\nimport vesselIds from \"@/assets/vesselIds.json\";\nimport translations from \"@/assets/translations/translations.json\";\n\n// ==============================================\n// PROPS AND EMITS\n// ==============================================\n\nconst props = defineProps({\n  mapInstance: { type: Object as PropType<L.Map>, required: false },\n  currentLanguage: { type: String, required: false },\n  cableStore: { type: Object, required: false },\n  controlInstance: { type: Object, required: false },\n  layerGroup: { type: Object, required: false },\n  mapReady: { type: Boolean, required: false },\n  vesselPositions: { type: Array as PropType<any[]>, default: () => [] },\n});\n\nconst emit = defineEmits(['update:vesselPositions', 'update:hoveredMarker', 'update:viewingVesselTrack']);\n\n// ==============================================\n// REACTIVE STATE\n// ==============================================\n\n// Vessel data and tracking state\nconst localVesselPositions = ref(props.vesselPositions ? [...props.vesselPositions] : []);\nconst vesselLayerReady = ref(false);\nconst vesselPostResponse = ref(null);\nconst vesselModifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{y}/{x}.png');\nconst isVesselTrackingMode = ref(false);\nconst vesselTrackingSelected = ref(false);\nconst vesselEvents = ref([]);\nconst hoveredMarker = ref();\nconst currentTrackedVessel = ref(null);\nconst vesselTrackLayer = ref(null);\nconst interpolatedEvents = ref([]);\nconst interpolationInterval = 3600000; // 1 hour in ms\n\n// Date range state\nconst startDate = ref(new Date(new Date().setMonth(new Date().getMonth() - 1)));\nconst endDate = ref(new Date());\nconst dateRange = ref<[Date, Date]>([new Date(new Date().setMonth(new Date().getMonth() - 1)), new Date()]);\nconst format = 'dd/MM/yyyy';\nconst formattedEndDate = ref(new Date());\nconst formattedStartDate = ref(new Date(formattedEndDate.value.getFullYear() - 1, formattedEndDate.value.getMonth(), formattedEndDate.value.getDate()));\n\n// API endpoints\nconst vesselTrackingUrl = 'https://karte2-api.sdcs.dev.peasec.de/fishing/v3/events';\nconst vesselTrackingParams = {\n  limit: 1,\n  offset: 0,\n  sort: '-start',\n};\n\n// ==============================================\n// COMPUTED PROPERTIES\n// ==============================================\n\nconst currentTranslations = computed(() => translations[props.currentLanguage]);\n\n// ==============================================\n// WATCHERS\n// ==============================================\n\nwatch(() => props.vesselPositions, (newPositions) => {\n  if (newPositions) {\n    localVesselPositions.value = [...newPositions];\n  }\n}, { deep: true });\n\nwatch(() => props.mapReady, (isReady) => {\n  if (isReady) {\n    vesselTracking();\n  }\n});\n\nwatch([startDate, endDate], () => {\n  dateRange.value = [startDate.value, endDate.value];\n});\n\n// ==============================================\n// DATE HANDLING FUNCTIONS\n// ==============================================\n\n/**\nHandles date picker changes and updates the date range\n */\nconst onDatePickerChange = (selectedDates: [Date, Date]) => {\n  if (selectedDates && selectedDates.length === 2) {\n    startDate.value = selectedDates[0];\n    endDate.value = selectedDates[1];\n  }\n};\n\n/**\nHandles date changes from the timeline slider\n */\nconst onDateChange = () => {\n  if (vesselTrackingSelected.value) {\n    formattedStartDate.value = formatDate(startDate.value);\n    formattedEndDate.value = formatDate(endDate.value);\n    vesselTrack(formattedStartDate.value, formattedEndDate.value);\n  }\n};\n\n/**\nFormats a date object into YYYY-MM-DD string\n */\nconst formatDate = (date) => {\n  const d = new Date(date);\n  let month = '' + (d.getMonth() + 1);\n  let day = '' + d.getDate();\n  const year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\n// ==============================================\n// VESSEL TRACKING AND POSITION FUNCTIONS\n// ==============================================\n\n/**\nMain function to fetch and display vessel positions\n */\nasync function vesselTracking() {\n  try {\n    const vesselIdsArray = vesselIdsToArray(vesselIds);\n    const allVesselPositions = [];\n    props.layerGroup.clearLayers();\n\n    // First get all vessel data from GFW API\n    for (const vesselId of vesselIdsArray) {\n      const loiteringParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-loitering-events:latest',\n      };\n      const portVisitParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-port-visits-c2-events:latest',\n      };\n      \n      const [loiteringResponse, portVisitResponse] = await Promise.all([\n        axios.get(vesselTrackingUrl, { params: loiteringParams }),\n        axios.get(vesselTrackingUrl, { params: portVisitParams })\n      ]);\n\n      let latestEvent = null;\n      let eventType = '';\n      let speedValue = null;\n      \n      if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n        latestEvent = loiteringResponse.data.entries[0];\n        eventType = 'Loitering';\n        speedValue = latestEvent.vessel?.speed !== undefined ? msToKnots(latestEvent.vessel.speed) : null;\n      }\n      \n      if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n        const portVisitEvent = portVisitResponse.data.entries[0];\n        const portVisitSpeed = portVisitEvent.vessel?.speed !== undefined ? msToKnots(portVisitEvent.vessel.speed) : null;\n        \n        if (!latestEvent || new Date(portVisitEvent.end) > new Date(latestEvent.end)) {\n          latestEvent = portVisitEvent;\n          eventType = 'Port Visit';\n          speedValue = portVisitSpeed;\n        }\n      }\n      \n      if (latestEvent) {\n        allVesselPositions.push({\n          id: vesselId,\n          name: latestEvent.vessel?.name || 'Unknown Vessel',\n          position: latestEvent.position,\n          lastSeen: latestEvent.end,\n          eventType: eventType,\n          ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n          flag: latestEvent.vessel?.flag || 'ARE',\n          speed: speedValue,\n          aprsLastSeen: null\n        });\n      }\n    }\n    \n    // Collect valid callsigns for APRS.fi batch query\n    const validCallsigns = allVesselPositions\n      .filter(vessel => vessel.ssvid && vessel.ssvid !== 'Unknown')\n      .map(vessel => vessel.ssvid);\n    \n    // If we have valid callsigns, make batch API requests to APRS.fi\n    if (validCallsigns.length > 0) {\n      const batchSize = 20;\n      const batches = [];\n      \n      for (let i = 0; i < validCallsigns.length; i += batchSize) {\n        batches.push(validCallsigns.slice(i, i + batchSize));\n      }\n      \n      // Process each batch\n      for (const batch of batches) {\n        try {\n          const batchCallsigns = batch.join(',');\n          \n          const response = await axios.get(`https://sdcs-api.dev.peasec.de/aprs/get`, {\n            params: {\n              name: batchCallsigns,\n              what: 'loc',\n              format: 'json'\n            }\n          });\n          \n          if (response.data.result === 'ok' && response.data.found > 0) {\n            response.data.entries.forEach(entry => {\n              const vessel = allVesselPositions.find(v => v.ssvid === entry.mmsi);\n              if (vessel) {\n                const aprsTimestamp = entry.lasttime ? parseInt(entry.lasttime) * 1000 : null;\n                const currentLastSeen = new Date(vessel.lastSeen).getTime();\n                \n                if (aprsTimestamp && aprsTimestamp > currentLastSeen) {\n                  vessel.lastSeen = new Date(aprsTimestamp).toISOString();\n                  vessel.lastSeenSource = 'APRS.fi';\n                }\n                \n                if (entry.speed) {\n                  vessel.speed = parseFloat(entry.speed) * 0.539957; // Convert km/h to knots\n                  vessel.speedSource = 'APRS.fi';\n                }\n                \n                vessel.aprsLastSeen = entry.lasttime || null;\n              }\n            });\n          }\n        } catch (error) {\n          console.error(\"Error fetching batch vessel speed from APRS.fi:\", error);\n        }\n      }\n    }\n    \n    // Add additional vessel attributes and finalize\n    allVesselPositions.forEach(vessel => {\n      const ssvid = vessel.ssvid;\n      if (vesselIds[ssvid]) {\n        vessel.length = vesselIds[ssvid].length || 'Unknown';\n        vessel.beam = vesselIds[ssvid].beam || 'Unknown';\n        vessel.grossTonage = vesselIds[ssvid].grossTonage || 'Unknown';\n        vessel.purpose = vesselIds[ssvid].purpose || 'Unknown';\n        vessel.cableCapacity = vesselIds[ssvid].cableCapacity || 'Unknown';\n        vessel.notes = vesselIds[ssvid].notes || 'Unknown';\n        vessel.baseport = vesselIds[ssvid].baseport || 'Unknown';\n        vessel.owner = vesselIds[ssvid].owner || 'Unknown';\n      } else {\n        vessel.length = 'Unknown';\n        vessel.beam = 'Unknown';\n        vessel.grossTonage = 'Unknown';\n      }\n    });\n\n    localVesselPositions.value = allVesselPositions;\n    emit('update:vesselPositions', localVesselPositions.value);\n    vesselPostResponse.value = { data: { entries: allVesselPositions } };\n    vesselModifiedPostUrl.value = vesselTrackingUrl.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n  } catch (error) {\n    console.error(\"Error fetching vessel tracking data:\", error);\n  }\n  vesselLayerReady.value = true;\n}\n\n/**\nFetches and displays track for a specific vessel within a date range\n */\nasync function vesselTrack(startDate, endDate) {\n  if (!currentTrackedVessel.value) return;\n\n  const extendedStartDate = new Date(startDate);\n  const extendedEndDate = new Date(endDate);\n\n  extendedStartDate.setMonth(extendedStartDate.getMonth() - 5);\n  extendedEndDate.setMonth(extendedEndDate.getMonth() + 5);\n\n  const baseParams = {\n    limit: 1000,\n    offset: 0,\n    sort: '-start',\n    vessels: [currentTrackedVessel.value],\n    'start-date': formatDate(extendedStartDate),\n    'end-date': formatDate(extendedEndDate),\n  };\n\n  try {\n    const [portVisitsResponse, loiteringResponse] = await Promise.all([\n      axios.get(vesselTrackingUrl, {\n        params: {\n          ...baseParams,\n          'datasets[0]': 'public-global-port-visits-c2-events:latest'\n        }\n      }),\n      axios.get(vesselTrackingUrl, {\n        params: {\n          ...baseParams,\n          'datasets[0]': 'public-global-loitering-events:latest'\n        }\n      })\n    ]);\n\n    // Combine and sort the events from both responses\n    const allEvents = [\n      ...portVisitsResponse.data.entries.map(entry => ({\n        ...entry,\n        type: 'Port Visit',\n        speed: entry.vessel?.speed !== undefined ? msToKnots(entry.vessel.speed) : null\n      })),\n      ...loiteringResponse.data.entries.map(entry => ({\n        ...entry,\n        type: 'Loitering',\n        speed: entry.vessel?.speed !== undefined ? msToKnots(entry.vessel.speed) : null\n      }))\n    ].sort((a, b) => new Date(b.start) - new Date(a.start));\n\n    const formattedEvents = allEvents.map(entry => ({\n      start: entry.start,\n      end: entry.end,\n      position: {\n        ...entry.position,\n        speed: entry.vessel?.speed ? msToKnots(entry.vessel.speed) : null\n      },\n      speed: entry.speed,\n      flag: entry.vessel.flag,\n      name: entry.vessel.name,\n      mmsi: entry.vessel.ssvid,\n      type: entry.type\n    }));\n\n    interpolatedEvents.value = generateInterpolatedEvents(formattedEvents);\n    drawVesselTrack(interpolatedEvents.value);\n  } catch (error) {\n    console.error(\"Error fetching vessel track data:\", error);\n  }\n}\n\n// ==============================================\n// TRACK VISUALIZATION FUNCTIONS\n// ==============================================\n\n/**\nDraws the vessel track on the map as a polyline with arrowheads\n */\nconst drawVesselTrack = (trackData) => {\n  let mapInstanceToUse = props.mapInstance;\n  \n  if (!mapInstanceToUse && props.cableStore) {\n    mapInstanceToUse = props.cableStore.getMapInstance;\n  }\n  \n  if (!trackData || trackData.length === 0) {\n    return;\n  }\n  \n  const startDate = new Date(formattedStartDate.value);\n  const endDate = new Date(formattedEndDate.value);\n  \n  if (isNaN(startDate) || isNaN(endDate)) {\n    console.error(\"Invalid date range provided:\", formattedStartDate.value, formattedEndDate.value);\n    return;\n  }\n  \n  // Filter the track data within the date range\n  const filteredData = trackData.filter(event => {\n    const eventStartDate = new Date(event.start);\n    const eventEndDate = new Date(event.end);\n    return (\n      (eventStartDate >= startDate && eventStartDate <= endDate) ||\n      (eventEndDate >= startDate && eventEndDate <= endDate)\n    );\n  });\n    \n  if (filteredData.length === 0) {\n    console.warn(\"No track data within the specified date range.\");\n    return;\n  }\n  \n  // Remove existing vessel track layer if it exists\n  if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n    mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n  }\n  \n  // Get the track points\n  const trackPoints = filteredData.map(event => {\n    if (event.isInterpolated) {\n      return [event.position.lat, event.position.lon];\n    }\n    return [event.position.lat, event.position.lon];\n  }).reverse();\n    \n  try {\n    vesselTrackLayer.value = L.polyline(trackPoints, {\n      color: '#ad7dad',\n      weight: 3,\n      opacity: 0.7\n    }).arrowheads({\n      size: '20px',\n      yawn: 30,\n      fill: true\n    }).addTo(mapInstanceToUse);\n    \n    // Fit the map to the bounds of the track\n    if (vesselTrackLayer.value.getBounds) {\n      mapInstanceToUse.fitBounds(vesselTrackLayer.value.getBounds());\n    }\n  } catch (error) {\n    console.error(\"Error creating polyline:\", error);\n  }\n};\n\n// ==============================================\n// INTERPOLATION FUNCTIONS\n// ==============================================\n\n/**\nInterpolates between two positions based on a fraction\n */\nconst interpolatePosition = (start, end, fraction) => {\n  return {\n    lat: start.lat + (end.lat - start.lat) * fraction,\n    lon: start.lon + (end.lon - start.lon) * fraction,\n    speed: start.speed && end.speed ? start.speed + (end.speed - start.speed) * fraction : null\n  };\n};\n\n/**\nGenerates interpolated events between actual vessel events\n */\nconst generateInterpolatedEvents = (events) => {\n  if (!events || events.length < 2) return events;\n\n  const allEvents = [];\n  const visibleTimeRange = {\n    start: startDate.value.getTime(),\n    end: endDate.value.getTime()\n  };\n\n  // Helper function to check if a time falls within the visible range\n  const isTimeInRange = (time) => {\n    const timestamp = new Date(time).getTime();\n    return timestamp >= visibleTimeRange.start && timestamp <= visibleTimeRange.end;\n  };\n\n  // Helper function to get the visible portion of an interpolation range\n  const getVisibleInterpolationRange = (startTime, endTime) => {\n    return {\n      start: Math.max(startTime, visibleTimeRange.start),\n      end: Math.min(endTime, visibleTimeRange.end)\n    };\n  };\n\n  for (let i = 0; i < events.length - 1; i++) {\n    const startEvent = events[i];\n    const endEvent = events[i + 1];\n    const startTime = new Date(startEvent.end).getTime();\n    const endTime = new Date(endEvent.start).getTime();\n\n    // Add the start event if it's in range\n    if (isTimeInRange(startEvent.start) || isTimeInRange(startEvent.end)) {\n      allEvents.push(startEvent);\n    }\n\n    // Handle interpolation between events\n    const duration = endTime - startTime;\n    if (duration > interpolationInterval && (isTimeInRange(startTime) || isTimeInRange(endTime) || (startTime < visibleTimeRange.end && endTime > visibleTimeRange.start))) {\n      const visibleRange = getVisibleInterpolationRange(startTime, endTime);\n      const visibleDuration = visibleRange.end - visibleRange.start;\n\n      if (visibleDuration > 0) {\n        // Calculate number of interpolation steps based on the visible duration\n        const steps = Math.floor(visibleDuration / interpolationInterval);\n        for (let step = 0; step <= steps; step++) {\n          const currentTime = visibleRange.start + stepinterpolationInterval;\n          const fraction = (currentTime - startTime) / duration;\n          if (currentTime <= visibleRange.end) {\n            const interpolatedPos = interpolatePosition(startEvent.position, endEvent.position, fraction);\n            allEvents.push({\n              isInterpolated: true,\n              time: new Date(currentTime).toISOString(),\n              position: interpolatedPos,\n              startEvent,\n              endEvent,\n              speed: interpolatedPos.speed\n            });\n          }\n        }\n      }\n    }\n  }\n\n  // Add the last event if it's in range\n  if (events.length > 0 && isTimeInRange(events[events.length - 1].start)) {\n    allEvents.push(events[events.length - 1]);\n  }\n\n  return allEvents.sort((a, b) => {\n    const timeA = a.isInterpolated ? new Date(a.time).getTime() : new Date(a.start).getTime();\n    const timeB = b.isInterpolated ? new Date(b.time).getTime() : new Date(b.start).getTime();\n    return timeA - timeB;\n  });\n};\n\n// ==============================================\n// EVENT HANDLERS\n// ==============================================\n\n/**\nHandles ship click events and shows vessel info popup\n */\nconst onShipClick = (e, vessel) => {\n  // Determine which last seen date to show and its source\n  let lastSeenDate, lastSeenSource;\n  if (vessel.lastSeenSource === 'APRS.fi' && vessel.aprsLastSeen) {\n    lastSeenDate = new Date(parseInt(vessel.aprsLastSeen) * 1000);\n    lastSeenSource = 'APRS.fi';\n  } else {\n    lastSeenDate = new Date(vessel.lastSeen);\n    lastSeenSource = 'Global Fishing Watch';\n  }\n  \n  const formattedDate = lastSeenDate.toLocaleString('en-GB', {\n    year: 'numeric', month: 'numeric', day: 'numeric',\n    hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: false\n  });\n  \n  // Format APRS last seen timestamp if available\n  let aprsTimeInfo = '';\n  if (vessel.aprsLastSeen) {\n    const aprsDate = new Date(parseInt(vessel.aprsLastSeen) * 1000);\n    const formattedAprsDate = aprsDate.toLocaleString('en-GB', {\n      year: 'numeric', month: 'numeric', day: 'numeric',\n      hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: false\n    });\n    aprsTimeInfo = ` (Updated: ${formattedAprsDate})`;\n  }\n\n  // Format speed information with source\n  const speedInfo = vessel.speed !== null && vessel.speed !== undefined \n    ? `<strong>${currentTranslations.value.speed || 'Speed'}:</strong> ${vessel.speed.toFixed(1)} knots` +\n      `${vessel.aprsLastSeen ? ' (APRS.fi data' + aprsTimeInfo + ')' : ''}<br/>`\n    : '';\n  \n    const popup = L.popup().setLatLng(e.latlng).setContent(\n  `<div>\n    <strong>${vessel.name}</strong><br/>\n    <strong>${currentTranslations.value.lastSeen}:</strong> ${formattedDate} (${lastSeenSource})<br/>\n    <strong>${currentTranslations.value.event}:</strong> ${vessel.eventType}<br/>\n    ${speedInfo}\n    <strong>MMSI:</strong> ${vessel.ssvid}<br/>\n    <strong>${currentTranslations.value.flag}:</strong> ${getFlagEmoji(vessel.flag)} ${vessel.flag}<br/>\n    <strong>${currentTranslations.value.length}:</strong> ${vessel.length}<br/>\n    <strong>${currentTranslations.value.beam}:</strong> ${vessel.beam}<br/>\n    <strong>${currentTranslations.value.grossTonnage}:</strong> ${vessel.grossTonage}<br/>\n    <strong>${currentTranslations.value.purpose}:</strong> ${vessel.purpose}<br/>\n    <strong>${currentTranslations.value.cableCapacity}:</strong> ${vessel.cableCapacity}<br/>\n    <strong>${currentTranslations.value.notes}:</strong> ${vessel.notes}<br/>\n    <strong>${currentTranslations.value.baseport}:</strong> ${vessel.baseport}<br/>\n    <strong>${currentTranslations.value.owner}:</strong> ${vessel.owner}<br/>\n\n    <a href=\"https://www.vesselfinder.com/vessels/details/${vessel.ssvid}\" target=\"_blank\" style=\"display: inline-block; margin-top: 8px; margin-bottom: 8px; color: #007bff; text-decoration: underline;\">\n      ${currentTranslations.value.viewOn}\n    </a><br/>\n\n    <button id=\"getVesselTrack\" style=\"\n      margin-top: 6px; \n      padding: 8px 14px; \n      background-color: #007bff; \n      color: white; \n      border: none; \n      border-radius: 6px; \n      cursor: pointer; \n      display: inline-flex; \n      align-items: center; \n      font-weight: 600; \n      font-size: 14px;\n      transition: background-color 0.3s ease;\n    \" \n    onmouseover=\"this.style.backgroundColor='#0056b3'\" \n    onmouseout=\"this.style.backgroundColor='#007bff'\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewBox=\"0 0 24 24\" width=\"18\" fill=\"white\" style=\"margin-right: 8px;\">\n        <path d=\"M12 4a8 8 0 1 0 8 8 8.01 8.01 0 0 0-8-8zm.5 8.5h3v-1h-2.5V7h-1v5.5z\"/>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      </svg>\n      ${currentTranslations.value.viewVesselTrack}\n    </button>\n  </div>`\n).openOn(props.mapInstance);\n  \n  document.getElementById(\"getVesselTrack\").addEventListener(\"click\", function(event) {\n    event.preventDefault();\n    viewVesselTrack(vessel);\n  });\n  \n  vessel.popup = popup;\n};\n\n/**\nHandles entering vessel tracking mode for a specific vessel\n */\nconst viewVesselTrack = async(vessel) => {\n  try {\n    if (!vessel || !vessel.ssvid) {\n      console.error('Invalid vessel data provided to viewVesselTrack');\n      return;\n    }\n    \n    vesselTrackingSelected.value = true;\n    isVesselTrackingMode.value = true;\n    \n    // Ensure we have the vessel Id\n    if (vesselIds[vessel.ssvid]) {\n      currentTrackedVessel.value = vesselIds[vessel.ssvid].vesselId;\n    } else {\n      console.error('Vessel ID not found for ssvid:', vessel.ssvid);\n      return;\n    }\n    \n    // Deselect cables\n    props.cableStore.deselectCables();\n    \n    await nextTick();\n    \n    // Don't filter vessel positions if it's from sidebar\n    if (!vessel.fromSidebar && Array.isArray(localVesselPositions.value)) {\n      localVesselPositions.value = localVesselPositions.value.filter(v => v.id === vessel.id);\n      emit('update:vesselPositions', localVesselPositions.value);\n    }\n    \n    // Start tracking\n    await vesselTrack(formattedStartDate.value, formattedEndDate.value);\n    \n    emit('update:viewingVesselTrack', true);\n    // Adjust cable opacity\n    props.cableStore.setAllCablesOpacity(0.15);\n  } catch (error) {\n    console.error('Error in viewVesselTrack:', error);\n    isVesselTrackingMode.value = false;\n    vesselTrackingSelected.value = false;\n  }\n};\n\n/**\nHandles exiting vessel tracking mode and cleaning up\n */\nconst exitVesselTrackingMode = () => {\n  isVesselTrackingMode.value = false;\n  vesselTrackingSelected.value = false;\n  currentTrackedVessel.value = null;\n  hoveredMarker.value = null;\n  emit('update:hoveredMarker', null);\n  \n  // Clear the cable ships layer group\n  const updatedPositions = props.vesselPositions.filter(vessel => {\n    if (vessel.fromSidebar) {\n      if (vessel.marker && props.mapInstance.hasLayer(vessel.marker)) {\n        props.mapInstance.removeLayer(vessel.marker);\n      }\n      if (vessel.popup && props.mapInstance.hasLayer(vessel.popup)) {\n        props.mapInstance.removeLayer(vessel.popup);        \n      }        \n    }\n    props.layerGroup.clearLayers();\n  });\n\n  emit('update:viewingVesselTrack', false);\n  vesselTracking();\n  props.cableStore.dataCables.forEach(cable => {\n    cable.opacity = 1;\n  });\n  if (vesselTrackLayer.value) {\n    props.mapInstance.removeLayer(vesselTrackLayer.value);\n    vesselTrackLayer.value = null;\n  }\n};\n\n/**\nHandles hover events on timeline events\n */\nconst onEventHover = (event) => onMarkerHover(event, false);\n\n/**\nHandles hover events on interpolated timeline events\n */\nconst onInterEventHover = (data) => onMarkerHover(data, true);\n\n/**\nHandles marker hover events for both actual and interpolated events\n */\nconst onMarkerHover = (eventData, isInterpolated = false) => {\n  if (!hoveredMarker.value) {\n    const markerData = {\n      id: eventData.mmsi || 'Unknown',\n      position: [eventData.position.lat, eventData.position.lon],\n      flag: isInterpolated ? eventData.startEvent.flag || 'Unknown' : eventData.flag || 'Unknown',\n      tooltip: L.tooltip({\n        permanent: false,\n        direction: 'top',\n        className: 'custom-tooltip',\n        offset: [0, -10],\n        html: true\n      }).setContent(\n        isInterpolated ?\n          `${eventData.startEvent.name || 'Unknown Vessel'}<br>\n          Interpolated Time: ${formatDate(eventData.time)}<br>\n${(eventData.speed || eventData.position?.speed) ? `Speed: ${(eventData.speed || eventData.position.speed).toFixed(1)} knots<br>` : ''}\n          Between events:<br>\n          Start: ${formatDate(eventData.startEvent.end)}<br>\n          End: ${formatDate(eventData.endEvent.start)}` :\n          `${eventData.name || 'Unknown Vessel'}<br>\n          Event: ${eventData.type}<br>\n          ${eventData.speed ? `Speed: ${eventData.speed.toFixed(1)} knots<br>` : ''}\n          Start: ${formatDate(eventData.start)}<br>\n          End: ${formatDate(eventData.end)}`\n      )\n    };\n    \n    // Check if vesselPositions has at least one element\n    const vesselData = props.vesselPositions.length > 0 \n      ? props.vesselPositions[0]\n      : {\n          id: eventData.mmsi || 'Unknown',\n          name: eventData.name || 'Unknown Vessel',\n          position: {\n            lat: eventData.position.lat,\n            lon: eventData.position.lon\n          },\n          lastSeen: eventData.end || new Date().toISOString(),\n          eventType: eventData.type || 'Unknown'\n        };\n    \n    const marker = L.marker(markerData.position, {\n      icon: createShipIcon('#636363', markerData.flag, vesselData),\n    }).bindTooltip(markerData.tooltip).on('click', () => {\n      marker.openTooltip();\n    });\n    \n    hoveredMarker.value = marker;\n  } else {\n    hoveredMarker.value.setLatLng([eventData.position.lat, eventData.position.lon]);\n  }\n  \n  emit('update:hoveredMarker', hoveredMarker.value);\n};\n\n// ==============================================\n// UTILITY FUNCTIONS\n// ==============================================\n\n/**\nConverts vessel IDs object to array\n */\nfunction vesselIdsToArray(vessels) {\n  let vesselIds = [];\n  for (let key in vessels) {\n    vesselIds.push(vessels[key].vesselId);\n  }\n  return vesselIds;\n}\n\n/**\nConverts speed from m/s to knots\n */\nfunction msToKnots(metersPerSecond) {\n  return metersPerSecond * 1.94384;\n}\n\n/**\nFunction to stop default event propagation\n */\nconst stopEvent = (e) => {\n  e.stopPropagation();\n};\n\n/**\nCreates a ship icon with flag and color based on last seen date\n */\nconst createShipIcon = (baseColor = '#ff7800', countryCode = 'Unknown', vessel) => {\n  const flagEmoji = countryCode !== 'Unknown' ? getFlagEmoji(countryCode) : '🏴‍☠️';\n  const lastDateSeen = new Date(vessel.lastSeen);\n  const currentDate = new Date();\n  const daysSinceLastSeen = (currentDate - lastDateSeen) / (1000606024);\n\n  const getColorComponent = (start, end, fraction) => {\n    return Math.round(start + fraction * (end - start));\n  };\n\n  const calculateColor = (daysSinceLastSeen) => {\n    // Use a non-linear function to make color change faster initially\n    const fraction = Math.min(Math.pow(daysSinceLastSeen / 60, 1.5), 1);\n    const startColor = hexToRgb(baseColor);\n    const endColor = hexToRgb('#8B4513'); // Brown\n    const r = getColorComponent(startColor.r, endColor.r, fraction);\n    const g = getColorComponent(startColor.g, endColor.g, fraction);\n    const b = getColorComponent(startColor.b, endColor.b, fraction);\n    return rgbToHex(r, g, b);\n  };\n\n  const color = calculateColor(daysSinceLastSeen);\n\n  const icon = L.divIcon({\n    html: `\n      <div class=\"ship-icon-container\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n          <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\" fill=\"${color}\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n        <span class=\"ship-flag\">${flagEmoji}</span>\n      </div>\n    `,\n    className: 'ship-icon',\n    iconSize: [24, 24],\n    iconAnchor: [12, 12],\n  });\n  return icon;\n};\n\n/**\nHelper function to convert hex to RGB\n */\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n/**\nHelper function to convert RGB to hex\n */\nfunction rgbToHex(r, g, b) {\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n}\n\n/**\nConverts country code to flag emoji\n */\nconst getFlagEmoji = (countryCode) => {\n  // Handle specific cases for country codes\n  if (countryCode === 'KOR') { // South Korea\n    countryCode = 'KR';\n  } else if (countryCode === 'SWE') { // Sweden\n    countryCode = 'SE';\n  } else if (countryCode === 'ARE') { // United Arab Emirates\n    countryCode = 'AE';\n  } else if (countryCode === 'ATG') { // Antigua and Barbuda\n    countryCode = 'AG';\n  } else if (countryCode === 'BRB') { // Barbados\n    countryCode = 'BB';\n  }\n\n  const codePoints = countryCode\n    .toUpperCase()\n    .slice(0, 2)\n    .split('')\n    .map(char => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n};\n\n// ==============================================\n// EXPOSED METHODS\n// ==============================================\n\ndefineExpose({\n  vesselLayerReady,\n  isVesselTrackingMode,\n  vesselTrackingSelected,\n  vesselEvents,\n  hoveredMarker,\n  startDate,\n  endDate,\n  localVesselPositions,\n  onShipClick,\n  createShipIcon,\n  exitVesselTrackingMode,\n  vesselTracking,\n  viewVesselTrack\n});\n</script>\n\n<style scoped>\n.date-popup-vesselTrack {\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  padding: 0.875rem;\n  /* Keep original width - removed min-width and max-width constraints */\n  z-index: 1000;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease;\n  /* Reduced height by adjusting padding and spacing */\n  max-height: 200px;\n}\n\n.date-popup-vesselTrack:hover {\n  border-color: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);\n}\n\n.tracking-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 0.5rem; /* Reduced from default */\n}\n\n.deselect-vessel-tracking-btn {\n  background: linear-gradient(135deg, #4a5568, #2d3748);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  color: white;\n  font-size: 0.8rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n}\n\n.deselect-vessel-tracking-btn:hover {\n  background: linear-gradient(135deg, #2d3748, #1a202c);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(74, 85, 104, 0.3);\n  border-color: rgba(255, 255, 255, 0.15);\n}\n\n.date-picker-container {\n  flex-grow: 1;\n  /* Removed max-width constraint to keep original width */\n}\n\n.custom-datepicker {\n  position: relative;\n  width: 100%;\n}\n\n:deep(.custom-datepicker) .dp__input {\n  height: 32px !important; /* Reduced from 40px */\n  width: 100% !important;\n  border: 2px solid #4299e1 !important; /* Blue to match the theme */\n  border-radius: 6px !important;\n  background: rgba(255, 255, 255, 0.05) !important;\n  color: white !important;\n  backdrop-filter: blur(10px) !important;\n  transition: all 0.2s ease !important;\n}\n\n:deep(.custom-datepicker) .dp__input:hover {\n  border-color: #63b3ed !important;\n  background: rgba(255, 255, 255, 0.08) !important;\n}\n\n:deep(.custom-datepicker) .dp__input:focus {\n  border-color: #63b3ed !important;\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1) !important;\n  outline: none !important;\n}\n\n:deep(.custom-datepicker) .dp__icon {\n  pointer-events: none;\n  font-weight: bold !important;\n  height: 20px !important; /* Reduced */\n  width: 20px !important; /* Reduced */\n  left: 8px !important;\n  color: #a0aec0 !important;\n}\n\n:deep(.custom-datepicker) .dp__clear_icon {\n  display: none !important; /* Hide the X button */\n}\n\n:deep(.custom-datepicker) .dp__input_icon_wrapper {\n  pointer-events: auto;\n  cursor: pointer;\n}\n\n:deep(.custom-datepicker) .dp--menu-wrapper {\n  left: -2px !important;\n}\n\n:deep(.custom-datepicker) .dp__arrow_bottom {\n  left: 20px !important;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .date-popup-vesselTrack {\n    /* Removed width constraints to keep original responsive behavior */\n    padding: 0.5rem;\n    max-height: 180px;\n  }\n  \n  .tracking-controls {\n    gap: 0.5rem;\n    margin-bottom: 0.25rem;\n  }\n  \n  .deselect-vessel-tracking-btn {\n    padding: 0.4rem 0.6rem;\n    font-size: 0.75rem;\n  }\n  \n  :deep(.custom-datepicker) .dp__input {\n    height: 28px !important;\n  }\n}\n</style>","import script from \"./VesselTracking.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./VesselTracking.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./VesselTracking.vue?vue&type=style&index=0&id=71412dce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-71412dce\"]])\n\nexport default __exports__","<!--\n  MaintenanceLayerToggle.vue\n  \n  A Vue component that provides a toggle interface for cable ship maintenance zone layers on a Leaflet map.\n  Displays public and private maintenance zones with color-coded styling, interactive highlighting,\n  and zone labels. Supports dynamic positioning based on other active UI elements.\n  \n  Features:\n  - Toggle visibility of public and private maintenance zones\n  - Color-coded zones based on abbreviation\n  - Interactive zone highlighting on click\n  - Popup information display\n  - Dynamic positioning for different UI states\n  - Zone labels with custom styling\n-->\n\n<template>\n  <div \n    v-if=\"isVisible\" \n    class=\"maintenance-layer-toggle-popup\"\n    :class=\"{ 'viewing-vessel-track': props.viewingVesselTrack }\"\n    @click.stop\n  >\n    <h3 class=\"maintenance-layer-title\">\n      {{ props.currentTranslations.maintenanceZonesLayer }}\n    </h3>\n    \n    <div class=\"layers-container\">\n      <div \n        v-for=\"layer in layers\" \n        :key=\"layer.name\" \n        class=\"layer-toggle\"\n      >\n        <input \n          :id=\"layer.name\" \n          type=\"checkbox\" \n          v-model=\"layer.visible\" \n          @change.stop=\"toggleLayer(layer)\" \n          class=\"layer-checkbox\"\n        />\n        <label \n          :for=\"layer.name\" \n          class=\"layer-label\"\n        >\n          {{ props.currentTranslations[layer.translatedKey] }}\n        </label>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport L from 'leaflet';\nimport maintenanceZonesJson from '@/assets/cableMaintenanceZones.json';\nimport privateMaintenanceZonesJson from '@/assets/privateMaintenanceAgreementZones.json';\n\n// ==========================================\n// COMPONENT PROPS\n// ==========================================\n\nconst props = defineProps({\n  mapInstance: { type: Object, required: false },\n  controlInstance: { type: Object, required: false },\n  currentTranslations: { type: Object, required: false },\n  viewingVesselTrack: { type: Boolean, required: false },\n});\n\n// ==========================================\n// REACTIVE VARIABLES\n// ==========================================\n\n// Controls component visibility\nconst isVisible = ref(false);\n\n// Storage for zone labels to manage their lifecycle\nconst zoneLabels = new Map();\n\n// Array to track currently highlighted layers for cleanup\nconst highlightedLayers = [];\n\n// ==========================================\n// CONFIGURATION DATA\n// ==========================================\n\n// Color mapping for different maintenance zone abbreviations\nconst zoneColors = {\n  ACMA: '#FF6B6B',\n  NAZ: '#19422a',\n  MECMA: '#2cd42c',\n  '20CMA': '#FDCB6E',\n  SEAIOCMA: '#6C5CE7',\n  YZ: '#FF8A5B',\n  APMA: '#FFB900',\n  AAPMMSAA: '#FF6D9A',\n  SPZ: '#A569BD',\n  'E-MARINE': '#34D399',\n};\n\n// Layer configuration with GeoJSON data and display settings\nconst layers = ref([\n  {\n    name: 'PublicMaintenanceZones',\n    translatedKey: 'publicMaintenanceZonesLayer',\n    defaultName: 'PublicMaintenanceZones',\n    visible: false,\n    geoJsonLayer: null,\n    features: maintenanceZonesJson.features,\n  },\n  {\n    name: 'PrivateMaintenanceZones',\n    translatedKey: 'privateMaintenanceZonesLayer',\n    defaultName: 'PrivateMaintenanceZones',\n    visible: false,\n    geoJsonLayer: null,\n    features: privateMaintenanceZonesJson.features,\n  },\n]);\n\n// ==========================================\n// STYLING FUNCTIONS\n// ==========================================\n\n/**\n * Generates styling for maintenance zones based on their abbreviation\n * @param {Object} feature - GeoJSON feature object\n * @returns {Object} Leaflet style object\n */\nconst getZoneStyle = (feature) => {\n  const abbreviation = feature.properties.abbreviation;\n  const defaultStyle = { \n    color: '#000000', \n    weight: 2, \n    opacity: 0.7, \n    fillOpacity: 0.3 \n  };\n  \n  if (zoneColors[abbreviation]) {\n    return {\n      ...defaultStyle,\n      color: zoneColors[abbreviation],\n      fillColor: zoneColors[abbreviation],\n    };\n  }\n  \n  return defaultStyle;\n};\n\n/**\n * Creates a label marker for a maintenance zone feature\n * @param {Object} feature - GeoJSON feature object\n * @returns {L.Marker} Leaflet marker with custom div icon\n */\nconst createLabel = (feature) => {\n  const geoJson = L.geoJSON(feature);\n  const bounds = geoJson.getBounds();\n  const center = bounds.getCenter();\n  const abbreviation = feature.properties.abbreviation;\n  const labelColor = zoneColors[abbreviation] || '#000000';\n  \n  return L.marker(center, {\n    icon: L.divIcon({\n      className: 'maintenance-zone-label',\n      html: `<div style=\"color:${labelColor};\">${feature.properties.abbreviation}</div>`,\n      iconSize: null,\n    }),\n    interactive: false,\n  });\n};\n\n// ==========================================\n// INTERACTION HANDLERS\n// ==========================================\n\n/**\n * Highlights all zones with the same abbreviation and shows popup information\n * @param {Object} feature - GeoJSON feature object that was clicked\n * @param {Event} event - Click event object\n */\nconst highlightZone = (feature, event) => {\n  if (!props.mapInstance) return;\n\n  // Clear any previously highlighted layers\n  clearHighlightedZones();\n\n  const abbreviation = feature.properties.abbreviation;\n\n  // Highlight all features with the same abbreviation across all layers\n  layers.value.forEach((layerConfig) => {\n    layerConfig.features.forEach((featureItem) => {\n      if (featureItem.properties.abbreviation === abbreviation) {\n        const highlightStyle = {\n          color: zoneColors[abbreviation] || '#FFD700',\n          weight: 4,\n          opacity: 1,\n          fillOpacity: 0.6,\n        };\n        const highlightedLayer = L.geoJSON(featureItem, { \n          style: highlightStyle \n        }).addTo(props.mapInstance);\n        highlightedLayers.push(highlightedLayer);\n      }\n    });\n  });\n\n  // Create and display popup with zone information\n  const popupContent = `\n    <strong>${props.currentTranslations.abbreviation}:</strong>${feature.properties.abbreviation}<br/>\n    <strong>${props.currentTranslations.name}:</strong>${feature.properties.name}<br/>\n  `;\n  const popup = L.popup()\n    .setLatLng(L.geoJSON(feature).getBounds().getCenter())\n    .setContent(popupContent)\n    .openOn(props.mapInstance);\n\n};\n\n/**\n * Removes all highlighted zone layers from the map\n */\nconst clearHighlightedZones = () => {\n  highlightedLayers.forEach((layer) => {\n    props.mapInstance.removeLayer(layer);\n  });\n  highlightedLayers.length = 0;\n};\n\n// ==========================================\n// LAYER MANAGEMENT\n// ==========================================\n\n/**\n * Toggles the visibility of a maintenance zone layer and its labels\n * @param {Object} layerConfig - Layer configuration object\n */\nconst toggleLayer = (layerConfig) => {\n  if (!props.mapInstance) return;\n\n  if (layerConfig.visible) {\n    // Show layer: create GeoJSON layer if it doesn't exist, or add existing one\n    if (!layerConfig.geoJsonLayer) {\n      layerConfig.geoJsonLayer = L.geoJSON(layerConfig.features, {\n        style: getZoneStyle,\n        onEachFeature: (feature, layer) => {\n          layer.on('click', (event) => {\n            L.DomEvent.stop(event);\n            highlightZone(feature, event);\n          });\n        },\n      }).addTo(props.mapInstance);\n    } else {\n      props.mapInstance.addLayer(layerConfig.geoJsonLayer);\n    }\n\n    // Add labels for each feature in the layer\n    layerConfig.features.forEach((feature) => {\n      const labelKey = `${layerConfig.name}-${feature.properties.abbreviation}`;\n      let label = zoneLabels.get(labelKey);\n      if (!label) {\n        label = createLabel(feature);\n        zoneLabels.set(labelKey, label);\n      }\n      label.addTo(props.mapInstance);\n    });\n  } else {\n    // Hide layer: remove GeoJSON layer from map\n    if (layerConfig.geoJsonLayer) {\n      props.mapInstance.removeLayer(layerConfig.geoJsonLayer);\n    }\n    \n    // Remove all labels for this layer\n    layerConfig.features.forEach((feature) => {\n      const labelKey = `${layerConfig.name}-${feature.properties.abbreviation}`;\n      const label = zoneLabels.get(labelKey);\n      if (label) {\n        props.mapInstance.removeLayer(label);\n      }\n    });\n  }\n};\n\n/**\n * Resets all layers to hidden state and cleans up map elements\n */\nconst resetLayers = () => {\n  layers.value.forEach((layer) => {\n    layer.visible = false;\n    \n    // Remove GeoJSON layer from map\n    if (layer.geoJsonLayer) {\n      props.mapInstance.removeLayer(layer.geoJsonLayer);\n    }\n    \n    // Remove all labels for this layer\n    layer.features.forEach((feature) => {\n      const labelKey = `${layer.name}-${feature.properties.abbreviation}`;\n      const label = zoneLabels.get(labelKey);\n      if (label) {\n        props.mapInstance.removeLayer(label);\n      }\n    });\n  });\n  \n  // Clear any highlighted zones\n  clearHighlightedZones();\n};\n\n// ==========================================\n// COMPONENT INTERFACE\n// ==========================================\n\n// Expose methods for parent component interaction\ndefineExpose({\n  show: () => {\n    isVisible.value = true;\n  },\n  hide: () => {\n    isVisible.value = false;\n    resetLayers();\n  },\n  clearHighlightedZones,\n});\n</script>\n\n<style>\n/* ==========================================\n   MAIN COMPONENT STYLING\n   ========================================== */\n\n   .maintenance-layer-toggle-popup {\n  font-size: 13px;\n  font-weight: bold;\n  text-align: left;\n  position: absolute;\n  bottom: 20px;\n  right: 12px;\n  width: 250px;\n  max-height: 180px;\n  z-index: 500;\n  background: rgba(26, 32, 44, 0.9);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n  padding: 5px 10px 10px 10px;\n  box-shadow: 0 4px 14px rgba(0, 0, 0, 0.5);\n  backdrop-filter: saturate(180%) blur(8px);\n  transition: all 0.3s ease;\n  overflow: hidden;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: #e2e8f0;\n  line-height: 1.4;\n  user-select: none;\n}\n\n/* ==========================================\n   DYNAMIC POSITIONING STYLES\n   ========================================== */\n\n/* Base positioning when viewing vessel track */\n.maintenance-layer-toggle-popup.viewing-vessel-track {\n  bottom: 155px;\n  left: 20px;\n}\n\n/* Positioning adjustments for different active states */\n.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 190px;\n}\n\n.anchorage-active:not(.ocean-depth-active) .maintenance-layer-toggle-popup {\n  right: 230px;\n}\n\n.cable-ships-active.anchorage-active.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 400px;\n}\n\n/* Combined positioning for vessel track with other active states */\n.viewing-vessel-track.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 400px;\n}\n\n.viewing-vessel-track.anchorage-active:not(.ocean-depth-active) .maintenance-layer-toggle-popup {\n  right: 410px;\n}\n\n.viewing-vessel-track.cable-ships-active.anchorage-active.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 600px;\n}\n\n/* ==========================================\n   CONTENT STYLING\n   ========================================== */\n\n\n.layers-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 120px;\n  overflow-y: auto;\n  gap: 6px;\n}\n\n/* Custom scrollbar styling */\n.layers-container::-webkit-scrollbar {\n  width: 4px;\n}\n\n.layers-container::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 2px;\n}\n\n.layers-container::-webkit-scrollbar-thumb {\n  background: rgba(99, 179, 237, 0.3);\n  border-radius: 2px;\n}\n\n.layers-container::-webkit-scrollbar-thumb:hover {\n  background: rgba(99, 179, 237, 0.5);\n}\n\n.layer-toggle {\n  display: flex;\n  align-items: center;\n  padding: 6px 10px;\n  background: rgba(255, 255, 255, 0.07);\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.2s ease;\n  min-height: 32px;\n}\n\n.layer-toggle:hover {\n  background: rgba(99, 179, 237, 0.15);\n  border-color: rgba(99, 179, 237, 0.25);\n}\n\n.layer-checkbox {\n  margin-right: 10px;\n  width: 16px;\n  height: 16px;\n  accent-color: #63b3ed;\n  cursor: pointer;\n}\n\n.layer-label {\n  color: #e2e8f0;\n  font-size: 0.75rem !important;\n  font-weight: 600;\n  flex: 1;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  line-height: 1.3;\n  cursor: pointer;\n}\n\n/* ==========================================\n   ZONE LABEL STYLING\n   ========================================== */\n\n.maintenance-zone-label {\n  background-color: white;\n  border: 1px solid #333;\n  border-radius: 4px;\n  padding: 2px 6px;\n  font-size: 12px;\n  font-weight: bold;\n  white-space: nowrap;\n}\n</style>","import script from \"./MaintenanceLayerToggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MaintenanceLayerToggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MaintenanceLayerToggle.vue?vue&type=style&index=0&id=bf9ece24&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0797c694\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"button-container\" }\nconst _hoisted_2 = [\"data-drawing-active\", \"title\"]\nconst _hoisted_3 = [\"src\"]\nconst _hoisted_4 = { class: \"dropdown-container\" }\nconst _hoisted_5 = { class: \"dropdown-label\" }\nconst _hoisted_6 = { value: \"100\" }\nconst _hoisted_7 = { value: \"500\" }\nconst _hoisted_8 = { value: \"1000\" }\nconst _hoisted_9 = { value: \"2000\" }\nconst _hoisted_10 = { value: \"5000\" }\n\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport \"leaflet-draw/dist/leaflet.draw-src.css\";\nimport OceanDepthAnalyzer from '@/components/layers/natural/OceanDepthAnalyzer.vue';\n\n// ==============================================\n// COMPONENT PROPS\n// ==============================================\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DrawingLayer',\n  props: {\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  oceanSelected: {\n    type: Boolean,\n    required: false\n  }\n},\n  setup(__props, { expose: __expose }) {\n\n\nconst props = __props;\n\n// ==============================================\n// REACTIVE STATE\n// ==============================================\n\n// Drawing state\nconst isDrawingModeActive = ref(false);\nconst isEditModeActive = ref(false);\nconst drawControlsInitialized = ref(false);\n\n// Geometry references\nconst currentGeometry = ref<L.Layer | null>(null);\nconst lastGeometry = ref<L.Layer | null>(null);\nconst drawnItemsLayer = ref(null);\nconst drawnItems = ref([]);\n\n// Drawing controls\nconst drawControl = ref(null);\nconst samplePointCount = ref(100);\n\n// ==============================================\n// LIFECYCLE HOOKS\n// ==============================================\n\nonMounted(() => {\n  if (props.mapInstance) {\n    initializeDrawingControls();\n  }\n});\n\nonUnmounted(() => {\n  if (props.mapInstance) {\n    removeMapEventListeners();\n    cleanupGeometries();\n  }\n});\n\n// ==============================================\n// WATCHERS\n// ==============================================\n\nwatch(() => props.mapInstance, (newMap) => {\n  if (newMap) {\n    initializeDrawingControls();\n  }\n});\n\nwatch(() => props.oceanSelected, (newValue) => {\n  if (!newValue) {\n    toggleDrawingMode(true);\n  }\n});\n\n// ==============================================\n// DRAWING CONTROL FUNCTIONS\n// ==============================================\n\n/**\nInitializes Leaflet drawing controls and sets up event listeners\n */\nfunction initializeDrawingControls() {\n  // Create a layer group for drawn items\n  drawnItemsLayer.value = new L.FeatureGroup();\n  props.mapInstance.addLayer(drawnItemsLayer.value);\n\n  // Configure drawing options\n  const drawOptions = {\n    draw: {\n      polyline: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false\n      },\n      polygon: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false,\n        showArea: true\n      },\n      rectangle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showArea: true\n      },\n      circle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showRadius: true\n      },\n      marker: {},\n      circlemarker: false,\n    },\n    edit: {\n      featureGroup: drawnItemsLayer.value,\n      remove: true\n    },\n    position: 'topleft',\n    className: 'custom-draw-toolbar'\n  };\n\n  // Create drawing control\n  drawControl.value = new L.Control.Draw(drawOptions);\n\n  // Set up event listeners for drawing actions\n  props.mapInstance.on(L.Draw.Event.CREATED, handleDrawCreated);\n  props.mapInstance.on(L.Draw.Event.DELETED, handleDrawDeleted);\n  props.mapInstance.on(L.Draw.Event.DRAWSTART, handleDrawStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTART, handleDeleteStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTOP, handleDeleteStop);\n  props.mapInstance.on(L.Draw.Event.EDITSTART, handleEditStart);\n  props.mapInstance.on(L.Draw.Event.EDITSTOP, handleEditStop);\n  \n  drawControlsInitialized.value = true;\n}\n\n/**\nToggles drawing mode on/off\n@param {boolean} fromWatcher - Whether the call originated from a watcher\n */\nfunction toggleDrawingMode(fromWatcher: boolean) {\n  if (!fromWatcher) isDrawingModeActive.value = !isDrawingModeActive.value;\n  \n  if (isDrawingModeActive.value && !fromWatcher) {\n    props.mapInstance.addControl(drawControl.value);\n  } else if (!props.oceanSelected && isDrawingModeActive.value) {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n    isDrawingModeActive.value = !isDrawingModeActive.value;\n  } else {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n  }\n}\n\n/**\nRemoves all drawing-related event listeners from the map\n */\nfunction removeMapEventListeners() {\n  props.mapInstance.off(L.Draw.Event.CREATED);\n  props.mapInstance.off(L.Draw.Event.DELETED);\n  props.mapInstance.off(L.Draw.Event.DRAWSTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTOP);\n  props.mapInstance.off(L.Draw.Event.EDITSTART);\n  props.mapInstance.off(L.Draw.Event.EDITSTOP);\n}\n\n// ==============================================\n// GEOMETRY MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nCleans up all geometry references and layers\n */\nfunction cleanupGeometries() {\n  currentGeometry.value = null;\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.clearLayers();\n  }\n  drawnItems.value = [];\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\n/**\nCreates a highlighted version of a layer for visual feedback\n@param {L.Layer} layer - The layer to highlight\n@returns {L.Layer | null} The highlighted layer or null if creation fails\n */\nfunction createHighlightedLayer(layer: L.Layer): L.Layer | null {\n  const highlightStyles = {\n    color: '#00ff00',\n    weight: 3,\n    opacity: 1,\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  };\n\n  if (layer instanceof L.Marker) {\n    return L.marker(layer.getLatLng(), {\n      icon: L.divIcon({\n        className: 'last-geometry-marker',\n        html: '<div style=\"background-color:#00ff00;width:20px;height:20px;border-radius:50%;border:2px solid #00ff00;\"></div>',\n        iconSize: [20, 20]\n      })\n    });\n  } else if (layer instanceof L.Polygon || layer instanceof L.Rectangle) {\n    const coords = layer.getLatLngs();\n    return L.polygon(coords, { ...highlightStyles, smoothFactor: 1, noClip: true });\n  } else if (layer instanceof L.Polyline) {\n    return L.polyline(layer.getLatLngs(), highlightStyles);\n  } else if (layer instanceof L.Circle) {\n    return L.circle(layer.getLatLng(), {\n      ...highlightStyles,\n      radius: layer.getRadius()\n    });\n  }\n  return null;\n}\n\n/**\nExtracts coordinates from a layer based on its type\n@param {L.Layer} layer - The layer to extract coordinates from\n@returns {any} The coordinates in a format appropriate for the layer type\n */\nfunction getLayerCoordinates(layer: L.Layer | any) {\n  try {\n    if (layer instanceof L.Marker) {\n      return layer.getLatLng();\n    } else if (layer instanceof L.Polyline) {\n      return layer.getLatLngs();\n    } else if (layer instanceof L.Rectangle || layer instanceof L.Polygon) {\n      return layer.getBounds();\n    } else if (layer instanceof L.Circle) {\n      return {\n        center: layer.getLatLng(),\n        radius: layer.getRadius()\n      };\n    }\n    return null;\n  } catch (error) {\n    return null;\n  }\n}\n\n// ==============================================\n// EVENT HANDLERS\n// ==============================================\n\nfunction handleDrawStart() {\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawCreated(e: any) {\n  const layer = e.layer;\n  \n  setupClickHandler(layer);\n  drawnItemsLayer.value.addLayer(layer);\n  currentGeometry.value = layer;\n  \n  const highlightedLayer = createHighlightedLayer(layer);\n  if (highlightedLayer) {\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n    \n    lastGeometry.value = highlightedLayer;\n    setupClickHandler(highlightedLayer, layer);\n    drawnItemsLayer.value.addLayer(highlightedLayer);\n  }\n\n  const itemDetails = {\n    type: e.layerType,\n    coordinates: getLayerCoordinates(layer)\n  };\n  drawnItems.value.push(itemDetails);\n}\n\nfunction handleDrawDeleted(e: any) {\n  const layers = e.layers;\n  \n  layers.eachLayer((layer: L.Layer) => {\n    const index = drawnItems.value.findIndex(item => \n      JSON.stringify(getLayerCoordinates(layer)) === JSON.stringify(item.coordinates)\n    );\n    if (index !== -1) {\n      drawnItems.value.splice(index, 1);\n    }\n    \n    if (currentGeometry.value === layer) {\n      currentGeometry.value = null;\n      if (lastGeometry.value) {\n        drawnItemsLayer.value.removeLayer(lastGeometry.value);\n        lastGeometry.value = null;\n      }\n    }\n  });\n}\n\nfunction handleDeleteStart() {\n  isEditModeActive.value = true;\n  // Remove click handlers during delete mode\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      layer.off('click');\n    });\n  }\n  if (lastGeometry.value) {\n    lastGeometry.value.off('click');\n  }\n}\n\nfunction handleDeleteStop() {\n  isEditModeActive.value = false;\n  // Restore click handlers\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      setupClickHandler(layer);\n    });\n  }\n  if (lastGeometry.value && currentGeometry.value) {\n    setupClickHandler(lastGeometry.value, currentGeometry.value);\n  }\n}\n\nfunction handleEditStart() {\n  isEditModeActive.value = true;\n  // Remove last geometry highlight during edit mode\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleEditStop() {\n  isEditModeActive.value = false;\n  // Restore highlight if needed\n  if (currentGeometry.value) {\n    const highlightedLayer = createHighlightedLayer(currentGeometry.value);\n    if (highlightedLayer) {\n      lastGeometry.value = highlightedLayer;\n      props.mapInstance.addLayer(highlightedLayer);\n      setupClickHandler(highlightedLayer, currentGeometry.value);\n    }\n  }\n}\n\n/**\nSets up click handler for a layer\n@param {L.Layer} layer - The layer to attach the handler to\n@param {L.Layer | null} targetLayer - Optional target layer for event forwarding\n */\nfunction setupClickHandler(layer: L.Layer, targetLayer: L.Layer | null = null) {\n  if (!isEditModeActive.value) {\n    layer.on('click', (event: any) => {\n      if (!isEditModeActive.value) {\n        L.DomEvent.stopPropagation(event);\n        (targetLayer || layer).fire('click', event);\n      }\n    });\n  }\n}\n\n// ==============================================\n// COMPONENT EXPOSURES\n// ==============================================\n\n__expose({\n  isDrawingModeActive,\n  samplePointCount\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (drawControlsInitialized.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"drawing-controls\",\n          onClick: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"]))\n        }, [\n          _createElementVNode(\"div\", _hoisted_1, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[0] || (_cache[0] = _withModifiers(($event: any) => (toggleDrawingMode(false)), [\"stop\"])),\n              class: \"toggle-drawing-btn\",\n              \"data-drawing-active\": isDrawingModeActive.value,\n              title: __props.currentTranslations?.drawingToggleTooltip || 'Toggle Drawing Mode'\n            }, [\n              _createElementVNode(\"img\", {\n                src: require('@/assets/graphics/seadepth.png'),\n                alt: \"Drawing Toggle\",\n                class: \"drawing-icon\"\n              }, null, 8, _hoisted_3)\n            ], 8, _hoisted_2)\n          ]),\n          (isDrawingModeActive.value)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 0,\n                class: \"sample-points-control\",\n                onClick: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"stop\"]))\n              }, [\n                _createElementVNode(\"div\", _hoisted_4, [\n                  _createElementVNode(\"div\", _hoisted_5, _toDisplayString(__props.currentTranslations?.analysisDetail || \"Analysis Detail\"), 1),\n                  _withDirectives(_createElementVNode(\"select\", {\n                    id: \"samplePointCount\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((samplePointCount).value = $event)),\n                    class: \"dropdown\"\n                  }, [\n                    _createElementVNode(\"option\", _hoisted_6, _toDisplayString(__props.currentTranslations?.quickScan || \"Quick Scan\"), 1),\n                    _createElementVNode(\"option\", _hoisted_7, _toDisplayString(__props.currentTranslations?.standardDetail || \"Standard Detail\"), 1),\n                    _createElementVNode(\"option\", _hoisted_8, _toDisplayString(__props.currentTranslations?.highDetail || \"High Detail\"), 1),\n                    _createElementVNode(\"option\", _hoisted_9, _toDisplayString(__props.currentTranslations?.veryHighDetail || \"Very High Detail\"), 1),\n                    _createElementVNode(\"option\", _hoisted_10, _toDisplayString(__props.currentTranslations?.ultraDetailed || \"Ultra Detailed\"), 1)\n                  ], 512), [\n                    [_vModelSelect, samplePointCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (currentGeometry.value)\n      ? (_openBlock(), _createBlock(OceanDepthAnalyzer, {\n          key: 1,\n          \"map-instance\": props.mapInstance,\n          \"current-translations\": props.currentTranslations,\n          \"drawn-geometry\": currentGeometry.value,\n          \"sample-point-count\": samplePointCount.value,\n          \"show-popup\": true\n        }, null, 8, [\"map-instance\", \"current-translations\", \"drawn-geometry\", \"sample-point-count\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!--\nDrawingLayer.vue - A component for managing drawing controls on a Leaflet map\n\nFeatures:\n- Toggleable drawing mode with various shape tools\n- Sample point density selection for ocean depth analysis\n- Geometry creation, editing, and deletion\n- Visual feedback for active geometries\n- Integration with OceanDepthAnalyzer for depth analysis\n-->\n\n<template>\n  <div>\n    <!-- Drawing Controls Section -->\n    <div v-if=\"drawControlsInitialized\" class=\"drawing-controls\" @click.stop>\n      <div class=\"button-container\">\n        <button \n          @click.stop=\"toggleDrawingMode(false)\" \n          class=\"toggle-drawing-btn\" \n          :data-drawing-active=\"isDrawingModeActive\"\n          :title=\"currentTranslations?.drawingToggleTooltip || 'Toggle Drawing Mode'\"\n        >\n          <img :src=\"require('@/assets/graphics/seadepth.png')\" alt=\"Drawing Toggle\" class=\"drawing-icon\"/>\n        </button>\n      </div>\n      \n      <!-- Sample Points Dropdown (Visible only in drawing mode) -->\n      <div v-if=\"isDrawingModeActive\" class=\"sample-points-control\" @click.stop>\n        <div class=\"dropdown-container\">\n          <div class=\"dropdown-label\">{{ currentTranslations?.analysisDetail || \"Analysis Detail\" }}</div>\n          <select \n            id=\"samplePointCount\" \n            v-model=\"samplePointCount\" \n            class=\"dropdown\"\n          >\n            <option value=\"100\">{{ currentTranslations?.quickScan || \"Quick Scan\" }}</option>\n            <option value=\"500\">{{ currentTranslations?.standardDetail || \"Standard Detail\" }}</option>\n            <option value=\"1000\">{{ currentTranslations?.highDetail || \"High Detail\" }}</option>\n            <option value=\"2000\">{{ currentTranslations?.veryHighDetail || \"Very High Detail\" }}</option>\n            <option value=\"5000\">{{ currentTranslations?.ultraDetailed || \"Ultra Detailed\" }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Ocean Depth Analyzer Component -->\n    <OceanDepthAnalyzer\n      v-if=\"currentGeometry\"\n      :map-instance=\"props.mapInstance\"\n      :current-translations=\"props.currentTranslations\"\n      :drawn-geometry=\"currentGeometry\"\n      :sample-point-count=\"samplePointCount\"\n      :show-popup=\"true\" \n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport \"leaflet-draw/dist/leaflet.draw-src.css\";\nimport OceanDepthAnalyzer from '@/components/layers/natural/OceanDepthAnalyzer.vue';\n\n// ==============================================\n// COMPONENT PROPS\n// ==============================================\n\nconst props = defineProps({\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  oceanSelected: {\n    type: Boolean,\n    required: false\n  }\n});\n\n// ==============================================\n// REACTIVE STATE\n// ==============================================\n\n// Drawing state\nconst isDrawingModeActive = ref(false);\nconst isEditModeActive = ref(false);\nconst drawControlsInitialized = ref(false);\n\n// Geometry references\nconst currentGeometry = ref<L.Layer | null>(null);\nconst lastGeometry = ref<L.Layer | null>(null);\nconst drawnItemsLayer = ref(null);\nconst drawnItems = ref([]);\n\n// Drawing controls\nconst drawControl = ref(null);\nconst samplePointCount = ref(100);\n\n// ==============================================\n// LIFECYCLE HOOKS\n// ==============================================\n\nonMounted(() => {\n  if (props.mapInstance) {\n    initializeDrawingControls();\n  }\n});\n\nonUnmounted(() => {\n  if (props.mapInstance) {\n    removeMapEventListeners();\n    cleanupGeometries();\n  }\n});\n\n// ==============================================\n// WATCHERS\n// ==============================================\n\nwatch(() => props.mapInstance, (newMap) => {\n  if (newMap) {\n    initializeDrawingControls();\n  }\n});\n\nwatch(() => props.oceanSelected, (newValue) => {\n  if (!newValue) {\n    toggleDrawingMode(true);\n  }\n});\n\n// ==============================================\n// DRAWING CONTROL FUNCTIONS\n// ==============================================\n\n/**\nInitializes Leaflet drawing controls and sets up event listeners\n */\nfunction initializeDrawingControls() {\n  // Create a layer group for drawn items\n  drawnItemsLayer.value = new L.FeatureGroup();\n  props.mapInstance.addLayer(drawnItemsLayer.value);\n\n  // Configure drawing options\n  const drawOptions = {\n    draw: {\n      polyline: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false\n      },\n      polygon: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false,\n        showArea: true\n      },\n      rectangle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showArea: true\n      },\n      circle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showRadius: true\n      },\n      marker: {},\n      circlemarker: false,\n    },\n    edit: {\n      featureGroup: drawnItemsLayer.value,\n      remove: true\n    },\n    position: 'topleft',\n    className: 'custom-draw-toolbar'\n  };\n\n  // Create drawing control\n  drawControl.value = new L.Control.Draw(drawOptions);\n\n  // Set up event listeners for drawing actions\n  props.mapInstance.on(L.Draw.Event.CREATED, handleDrawCreated);\n  props.mapInstance.on(L.Draw.Event.DELETED, handleDrawDeleted);\n  props.mapInstance.on(L.Draw.Event.DRAWSTART, handleDrawStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTART, handleDeleteStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTOP, handleDeleteStop);\n  props.mapInstance.on(L.Draw.Event.EDITSTART, handleEditStart);\n  props.mapInstance.on(L.Draw.Event.EDITSTOP, handleEditStop);\n  \n  drawControlsInitialized.value = true;\n}\n\n/**\nToggles drawing mode on/off\n@param {boolean} fromWatcher - Whether the call originated from a watcher\n */\nfunction toggleDrawingMode(fromWatcher: boolean) {\n  if (!fromWatcher) isDrawingModeActive.value = !isDrawingModeActive.value;\n  \n  if (isDrawingModeActive.value && !fromWatcher) {\n    props.mapInstance.addControl(drawControl.value);\n  } else if (!props.oceanSelected && isDrawingModeActive.value) {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n    isDrawingModeActive.value = !isDrawingModeActive.value;\n  } else {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n  }\n}\n\n/**\nRemoves all drawing-related event listeners from the map\n */\nfunction removeMapEventListeners() {\n  props.mapInstance.off(L.Draw.Event.CREATED);\n  props.mapInstance.off(L.Draw.Event.DELETED);\n  props.mapInstance.off(L.Draw.Event.DRAWSTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTOP);\n  props.mapInstance.off(L.Draw.Event.EDITSTART);\n  props.mapInstance.off(L.Draw.Event.EDITSTOP);\n}\n\n// ==============================================\n// GEOMETRY MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nCleans up all geometry references and layers\n */\nfunction cleanupGeometries() {\n  currentGeometry.value = null;\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.clearLayers();\n  }\n  drawnItems.value = [];\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\n/**\nCreates a highlighted version of a layer for visual feedback\n@param {L.Layer} layer - The layer to highlight\n@returns {L.Layer | null} The highlighted layer or null if creation fails\n */\nfunction createHighlightedLayer(layer: L.Layer): L.Layer | null {\n  const highlightStyles = {\n    color: '#00ff00',\n    weight: 3,\n    opacity: 1,\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  };\n\n  if (layer instanceof L.Marker) {\n    return L.marker(layer.getLatLng(), {\n      icon: L.divIcon({\n        className: 'last-geometry-marker',\n        html: '<div style=\"background-color:#00ff00;width:20px;height:20px;border-radius:50%;border:2px solid #00ff00;\"></div>',\n        iconSize: [20, 20]\n      })\n    });\n  } else if (layer instanceof L.Polygon || layer instanceof L.Rectangle) {\n    const coords = layer.getLatLngs();\n    return L.polygon(coords, { ...highlightStyles, smoothFactor: 1, noClip: true });\n  } else if (layer instanceof L.Polyline) {\n    return L.polyline(layer.getLatLngs(), highlightStyles);\n  } else if (layer instanceof L.Circle) {\n    return L.circle(layer.getLatLng(), {\n      ...highlightStyles,\n      radius: layer.getRadius()\n    });\n  }\n  return null;\n}\n\n/**\nExtracts coordinates from a layer based on its type\n@param {L.Layer} layer - The layer to extract coordinates from\n@returns {any} The coordinates in a format appropriate for the layer type\n */\nfunction getLayerCoordinates(layer: L.Layer | any) {\n  try {\n    if (layer instanceof L.Marker) {\n      return layer.getLatLng();\n    } else if (layer instanceof L.Polyline) {\n      return layer.getLatLngs();\n    } else if (layer instanceof L.Rectangle || layer instanceof L.Polygon) {\n      return layer.getBounds();\n    } else if (layer instanceof L.Circle) {\n      return {\n        center: layer.getLatLng(),\n        radius: layer.getRadius()\n      };\n    }\n    return null;\n  } catch (error) {\n    return null;\n  }\n}\n\n// ==============================================\n// EVENT HANDLERS\n// ==============================================\n\nfunction handleDrawStart() {\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawCreated(e: any) {\n  const layer = e.layer;\n  \n  setupClickHandler(layer);\n  drawnItemsLayer.value.addLayer(layer);\n  currentGeometry.value = layer;\n  \n  const highlightedLayer = createHighlightedLayer(layer);\n  if (highlightedLayer) {\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n    \n    lastGeometry.value = highlightedLayer;\n    setupClickHandler(highlightedLayer, layer);\n    drawnItemsLayer.value.addLayer(highlightedLayer);\n  }\n\n  const itemDetails = {\n    type: e.layerType,\n    coordinates: getLayerCoordinates(layer)\n  };\n  drawnItems.value.push(itemDetails);\n}\n\nfunction handleDrawDeleted(e: any) {\n  const layers = e.layers;\n  \n  layers.eachLayer((layer: L.Layer) => {\n    const index = drawnItems.value.findIndex(item => \n      JSON.stringify(getLayerCoordinates(layer)) === JSON.stringify(item.coordinates)\n    );\n    if (index !== -1) {\n      drawnItems.value.splice(index, 1);\n    }\n    \n    if (currentGeometry.value === layer) {\n      currentGeometry.value = null;\n      if (lastGeometry.value) {\n        drawnItemsLayer.value.removeLayer(lastGeometry.value);\n        lastGeometry.value = null;\n      }\n    }\n  });\n}\n\nfunction handleDeleteStart() {\n  isEditModeActive.value = true;\n  // Remove click handlers during delete mode\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      layer.off('click');\n    });\n  }\n  if (lastGeometry.value) {\n    lastGeometry.value.off('click');\n  }\n}\n\nfunction handleDeleteStop() {\n  isEditModeActive.value = false;\n  // Restore click handlers\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      setupClickHandler(layer);\n    });\n  }\n  if (lastGeometry.value && currentGeometry.value) {\n    setupClickHandler(lastGeometry.value, currentGeometry.value);\n  }\n}\n\nfunction handleEditStart() {\n  isEditModeActive.value = true;\n  // Remove last geometry highlight during edit mode\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleEditStop() {\n  isEditModeActive.value = false;\n  // Restore highlight if needed\n  if (currentGeometry.value) {\n    const highlightedLayer = createHighlightedLayer(currentGeometry.value);\n    if (highlightedLayer) {\n      lastGeometry.value = highlightedLayer;\n      props.mapInstance.addLayer(highlightedLayer);\n      setupClickHandler(highlightedLayer, currentGeometry.value);\n    }\n  }\n}\n\n/**\nSets up click handler for a layer\n@param {L.Layer} layer - The layer to attach the handler to\n@param {L.Layer | null} targetLayer - Optional target layer for event forwarding\n */\nfunction setupClickHandler(layer: L.Layer, targetLayer: L.Layer | null = null) {\n  if (!isEditModeActive.value) {\n    layer.on('click', (event: any) => {\n      if (!isEditModeActive.value) {\n        L.DomEvent.stopPropagation(event);\n        (targetLayer || layer).fire('click', event);\n      }\n    });\n  }\n}\n\n// ==============================================\n// COMPONENT EXPOSURES\n// ==============================================\n\ndefineExpose({\n  isDrawingModeActive,\n  samplePointCount\n});\n</script>\n\n<style>\n\n.leaflet-draw-toolbar {\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%) !important;\n  border: 1px solid rgba(255, 255, 255, 0.1) !important;\n  border-radius: 8px !important;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2) !important;\n}\n\n.leaflet-top.leaflet-draw-toolbar {\n  left: 200px !important;\n}\n\n/* Leaflet draw button styling */\n.leaflet-draw-toolbar a {\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: transparent !important;\n  background-size: 300px 30px;\n  border: 1px solid rgba(255, 255, 255, 0.1) !important;\n  color: #ecf0f1 !important;\n  transition: all 0.2s ease, transform 0.2s ease;\n  filter: brightness(2) contrast(1.4);\n  border-radius: 6px;\n}\n\n.leaflet-draw-toolbar a:hover {\n  background-color: rgba(255, 255, 255, 0.07) !important;\n  border-color: rgba(99, 179, 237, 0.4) !important;\n  box-shadow: 0 0 8px rgba(99, 179, 237, 0.5), inset 0 0 3px rgba(99, 179, 237, 0.2);\n  filter: brightness(2.1) contrast(1.5);\n  transform: scale(1.1);\n  cursor: pointer;\n}\n\n\n\n\n.leaflet-draw-toolbar a.leaflet-draw-draw-polygon,\n.leaflet-draw-toolbar a.leaflet-draw-draw-polyline,\n.leaflet-draw-toolbar a.leaflet-draw-draw-rectangle,\n.leaflet-draw-toolbar a.leaflet-draw-draw-circle,\n.leaflet-draw-toolbar a.leaflet-draw-draw-marker {\n  border-radius: 6px !important;\n}\n\n/* Active drawing state */\n.leaflet-draw-toolbar a.leaflet-draw-toolbar-button-enabled {\n  background-color: #3182ce !important;\n  border: 1px solid rgba(255, 255, 255, 0.3) !important;\n  color: white !important;\n  filter: brightness(1.8) contrast(1.4) drop-shadow(0 0 2px rgba(255, 255, 255, 0.5));\n  box-shadow: \n    0 0 6px rgba(49, 130, 206, 0.6), \n    inset 0 0 3px rgba(255, 255, 255, 0.2);\n  transform: scale(1.08);\n  z-index: 1000;\n  transition: all 0.2s ease-in-out;\n}\n\n\n\n\n</style>\n\n<style scoped>\n/* Main drawing controls container */\n.drawing-controls {\n  position: absolute;\n  bottom: 100px;\n  left: 12px;\n  z-index: 1000;\n  display: flex;\n  gap: 0.5rem;\n  height: 48px;\n}\n\n/* Button container for drawing toggle */\n.button-container {\n  height: 48px;\n  flex-shrink: 0;\n}\n\n/* Drawing toggle button styles */\n.toggle-drawing-btn {\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  padding: 0;\n  cursor: pointer;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  height: 48px;\n  width: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n}\n\n.toggle-drawing-btn:hover {\n  background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);\n  border-color: rgba(99, 179, 237, 0.3);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  transform: translateY(-1px);\n}\n\n.toggle-drawing-btn[data-drawing-active=\"true\"] {\n  background: linear-gradient(135deg, #63b3ed 0%, #4299e1 100%);\n  border-color: rgba(255, 255, 255, 0.2);\n  box-shadow: 0 4px 12px rgba(99, 179, 237, 0.3);\n}\n\n/* Drawing icon styles */\n.drawing-icon {\n  width: 48px;\n  height: 48px;\n  color: #ecf0f1;\n  transition: color 0.2s ease;\n}\n\n.toggle-drawing-btn[data-drawing-active=\"true\"] .drawing-icon {\n  color: white;\n}\n\n/* Sample points control styles */\n.sample-points-control {\n  align-self: center !important;\n  width: 120px !important;\n  position: relative !important;\n  z-index: 1001 !important;\n}\n\n/* Dropdown container styles */\n.dropdown-container {\n  display: inline-block !important; \n  vertical-align: top !important;\n  width: 120px !important;  \n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%) !important;\n  border: 1px solid rgba(255, 255, 255, 0.1) !important;\n  border-radius: 12px !important;\n  overflow: visible !important;\n  margin-bottom: 20px !important;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15) !important;\n  box-sizing: border-box !important;\n  position: relative !important;\n}\n.dropdown-label {\n  display: block !important;\n  width: 100% !important;\n  color: #ecf0f1 !important;\n  font-size: 0.9rem !important;\n  padding: 0.5rem !important;\n  background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%) !important;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1) !important;\n  font-weight: 500 !important;\n  margin: 0 !important;\n  line-height: 1.2 !important;\n  text-align: center !important;\n  box-sizing: border-box !important;\n}\n\n.dropdown {\n  display: block !important;\n  width: 100% !important;\n  box-sizing: border-box !important;\n  background-color: #2d3748 !important;  \n  color: #ecf0f1 !important;       \n  border: none !important;\n  padding: 0.5rem !important;\n  cursor: pointer !important;\n  min-width: 100px !important;\n  transition: background-color 0.2s ease !important;\n  appearance: none !important;         \n  -webkit-appearance: none !important;\n  -moz-appearance: none !important;\n  background-image: url('data:image/svg+xml;utf8,<svg fill=\"%23ecf0f1\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 10l5 5 5-5z\"/></svg>') !important;\n  background-repeat: no-repeat !important;\n  background-position: right 0.7rem center !important;\n  background-size: 1rem !important;\n  padding-right: 2rem !important; \n  border-radius: 0 0 12px 12px !important;\n  margin: 0 !important;\n  outline: none !important;\n  font-family: inherit !important;\n  font-size: 0.85rem !important;\n  line-height: 1.2 !important;\n}\n\n.dropdown:hover {\n  background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%) !important;\n}\n\n.dropdown:focus {\n  outline: none !important;\n  box-shadow: inset 0 0 0 2px rgba(99, 179, 237, 0.3) !important;\n}\n\n.dropdown option {\n  background-color: #2d3748 !important;\n  color: #ecf0f1 !important;\n  padding: 0.5rem !important;\n  border: none !important;\n  font-family: inherit !important;\n  font-size: 0.85rem !important;\n}\n\n/* Custom Leaflet draw toolbar styles */\n.custom-draw-toolbar {\n  margin-top: 50px;\n  left: 200px;\n}\n\n/* Additional reset for any potential conflicts */\n.sample-points-control *,\n.sample-points-control *::before,\n.sample-points-control *::after {\n  box-sizing: border-box !important;\n}\n\n/* Ensure no external margin/padding interference */\n.dropdown-container,\n.dropdown-label,\n.dropdown {\n  margin: 0 !important;\n}\n\n.dropdown-container {\n  padding: 0 !important;\n}\n</style>","import script from \"./DrawingLayer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DrawingLayer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./DrawingLayer.vue?vue&type=style&index=0&id=0797c694&lang=css\"\nimport \"./DrawingLayer.vue?vue&type=style&index=1&id=0797c694&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0797c694\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 1,\n  class: \"custom-popup\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#b1e5d7\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\": >-200m\")\n], -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#6fd7e6\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\": >-1000m\")\n], -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#275b99\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\": >-6000m\")\n], -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#0c4b7b\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\": >-11000m\")\n], -1)\nconst _hoisted_6 = {\n  key: 2,\n  class: \"custom-popup3\"\n}\nconst _hoisted_7 = { class: \"popup-row\" }\nconst _hoisted_8 = { class: \"label\" }\nconst _hoisted_9 = { class: \"value\" }\nconst _hoisted_10 = { class: \"popup-row\" }\nconst _hoisted_11 = { class: \"label\" }\nconst _hoisted_12 = { class: \"value\" }\n\nimport { ref, watch } from 'vue';\n  import { LLayerGroup, LGeoJson } from '@vue-leaflet/vue-leaflet';\n  import L from 'leaflet';\n  import axios from 'axios';\n  import debounce from 'lodash.debounce';\n  import DrawingLayer from '@/components/layers/natural/DrawingLayer.vue';\n  import countries from '@/assets/countries.json';\n  \n  // ==========================================\n  // COMPONENT INTERFACE\n  // ==========================================\n  \n  interface Props {\n    mapInstance: L.Map | null;\n    translations: Record<string, any>;\n    isOceanSelected: boolean;\n    isDrawingModeActive: boolean;\n  }\n  \n  \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'OceanDepth',\n  props: {\n    mapInstance: { default: null },\n    translations: {},\n    isOceanSelected: { type: Boolean, default: false },\n    isDrawingModeActive: { type: Boolean, default: false }\n  },\n  emits: [\"update:isOceanSelected\", \"update:isDrawingModeActive\"],\n  setup(__props: any, { expose: __expose, emit: __emit }) {\n\n  const props = __props;\n  \n  const emit = __emit;\n  \n  // ==========================================\n  // TEMPLATE REFERENCES\n  // ==========================================\n  \n  // Reference to the depth tooltip DOM element for positioning\n  const depthTooltip = ref<HTMLElement | null>(null);\n  \n  // Reference to the drawing layer component\n  const drawingLayerRef = ref<any>(null);\n  \n  // Reference to the GEBCO WMS layer instance\n  const oceanDepthWMSLayer = ref<L.TileLayer.WMS | null>(null);\n  \n  // ==========================================\n  // REACTIVE STATE\n  // ==========================================\n  \n  // Current mouse cursor coordinates\n  const latitude = ref(15);\n  const longitude = ref(15);\n  \n  // Current ocean depth information displayed in tooltip\n  const currentOceanDepth = ref(\"Ocean Depth at this point: -5000m\");\n  \n  // Cache for last depth query to prevent duplicate API calls\n  let lastDepthQuery = '';\n  \n  // ==========================================\n  // WATCHERS\n  // ==========================================\n  \n  /**\n   * Watch for drawing mode changes from child component\n   * Propagates drawing mode state to parent component\n   */\n  watch(\n    () => drawingLayerRef.value?.isDrawingModeActive,\n    (newValue) => {\n      emit('update:isDrawingModeActive', newValue);\n    },\n    { immediate: true }\n  );\n  \n  // ==========================================\n  // WMS LAYER MANAGEMENT\n  // ==========================================\n  \n  const isLayerBeingRemoved = ref(false);\n\n  /**\n   * Activates the ocean depth WMS layer on the map\n   * Creates and adds GEBCO bathymetric data layer\n   */\n   function onOceanDepthActivated() {\n  if (!props.mapInstance || isLayerBeingRemoved.value) return;\n  \n  // Ensure any existing layer is completely removed first\n  if (oceanDepthWMSLayer.value) {\n    onOceanDepthDeactivated();\n  }\n  \n  try {\n    // Always create a fresh WMS layer instance\n    oceanDepthWMSLayer.value = L.tileLayer.wms('https://wms.gebco.net/mapserv', {\n      layers: 'gebco_latest_sub_ice_topo',\n      format: 'image/jpeg',\n      transparent: true,\n      attribution: 'Map data &copy; <a href=\"https://www.gebco.net\">GEBCO</a>',\n      maxZoom: 12,\n      minZoom: 0,\n    });\n    \n    // Add to map only after creation is complete\n    oceanDepthWMSLayer.value.addTo(props.mapInstance);\n    \n  } catch (error) {\n    console.warn('Error creating ocean depth layer:', error);\n    oceanDepthWMSLayer.value = null;\n  }\n}\n  \n  /**\n   * Deactivates the ocean depth WMS layer\n   * Removes the bathymetric layer from the map\n   */\n   function onOceanDepthDeactivated() {\n  if (!props.mapInstance || !oceanDepthWMSLayer.value || isLayerBeingRemoved.value) return;\n  \n  // Set flag to prevent race conditions\n  isLayerBeingRemoved.value = true;\n  \n  try {\n    // Step 1: Remove the layer from the map\n    if (props.mapInstance.hasLayer(oceanDepthWMSLayer.value)) {\n      props.mapInstance.removeLayer(oceanDepthWMSLayer.value);\n    }\n    \n    // Step 2: Force cleanup of any pending tile requests\n    if (oceanDepthWMSLayer.value._container) {\n      oceanDepthWMSLayer.value._container.innerHTML = '';\n    }\n    \n    // Step 3: Remove any event listeners on the layer\n    if (typeof oceanDepthWMSLayer.value.off === 'function') {\n      oceanDepthWMSLayer.value.off();\n    }\n    \n    // Step 4: Clear internal references\n    if (typeof oceanDepthWMSLayer.value.remove === 'function') {\n      oceanDepthWMSLayer.value.remove();\n    }\n    \n    // Step 5: Manually clean up the layer's internal state\n    if (oceanDepthWMSLayer.value._map) {\n      oceanDepthWMSLayer.value._map = null;\n    }\n    if (oceanDepthWMSLayer.value._tiles) {\n      oceanDepthWMSLayer.value._tiles = {};\n    }\n    \n    // Step 6: Clear our reference\n    oceanDepthWMSLayer.value = null;\n    \n    // Step 7: Reset other state\n    lastDepthQuery = '';\n    \n    // Step 8: Hide the depth tooltip\n    if (depthTooltip.value) {\n      depthTooltip.value.style.display = 'none';\n    }\n    \n    // Step 9: Force a map redraw to ensure clean state\n    setTimeout(() => {\n      if (props.mapInstance) {\n        props.mapInstance.invalidateSize();\n      }\n      isLayerBeingRemoved.value = false;\n    }, 100);\n    \n  } catch (error) {\n    console.warn('Error during ocean depth layer cleanup:', error);\n    oceanDepthWMSLayer.value = null;\n    isLayerBeingRemoved.value = false;\n  }\n}\n  \n  // ==========================================\n  // OCEAN DEPTH API INTEGRATION\n  // ==========================================\n  \n  /**\n   * Fetches ocean depth data for a specific coordinate from GEBCO WMS service\n   * Uses GetFeatureInfo request to query bathymetric data at precise location\n   * @param {number} lat - Latitude coordinate\n   * @param {number} lng - Longitude coordinate\n   */\n  async function getOceanDepth(lat: number, lng: number) {\n    // Create query string for caching and duplicate prevention\n    const queryString = `${lat.toFixed(4)},${lng.toFixed(4)}`;\n    if (queryString === lastDepthQuery) return;\n    lastDepthQuery = queryString;\n  \n    try {\n      // Create small bounding box around the point for WMS query\n      const minx = lat - 0.0001;\n      const miny = lng - 0.0001;\n      const maxx = lat + 0.0001;\n      const maxy = lng + 0.0001;\n      \n      // Construct GEBCO WMS GetFeatureInfo request URL\n      const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n      \n      const response = await axios.get(url);\n      \n      // Parse depth value from WMS response text\n      let searchString = \"value_list\";\n      let searchIndex = response.data.indexOf(searchString);\n      let extractedText = response.data.substring(\n        searchIndex + searchString.length + 4,\n        response.data.length - 2\n      );\n      \n      // Update depth display with parsed value\n      currentOceanDepth.value = `${props.translations.oceanDepth}: ${extractedText}m`;\n    } catch (error) {\n      // Handle API errors gracefully\n      currentOceanDepth.value = \"Ocean Depth: Unknown\";\n    }\n  }\n  \n  // ==========================================\n  // UI INTERACTION HANDLERS\n  // ==========================================\n  \n  /**\n   * Updates the position of the depth tooltip to follow the mouse cursor\n   * Converts map coordinates to screen coordinates for tooltip positioning\n   * @param {L.LeafletMouseEvent} e - Leaflet mouse event containing coordinates\n   */\n  const updateDepthTooltip = (e: L.LeafletMouseEvent) => {\n    if (props.isOceanSelected && depthTooltip.value && props.mapInstance) {\n      // Convert lat/lng coordinates to container pixel coordinates\n      const containerPoint = props.mapInstance.latLngToContainerPoint(e.latlng);\n      \n      // Position tooltip with slight offset from cursor\n      depthTooltip.value.style.left = `${containerPoint.x + 15}px`;\n      depthTooltip.value.style.top = `${containerPoint.y + 15}px`;\n      depthTooltip.value.style.display = 'block';\n    } else if (depthTooltip.value) {\n      // Hide tooltip when not in ocean mode\n      depthTooltip.value.style.display = 'none';\n    }\n  };\n  \n  /**\n   * Debounced handler for mouse position updates\n   * Updates coordinates display and triggers depth queries\n   * Debounced to prevent excessive API calls during mouse movement\n   */\n   const updateMousePosition = debounce((e: L.LeafletMouseEvent) => {\n  // Enhanced safety checks\n  if (!props.isOceanSelected || \n      !oceanDepthWMSLayer.value || \n      !props.mapInstance ||\n      !props.mapInstance.getContainer() ||\n      isLayerBeingRemoved.value ||\n      !props.mapInstance.hasLayer(oceanDepthWMSLayer.value)) {\n    return;\n  }\n  \n  try {\n    const latlng = e.latlng;\n    \n    // Round coordinates to 4 decimal places for display\n    const roundedLat = Math.round(latlng.lat * 1e4) / 1e4;\n    const roundedLng = Math.round(latlng.lng * 1e4) / 1e4;\n    \n    // Update coordinate display\n    latitude.value = roundedLat;\n    longitude.value = roundedLng;\n    \n    // Only query depth and show tooltip when not in drawing mode\n    if (!props.isDrawingModeActive) {\n      getOceanDepth(roundedLat, roundedLng);\n      updateDepthTooltip(e);\n    }\n  } catch (error) {\n    console.warn('Error updating mouse position:', error);\n  }\n}, 100); // 100ms debounce delay for performance\n  \n  // ==========================================\n  // COMPONENT INTERFACE EXPOSURE\n  // ==========================================\n  \n  /**\n   * Expose methods for parent component interaction\n   * Allows parent to trigger mouse updates and layer management\n   */\n  __expose({\n    updateMousePosition,\n    onOceanDepthActivated,\n    onOceanDepthDeactivated,\n  });\n  \nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_unref(LLayerGroup), {\n      name: \"Ocean Depth\",\n      \"layer-type\": \"base\",\n      visible: false,\n      onAdd: onOceanDepthActivated,\n      onRemove: onOceanDepthDeactivated\n    }),\n    (_ctx.isOceanSelected)\n      ? (_openBlock(), _createBlock(_unref(LGeoJson), {\n          key: 0,\n          geojson: _unref(countries),\n          name: \"countries\",\n          visible: true,\n          \"options-style\": { color: '#000000', weight: '0.75' }\n        }, null, 8, [\"geojson\"]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isOceanSelected)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"h2\", null, _toDisplayString(props.translations.oceanMapLegend), 1),\n          _hoisted_2,\n          _hoisted_3,\n          _hoisted_4,\n          _hoisted_5\n        ]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isOceanSelected)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createElementVNode(\"span\", _hoisted_8, _toDisplayString(_ctx.translations.latitude) + \":\", 1),\n            _createElementVNode(\"span\", _hoisted_9, _toDisplayString(latitude.value), 1)\n          ]),\n          _createElementVNode(\"div\", _hoisted_10, [\n            _createElementVNode(\"span\", _hoisted_11, _toDisplayString(_ctx.translations.longitude) + \":\", 1),\n            _createElementVNode(\"span\", _hoisted_12, _toDisplayString(longitude.value), 1)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isOceanSelected && !_ctx.isDrawingModeActive)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 3,\n          ref_key: \"depthTooltip\",\n          ref: depthTooltip,\n          class: \"depth-tooltip\"\n        }, _toDisplayString(currentOceanDepth.value), 513))\n      : _createCommentVNode(\"\", true),\n    _withDirectives(_createElementVNode(\"div\", null, [\n      _createVNode(DrawingLayer, {\n        \"current-translations\": _ctx.translations,\n        \"map-instance\": _ctx.mapInstance,\n        \"ocean-selected\": _ctx.isOceanSelected,\n        ref_key: \"drawingLayerRef\",\n        ref: drawingLayerRef\n      }, null, 8, [\"current-translations\", \"map-instance\", \"ocean-selected\"])\n    ], 512), [\n      [_vShow, _ctx.isOceanSelected]\n    ])\n  ]))\n}\n}\n\n})","<!--\n  OceanDepth.vue\n  \n  A Vue component that displays ocean depth data on a Leaflet map using GEBCO WMS services.\n  Provides interactive ocean depth visualization with real-time depth querying, coordinate display,\n  and drawing functionality. The component integrates with GEBCO (General Bathymetric Chart of \n  the Oceans) to show bathymetric data with color-coded depth levels.\n  \n  Features:\n  - WMS layer integration with GEBCO bathymetric data\n  - Real-time ocean depth querying on mouse movement\n  - Interactive depth tooltip following cursor\n  - Coordinate display (latitude/longitude)\n  - Ocean depth legend with color coding\n  - Country overlay for geographical context\n  - Drawing layer integration for measurements/annotations\n  - Debounced mouse tracking for performance optimization\n-->\n\n<template>\n    <div>\n      <!-- Ocean Depth WMS Layer Group -->\n      <l-layer-group\n        name=\"Ocean Depth\"\n        layer-type=\"base\"\n        :visible=\"false\"\n        @add=\"onOceanDepthActivated\"\n        @remove=\"onOceanDepthDeactivated\"\n      />\n      \n      <!-- Country Boundaries Overlay -->\n      <l-geo-json\n        v-if=\"isOceanSelected\"\n        :geojson=\"countries\"\n        name=\"countries\"\n        :visible=\"true\"\n        :options-style=\"{ color: '#000000', weight: '0.75' }\"\n      />\n      \n      <!-- Ocean Depth Legend -->\n      <div v-if=\"isOceanSelected\" class=\"custom-popup\">\n        <h2>{{ props.translations.oceanMapLegend }}</h2>\n        <p><span style=\"color:#b1e5d7\">&#9632;</span>: >-200m</p>\n        <p><span style=\"color:#6fd7e6\">&#9632;</span>: >-1000m</p>\n        <p><span style=\"color:#275b99\">&#9632;</span>: >-6000m</p>\n        <p><span style=\"color:#0c4b7b\">&#9632;</span>: >-11000m</p>\n      </div>\n      \n      <!-- Coordinates Display Panel -->\n      <div v-if=\"isOceanSelected\" class=\"custom-popup3\">\n        <div class=\"popup-row\">\n          <span class=\"label\">{{ translations.latitude }}:</span>\n          <span class=\"value\">{{ latitude }}</span>\n        </div>\n        <div class=\"popup-row\">\n          <span class=\"label\">{{ translations.longitude }}:</span>\n          <span class=\"value\">{{ longitude }}</span>\n        </div>\n      </div>\n      \n      <!-- Interactive Depth Tooltip -->\n      <div\n        v-if=\"isOceanSelected && !isDrawingModeActive\"\n        ref=\"depthTooltip\"\n        class=\"depth-tooltip\"\n      >\n        {{ currentOceanDepth }}\n      </div>\n      \n      <!-- Drawing Layer Integration -->\n      <div v-show=\"isOceanSelected\">\n        <DrawingLayer\n          :current-translations=\"translations\"\n          :map-instance=\"mapInstance\"\n          :ocean-selected=\"isOceanSelected\"\n          ref=\"drawingLayerRef\"\n        />\n      </div>\n    </div>\n  </template>\n  \n  <script setup lang=\"ts\">\n  import { ref, watch } from 'vue';\n  import { LLayerGroup, LGeoJson } from '@vue-leaflet/vue-leaflet';\n  import L from 'leaflet';\n  import axios from 'axios';\n  import debounce from 'lodash.debounce';\n  import DrawingLayer from '@/components/layers/natural/DrawingLayer.vue';\n  import countries from '@/assets/countries.json';\n  \n  // ==========================================\n  // COMPONENT INTERFACE\n  // ==========================================\n  \n  interface Props {\n    mapInstance: L.Map | null;\n    translations: Record<string, any>;\n    isOceanSelected: boolean;\n    isDrawingModeActive: boolean;\n  }\n  \n  const props = withDefaults(defineProps<Props>(), {\n    mapInstance: null,\n    isOceanSelected: false,\n    isDrawingModeActive: false,\n  });\n  \n  const emit = defineEmits<{\n    'update:isOceanSelected': [value: boolean];\n    'update:isDrawingModeActive': [value: boolean];\n  }>();\n  \n  // ==========================================\n  // TEMPLATE REFERENCES\n  // ==========================================\n  \n  // Reference to the depth tooltip DOM element for positioning\n  const depthTooltip = ref<HTMLElement | null>(null);\n  \n  // Reference to the drawing layer component\n  const drawingLayerRef = ref<any>(null);\n  \n  // Reference to the GEBCO WMS layer instance\n  const oceanDepthWMSLayer = ref<L.TileLayer.WMS | null>(null);\n  \n  // ==========================================\n  // REACTIVE STATE\n  // ==========================================\n  \n  // Current mouse cursor coordinates\n  const latitude = ref(15);\n  const longitude = ref(15);\n  \n  // Current ocean depth information displayed in tooltip\n  const currentOceanDepth = ref(\"Ocean Depth at this point: -5000m\");\n  \n  // Cache for last depth query to prevent duplicate API calls\n  let lastDepthQuery = '';\n  \n  // ==========================================\n  // WATCHERS\n  // ==========================================\n  \n  /**\n   * Watch for drawing mode changes from child component\n   * Propagates drawing mode state to parent component\n   */\n  watch(\n    () => drawingLayerRef.value?.isDrawingModeActive,\n    (newValue) => {\n      emit('update:isDrawingModeActive', newValue);\n    },\n    { immediate: true }\n  );\n  \n  // ==========================================\n  // WMS LAYER MANAGEMENT\n  // ==========================================\n  \n  const isLayerBeingRemoved = ref(false);\n\n  /**\n   * Activates the ocean depth WMS layer on the map\n   * Creates and adds GEBCO bathymetric data layer\n   */\n   function onOceanDepthActivated() {\n  if (!props.mapInstance || isLayerBeingRemoved.value) return;\n  \n  // Ensure any existing layer is completely removed first\n  if (oceanDepthWMSLayer.value) {\n    onOceanDepthDeactivated();\n  }\n  \n  try {\n    // Always create a fresh WMS layer instance\n    oceanDepthWMSLayer.value = L.tileLayer.wms('https://wms.gebco.net/mapserv', {\n      layers: 'gebco_latest_sub_ice_topo',\n      format: 'image/jpeg',\n      transparent: true,\n      attribution: 'Map data &copy; <a href=\"https://www.gebco.net\">GEBCO</a>',\n      maxZoom: 12,\n      minZoom: 0,\n    });\n    \n    // Add to map only after creation is complete\n    oceanDepthWMSLayer.value.addTo(props.mapInstance);\n    \n  } catch (error) {\n    console.warn('Error creating ocean depth layer:', error);\n    oceanDepthWMSLayer.value = null;\n  }\n}\n  \n  /**\n   * Deactivates the ocean depth WMS layer\n   * Removes the bathymetric layer from the map\n   */\n   function onOceanDepthDeactivated() {\n  if (!props.mapInstance || !oceanDepthWMSLayer.value || isLayerBeingRemoved.value) return;\n  \n  // Set flag to prevent race conditions\n  isLayerBeingRemoved.value = true;\n  \n  try {\n    // Step 1: Remove the layer from the map\n    if (props.mapInstance.hasLayer(oceanDepthWMSLayer.value)) {\n      props.mapInstance.removeLayer(oceanDepthWMSLayer.value);\n    }\n    \n    // Step 2: Force cleanup of any pending tile requests\n    if (oceanDepthWMSLayer.value._container) {\n      oceanDepthWMSLayer.value._container.innerHTML = '';\n    }\n    \n    // Step 3: Remove any event listeners on the layer\n    if (typeof oceanDepthWMSLayer.value.off === 'function') {\n      oceanDepthWMSLayer.value.off();\n    }\n    \n    // Step 4: Clear internal references\n    if (typeof oceanDepthWMSLayer.value.remove === 'function') {\n      oceanDepthWMSLayer.value.remove();\n    }\n    \n    // Step 5: Manually clean up the layer's internal state\n    if (oceanDepthWMSLayer.value._map) {\n      oceanDepthWMSLayer.value._map = null;\n    }\n    if (oceanDepthWMSLayer.value._tiles) {\n      oceanDepthWMSLayer.value._tiles = {};\n    }\n    \n    // Step 6: Clear our reference\n    oceanDepthWMSLayer.value = null;\n    \n    // Step 7: Reset other state\n    lastDepthQuery = '';\n    \n    // Step 8: Hide the depth tooltip\n    if (depthTooltip.value) {\n      depthTooltip.value.style.display = 'none';\n    }\n    \n    // Step 9: Force a map redraw to ensure clean state\n    setTimeout(() => {\n      if (props.mapInstance) {\n        props.mapInstance.invalidateSize();\n      }\n      isLayerBeingRemoved.value = false;\n    }, 100);\n    \n  } catch (error) {\n    console.warn('Error during ocean depth layer cleanup:', error);\n    oceanDepthWMSLayer.value = null;\n    isLayerBeingRemoved.value = false;\n  }\n}\n  \n  // ==========================================\n  // OCEAN DEPTH API INTEGRATION\n  // ==========================================\n  \n  /**\n   * Fetches ocean depth data for a specific coordinate from GEBCO WMS service\n   * Uses GetFeatureInfo request to query bathymetric data at precise location\n   * @param {number} lat - Latitude coordinate\n   * @param {number} lng - Longitude coordinate\n   */\n  async function getOceanDepth(lat: number, lng: number) {\n    // Create query string for caching and duplicate prevention\n    const queryString = `${lat.toFixed(4)},${lng.toFixed(4)}`;\n    if (queryString === lastDepthQuery) return;\n    lastDepthQuery = queryString;\n  \n    try {\n      // Create small bounding box around the point for WMS query\n      const minx = lat - 0.0001;\n      const miny = lng - 0.0001;\n      const maxx = lat + 0.0001;\n      const maxy = lng + 0.0001;\n      \n      // Construct GEBCO WMS GetFeatureInfo request URL\n      const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n      \n      const response = await axios.get(url);\n      \n      // Parse depth value from WMS response text\n      let searchString = \"value_list\";\n      let searchIndex = response.data.indexOf(searchString);\n      let extractedText = response.data.substring(\n        searchIndex + searchString.length + 4,\n        response.data.length - 2\n      );\n      \n      // Update depth display with parsed value\n      currentOceanDepth.value = `${props.translations.oceanDepth}: ${extractedText}m`;\n    } catch (error) {\n      // Handle API errors gracefully\n      currentOceanDepth.value = \"Ocean Depth: Unknown\";\n    }\n  }\n  \n  // ==========================================\n  // UI INTERACTION HANDLERS\n  // ==========================================\n  \n  /**\n   * Updates the position of the depth tooltip to follow the mouse cursor\n   * Converts map coordinates to screen coordinates for tooltip positioning\n   * @param {L.LeafletMouseEvent} e - Leaflet mouse event containing coordinates\n   */\n  const updateDepthTooltip = (e: L.LeafletMouseEvent) => {\n    if (props.isOceanSelected && depthTooltip.value && props.mapInstance) {\n      // Convert lat/lng coordinates to container pixel coordinates\n      const containerPoint = props.mapInstance.latLngToContainerPoint(e.latlng);\n      \n      // Position tooltip with slight offset from cursor\n      depthTooltip.value.style.left = `${containerPoint.x + 15}px`;\n      depthTooltip.value.style.top = `${containerPoint.y + 15}px`;\n      depthTooltip.value.style.display = 'block';\n    } else if (depthTooltip.value) {\n      // Hide tooltip when not in ocean mode\n      depthTooltip.value.style.display = 'none';\n    }\n  };\n  \n  /**\n   * Debounced handler for mouse position updates\n   * Updates coordinates display and triggers depth queries\n   * Debounced to prevent excessive API calls during mouse movement\n   */\n   const updateMousePosition = debounce((e: L.LeafletMouseEvent) => {\n  // Enhanced safety checks\n  if (!props.isOceanSelected || \n      !oceanDepthWMSLayer.value || \n      !props.mapInstance ||\n      !props.mapInstance.getContainer() ||\n      isLayerBeingRemoved.value ||\n      !props.mapInstance.hasLayer(oceanDepthWMSLayer.value)) {\n    return;\n  }\n  \n  try {\n    const latlng = e.latlng;\n    \n    // Round coordinates to 4 decimal places for display\n    const roundedLat = Math.round(latlng.lat * 1e4) / 1e4;\n    const roundedLng = Math.round(latlng.lng * 1e4) / 1e4;\n    \n    // Update coordinate display\n    latitude.value = roundedLat;\n    longitude.value = roundedLng;\n    \n    // Only query depth and show tooltip when not in drawing mode\n    if (!props.isDrawingModeActive) {\n      getOceanDepth(roundedLat, roundedLng);\n      updateDepthTooltip(e);\n    }\n  } catch (error) {\n    console.warn('Error updating mouse position:', error);\n  }\n}, 100); // 100ms debounce delay for performance\n  \n  // ==========================================\n  // COMPONENT INTERFACE EXPOSURE\n  // ==========================================\n  \n  /**\n   * Expose methods for parent component interaction\n   * Allows parent to trigger mouse updates and layer management\n   */\n  defineExpose({\n    updateMousePosition,\n    onOceanDepthActivated,\n    onOceanDepthDeactivated,\n  });\n  </script>\n  \n  <style scoped>\n  </style>","import script from \"./OceanDepth.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./OceanDepth.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"date-popup\"\n}\n\nimport { ref, computed, watch } from 'vue';\nimport axios from 'axios';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport '@vuepic/vue-datepicker/dist/main.css';\n\n// ========================\n// TYPE DEFINITIONS\n// ========================\n\ninterface Props {\n  visible: boolean;\n  currentTranslations: Record<string, any>;\n}\n\ninterface Emits {\n  (e: 'update:fishingUrl', url: string): void;\n  (e: 'fishing-layer-ready', ready: boolean): void;\n}\n\n// ========================\n// PROPS & EMITS\n// ========================\n\nconst format = \"dd/MM/yyyy\";\nconst apiUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/4wings/generate-png';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'FishingDatePicker',\n  props: {\n    visible: { type: Boolean },\n    currentTranslations: {}\n  },\n  emits: [\"update:fishingUrl\", \"fishing-layer-ready\"],\n  setup(__props: any, { emit: __emit }) {\n\nconst props = __props;\nconst emit = __emit;\n\n// ========================\n// COMPONENT STATE\n// ========================\n\n// Date picker state\nconst internalDate = ref();\nconst fishLayerReady = ref(false);\n\n// Updated API configuration - use your proxy endpoint\nconst params = ref({\n  color: '#48ba0f',\n  interval: 'DAY',\n  'datasets[0]': 'public-global-fishing-effort:latest',\n  'date-range': '2023-11-01,2023-12-24' // Default date range\n});\n\n// ========================\n// COMPUTED PROPERTIES\n// ========================\n\n/**\n * Dynamic placeholder text based on current translations\n */\nconst placeholder = computed(() => {\n  return props.currentTranslations?.datePlaceholderFishing || 'Select date range';\n});\n\n// ========================\n// UTILITY METHODS\n// ========================\n\n/**\n * Formats a date part (day/month) to ensure two-digit format\n * @param {number} part - The date part to format\n * @returns {string} Formatted date part with leading zero if needed\n */\nconst formatDatePart = (part: number): string => {\n  return part < 10 ? '0' + part : part.toString();\n};\n\n/**\n * Enhanced URL replacement to handle different API endpoint variations\n * @param {string} originalUrl - The original API URL\n * @returns {string} Modified URL using the proxy\n */\nconst modifyApiUrl = (originalUrl: string): string => {\n  return originalUrl\n    .replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\")\n    .replace(\"gateway.api.prod-v2.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n};\n\n// ========================\n// API METHODS\n// ========================\n\n/**\n * Initializes the fishing watch layer with default parameters\n * Called on component mount and when visibility changes\n */\nconst initializeFishingWatch = async () => {\n  try {\n    console.log('Initializing fishing watch with params:', params.value);\n    \n    const response = await axios.post(apiUrl, null, { \n      params: params.value,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      timeout: 30000 // 30 second timeout\n    });\n    \n    console.log('API Response:', response.data);\n    \n    if (response.data && response.data.url) {\n      const modifiedUrl = modifyApiUrl(response.data.url);\n      console.log('Modified URL:', modifiedUrl);\n      \n      emit('update:fishingUrl', modifiedUrl);\n      fishLayerReady.value = true;\n      emit('fishing-layer-ready', true);\n    } else {\n      throw new Error('Invalid response structure');\n    }\n  } catch (error) {\n    console.error('Failed to initialize fishing watch:', error);\n    fishLayerReady.value = false;\n    emit('fishing-layer-ready', false);\n    \n    // Optional: Retry logic\n    setTimeout(() => {\n      if (!fishLayerReady.value) {\n        console.log('Retrying fishing watch initialization...');\n        initializeFishingWatch();\n      }\n    }, 5000);\n  }\n};\n\n/**\n * Updates fishing data with new date range parameters\n * Called when user selects a new date range\n */\nconst updateFishingData = async () => {\n  try {\n    console.log('Updating fishing data with params:', params.value);\n    \n    const response = await axios.post(apiUrl, null, { \n      params: params.value,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      timeout: 30000\n    });\n    \n    console.log('Update API Response:', response.data);\n    \n    if (response.data && response.data.url) {\n      const modifiedUrl = modifyApiUrl(response.data.url);\n      console.log('Updated Modified URL:', modifiedUrl);\n      \n      emit('update:fishingUrl', modifiedUrl);\n    } else {\n      throw new Error('Invalid response structure');\n    }\n  } catch (error) {\n    console.error('Failed to update fishing data:', error);\n    \n    // Don't set fishLayerReady to false on update errors\n    // Just log the error for debugging\n  }\n};\n\n// ========================\n// EVENT HANDLERS\n// ========================\n\n/**\n * Handles date picker value changes\n * Formats the selected date range and updates API parameters\n * @param {Date[] | null} dateRange - Selected date range from the picker\n */\nconst handleDatePicked = (dateRange: Date[] | null) => {\n  if (dateRange && dateRange.length === 2) {\n    // Format start date\n    const firstDay = formatDatePart(dateRange[0].getDate());\n    const firstMonth = formatDatePart(dateRange[0].getMonth() + 1);\n    \n    // Format end date\n    const secondDay = formatDatePart(dateRange[1].getDate());\n    const secondMonth = formatDatePart(dateRange[1].getMonth() + 1);\n    \n    // Update API parameters with formatted date range\n    const newDateRange = `${dateRange[0].getFullYear()}-${firstMonth}-${firstDay},${dateRange[1].getFullYear()}-${secondMonth}-${secondDay}`;\n    params.value['date-range'] = newDateRange;\n    \n    console.log('Date range updated to:', newDateRange);\n    \n    // Fetch new fishing data with updated date range\n    updateFishingData();\n  }\n};\n\n// ========================\n// LIFECYCLE & WATCHERS\n// ========================\n\n// Initialize fishing watch when component is created\ninitializeFishingWatch();\n\n/**\n * Watch for visibility changes to refresh data if needed\n * Reinitializes fishing watch if component becomes visible and layer isn't ready\n */\nwatch(() => props.visible, (newVisible) => {\n  if (newVisible && !fishLayerReady.value) {\n    console.log('Component became visible, reinitializing...');\n    initializeFishingWatch();\n  }\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_ctx.visible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createVNode(_unref(VueDatePicker), {\n          modelValue: internalDate.value,\n          \"onUpdate:modelValue\": [\n            _cache[0] || (_cache[0] = ($event: any) => ((internalDate).value = $event)),\n            handleDatePicked\n          ],\n          \"model-value\": internalDate.value,\n          placeholder: placeholder.value,\n          \"preview-format\": format,\n          format: format,\n          \"enable-time-picker\": false,\n          range: { partialRange: false },\n          dark: \"true\",\n          class: \"custom-datepicker\",\n          \"no-today\": \"\",\n          \"max-date\": new Date()\n        }, null, 8, [\"modelValue\", \"model-value\", \"placeholder\", \"max-date\"])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<!--\n  FishingDatePicker Component\n  \n  A date range picker component specifically designed for selecting fishing data date ranges.\n  Integrates with the Global Fishing Watch API to fetch and display fishing effort data.\n  \n  Features:\n  - Date range selection with validation (max date is today)\n  - Automatic API calls when date range changes\n  - Custom date formatting (dd/MM/yyyy)\n  - API URL modification for proxy routing\n  - Fishing layer ready state management\n  - Enhanced error handling and retry logic\n-->\n\n<template>\n  <div v-if=\"visible\" class=\"date-popup\">\n    <VueDatePicker\n      v-model=\"internalDate\"\n      :model-value=\"internalDate\"\n      @update:model-value=\"handleDatePicked\"\n      :placeholder=\"placeholder\"\n      :preview-format=\"format\"\n      :format=\"format\"\n      :enable-time-picker=\"false\"\n      :range=\"{ partialRange: false }\"\n      dark=\"true\"\n      class=\"custom-datepicker\"\n      no-today\n      :max-date=\"new Date()\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch } from 'vue';\nimport axios from 'axios';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport '@vuepic/vue-datepicker/dist/main.css';\n\n// ========================\n// TYPE DEFINITIONS\n// ========================\n\ninterface Props {\n  visible: boolean;\n  currentTranslations: Record<string, any>;\n}\n\ninterface Emits {\n  (e: 'update:fishingUrl', url: string): void;\n  (e: 'fishing-layer-ready', ready: boolean): void;\n}\n\n// ========================\n// PROPS & EMITS\n// ========================\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\n// ========================\n// COMPONENT STATE\n// ========================\n\n// Date picker state\nconst internalDate = ref();\nconst format = \"dd/MM/yyyy\";\nconst fishLayerReady = ref(false);\n\n// Updated API configuration - use your proxy endpoint\nconst apiUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/4wings/generate-png';\nconst params = ref({\n  color: '#48ba0f',\n  interval: 'DAY',\n  'datasets[0]': 'public-global-fishing-effort:latest',\n  'date-range': '2023-11-01,2023-12-24' // Default date range\n});\n\n// ========================\n// COMPUTED PROPERTIES\n// ========================\n\n/**\n * Dynamic placeholder text based on current translations\n */\nconst placeholder = computed(() => {\n  return props.currentTranslations?.datePlaceholderFishing || 'Select date range';\n});\n\n// ========================\n// UTILITY METHODS\n// ========================\n\n/**\n * Formats a date part (day/month) to ensure two-digit format\n * @param {number} part - The date part to format\n * @returns {string} Formatted date part with leading zero if needed\n */\nconst formatDatePart = (part: number): string => {\n  return part < 10 ? '0' + part : part.toString();\n};\n\n/**\n * Enhanced URL replacement to handle different API endpoint variations\n * @param {string} originalUrl - The original API URL\n * @returns {string} Modified URL using the proxy\n */\nconst modifyApiUrl = (originalUrl: string): string => {\n  return originalUrl\n    .replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\")\n    .replace(\"gateway.api.prod-v2.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n};\n\n// ========================\n// API METHODS\n// ========================\n\n/**\n * Initializes the fishing watch layer with default parameters\n * Called on component mount and when visibility changes\n */\nconst initializeFishingWatch = async () => {\n  try {\n    console.log('Initializing fishing watch with params:', params.value);\n    \n    const response = await axios.post(apiUrl, null, { \n      params: params.value,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      timeout: 30000 // 30 second timeout\n    });\n    \n    console.log('API Response:', response.data);\n    \n    if (response.data && response.data.url) {\n      const modifiedUrl = modifyApiUrl(response.data.url);\n      console.log('Modified URL:', modifiedUrl);\n      \n      emit('update:fishingUrl', modifiedUrl);\n      fishLayerReady.value = true;\n      emit('fishing-layer-ready', true);\n    } else {\n      throw new Error('Invalid response structure');\n    }\n  } catch (error) {\n    console.error('Failed to initialize fishing watch:', error);\n    fishLayerReady.value = false;\n    emit('fishing-layer-ready', false);\n    \n    // Optional: Retry logic\n    setTimeout(() => {\n      if (!fishLayerReady.value) {\n        console.log('Retrying fishing watch initialization...');\n        initializeFishingWatch();\n      }\n    }, 5000);\n  }\n};\n\n/**\n * Updates fishing data with new date range parameters\n * Called when user selects a new date range\n */\nconst updateFishingData = async () => {\n  try {\n    console.log('Updating fishing data with params:', params.value);\n    \n    const response = await axios.post(apiUrl, null, { \n      params: params.value,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      timeout: 30000\n    });\n    \n    console.log('Update API Response:', response.data);\n    \n    if (response.data && response.data.url) {\n      const modifiedUrl = modifyApiUrl(response.data.url);\n      console.log('Updated Modified URL:', modifiedUrl);\n      \n      emit('update:fishingUrl', modifiedUrl);\n    } else {\n      throw new Error('Invalid response structure');\n    }\n  } catch (error) {\n    console.error('Failed to update fishing data:', error);\n    \n    // Don't set fishLayerReady to false on update errors\n    // Just log the error for debugging\n  }\n};\n\n// ========================\n// EVENT HANDLERS\n// ========================\n\n/**\n * Handles date picker value changes\n * Formats the selected date range and updates API parameters\n * @param {Date[] | null} dateRange - Selected date range from the picker\n */\nconst handleDatePicked = (dateRange: Date[] | null) => {\n  if (dateRange && dateRange.length === 2) {\n    // Format start date\n    const firstDay = formatDatePart(dateRange[0].getDate());\n    const firstMonth = formatDatePart(dateRange[0].getMonth() + 1);\n    \n    // Format end date\n    const secondDay = formatDatePart(dateRange[1].getDate());\n    const secondMonth = formatDatePart(dateRange[1].getMonth() + 1);\n    \n    // Update API parameters with formatted date range\n    const newDateRange = `${dateRange[0].getFullYear()}-${firstMonth}-${firstDay},${dateRange[1].getFullYear()}-${secondMonth}-${secondDay}`;\n    params.value['date-range'] = newDateRange;\n    \n    console.log('Date range updated to:', newDateRange);\n    \n    // Fetch new fishing data with updated date range\n    updateFishingData();\n  }\n};\n\n// ========================\n// LIFECYCLE & WATCHERS\n// ========================\n\n// Initialize fishing watch when component is created\ninitializeFishingWatch();\n\n/**\n * Watch for visibility changes to refresh data if needed\n * Reinitializes fishing watch if component becomes visible and layer isn't ready\n */\nwatch(() => props.visible, (newVisible) => {\n  if (newVisible && !fishLayerReady.value) {\n    console.log('Component became visible, reinitializing...');\n    initializeFishingWatch();\n  }\n});\n</script>","import script from \"./FishingDatePicker.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FishingDatePicker.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx } from \"vue\"\n\nimport { computed, watch, ref } from 'vue';\n    import L from 'leaflet';\n    import { LLayerGroup, LGeoJson } from '@vue-leaflet/vue-leaflet';\n  \n    // =============================================================================\n    // TYPES & INTERFACES\n    // =============================================================================\n    \n    interface Props {\n      gasPipelineData: any;\n      mapInstance: L.Map | null;\n      currentTranslations: any;\n    }\n  \n    // =============================================================================\n    // PROPS DEFINITION\n    // =============================================================================\n    \n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GasPipelines',\n  props: {\n    gasPipelineData: {},\n    mapInstance: {},\n    currentTranslations: {}\n  },\n  setup(__props: any, { expose: __expose }) {\n\n    const props = __props;\n  \n    // =============================================================================\n    // REACTIVE REFERENCES\n    // =============================================================================\n    \n    const highlightedPipelineId = ref<string | null>(null);\n    let tooltip = null;\n  \n    // =============================================================================\n    // COMPUTED PROPERTIES\n    // =============================================================================\n    \n    const gasPipelineData = computed(() => props.gasPipelineData);\n  \n    // =============================================================================\n    // UTILITY FUNCTIONS\n    // =============================================================================\n    \n    /**\n     * Formats large numbers into billions or millions for better readability\n     * @param cost - The cost value to format\n     * @returns Formatted string with B/M suffix or original value\n     */\n    const formatCost = (cost) => {\n      if (cost >= 1e9) {\n        return `${(cost / 1e9).toFixed(2)} B`;\n      } else if (cost >= 1e6) {\n        return `${(cost / 1e6).toFixed(2)} M`;\n      } else {\n        return cost.toString();\n      }\n    };\n  \n    /**\n     * Initializes the tooltip instance for hover interactions\n     */\n    const initializeTooltip = () => {\n      if (props.mapInstance && !tooltip) {\n        tooltip = L.tooltip({\n          permanent: false,\n          direction: 'top',\n          offset: L.point(0, -10),\n          className: 'custom-tooltip'\n        });\n      }\n    };\n  \n    // =============================================================================\n    // STYLING FUNCTIONS\n    // =============================================================================\n    \n    /**\n     * Returns an array of style functions for border and fill layers\n     * Applies different styling based on highlight state\n     */\n    function getGasPipelinesOptionsStyle() {\n      return [\n        // Border style - creates outer stroke with dashed pattern\n        (feature: any) => {\n          const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n          return {\n            color: isPipelineHighlighted ? '#FF5733' : '#333333',\n            weight: isPipelineHighlighted ? 6 : 4,\n            opacity: isPipelineHighlighted ? 0.9 : 0.5,\n            dashArray: '5',\n          };\n        },\n        // Fill style - creates inner solid line\n        (feature: any) => {\n          const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n          return {\n            color: isPipelineHighlighted ? '#FFAA33' : '#3dff98',\n            weight: isPipelineHighlighted ? 1.2 : 0.7,\n            opacity: isPipelineHighlighted ? 0.8 : 0.5,\n          };\n        }\n      ];\n    }\n  \n    // =============================================================================\n    // EVENT HANDLERS\n    // =============================================================================\n    \n    /**\n     * Handles pipeline click events - toggles highlight and shows popup\n     * @param e - Click event from Leaflet\n     */\n    const onPipelineClick = (e) => {\n      L.DomEvent.stopPropagation(e);\n      \n      const feature = e.layer.toGeoJSON();\n      const properties = feature.properties;\n      const pipelineId = properties.PipelineID;\n      \n      // Store the previously highlighted pipeline ID before updating\n      const previouslyHighlighted = highlightedPipelineId.value;\n      \n      // Toggle highlighting - if clicking same pipeline, deselect it\n      if (highlightedPipelineId.value === pipelineId) {\n        highlightedPipelineId.value = null;\n      } else {\n        highlightedPipelineId.value = pipelineId;\n      }\n  \n      // Force redraw of affected pipeline segments\n      if (props.mapInstance) {\n        props.mapInstance.eachLayer((layer) => {\n          if (layer.feature && layer.feature.properties) {\n            const isSamePipeline = layer.feature.properties.PipelineID === pipelineId;\n            const wasPreviouslyHighlighted = layer.feature.properties.PipelineID === previouslyHighlighted;\n            \n            // Only update layers that are either newly selected or previously selected\n            if (isSamePipeline || wasPreviouslyHighlighted) {\n              const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n              \n              // Apply appropriate style based on layer type (border has dashArray)\n              const currentStyle = layer.options;\n              \n              if (currentStyle.dashArray) {\n                layer.setStyle(borderStyle(layer.feature));\n              } else {\n                layer.setStyle(fillStyle(layer.feature));\n              }\n            }\n          }\n        });\n      }\n  \n      // Show detailed popup if a new pipeline was selected\n      if (highlightedPipelineId.value === pipelineId) {\n        const cost = properties.CostUSD ?? properties.Cost;\n        const formattedCost = cost ? formatCost(cost) : 'N/A';\n        \n        const popupContent = `\n  <div class=\"gaspipeline-popup-container\">\n    <header class=\"popup-header\">\n      <span class=\"popup-icon\">🛢️</span>\n      <h2 class=\"popup-title\">${properties.PipelineName}</h2>\n    </header>\n    <section class=\"popup-info-grid\">\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.startCountry}</div>\n        <div class=\"value\">${properties.StartCountry}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.endCountry}</div>\n        <div class=\"value\">${properties.EndCountry}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.countries}</div>\n        <div class=\"value\">${properties.Countries}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.owner}</div>\n        <div class=\"value\">${properties.Owner}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.startYear}</div>\n        <div class=\"value\">${properties.StartYear1}</div>\n      </div>\n      <div class=\"info-item\" title=\"${props.currentTranslations.capacityTooltip}\">\n        <div class=\"label\">${props.currentTranslations.capacity}</div>\n        <div class=\"value\">${properties[\"CapacityBcm/y\"]} Bcm/y</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.cost}</div>\n        <div class=\"value\">${formattedCost}$</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.length}</div>\n        <div class=\"value\">${properties.LengthKnownKm} km</div>\n      </div>\n    </section>\n  </div>\n`;\n\n        \nconst popup = L.popup({ className: 'gaspipeline-popup' })\n  .setLatLng(e.latlng)\n  .setContent(popupContent)\n  .openOn(props.mapInstance);\n\n      }\n    };\n  \n    /**\n     * Handles pipeline hover events - shows tooltip with pipeline name\n     * @param e - Hover event from Leaflet\n     */\n    const onPipelineHover = (e: Event) => {\n      const feature = e.layer.toGeoJSON();\n  \n      if (props.mapInstance && tooltip) {\n        tooltip.setLatLng(e.latlng)\n          .setContent(feature.properties.PipelineName)\n          .addTo(props.mapInstance);\n      }\n    }\n  \n    /**\n     * Handles pipeline mouse leave events - removes tooltip\n     * @param e - Mouse leave event from Leaflet\n     */\n    const onPipelineDehover = (e: Event) => {\n      if (props.mapInstance && tooltip) {\n        props.mapInstance.removeLayer(tooltip);\n      }\n    }\n  \n    // =============================================================================\n    // PUBLIC METHODS\n    // =============================================================================\n    \n    /**\n     * Clears the current pipeline highlight and resets styling\n     * Used for programmatic deselection from parent components\n     */\n    function clearHighlight() {\n      const previouslyHighlighted = highlightedPipelineId.value;\n      highlightedPipelineId.value = null;\n  \n      if (props.mapInstance && previouslyHighlighted) {\n        props.mapInstance.eachLayer((layer) => {\n          if (layer.feature?.properties?.PipelineID === previouslyHighlighted) {\n            const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n            \n            if (layer.options.dashArray) {\n              layer.setStyle(borderStyle(layer.feature));\n            } else {\n              layer.setStyle(fillStyle(layer.feature));\n            }\n          }\n        });\n      }\n    }\n  \n    // =============================================================================\n    // LIFECYCLE HOOKS\n    // =============================================================================\n    \n    /**\n     * Watch for mapInstance changes to initialize tooltip functionality\n     */\n    watch(() => props.mapInstance, (newMapInstance) => {\n      if (newMapInstance) {\n        initializeTooltip();\n      }\n    }, { immediate: true });\n  \n    // =============================================================================\n    // COMPONENT EXPORTS\n    // =============================================================================\n    \n    __expose({\n      clearHighlight\n    });\n  \nreturn (_ctx: any,_cache: any) => {\n  return (gasPipelineData.value)\n    ? (_openBlock(), _createBlock(_unref(LLayerGroup), {\n        key: 0,\n        visible: false,\n        name: \"Gas Pipelines\",\n        \"layer-type\": \"overlay\"\n      }, {\n        default: _withCtx(() => [\n          (gasPipelineData.value)\n            ? (_openBlock(), _createBlock(_unref(LGeoJson), {\n                key: 0,\n                geojson: gasPipelineData.value,\n                \"options-style\": getGasPipelinesOptionsStyle()[0],\n                onClick: _cache[0] || (_cache[0] = (e) => onPipelineClick(e)),\n                onMouseover: _cache[1] || (_cache[1] = (e) => onPipelineHover(e)),\n                onMouseout: _cache[2] || (_cache[2] = (e) => onPipelineDehover(e))\n              }, null, 8, [\"geojson\", \"options-style\"]))\n            : _createCommentVNode(\"\", true),\n          (gasPipelineData.value)\n            ? (_openBlock(), _createBlock(_unref(LGeoJson), {\n                key: 1,\n                geojson: gasPipelineData.value,\n                \"options-style\": getGasPipelinesOptionsStyle()[1],\n                onClick: _cache[3] || (_cache[3] = (e) => onPipelineClick(e)),\n                onMouseover: _cache[4] || (_cache[4] = (e) => onPipelineHover(e)),\n                onMouseout: _cache[5] || (_cache[5] = (e) => onPipelineDehover(e))\n              }, null, 8, [\"geojson\", \"options-style\"]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _: 1\n      }))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<!--\n  GasPipelines.vue\n  \n  A Vue component that displays gas pipelines on a Leaflet map with interactive features.\n  Features:\n  - Dual-layer rendering with border and fill styles for visual depth\n  - Click-to-highlight functionality with toggle behavior\n  - Hover tooltips showing pipeline names\n  - Detailed popups with pipeline information (capacity, cost, countries, etc.)\n  - Dynamic styling based on selection state\n  - Cost formatting for large numbers (billions/millions)\n  - Programmatic highlight clearing capability\n-->\n\n<template>\n    <l-layer-group\n      v-if=\"gasPipelineData\"\n      :visible=\"false\"\n      name=\"Gas Pipelines\"\n      layer-type=\"overlay\"\n    >\n      <!-- Border layer - rendered first for proper layering -->\n      <l-geo-json\n        v-if=\"gasPipelineData\"\n        :geojson=\"gasPipelineData\"\n        :options-style=\"getGasPipelinesOptionsStyle()[0]\"\n        @click=\"(e) => onPipelineClick(e)\"\n        @mouseover=\"(e) => onPipelineHover(e)\"\n        @mouseout=\"(e) => onPipelineDehover(e)\"\n      />\n      \n      <!-- Fill layer - rendered on top of border for visual effect -->\n      <l-geo-json\n        v-if=\"gasPipelineData\"\n        :geojson=\"gasPipelineData\"\n        :options-style=\"getGasPipelinesOptionsStyle()[1]\"\n        @click=\"(e) => onPipelineClick(e)\"\n        @mouseover=\"(e) => onPipelineHover(e)\"\n        @mouseout=\"(e) => onPipelineDehover(e)\"\n      />\n    </l-layer-group>\n  </template>\n  \n  <script setup lang=\"ts\">\n    import { computed, watch, ref } from 'vue';\n    import L from 'leaflet';\n    import { LLayerGroup, LGeoJson } from '@vue-leaflet/vue-leaflet';\n  \n    // =============================================================================\n    // TYPES & INTERFACES\n    // =============================================================================\n    \n    interface Props {\n      gasPipelineData: any;\n      mapInstance: L.Map | null;\n      currentTranslations: any;\n    }\n  \n    // =============================================================================\n    // PROPS DEFINITION\n    // =============================================================================\n    \n    const props = defineProps<Props>();\n  \n    // =============================================================================\n    // REACTIVE REFERENCES\n    // =============================================================================\n    \n    const highlightedPipelineId = ref<string | null>(null);\n    let tooltip = null;\n  \n    // =============================================================================\n    // COMPUTED PROPERTIES\n    // =============================================================================\n    \n    const gasPipelineData = computed(() => props.gasPipelineData);\n  \n    // =============================================================================\n    // UTILITY FUNCTIONS\n    // =============================================================================\n    \n    /**\n     * Formats large numbers into billions or millions for better readability\n     * @param cost - The cost value to format\n     * @returns Formatted string with B/M suffix or original value\n     */\n    const formatCost = (cost) => {\n      if (cost >= 1e9) {\n        return `${(cost / 1e9).toFixed(2)} B`;\n      } else if (cost >= 1e6) {\n        return `${(cost / 1e6).toFixed(2)} M`;\n      } else {\n        return cost.toString();\n      }\n    };\n  \n    /**\n     * Initializes the tooltip instance for hover interactions\n     */\n    const initializeTooltip = () => {\n      if (props.mapInstance && !tooltip) {\n        tooltip = L.tooltip({\n          permanent: false,\n          direction: 'top',\n          offset: L.point(0, -10),\n          className: 'custom-tooltip'\n        });\n      }\n    };\n  \n    // =============================================================================\n    // STYLING FUNCTIONS\n    // =============================================================================\n    \n    /**\n     * Returns an array of style functions for border and fill layers\n     * Applies different styling based on highlight state\n     */\n    function getGasPipelinesOptionsStyle() {\n      return [\n        // Border style - creates outer stroke with dashed pattern\n        (feature: any) => {\n          const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n          return {\n            color: isPipelineHighlighted ? '#FF5733' : '#333333',\n            weight: isPipelineHighlighted ? 6 : 4,\n            opacity: isPipelineHighlighted ? 0.9 : 0.5,\n            dashArray: '5',\n          };\n        },\n        // Fill style - creates inner solid line\n        (feature: any) => {\n          const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n          return {\n            color: isPipelineHighlighted ? '#FFAA33' : '#3dff98',\n            weight: isPipelineHighlighted ? 1.2 : 0.7,\n            opacity: isPipelineHighlighted ? 0.8 : 0.5,\n          };\n        }\n      ];\n    }\n  \n    // =============================================================================\n    // EVENT HANDLERS\n    // =============================================================================\n    \n    /**\n     * Handles pipeline click events - toggles highlight and shows popup\n     * @param e - Click event from Leaflet\n     */\n    const onPipelineClick = (e) => {\n      L.DomEvent.stopPropagation(e);\n      \n      const feature = e.layer.toGeoJSON();\n      const properties = feature.properties;\n      const pipelineId = properties.PipelineID;\n      \n      // Store the previously highlighted pipeline ID before updating\n      const previouslyHighlighted = highlightedPipelineId.value;\n      \n      // Toggle highlighting - if clicking same pipeline, deselect it\n      if (highlightedPipelineId.value === pipelineId) {\n        highlightedPipelineId.value = null;\n      } else {\n        highlightedPipelineId.value = pipelineId;\n      }\n  \n      // Force redraw of affected pipeline segments\n      if (props.mapInstance) {\n        props.mapInstance.eachLayer((layer) => {\n          if (layer.feature && layer.feature.properties) {\n            const isSamePipeline = layer.feature.properties.PipelineID === pipelineId;\n            const wasPreviouslyHighlighted = layer.feature.properties.PipelineID === previouslyHighlighted;\n            \n            // Only update layers that are either newly selected or previously selected\n            if (isSamePipeline || wasPreviouslyHighlighted) {\n              const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n              \n              // Apply appropriate style based on layer type (border has dashArray)\n              const currentStyle = layer.options;\n              \n              if (currentStyle.dashArray) {\n                layer.setStyle(borderStyle(layer.feature));\n              } else {\n                layer.setStyle(fillStyle(layer.feature));\n              }\n            }\n          }\n        });\n      }\n  \n      // Show detailed popup if a new pipeline was selected\n      if (highlightedPipelineId.value === pipelineId) {\n        const cost = properties.CostUSD ?? properties.Cost;\n        const formattedCost = cost ? formatCost(cost) : 'N/A';\n        \n        const popupContent = `\n  <div class=\"gaspipeline-popup-container\">\n    <header class=\"popup-header\">\n      <span class=\"popup-icon\">🛢️</span>\n      <h2 class=\"popup-title\">${properties.PipelineName}</h2>\n    </header>\n    <section class=\"popup-info-grid\">\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.startCountry}</div>\n        <div class=\"value\">${properties.StartCountry}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.endCountry}</div>\n        <div class=\"value\">${properties.EndCountry}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.countries}</div>\n        <div class=\"value\">${properties.Countries}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.owner}</div>\n        <div class=\"value\">${properties.Owner}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.startYear}</div>\n        <div class=\"value\">${properties.StartYear1}</div>\n      </div>\n      <div class=\"info-item\" title=\"${props.currentTranslations.capacityTooltip}\">\n        <div class=\"label\">${props.currentTranslations.capacity}</div>\n        <div class=\"value\">${properties[\"CapacityBcm/y\"]} Bcm/y</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.cost}</div>\n        <div class=\"value\">${formattedCost}$</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"label\">${props.currentTranslations.length}</div>\n        <div class=\"value\">${properties.LengthKnownKm} km</div>\n      </div>\n    </section>\n  </div>\n`;\n\n        \nconst popup = L.popup({ className: 'gaspipeline-popup' })\n  .setLatLng(e.latlng)\n  .setContent(popupContent)\n  .openOn(props.mapInstance);\n\n      }\n    };\n  \n    /**\n     * Handles pipeline hover events - shows tooltip with pipeline name\n     * @param e - Hover event from Leaflet\n     */\n    const onPipelineHover = (e: Event) => {\n      const feature = e.layer.toGeoJSON();\n  \n      if (props.mapInstance && tooltip) {\n        tooltip.setLatLng(e.latlng)\n          .setContent(feature.properties.PipelineName)\n          .addTo(props.mapInstance);\n      }\n    }\n  \n    /**\n     * Handles pipeline mouse leave events - removes tooltip\n     * @param e - Mouse leave event from Leaflet\n     */\n    const onPipelineDehover = (e: Event) => {\n      if (props.mapInstance && tooltip) {\n        props.mapInstance.removeLayer(tooltip);\n      }\n    }\n  \n    // =============================================================================\n    // PUBLIC METHODS\n    // =============================================================================\n    \n    /**\n     * Clears the current pipeline highlight and resets styling\n     * Used for programmatic deselection from parent components\n     */\n    function clearHighlight() {\n      const previouslyHighlighted = highlightedPipelineId.value;\n      highlightedPipelineId.value = null;\n  \n      if (props.mapInstance && previouslyHighlighted) {\n        props.mapInstance.eachLayer((layer) => {\n          if (layer.feature?.properties?.PipelineID === previouslyHighlighted) {\n            const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n            \n            if (layer.options.dashArray) {\n              layer.setStyle(borderStyle(layer.feature));\n            } else {\n              layer.setStyle(fillStyle(layer.feature));\n            }\n          }\n        });\n      }\n    }\n  \n    // =============================================================================\n    // LIFECYCLE HOOKS\n    // =============================================================================\n    \n    /**\n     * Watch for mapInstance changes to initialize tooltip functionality\n     */\n    watch(() => props.mapInstance, (newMapInstance) => {\n      if (newMapInstance) {\n        initializeTooltip();\n      }\n    }, { immediate: true });\n  \n    // =============================================================================\n    // COMPONENT EXPORTS\n    // =============================================================================\n    \n    defineExpose({\n      clearHighlight\n    });\n  </script>\n\n  <style>\n.gaspipeline-popup .leaflet-popup-content-wrapper {\n  background: rgba(26, 32, 44, 0.9); /* dark translucent */\n  border-radius: 10px;\n  box-shadow: 0 4px 14px rgba(0, 0, 0, 0.5);\n  padding: 12px 16px;\n  max-width: 500px !important; /* smaller */\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 13px;\n  color: #e2e8f0;\n  line-height: 1.4;\n  user-select: none;\n  pointer-events: auto;\n  backdrop-filter: saturate(180%) blur(8px);\n}\n\n.gaspipeline-popup .leaflet-popup-content {\n  margin: 0;\n  padding: 0;\n}\n\n.gaspipeline-popup .leaflet-popup-close-button {\n  color: #63b3ed;\n  font-size: 1.2rem;\n  opacity: 0.8;\n  top: 8px;\n  right: 8px;\n  background: transparent;\n  border: none;\n  text-shadow: none;\n}\n\n.gaspipeline-popup .leaflet-popup-tip {\n  display: none;\n}\n\n/* Keep your inner container styling separate */\n.gaspipeline-popup-container {\n  /* you can keep text layout styles here */\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.popup-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 2px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n  padding-bottom: 8px;\n}\n\n.popup-icon {\n  font-size: 20px !important;\n  margin-right: 10px;\n  color: #63b3ed;\n}\n\n.popup-title {\n  font-weight: 700;\n  font-size: 0.85rem;\n  color: #90cdf4;\n  margin: 0;\n}\n\n.popup-info-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  font-size: 0.75rem;\n}\n\n.info-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 6px 10px;\n  background: rgba(255, 255, 255, 0.07);\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: background 0.2s ease;\n  font-size: 0.75rem;\n}\n\n.info-item:hover {\n  background: rgba(99, 179, 237, 0.15);\n  border-color: rgba(99, 179, 237, 0.25);\n}\n\n.label {\n  font-size: 0.75rem !important; \n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.2px !important;\n  color: #a0aec0;\n}\n\n.value {\n  font-size: 0.75rem !important;\n  font-weight: 700;\n  color: #e2e8f0;\n  text-align: right;\n  max-width: 350px;\n  word-break: break-word;\n}\n\n\n  </style>","import script from \"./GasPipelines.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GasPipelines.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GasPipelines.vue?vue&type=style&index=0&id=375d2e96&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\n  ClusteredDataCenters.vue\n  \n  A Vue component that displays data centers on a Leaflet map with clustering functionality.\n  Features:\n  - Clusters nearby data center markers for better performance and visibility\n  - Supports both point and polygon geometries for data centers\n  - Interactive tooltips with formatted property information\n  - Responsive cluster sizing based on point count\n  - Separate handling of polygons to prevent animation issues\n  - Layer visibility control through map overlay system\n-->\n\n<template>\n</template>\n\n<script setup>\n  import { ref, onUnmounted, watch } from 'vue'\n  import L from 'leaflet'\n  import Supercluster from 'supercluster'\n  import datacenters from '@/assets/datacenters.json'\n\n  // =============================================================================\n  // PROPS DEFINITION\n  // =============================================================================\n  \n  const props = defineProps({\n    mapInstance: {\n      type: Object,\n      required: false\n    },\n    controlInstance: {\n      type: Object,\n      required: false\n    },\n    mapReady: {\n      type: Boolean,\n      required: false\n    },\n    currentTranslations: {\n      type: Object,\n      required: false\n    },\n  })\n\n  // =============================================================================\n  // REACTIVE REFERENCES\n  // =============================================================================\n  \n  const supercluster = ref(null)\n  const dataCenterLayer = ref(null)\n  const polygonLayer = ref(null) // Separate layer for polygons\n  const isLayerVisible = ref(false)\n\n  // =============================================================================\n  // UTILITY FUNCTIONS\n  // =============================================================================\n  \n  /**\n   * Formats property keys for display by removing @ symbols, capitalizing words,\n   * and handling underscores and colons appropriately\n   */\n  const formatPropertyKey = (key) => {\n    // Handle special cases for better display names\n    const keyMappings = {\n      'addrcity': 'City',\n      'addrcitysimc': 'City Code',\n      'addrhousenumber': 'House Number',\n      'addrpostcode': 'Postcode',\n      'addrstreet': 'Street',\n      'building': 'Building',\n      'sourceaddr': 'Source'\n    }\n    \n    const lowerKey = key.toLowerCase()\n    if (keyMappings[lowerKey]) {\n      return keyMappings[lowerKey]\n    }\n    \n    return key.replace('@', '')\n      .split(':')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join('')\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ')\n  }\n\n  /**\n   * Creates HTML content for tooltips from feature properties\n   * Filters out unwanted properties and formats links with improved styling\n   */\n  const createTooltipContent = (properties) => {\n    const excludeKeys = [\n      'originalGeometry', \n      'cluster', \n      'cluster_id', \n      'point_count', \n      'point_count_abbreviated', \n      'id',\n      'telecom' // Remove the telecom field as it's always 'data_center'\n    ]\n    \n    const content = Object.entries(properties)\n      .filter(([key, value]) => \n        !excludeKeys.includes(key.toLowerCase()) && \n        value !== null && \n        value !== undefined && \n        value !== '' && \n        value !==\n        value !== 'data_center' && // Extra safety to filter out data_center values\n        !key.toLowerCase().includes('id')\n      )\n      .map(([key, value]) => {\n        const formattedKey = formatPropertyKey(key)\n        let formattedValue = value\n        \n        // Format specific values\n        if (key.toLowerCase() === 'building' && value === 'yes') {\n          formattedValue = 'Yes'\n        }\n        \n        // Handle URLs with better formatting\n        if (value.toString().startsWith('http')) {\n          const domain = new URL(value).hostname\n          formattedValue = `<a href=\"${value}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"tooltip-link\">${domain}</a>`\n        }\n        \n        return `\n          <div class=\"tooltip-row\">\n            <span class=\"tooltip-label\">${formattedKey}:</span>\n            <span class=\"tooltip-value\">${formattedValue}</span>\n          </div>\n        `\n      })\n      .join('')\n    \n      return `\n  <div class=\"datacenter-tooltip\">\n    <div class=\"tooltip-header\">\n      <div class=\"tooltip-icon\">💾</div>\n      <div class=\"tooltip-title\">Data Center</div>\n    </div>\n    <div class=\"tooltip-content\">\n      ${content}\n    </div>\n  </div>\n`\n  }\n\n  /**\n   * Creates a custom icon for data center markers\n   */\n  const createDataCenterIcon = () => {\n    return L.divIcon({\n      html: `<div class=\"data-center-marker\"><svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" fill=\"#4a90e2\" rx=\"2\"/><rect x=\"6\" y=\"4\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"8\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"12\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"16\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><circle cx=\"7\" cy=\"5.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"9.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"13.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"17.5\" r=\"0.5\" fill=\"#00ff00\"/></svg></div>`,\n      className: 'data-center-icon',\n      iconSize: [24, 24],\n      iconAnchor: [12, 12]\n    })\n  }\n\n  /**\n   * Binds an interactive tooltip to a layer with proper styling and pointer events\n   */\n  const bindInteractiveTooltip = (layer, content) => {\n    const tooltip = layer.bindTooltip(content, {\n      permanent: false,\n      direction: 'top',\n      className: 'datacenter-tooltip-container',\n      opacity: 1,\n      offset: [0, -10]\n    }).getTooltip()\n    \n    // Make tooltip interactive\n    if (tooltip) {\n      const tooltipElement = tooltip.getElement()\n      if (tooltipElement) {\n        tooltipElement.style.pointerEvents = 'auto'\n      }\n    }\n  }\n\n  // =============================================================================\n  // SUPERCLUSTER INITIALIZATION\n  // =============================================================================\n  \n  try {\n    // Initialize supercluster with clustering configuration\n    supercluster.value = new Supercluster({\n      radius: 40,\n      maxZoom: 16,\n      map: (props) => ({\n        ...props.properties,\n        count: 1,\n        originalGeometry: props.originalGeometry\n      }),\n      reduce: (accumulated, props) => {\n        accumulated.count += props.count\n      }\n    })\n\n    // Transform features to point geometry for clustering while preserving original geometry\n    const formattedFeatures = datacenters.features.map(feature => ({\n      type: 'Feature',\n      properties: {\n        ...feature.properties, \n        originalGeometry: feature.geometry.type === 'Polygon' ? feature.geometry : null\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: feature.geometry.type === 'Polygon' ? \n          [feature.geometry.coordinates[0][0][0], feature.geometry.coordinates[0][0][1]] : \n          feature.geometry.coordinates\n      }\n    }))\n    \n    supercluster.value.load(formattedFeatures)\n  } catch (error) {\n    // Silent handling - functionality will be degraded but component won't crash\n  }\n\n  // =============================================================================\n  // CORE FUNCTIONALITY\n  // =============================================================================\n  \n  /**\n   * Updates clusters based on current map view and zoom level\n   * Handles both individual markers and cluster markers\n   */\n  const updateClusters = () => {\n    if (!props.mapInstance || !dataCenterLayer.value || !isLayerVisible.value) {\n      return\n    }\n    \n    try {\n      const bounds = props.mapInstance.getBounds()\n      const zoom = Math.floor(props.mapInstance.getZoom())\n      const bbox = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()]\n      const clusters = supercluster.value.getClusters(bbox, zoom)\n      \n      // Clear existing layers\n      dataCenterLayer.value.clearLayers()\n      if (polygonLayer.value) {\n        polygonLayer.value.clearLayers()\n      }\n      \n      clusters.forEach((cluster) => {\n        const [lng, lat] = cluster.geometry.coordinates\n        const latlng = L.latLng(lat, lng)\n        \n        if (cluster.properties.cluster) {\n          // Handle cluster markers\n          const count = cluster.properties.point_count\n          const size = count < 10 ? 'small' : count < 50 ? 'medium' : 'large'\n          const marker = L.marker(latlng, {\n            icon: L.divIcon({\n              html: `<div class=\"cluster-marker ${size}\"><div class=\"cluster-count\">${count}</div></div>`,\n              className: 'custom-cluster-icon',\n              iconSize: [40, 40],\n              iconAnchor: [20, 20]\n            })\n          })\n          \n          // Add click handler to expand cluster\n          marker.on('click', () => {\n            const expansionZoom = supercluster.value.getClusterExpansionZoom(cluster.properties.cluster_id)\n            props.mapInstance.setView(latlng, expansionZoom)\n          })\n          \n          dataCenterLayer.value.addLayer(marker)\n        } else {\n          // Handle individual markers and polygons\n          \n          // Add polygon if original geometry exists\n          if (cluster.properties.originalGeometry && polygonLayer.value) {\n            try {\n              const polygon = L.polygon(\n                cluster.properties.originalGeometry.coordinates[0].map(coord => [coord[1], coord[0]]),\n                {\n                  color: '#4a90e2',\n                  weight: 2,\n                  fillColor: '#4a90e2',\n                  fillOpacity: 0.2,\n                  // Disable animation for polygons to prevent errors\n                  pane: 'overlayPane'\n                }\n              )\n              const tooltipContent = createTooltipContent(cluster.properties)\n              bindInteractiveTooltip(polygon, tooltipContent)\n              polygonLayer.value.addLayer(polygon)\n            } catch (polygonErr) {\n              // Silent handling - polygon creation failed but marker will still be added\n            }\n          }\n          \n          // Add point marker\n          const marker = L.marker(latlng, {\n            icon: createDataCenterIcon()\n          })\n          \n          const tooltipContent = createTooltipContent(cluster.properties)\n          bindInteractiveTooltip(marker, tooltipContent)\n          dataCenterLayer.value.addLayer(marker)\n        }\n      })\n    } catch (error) {\n      // Silent handling - cluster update failed\n    }\n  }\n\n  /**\n   * Initializes the layer groups and sets up event listeners\n   */\n  const initializeLayer = () => {\n    if (!props.mapInstance || !props.controlInstance) {\n      return\n    }\n    \n    try {\n      // Create separate layers for better management\n      polygonLayer.value = L.layerGroup()\n      dataCenterLayer.value = L.layerGroup()\n      \n      // Add layers to map and control\n      props.mapInstance.addLayer(polygonLayer.value)\n      props.controlInstance.addOverlay(dataCenterLayer.value, 'Data Centers', false)\n      \n      // Set up animation handling for polygons\n      if (props.mapInstance.options) {\n        // Hide polygons during zoom animation to prevent errors\n        props.mapInstance.on('zoomanim', (e) => {\n          if (isLayerVisible.value && polygonLayer.value) {\n            polygonLayer.value.eachLayer((layer) => {\n              if (layer._path) {\n                layer._path.style.display = 'none'\n              }\n            })\n          }\n        })\n        \n        // Update clusters and show polygons after zoom completes\n        props.mapInstance.on('zoomend', () => {\n          updateClusters()\n          \n          if (isLayerVisible.value && polygonLayer.value) {\n            polygonLayer.value.eachLayer((layer) => {\n              if (layer._path) {\n                layer._path.style.display = ''\n              }\n            })\n          }\n        })\n      }\n      \n      // Set up other event listeners\n      props.mapInstance.on('moveend', updateClusters)\n      \n      props.mapInstance.on('overlayadd', (e) => {\n        if (e.originalName === 'Data Centers' || e.name === 'Data Centers' ) {\n          isLayerVisible.value = true\n          if (!props.mapInstance.hasLayer(polygonLayer.value)) {\n            props.mapInstance.addLayer(polygonLayer.value)\n          }\n          updateClusters()\n        }\n      })\n      \n      props.mapInstance.on('overlayremove', (e) => {\n        if (e.originalName === 'Data Centers' || e.name === 'Data Centers') {\n          isLayerVisible.value = false\n          if (props.mapInstance.hasLayer(polygonLayer.value)) {\n            props.mapInstance.removeLayer(polygonLayer.value)\n          }\n        }\n      })\n      \n      isLayerVisible.value = false\n    } catch (error) {\n      // Silent handling - initialization failed\n    }\n  }\n\n  // =============================================================================\n  // LIFECYCLE HOOKS\n  // =============================================================================\n  \n  /**\n   * Watch for map readiness and control instance to initialize layers\n   */\n  watch(\n    [() => props.mapReady, () => props.controlInstance],\n    ([mapReady, controlInst]) => {\n      if (mapReady && controlInst) {\n        initializeLayer()\n      }\n    },\n    { immediate: true }\n  )\n  /**\n   * Cleanup event listeners and layers on component unmount\n   */\n  onUnmounted(() => {\n    if (props.mapInstance) {\n      props.mapInstance.off('moveend', updateClusters)\n      props.mapInstance.off('zoomend', updateClusters)\n      props.mapInstance.off('zoomanim')\n      \n      if (dataCenterLayer.value) {\n        props.mapInstance.removeLayer(dataCenterLayer.value)\n      }\n      \n      if (polygonLayer.value) {\n        props.mapInstance.removeLayer(polygonLayer.value)\n      }\n    }\n  })\n\n  // =============================================================================\n  // COMPONENT EXPORTS\n  // =============================================================================\n  \n  defineExpose({\n    dataCenterLayer,\n  })\n</script>\n\n<style>\n  /* =============================================================================\n   * CLUSTER MARKER STYLES\n   * ============================================================================= */\n  \n  .custom-cluster-icon {\n    background: none;\n    border: none;\n  }\n  \n  .cluster-marker {\n    background-color: #4a90e2;\n    border: 2px solid #214d7c;\n    border-radius: 50%;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n  }\n  \n  .cluster-marker.small {\n    width: 30px;\n    height: 30px;\n    font-size: 12px;\n  }\n  \n  .cluster-marker.medium {\n    width: 35px;\n    height: 35px;\n    font-size: 14px;\n  }\n  \n  .cluster-marker.large {\n    width: 40px;\n    height: 40px;\n    font-size: 16px;\n  }\n  \n  .cluster-count {\n    width: 100%;\n    text-align: center;\n  }\n\n  /* =============================================================================\n   * DATA CENTER MARKER STYLES\n   * ============================================================================= */\n  \n  .data-center-marker {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .data-center-icon {\n    background: none;\n    border: none;\n  }\n\n  /* =============================================================================\n   * MODERN DARK TOOLTIP STYLES\n   * ============================================================================= */\n  \n  .datacenter-tooltip-container {\n    pointer-events: auto !important;\n  }\n  \n  .leaflet-tooltip.datacenter-tooltip-container {\n    pointer-events: auto !important;\n    background: transparent;\n    border: none;\n    box-shadow: none;\n    padding: 0;\n  }\n  \n  .datacenter-tooltip {\n    background: rgba(26, 32, 44, 0.9);\n    border-radius: 10px;\n    box-shadow: 0 4px 14px rgba(0, 0, 0, 0.5);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    min-width: 250px;\n    max-width: 600px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    overflow: hidden;\n    z-index: 1000;\n    backdrop-filter: saturate(180%) blur(8px);\n    user-select: none;\n    color: #e2e8f0;\n    font-size: 13px;\n    line-height: 1.4;\n  }\n  \n  .tooltip-header {\n    display: flex;\n    align-items: center;\n    margin-bottom: 2px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n    padding: 16px 20px 12px 20px;\n    gap: 12px;\n  }\n  \n  .tooltip-icon {\n    font-size: 20px !important;\n    color: #63b3ed;\n    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));\n  }\n  \n  .tooltip-title {\n    font-weight: 700;\n    font-size: 0.85rem;\n    color: #90cdf4;\n    margin: 0;\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  }\n  \n  .tooltip-content {\n    padding: 16px 20px 20px 20px;\n  }\n  \n  .tooltip-info-grid {\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n  }\n  \n  .tooltip-row {\n    display: flex;\n    justify-content: space-between;\n    padding: 8px 12px;\n    background: rgba(255, 255, 255, 0.07);\n    border-radius: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    transition: all 0.2s ease;\n    align-items: flex-start;\n    min-height: 32px;\n    margin: 5px;\n  }\n  \n  .tooltip-row:hover {\n    background: rgba(99, 179, 237, 0.15);\n    border-color: rgba(99, 179, 237, 0.25);\n  }\n  \n  .tooltip-label {\n    font-size: 0.75rem !important;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.2px !important;\n    color: #a0aec0;\n    margin-right: 12px;\n  }\n  \n  .tooltip-value {\n    font-size: 0.75rem !important;\n    font-weight: 700;\n    color: #e2e8f0;\n    text-align: right;\n    max-width: 500px;\n    word-wrap: break-word !important;\n    overflow-wrap: break-word !important;\n    hyphens: auto;\n    line-height: 1.4;\n  }\n  \n  .tooltip-link {\n    color: #63b3ed !important;\n    text-decoration: none;\n    font-weight: 700;\n    border-bottom: 1px solid transparent;\n    transition: all 0.2s ease;\n  }\n  \n  .tooltip-link:hover {\n    color: #90cdf4 !important;\n    border-bottom-color: #90cdf4;\n    text-decoration: none;\n  }\n  \n  /* Ensure the tooltip stays visible when hovering */\n  .leaflet-tooltip-pane {\n    z-index: 1000;\n  }\n  \n  .leaflet-tooltip {\n    pointer-events: auto !important;\n  }\n\n  /* Responsive design for smaller screens */\n  @media (max-width: 480px) {\n    .datacenter-tooltip {\n      min-width: 200px;\n      max-width: 280px;\n      font-size: 12px;\n    }\n    \n    .tooltip-header {\n      padding: 14px 18px 10px 18px;\n    }\n    \n    .tooltip-content {\n      padding: 14px 18px 16px 18px;\n    }\n    \n    .tooltip-info-grid {\n      gap: 4px;\n    }\n    \n    .tooltip-row {\n      padding: 5px 8px;\n    }\n    \n    .tooltip-label,\n    .tooltip-value {\n      font-size: 0.7rem !important;\n    }\n    \n    .tooltip-value {\n      max-width: 200px;\n      word-wrap: break-word;\n      overflow-wrap: break-word;\n      hyphens: auto;\n    }\n  }\n</style>","import script from \"./ClusteredDataCenters.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClusteredDataCenters.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClusteredDataCenters.vue?vue&type=style&index=0&id=280287c2&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\n  AnchorageLayerToggle.vue\n  \n  A popup component that allows users to toggle the visibility of individual layers\n  within the \"Anchorage and seabed use\" grouped layer on a Leaflet map.\n  \n  Features:\n  - Toggle individual layers (Seamarks, Fixed Infrastructure, Anchorage)\n  - Multi-language support through translation props\n  - Dynamic layer matching and visibility management\n  - Responsive positioning with transition effects\n-->\n\n<template>\n  <div v-if=\"isVisible\" class=\"anchorage-layer-toggle-popup\" @click.stop>\n    <h3 class=\"anchorage-layer-title\">{{ props.currentTranslations.anchorageLayerToggles }}</h3>\n    \n    <div class=\"layers-container\" @click.stop>\n      <div v-for=\"layer in layers\" :key=\"layer.name\" class=\"layer-toggle\" @click.stop>\n        <input \n          :id=\"layer.name\" \n          type=\"checkbox\" \n          :checked=\"layer.visible\" \n          @change.stop=\"toggleLayer(layer)\" \n          class=\"layer-checkbox\"\n        />\n        <label :for=\"layer.name\" class=\"layer-label\">{{ getLayerTranslation(layer) }}</label>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, onMounted, computed } from 'vue';\n\n// ============================================================================\n// COMPONENT PROPS\n// ============================================================================\n\nconst props = defineProps({\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  controlInstance: {\n    type: Object,\n    required: false\n  },\n  currentTranslations: {\n    type: Object,\n    required: false\n  }\n});\n\n// ============================================================================\n// REACTIVE DATA\n// ============================================================================\n\n// Controls the visibility of the popup\nconst isVisible = ref(false);\n\n// Define the layers with predefined names to match\nconst layerDefinitions = [\n  { name: 'Seamarks', translatedKey: 'seamarksLayer', defaultName: 'Seamarks' },\n  { name: 'FixedInfrastructure', translatedKey: 'fixedInfrastructureLayer', defaultName: 'Fixed Infrastructure' },\n  { name: 'Anchorage', translatedKey: 'anchorageLayer', defaultName: 'Anchorage' }\n];\n\n// Reactive layers array with only static data\nconst layers = ref(layerDefinitions.map(def => ({\n  name: def.name,\n  translatedKey: def.translatedKey,\n  defaultName: def.defaultName,\n  layer: null,\n  visible: false\n})));\n\n// ============================================================================\n// COMPUTED PROPERTIES & HELPER FUNCTIONS\n// ============================================================================\n\n/**\n * Get the current translation for a layer, falling back to default name\n * @param {Object} layer - The layer object containing translation keys\n * @returns {string} - The translated layer name or default name\n */\nconst getLayerTranslation = (layer) => {\n  return props.currentTranslations[layer.translatedKey] || layer.defaultName;\n};\n\n// ============================================================================\n// LAYER MANAGEMENT FUNCTIONS\n// ============================================================================\n\n/**\n * Initialize layers when map is ready by finding and matching layers\n * from the grouped \"Anchorage and seabed use\" layer\n */\nconst initializeLayers = () => {\n  if (!props.controlInstance) return;\n\n  // Find the grouped layer\n  const groupedLayerObj = props.controlInstance._layers.find(\n    layerObj => layerObj.originalName === \"Anchorage and seabed use\"\n  );\n  \n  if (!groupedLayerObj) {\n    return;\n  }\n  \n  const groupedLayer = groupedLayerObj.layer;\n  \n  // Get all layers in the group\n  const allGroupLayers = groupedLayer.getLayers();\n  \n  // Match layers dynamically\n  layers.value.forEach((layerConfig, index) => {\n    // Try to match layer by name similarity or use the layer by index\n    const matchedLayer = allGroupLayers.find(\n      layer => layer.options?.name?.toLowerCase().includes(layerConfig.name.toLowerCase())\n    ) || allGroupLayers[index];\n    \n    if (matchedLayer) {\n      layerConfig.layer = matchedLayer;\n      \n      // Check if the layer is currently on the map\n      layerConfig.visible = props.mapInstance.hasLayer(matchedLayer);\n      \n      // If layer should be visible but isn't, add it\n      if (layerConfig.visible) {\n        props.mapInstance.addLayer(matchedLayer);\n      }\n    }\n  });\n};\n\n/**\n * Toggle individual layer visibility on the map\n * @param {Object} layerConfig - The layer configuration object\n */\nconst toggleLayer = (layerConfig) => {\n  if (!layerConfig.layer) return;\n  \n  layerConfig.visible = !layerConfig.visible;\n  \n  if (layerConfig.visible) {\n    props.mapInstance.addLayer(layerConfig.layer);\n  } else {\n    props.mapInstance.removeLayer(layerConfig.layer);\n  }\n};\n\n// ============================================================================\n// WATCHERS\n// ============================================================================\n\n// Watch for changes in control instance and reinitialize layers\nwatch(() => props.controlInstance, () => {\n  initializeLayers();\n}, { immediate: true });\n\n// Watch for changes in translations (reactive updates handled by template)\nwatch(() => props.currentTranslations, () => {\n  // No need to update anything here as we're now getting translations directly in the template\n  // through the getLayerTranslation function\n}, { deep: true });\n\n// ============================================================================\n// EXPOSED METHODS\n// ============================================================================\n\ndefineExpose({\n  /**\n   * Show the popup and initialize layers\n   */\n  show: () => {\n    isVisible.value = true;\n    initializeLayers();\n  },\n  \n  /**\n   * Hide the popup\n   */\n  hide: () => {\n    isVisible.value = false;\n  }\n});\n</script>\n\n<style scoped>\n/* ============================================================================\n   MAIN POPUP STYLES\n   ============================================================================ */\n\n.anchorage-layer-toggle-popup {\n  font-size: 13px;\n  font-weight: bold;\n  text-align: left;\n  position: absolute;\n  bottom: 20px;\n  right: 12px;\n  width: 200px;\n  max-height: 180px;\n  z-index: 1000;\n  background: rgba(26, 32, 44, 0.9);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n  padding: 5px 10px 10px 10px;\n  box-shadow: 0 4px 14px rgba(0, 0, 0, 0.5);\n  backdrop-filter: saturate(180%) blur(8px);\n  transition: right 0.3s ease;\n  overflow: hidden;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: #e2e8f0;\n  user-select: none;\n}\n\n/* ============================================================================\n   TITLE STYLES\n   ============================================================================ */\n\n\n/* ============================================================================\n   LAYER CONTAINER STYLES\n   ============================================================================ */\n\n.layers-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 120px;\n  overflow-y: auto;\n  gap: 2px;\n}\n\n/* ============================================================================\n   INDIVIDUAL LAYER TOGGLE STYLES\n   ============================================================================ */\n\n.layer-toggle {\n  display: flex;\n  align-items: center;\n  padding: 6px 10px;\n  background: rgba(255, 255, 255, 0.07);\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.2s ease;\n  min-height: 32px;\n}\n\n.layer-toggle:hover {\n  background: rgba(99, 179, 237, 0.15);\n  border-color: rgba(99, 179, 237, 0.25);\n}\n\n.layer-checkbox {\n  margin-right: 10px;\n  width: 16px;\n  height: 16px;\n  accent-color: #63b3ed;\n  cursor: pointer;\n}\n\n.layer-label {\n  color: #e2e8f0;\n  font-size: 0.75rem !important;\n  font-weight: 600;\n  flex: 1;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  line-height: 1.3;\n  cursor: pointer;\n}\n\n/* ============================================================================\n   RESPONSIVE POSITIONING\n   ============================================================================ */\n\n.ocean-depth-active .anchorage-layer-toggle-popup {\n  right: 190px;\n}\n\n/* ============================================================================\n   RESPONSIVE DESIGN\n   ============================================================================ */\n\n@media (max-width: 480px) {\n  .anchorage-layer-toggle-popup {\n    width: 180px;\n    max-height: 160px;\n    padding: 14px 18px 16px 18px;\n    font-size: 12px;\n  }\n  \n  .anchorage-layer-title {\n    font-size: 0.8rem;\n    margin-bottom: 10px;\n    padding-bottom: 8px;\n  }\n  \n  .layers-container {\n    max-height: 100px;\n    gap: 4px;\n  }\n  \n  .layer-toggle {\n    padding: 5px 8px;\n    min-height: 28px;\n  }\n  \n  .layer-label {\n    font-size: 0.7rem !important;\n  }\n  \n  .layer-checkbox {\n    width: 14px;\n    height: 14px;\n    margin-right: 8px;\n  }\n}\n</style>","import script from \"./AnchorageLayerToggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AnchorageLayerToggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AnchorageLayerToggle.vue?vue&type=style&index=0&id=676cd714&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-676cd714\"]])\n\nexport default __exports__","<!--\n  ClusteredAnchorage.vue\n  \n  A Leaflet map layer component that displays anchorage data with intelligent clustering\n  using the Supercluster algorithm. The component loads anchorage points from a JSON file\n  and renders them as clustered markers at higher zoom levels and individual anchor icons\n  at lower zoom levels for better performance and visual clarity.\n  \n  Features:\n  - Automatic clustering based on zoom level and proximity\n  - Custom anchor icon markers for individual points\n  - Dynamic cluster size indicators (small/medium/large)\n  - Hover tooltips with anchorage details\n  - Integration with Leaflet layer control system\n  - Multi-language support for tooltip labels\n  - Responsive updates on map movement and zoom changes\n-->\n\n<template>\n</template>\n\n<script setup>\nimport { ref, onUnmounted, onMounted, watch } from 'vue';\nimport L from 'leaflet';\nimport Supercluster from 'supercluster';\nimport anchorSVG from '@/assets/graphics/anchor.svg';\n\n// ============================================================================\n// COMPONENT PROPS\n// ============================================================================\n\nconst props = defineProps({\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  controlInstance: {\n    type: Object,\n    required: false\n  },\n  mapReady: {\n    type: Boolean,\n    required: false\n  },\n  currentTranslations: {\n    type: Object,\n    required: false\n  }\n});\n\n// ============================================================================\n// REACTIVE DATA\n// ============================================================================\n\n// Anchorage data loaded from JSON file\nconst anchorageData = ref(null);\n\n// Layer management\nconst anchorageLayer = ref(null);\nconst isLayerVisible = ref(false);\n\n// Supercluster instance for point clustering\nconst supercluster = ref(new Supercluster({\n  radius: 40,\n  maxZoom: 16,\n  map: props => ({\n    label: props.label,\n    sublabel: props.sublabel,\n    distance: props.distance_from_shore_m,\n    isDock: props.dock === 'true',\n    count: 1\n  }),\n  reduce: (accumulated, props) => {\n    accumulated.count += props.count;\n    accumulated.isDock = accumulated.isDock || props.isDock;\n    return accumulated;\n  }\n}));\n\n// ============================================================================\n// DATA LOADING & INITIALIZATION\n// ============================================================================\n\n/**\n * Load anchorage data from JSON file on component mount\n */\nonMounted(async () => {\n  try {\n    const res = await fetch('/data/anchorage.json');\n    anchorageData.value = await res.json();\n\n    if (props.mapReady) {\n      initializeLayer(anchorageData.value);\n    }\n  } catch (err) {\n    // Silent error handling as requested (removed console.error)\n  }\n});\n\n/**\n * Initialize the anchorage layer with clustering functionality\n * @param {Object} geojsonData - The loaded GeoJSON data\n */\nconst initializeLayer = (geojsonData) => {\n  if (!props.mapInstance || !props.mapReady || !geojsonData) return;\n  \n  // Load GeoJSON features directly into supercluster\n  supercluster.value.load(geojsonData.features);\n  \n  // Initialize layer group if not exists\n  if (!anchorageLayer.value) {\n    anchorageLayer.value = L.layerGroup();\n    \n    // Add to map control layers\n    const anchorageOverlayLayer = props.controlInstance._layers.find(\n      layerObj => layerObj.originalName === \"Anchorage and seabed use\"\n    );\n    if (anchorageOverlayLayer) {\n      anchorageOverlayLayer.layer.addLayer(anchorageLayer.value);\n    } else {\n      // Fallback: add directly to map if layer group not found\n      props.mapInstance.addLayer(anchorageLayer.value);\n    }\n    \n    // Add event listeners for map movements\n    props.mapInstance.on('moveend', updateClusters);\n    props.mapInstance.on('zoomend', updateClusters);\n    \n    // Listen for layer add/remove events\n    props.mapInstance.on('overlayadd', (e) => {\n      if (e.originalName === 'Anchorage and seabed use' || e.name === 'Anchorage and seabed use') {\n        isLayerVisible.value = true;\n        updateClusters();\n      }\n    });\n    \n    props.mapInstance.on('overlayremove', (e) => {\n      if (e.originalName === 'Anchorage and seabed use' || e.name === 'Anchorage and seabed use') {\n        isLayerVisible.value = false;\n      }\n    });\n  }\n};\n\n// ============================================================================\n// CLUSTER UPDATE LOGIC\n// ============================================================================\n\n/**\n * Update clusters based on current map viewport and zoom level\n * Called on map movement and zoom changes\n */\nconst updateClusters = () => {\n  if (!props.mapInstance || !anchorageLayer.value || !isLayerVisible.value) return;\n  \n  // Get current map bounds for cluster calculation\n  const bounds = props.mapInstance.getBounds();\n  const bbox = [\n    bounds.getWest(),\n    bounds.getSouth(),\n    bounds.getEast(),\n    bounds.getNorth()\n  ];\n  \n  const zoom = props.mapInstance.getZoom();\n  const clusters = supercluster.value.getClusters(bbox, Math.floor(zoom));\n  \n  // Clear existing layers before adding new ones\n  anchorageLayer.value.clearLayers();\n  \n  // Process each cluster or individual point\n  clusters.forEach(cluster => {\n    const coordinates = cluster.geometry.coordinates;\n    const latlng = L.latLng(coordinates[1], coordinates[0]);\n    \n    if (cluster.properties.cluster) {\n      // Create cluster marker for grouped points\n      createClusterMarker(cluster, latlng);\n    } else {\n      // Create individual point marker\n      createAnchorMarker(cluster, latlng);\n    }\n  });\n};\n\n/**\n * Create a cluster marker for grouped points\n * @param {Object} cluster - The cluster data from Supercluster\n * @param {L.LatLng} latlng - The cluster center coordinates\n */\nconst createClusterMarker = (cluster, latlng) => {\n  const count = cluster.properties.point_count;\n  const size = count < 100 ? 'small' : count < 1000 ? 'medium' : 'large';\n  \n  const clusterMarker = L.divIcon({\n    html: `\n      <div class=\"cluster-marker ${size}\">\n        ${count}\n      </div>\n    `,\n    className: 'custom-cluster-icon',\n    iconSize: L.point(40, 40)\n  });\n  \n  const marker = L.marker(latlng, {\n    icon: clusterMarker\n  });\n  \n  // Add click handler to zoom into cluster\n  marker.on('click', () => {\n    const expansionZoom = supercluster.value.getClusterExpansionZoom(cluster.properties.cluster_id);\n    props.mapInstance.setView(latlng, expansionZoom);\n  });\n  \n  anchorageLayer.value.addLayer(marker);\n};\n\n/**\n * Create an individual anchor marker for single points\n * @param {Object} cluster - The point data (called cluster but represents individual point)\n * @param {L.LatLng} latlng - The point coordinates\n */\nconst createAnchorMarker = (cluster, latlng) => {\n  const anchorIcon = L.divIcon({\n    html: `\n      <div class=\"anchor-icon\">\n        <img src=\"${anchorSVG}\" alt=\"Anchor\" width=\"24\" height=\"24\" />\n      </div>\n    `,\n    className: 'anchor-icon',\n    iconSize: L.point(24, 24)\n  });\n    \n  // Add tooltip with anchorage details\n  const marker = L.marker(latlng, { icon: anchorIcon });\n\n// Add tooltip with anchorage details and custom class\nmarker.bindTooltip(`\n  <strong>${cluster.properties.label}</strong><br>\n  ${cluster.properties.sublabel}<br>\n  ${props.currentTranslations.distanceFromShore}: ${cluster.properties.distance_from_shore_m} m<br>\n  ${props.currentTranslations.isDock}: <strong>${cluster.properties.dock === 'true' ? '<span class=\"text-green-500\">✓</span>' : '<span class=\"text-red-500\">✕</span>'}</strong>\n  <br>\n`, {\n  className: 'anchorage-tooltip'\n});\n  \n  anchorageLayer.value.addLayer(marker);\n};\n\n// ============================================================================\n// WATCHERS\n// ============================================================================\n\n/**\n * Watch for map ready state changes and initialize layer when ready\n */\nwatch(() => props.mapReady, (newValue) => {\n  if (newValue && anchorageData.value) {\n    initializeLayer(anchorageData.value);\n  }\n});\n\n// ============================================================================\n// CLEANUP\n// ============================================================================\n\n/**\n * Clean up event listeners and remove layers on component unmount\n */\nonUnmounted(() => {\n  if (props.mapInstance && anchorageLayer.value) {\n    props.mapInstance.off('moveend', updateClusters);\n    props.mapInstance.off('zoomend', updateClusters);\n    props.mapInstance.removeLayer(anchorageLayer.value);\n  }\n});\n</script>\n\n<style>\n/* ============================================================================\n   CLUSTER MARKER STYLES\n   ============================================================================ */\n\n.custom-cluster-icon {\n  background: none;\n  border: none;\n}\n\n.cluster-marker {\n  background: rgba(26, 32, 44, 0.9);\n  border-radius: 50%;\n  border: 2px solid rgba(99, 179, 237, 0.6);\n  color: #e2e8f0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  backdrop-filter: saturate(180%) blur(8px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n  transition: all 0.2s ease;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.cluster-marker:hover {\n  background: rgba(26, 32, 44, 0.95);\n  border-color: rgba(144, 205, 244, 0.8);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\n  transform: scale(1.05);\n}\n\n/* Cluster size variations */\n.cluster-marker.small {\n  width: 32px;\n  height: 32px;\n  font-size: 11px;\n  border-width: 2px;\n}\n\n.cluster-marker.medium {\n  width: 38px;\n  height: 38px;\n  font-size: 13px;\n  border-width: 2px;\n}\n\n.cluster-marker.large {\n  width: 44px;\n  height: 44px;\n  font-size: 15px;\n  border-width: 3px;\n}\n\n/* Active/selected state */\n.cluster-marker.active {\n  background: rgba(99, 179, 237, 0.2);\n  border-color: #90cdf4;\n  color: #90cdf4;\n}\n\n/* ============================================================================\n   ANCHORAGE TOOLTIP STYLES\n   ============================================================================ */\n\n.anchorage-tooltip.leaflet-tooltip {\n  background: rgba(26, 32, 44, 0.9) !important;\n  border: 1px solid rgba(255, 255, 255, 0.1) !important;\n  border-radius: 10px !important;\n  box-shadow: 0 4px 14px rgba(0, 0, 0, 0.5) !important;\n  backdrop-filter: saturate(180%) blur(8px) !important;\n  color: #e2e8f0 !important;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;\n  font-size: 13px !important;\n  line-height: 1.4 !important;\n  padding: 12px 16px !important;\n  max-width: 300px !important;\n  user-select: none !important;\n}\n\n.anchorage-tooltip.leaflet-tooltip::before {\n  border-top-color: rgba(26, 32, 44, 0.9) !important;\n}\n\n.anchorage-tooltip strong {\n  color: #90cdf4 !important;\n  font-weight: 700 !important;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n/* ============================================================================\n   ANCHORAGE TOOLTIP TEXT COLORS\n   ============================================================================ */\n\n.anchorage-tooltip .text-green-500 {\n  color: #68d391 !important;\n  font-weight: 700 !important;\n  font-size: 16px !important;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.anchorage-tooltip .text-red-500 {\n  color: #fc8181 !important;\n  font-weight: 700 !important;\n  font-size: 16px !important;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.anchorage-tooltip .text-blue-500 {\n  color: #63b3ed !important;\n  font-weight: 600 !important;\n}\n\n.anchorage-tooltip .text-yellow-500 {\n  color: #f6e05e !important;\n  font-weight: 600 !important;\n}\n\n.anchorage-tooltip .text-purple-500 {\n  color: #b794f6 !important;\n  font-weight: 600 !important;\n}\n\n.anchorage-tooltip .text-gray-400 {\n  color: #a0aec0 !important;\n  font-weight: 500 !important;\n}\n\n.anchorage-tooltip .text-white {\n  color: #e2e8f0 !important;\n  font-weight: 500 !important;\n}\n\n/* ============================================================================\n   RESPONSIVE TOOLTIP DESIGN\n   ============================================================================ */\n\n@media (max-width: 480px) {\n  .anchorage-tooltip.leaflet-tooltip {\n    font-size: 12px !important;\n    padding: 10px 14px !important;\n    max-width: 250px !important;\n  }\n  \n  .anchorage-tooltip .text-green-500,\n  .anchorage-tooltip .text-red-500 {\n    font-size: 14px !important;\n  }\n}\n</style>","import script from \"./ClusteredAnchorage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClusteredAnchorage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClusteredAnchorage.vue?vue&type=style&index=0&id=08c8edd5&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-cee2b986\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"date-popup\"\n}\nconst _hoisted_2 = {\n  key: 1,\n  class: \"earthquake-details\"\n}\n\nimport { ref, computed, watch } from 'vue';\nimport {\n  LLayerGroup,\n  LGeoJson,\n  LCircleMarker,\n  LTooltip\n} from '@vue-leaflet/vue-leaflet';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport '@vuepic/vue-datepicker/dist/main.css';\nimport axios from 'axios';\n\n// ==============================================\n// COMPONENT PROPS & EMITS\n// ==============================================\n\nconst format = \"dd/MM/yyyy\";           // Date format for display\n\n// ==============================================\n// WATCHERS\n// ==============================================\n\n// Update seismic layer when language changes\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SeismicActivity',\n  props: {\n  currentTranslations: {\n    type: Object,\n    required: true\n  },\n  showSeismicOverlay: {\n    type: Boolean,\n    required: true\n  },\n  currentLanguage: {\n    type: String,\n    required: true\n  }\n},\n  emits: ['update:showSeismicOverlay'],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emit = __emit;\n\n// ==============================================\n// REACTIVE STATE\n// ==============================================\n\nconst seismicData = ref(null);          // Stores GeoJSON earthquake data\nconst selectedEarthquake = ref(null);   // Currently selected earthquake\nconst seismicDate = ref(null);          // Selected date range for filtering\nwatch(() => props.currentLanguage, () => {\n  if (props.showSeismicOverlay) {\n    updateSeismicLayer();\n  }\n});\n\n// Handle seismic overlay toggle\nwatch(() => props.showSeismicOverlay, (newValue) => {\n  if (newValue) {\n    updateSeismicLayer();\n  }\n});\n\n// ==============================================\n// COMPUTED PROPERTIES\n// ==============================================\n\n/**\nComputed property for styling earthquake markers based on magnitude\n */\nconst reactivePointToLayer = computed(() => (feature, latlng) => {\n  const magnitude = feature.properties.mag;\n  const radius = magnitude * 3;\n  const fillColor = magnitude > 5 ? 'red' : magnitude > 3 ? 'orange' : 'yellow';\n  \n  return L.circleMarker(latlng, {\n    radius: radius,\n    fillColor: fillColor,\n    color: 'black',\n    weight: 1,\n    opacity: 1,\n    fillOpacity: 0.8\n  }).bindTooltip(`\n    <strong>${props.currentTranslations.magnitude}:</strong> ${magnitude}<br>\n    <strong>${props.currentTranslations.location}:</strong> ${feature.properties.place}<br>\n    <strong>${props.currentTranslations.time}:</strong> ${new Date(feature.properties.time).toLocaleString()}\n  `);\n});\n\n// ==============================================\n// DATA FETCHING FUNCTIONS\n// ==============================================\n\n/**\nFetches seismic data from USGS API\n@param {string|null} startTime - Start date in YYYY-MM-DD format\n@param {string|null} endTime - End date in YYYY-MM-DD format\n */\nconst fetchSeismicData = async (startTime = null, endTime = null) => {\n  try {\n    let url;\n    if (startTime && endTime) {\n      url = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${startTime}&endtime=${endTime}`;\n    } else {\n      // Default to recent significant earthquakes if no date range specified\n      url = 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson';\n    }\n    const response = await axios.get(url);\n    seismicData.value = response.data;\n  } catch (error) {\n    console.error('Error fetching seismic data:', error);\n  }\n};\n\n// ==============================================\n// DATE HANDLING FUNCTIONS\n// ==============================================\n\n/**\nHandles date selection from the date picker\n@param {Array<Date>} e - Selected date range\n */\nconst seismicDatePicked = (e) => {\n  if (e != null) {\n    let startDate = formatDatePart(e[0].getDate());\n    let startMonth = formatDatePart(e[0].getMonth() + 1);\n    let endDate = formatDatePart(e[1].getDate());\n    let endMonth = formatDatePart(e[1].getMonth() + 1);\n    const startTime = `${e[0].getFullYear()}-${startMonth}-${startDate}`;\n    const endTime = `${e[1].getFullYear()}-${endMonth}-${endDate}`;\n    fetchSeismicData(startTime, endTime);\n  } else {\n    // If date selection is cleared, fetch default data\n    fetchSeismicData();\n  }\n};\n\n/**\nFormats date parts to ensure two-digit format\n@param {number} part - Date part (day or month)\n@returns {string} Formatted two-digit string\n */\nconst formatDatePart = (part) => {\n  return part < 10 ? '0' + part : part;\n};\n\n// ==============================================\n// LAYER MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nUpdates the seismic layer (placeholder for future functionality)\n */\n const updateSeismicLayer = () => {\n  if (props.showSeismicOverlay && seismicData.value) {\n    const cloned = JSON.parse(JSON.stringify(seismicData.value));\n    seismicData.value = null; \n    setTimeout(() => {\n      seismicData.value = cloned;\n    }, 0);\n  }\n};\n\n// ==============================================\n// INITIAL DATA LOAD\n// ==============================================\n\n// Fetch initial seismic data when component mounts\nfetchSeismicData();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(LLayerGroup), {\n      visible: false,\n      name: \"Seismic Activity\",\n      \"layer-type\": \"base\"\n    }, {\n      default: _withCtx(() => [\n        (seismicData.value)\n          ? (_openBlock(), _createBlock(_unref(LGeoJson), {\n              key: 0,\n              geojson: seismicData.value,\n              options: { pointToLayer: reactivePointToLayer.value }\n            }, null, 8, [\"geojson\", \"options\"]))\n          : _createCommentVNode(\"\", true),\n        (__props.showSeismicOverlay)\n          ? (_openBlock(), _createBlock(_unref(LCircleMarker), {\n              key: 1,\n              \"lat-lng\": [5.7, 97.4],\n              radius: 15,\n              fillColor: \"red\",\n              color: \"black\",\n              weight: 1,\n              opacity: 1,\n              fillOpacity: 0.8\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_unref(LTooltip), null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Dummy Earthquake\")\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    }),\n    (__props.showSeismicOverlay)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createVNode(_unref(VueDatePicker), {\n            modelValue: seismicDate.value,\n            \"onUpdate:modelValue\": [\n              _cache[0] || (_cache[0] = ($event: any) => ((seismicDate).value = $event)),\n              seismicDatePicked\n            ],\n            \"model-value\": seismicDate.value,\n            placeholder: __props.currentTranslations.datePlaceholderSeismic,\n            \"preview-format\": format,\n            format: format,\n            \"enable-time-picker\": false,\n            range: { partialRange: false },\n            dark: \"true\",\n            class: \"custom-datepicker\",\n            \"no-today\": \"\",\n            \"max-date\": new Date()\n          }, null, 8, [\"modelValue\", \"model-value\", \"placeholder\", \"max-date\"])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (selectedEarthquake.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"h2\", null, _toDisplayString(__props.currentTranslations.selectedEarthquakeDetails) + \":\", 1),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(__props.currentTranslations.value.magnitude) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(selectedEarthquake.value.mag), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(__props.currentTranslations.value.location) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(selectedEarthquake.value.place), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(__props.currentTranslations.value.time) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(new Date(selectedEarthquake.value.time).toLocaleString()), 1)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<!--\nSeismicActivity.vue - Component for displaying earthquake/Seismic activity data\n\nFeatures:\n- Displays seismic activity data from USGS API\n- Date range selection for historical data\n- Visual representation of earthquakes with magnitude-based styling\n- Detailed earthquake information on selection\n- Supports multiple languages through translations\n-->\n\n<template>\n  <!-- Seismic Activity Layer Group -->\n  <l-layer-group :visible=\"false\" name=\"Seismic Activity\" layer-type=\"base\">\n    <!-- GeoJSON layer for earthquake data -->\n    <l-geo-json\n      v-if=\"seismicData\"\n      :geojson=\"seismicData\"\n      :options=\"{ pointToLayer: reactivePointToLayer }\"\n    ></l-geo-json>\n    \n    <!-- Dummy Earthquake for Usage Study -->\n    <l-circle-marker\n      v-if=\"showSeismicOverlay\"\n      :lat-lng=\"[5.7, 97.4]\"\n      :radius=\"15\"\n      fillColor=\"red\"\n      color=\"black\"\n      :weight=\"1\"\n      :opacity=\"1\"\n      :fillOpacity=\"0.8\"\n    >\n      <l-tooltip>Dummy Earthquake</l-tooltip>\n    </l-circle-marker>\n  </l-layer-group>\n\n  <!-- Date Picker for Seismic Data -->\n  <div v-if=\"showSeismicOverlay\" class=\"date-popup\">\n    <VueDatePicker\n      v-model=\"seismicDate\"\n      :model-value=\"seismicDate\"\n      @update:model-value=\"seismicDatePicked\"\n      :placeholder=\"currentTranslations.datePlaceholderSeismic\"\n      :preview-format=\"format\"\n      :format=\"format\"\n      :enable-time-picker=\"false\"\n      :range=\"{ partialRange: false }\"\n      dark=true\n      class=\"custom-datepicker\"\n      no-today\n      :max-date=\"new Date()\"\n    />\n  </div>\n\n  <!-- Earthquake Details Panel -->\n  <div v-if=\"selectedEarthquake\" class=\"earthquake-details\">\n    <h2>{{ currentTranslations.selectedEarthquakeDetails }}:</h2>\n    <p><strong>{{ currentTranslations.value.magnitude }}:</strong> {{ selectedEarthquake.mag }}</p>\n    <p><strong>{{ currentTranslations.value.location }}:</strong> {{ selectedEarthquake.place }}</p>\n    <p><strong>{{ currentTranslations.value.time }}:</strong> {{ new Date(selectedEarthquake.time).toLocaleString() }}</p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch } from 'vue';\nimport {\n  LLayerGroup,\n  LGeoJson,\n  LCircleMarker,\n  LTooltip\n} from '@vue-leaflet/vue-leaflet';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport '@vuepic/vue-datepicker/dist/main.css';\nimport axios from 'axios';\n\n// ==============================================\n// COMPONENT PROPS & EMITS\n// ==============================================\n\nconst props = defineProps({\n  currentTranslations: {\n    type: Object,\n    required: true\n  },\n  showSeismicOverlay: {\n    type: Boolean,\n    required: true\n  },\n  currentLanguage: {\n    type: String,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['update:showSeismicOverlay']);\n\n// ==============================================\n// REACTIVE STATE\n// ==============================================\n\nconst seismicData = ref(null);          // Stores GeoJSON earthquake data\nconst selectedEarthquake = ref(null);   // Currently selected earthquake\nconst seismicDate = ref(null);          // Selected date range for filtering\nconst format = \"dd/MM/yyyy\";           // Date format for display\n\n// ==============================================\n// WATCHERS\n// ==============================================\n\n// Update seismic layer when language changes\nwatch(() => props.currentLanguage, () => {\n  if (props.showSeismicOverlay) {\n    updateSeismicLayer();\n  }\n});\n\n// Handle seismic overlay toggle\nwatch(() => props.showSeismicOverlay, (newValue) => {\n  if (newValue) {\n    updateSeismicLayer();\n  }\n});\n\n// ==============================================\n// COMPUTED PROPERTIES\n// ==============================================\n\n/**\nComputed property for styling earthquake markers based on magnitude\n */\nconst reactivePointToLayer = computed(() => (feature, latlng) => {\n  const magnitude = feature.properties.mag;\n  const radius = magnitude * 3;\n  const fillColor = magnitude > 5 ? 'red' : magnitude > 3 ? 'orange' : 'yellow';\n  \n  return L.circleMarker(latlng, {\n    radius: radius,\n    fillColor: fillColor,\n    color: 'black',\n    weight: 1,\n    opacity: 1,\n    fillOpacity: 0.8\n  }).bindTooltip(`\n    <strong>${props.currentTranslations.magnitude}:</strong> ${magnitude}<br>\n    <strong>${props.currentTranslations.location}:</strong> ${feature.properties.place}<br>\n    <strong>${props.currentTranslations.time}:</strong> ${new Date(feature.properties.time).toLocaleString()}\n  `);\n});\n\n// ==============================================\n// DATA FETCHING FUNCTIONS\n// ==============================================\n\n/**\nFetches seismic data from USGS API\n@param {string|null} startTime - Start date in YYYY-MM-DD format\n@param {string|null} endTime - End date in YYYY-MM-DD format\n */\nconst fetchSeismicData = async (startTime = null, endTime = null) => {\n  try {\n    let url;\n    if (startTime && endTime) {\n      url = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${startTime}&endtime=${endTime}`;\n    } else {\n      // Default to recent significant earthquakes if no date range specified\n      url = 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson';\n    }\n    const response = await axios.get(url);\n    seismicData.value = response.data;\n  } catch (error) {\n    console.error('Error fetching seismic data:', error);\n  }\n};\n\n// ==============================================\n// DATE HANDLING FUNCTIONS\n// ==============================================\n\n/**\nHandles date selection from the date picker\n@param {Array<Date>} e - Selected date range\n */\nconst seismicDatePicked = (e) => {\n  if (e != null) {\n    let startDate = formatDatePart(e[0].getDate());\n    let startMonth = formatDatePart(e[0].getMonth() + 1);\n    let endDate = formatDatePart(e[1].getDate());\n    let endMonth = formatDatePart(e[1].getMonth() + 1);\n    const startTime = `${e[0].getFullYear()}-${startMonth}-${startDate}`;\n    const endTime = `${e[1].getFullYear()}-${endMonth}-${endDate}`;\n    fetchSeismicData(startTime, endTime);\n  } else {\n    // If date selection is cleared, fetch default data\n    fetchSeismicData();\n  }\n};\n\n/**\nFormats date parts to ensure two-digit format\n@param {number} part - Date part (day or month)\n@returns {string} Formatted two-digit string\n */\nconst formatDatePart = (part) => {\n  return part < 10 ? '0' + part : part;\n};\n\n// ==============================================\n// LAYER MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nUpdates the seismic layer (placeholder for future functionality)\n */\n const updateSeismicLayer = () => {\n  if (props.showSeismicOverlay && seismicData.value) {\n    const cloned = JSON.parse(JSON.stringify(seismicData.value));\n    seismicData.value = null; \n    setTimeout(() => {\n      seismicData.value = cloned;\n    }, 0);\n  }\n};\n\n// ==============================================\n// INITIAL DATA LOAD\n// ==============================================\n\n// Fetch initial seismic data when component mounts\nfetchSeismicData();\n</script>\n\n<style scoped>\n/* Earthquake Details Panel */\n.earthquake-details {\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  z-index: 1000;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 15px;\n  border-radius: 8px;\n  max-width: 300px;\n}\n\n.earthquake-details h2 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 1.2rem;\n}\n\n.earthquake-details p {\n  margin: 5px 0;\n}\n\n/* Custom DatePicker Styles */\n.custom-datepicker {\n  --dp-background-color: #2d3748;\n  --dp-text-color: #ffffff;\n  --dp-hover-color: #4a5568;\n  --dp-hover-text-color: #ffffff;\n  --dp-primary-color: #4299e1;\n}\n</style>","import script from \"./SeismicActivity.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SeismicActivity.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SeismicActivity.vue?vue&type=style&index=0&id=cee2b986&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-cee2b986\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"map-popup risk-popup\"\n}\nconst _hoisted_2 = { class: \"popup-content\" }\nconst _hoisted_3 = { class: \"risk-controls\" }\nconst _hoisted_4 = { class: \"control-item\" }\nconst _hoisted_5 = [\"checked\"]\nconst _hoisted_6 = {\n  for: \"combined-risk-Europe\",\n  class: \"legend-text\"\n}\nconst _hoisted_7 = { class: \"control-item\" }\nconst _hoisted_8 = [\"checked\"]\nconst _hoisted_9 = {\n  for: \"fishing-risk-Europe\",\n  class: \"legend-text\"\n}\nconst _hoisted_10 = { class: \"control-item\" }\nconst _hoisted_11 = [\"checked\"]\nconst _hoisted_12 = {\n  for: \"anchorage-risk-Europe\",\n  class: \"legend-text\"\n}\nconst _hoisted_13 = { class: \"control-item\" }\nconst _hoisted_14 = [\"checked\"]\nconst _hoisted_15 = {\n  for: \"earthquakes-risk-Europe\",\n  class: \"legend-text\"\n}\nconst _hoisted_16 = { class: \"control-item\" }\nconst _hoisted_17 = [\"checked\"]\nconst _hoisted_18 = {\n  for: \"volcanoes-risk-Europe\",\n  class: \"legend-text\"\n}\nconst _hoisted_19 = { class: \"control-item\" }\nconst _hoisted_20 = [\"checked\"]\nconst _hoisted_21 = {\n  for: \"dredging-risk-Europe\",\n  class: \"legend-text\"\n}\nconst _hoisted_22 = { class: \"control-item\" }\nconst _hoisted_23 = [\"checked\"]\nconst _hoisted_24 = {\n  for: \"terrain-risk-Europe\",\n  class: \"legend-text\"\n}\nconst _hoisted_25 = { class: \"risk-gradient\" }\nconst _hoisted_26 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"color-gradient\\\"><div style=\\\"background:#6DAED4;\\\">1</div><div style=\\\"background:#A3D39C;\\\">2</div><div style=\\\"background:#FFE08A;\\\">3</div><div style=\\\"background:#FDB366;\\\">4</div><div style=\\\"background:#F67E4F;\\\">5</div><div style=\\\"background:#E8453C;\\\">6</div><div style=\\\"background:#B50A2A;\\\">7</div><div style=\\\"background:#67001D;\\\">8</div></div>\", 1)\nconst _hoisted_27 = { class: \"risk-range\" }\n\nimport { ref, watch } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet.vectorgrid';\n\n// Data imports\nimport combinedRiskDataEurope from '@/assets/riskEurope/combined_risk_europe_ocean.json';\nimport anchorageDataEurope from '@/assets/riskEurope/anchorage_europe_cells_normalised.json';\nimport earthquakesDataEurope from '@/assets/riskEurope/seismic_europe_cells_normalised.json';\nimport volcanoDataChoroplethEurope from '@/assets/riskEurope/volcanoes_europe_cells_normalised.json';\nimport dredgingDataChoroplethEurope from '@/assets/riskEurope/dredging_europe_cells_normalised.json';\n\nimport { useDataCablesStore } from '@/store/datacables';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'EuropeanRiskMap',\n  props: {\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  mapInstance: {\n    type: Object,\n    required: false,\n    validator: (value) => value !== null\n  },\n  riskLayersToggleRef: Object,\n  fishingDataEurope: {\n    type: Array,\n    required: false,\n    default: () => []\n  },\n  terrainDataChoroplethEurope: {\n    type: Array,\n    required: false,\n    default: () => []\n  },\n},\n  setup(__props, { expose: __expose }) {\n\nconst cableStore = useDataCablesStore();\ncableStore.setCombinedRiskDataEurope(combinedRiskDataEurope);\n// ==============================================\n// PROPS AND REACTIVE STATE\n// ==============================================\n\nconst props = __props;\n\n// Reactive state\nconst isCombinedRiskEuropeGroupActive = ref(false);\nconst activeRiskLayerEurope = ref('combined');\nconst isDredgingActiveChoroplethEurope = ref(false);\nconst isTerrainActiveChoroplethEurope = ref(false);\nconst terrainDataChoroplethEurope = ref(props.terrainDataChoroplethEurope || []);\n\n// Layer references\nlet combinedRiskEuropeLayer = null;\nlet fishingLayerEurope = null;\nlet anchorageLayerEurope = null;\nlet earthquakesLayerEurope = null;\nlet volcanoLayerChoroplethEurope = null;\nlet dredgingLayerChoroplethEurope = null;\nlet terrainLayerChoroplethEurope = null;\n\n// Event handlers\nlet zoomEventHandler = null;\nlet isZoomHandlerAttached = false;\n\n// Workaround for click events\nL.DomEvent.fakeStop = function () {\n  return true;\n}\n\n// Watch for changes in terrain data\nwatch(() => props.terrainDataChoroplethEurope, (newData) => {\n  terrainDataChoroplethEurope.value = newData;\n});\n\n// ==============================================\n// LAYER MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nDeactivates all European risk layers\n */\nfunction deactivateAllLayersEurope() {\n  detachZoomHandler();\n  \n  if (combinedRiskEuropeLayer && props.mapInstance.hasLayer(combinedRiskEuropeLayer)) {\n    props.mapInstance.removeLayer(combinedRiskEuropeLayer);\n  }\n  \n  if (fishingLayerEurope && props.mapInstance.hasLayer(fishingLayerEurope)) {\n    props.mapInstance.removeLayer(fishingLayerEurope);\n  }\n  \n  if (anchorageLayerEurope && props.mapInstance.hasLayer(anchorageLayerEurope)) {\n    props.mapInstance.removeLayer(anchorageLayerEurope);\n  }\n  \n  if (earthquakesLayerEurope && props.mapInstance.hasLayer(earthquakesLayerEurope)) {\n    props.mapInstance.removeLayer(earthquakesLayerEurope);\n  }\n  \n  if (volcanoLayerChoroplethEurope && props.mapInstance.hasLayer(volcanoLayerChoroplethEurope)) {\n    props.mapInstance.removeLayer(volcanoLayerChoroplethEurope);\n  }\n  \n  if (dredgingLayerChoroplethEurope && props.mapInstance.hasLayer(dredgingLayerChoroplethEurope)) {\n    props.mapInstance.removeLayer(dredgingLayerChoroplethEurope);\n  }\n  \n  if (terrainLayerChoroplethEurope && props.mapInstance.hasLayer(terrainLayerChoroplethEurope)) {\n    props.mapInstance.removeLayer(terrainLayerChoroplethEurope);\n  }\n}\n\n/**\nSets the active risk layer for Europe\n@param {string} layerType - The type of layer to activate\n */\nfunction setActiveRiskEuropeLayer(layerType) {\n  deactivateAllLayersEurope();\n  activeRiskLayerEurope.value = layerType;\n  \n  switch (layerType) {\n    case 'combined':\n      onCombinedRiskEuropeLayerActivated();\n      break;\n    case 'fishing':\n      onFishingLayerActivatedEurope();\n      break;\n    case 'anchorage':\n      onAnchorageLayerActivatedEurope();\n      break;\n    case 'earthquakes':\n      onEarthquakesLayerActivatedEurope();\n      break;\n    case 'volcanoes':\n      onVolcanoLayerChoroplethActivatedEurope();\n      break;\n    case 'dredging':\n      onDredgingLayerChoroplethActivatedEurope();\n      break;\n    case 'terrain':\n      onTerrainLayerChoroplethActivatedEurope();\n      break;\n  }\n}\n\n// ==============================================\n// ZOOM HANDLING FUNCTIONS\n// ==============================================\n\n/**\nHandles zoom changes and recreates layers as needed\n */\nfunction handleZoomChange() {\n  const zoom = props.mapInstance.getZoom();\n  \n  if (![6, 8, 10, 12].includes(zoom) && zoom >= 6) {\n    return;\n  }\n  \n  if (activeRiskLayerEurope.value === 'combined' && combinedRiskEuropeLayer) {\n    recreateCombinedRiskLayer(zoom);\n  }\n  \n  if (activeRiskLayerEurope.value === 'fishing' && fishingLayerEurope) {\n    recreateFishingLayer(zoom);\n  }\n  \n  if (activeRiskLayerEurope.value === 'dredging' && dredgingLayerChoroplethEurope) {\n    recreateDredgingLayer(zoom);\n  }\n  \n  if (activeRiskLayerEurope.value === 'terrain' && terrainLayerChoroplethEurope) {\n    recreateTerrainLayer(zoom);\n  }\n}\n\n/**\nAttaches zoom event handler to the map\n */\nfunction attachZoomHandler() {\n  if (!isZoomHandlerAttached) {\n    zoomEventHandler = handleZoomChange;\n    props.mapInstance.on('zoomend', zoomEventHandler);\n    isZoomHandlerAttached = true;\n  }\n}\n\n/**\nDetaches zoom event handler from the map\n */\nfunction detachZoomHandler() {\n  if (isZoomHandlerAttached && zoomEventHandler) {\n    props.mapInstance.off('zoomend', zoomEventHandler);\n    isZoomHandlerAttached = false;\n    zoomEventHandler = null;\n  }\n}\n\n// ==============================================\n// LAYER RECREATION FUNCTIONS\n// ==============================================\n\n/**\nRecreates the combined risk layer based on zoom level\n */\nfunction recreateCombinedRiskLayer(zoom) {\n  try {\n    if (combinedRiskEuropeLayer && props.mapInstance.hasLayer(combinedRiskEuropeLayer)) {\n      props.mapInstance.removeLayer(combinedRiskEuropeLayer);\n    }\n    \n    const newFeatures = createCombinedRiskFeatures(combinedRiskDataEurope, zoom);\n    combinedRiskEuropeLayer = L.vectorGrid.slicer(\n      { type: 'FeatureCollection', features: newFeatures },\n      {\n        rendererFactory: L.canvas.tile,\n        vectorTileLayerStyles: { sliced: combinedRiskStyleFunctionEurope },\n        interactive: true,\n        maxZoom: 16,\n        buffer: 256,\n        updateWhenIdle: true\n      }\n    );\n    \n    applyCombinedRiskInteractivity(combinedRiskEuropeLayer);\n    combinedRiskEuropeLayer.addTo(props.mapInstance);\n  } catch (error) {\n    console.error('Error recreating combined risk layer:', error);\n  }\n}\n\n/**\nRecreates the fishing layer based on zoom level\n */\nfunction recreateFishingLayer(zoom) {\n  try {\n    if (fishingLayerEurope && props.mapInstance.hasLayer(fishingLayerEurope)) {\n      props.mapInstance.removeLayer(fishingLayerEurope);\n    }\n    \n    const newFeatures = createGeoJsonFeatures(props.fishingDataEurope, zoom);\n    fishingLayerEurope = L.vectorGrid.slicer(\n      { type: 'FeatureCollection', features: newFeatures },\n      {\n        rendererFactory: L.canvas.tile,\n        vectorTileLayerStyles: { sliced: styleFunctionEurope },\n        interactive: true,\n        maxZoom: 16,\n        buffer: 256,\n        updateWhenIdle: true\n      }\n    );\n    \n    applyInteractivityToLayer(fishingLayerEurope);\n    fishingLayerEurope.addTo(props.mapInstance);\n  } catch (error) {\n    console.error('Error recreating fishing layer:', error);\n  }\n}\n\n/**\nRecreates the dredging layer based on zoom level\n */\nfunction recreateDredgingLayer(zoom) {\n  try {\n    if (dredgingLayerChoroplethEurope && props.mapInstance.hasLayer(dredgingLayerChoroplethEurope)) {\n      props.mapInstance.removeLayer(dredgingLayerChoroplethEurope);\n    }\n    \n    const newFeatures = createDredgingGeoJsonFeatures(dredgingDataChoroplethEurope, zoom);\n    dredgingLayerChoroplethEurope = L.vectorGrid.slicer(\n      { type: 'FeatureCollection', features: newFeatures },\n      {\n        rendererFactory: L.canvas.tile,\n        vectorTileLayerStyles: { sliced: dredgingStyleFunctionEurope },\n        interactive: true,\n        maxZoom: 16,\n        buffer: 256,\n        updateWhenIdle: true\n      }\n    );\n    \n    applyDredgingInteractivity(dredgingLayerChoroplethEurope);\n    dredgingLayerChoroplethEurope.addTo(props.mapInstance);\n  } catch (error) {\n    console.error('Error recreating dredging layer:', error);\n  }\n}\n\n/**\nRecreates the terrain layer based on zoom level\n */\nfunction recreateTerrainLayer(zoom) {\n  try {\n    if (terrainLayerChoroplethEurope && props.mapInstance.hasLayer(terrainLayerChoroplethEurope)) {\n      props.mapInstance.removeLayer(terrainLayerChoroplethEurope);\n    }\n    \n    const newFeatures = createTerrainGeoJsonFeatures(terrainDataChoroplethEurope.value, zoom);\n    terrainLayerChoroplethEurope = L.vectorGrid.slicer(\n      { type: 'FeatureCollection', features: newFeatures },\n      {\n        rendererFactory: L.canvas.tile,\n        vectorTileLayerStyles: { sliced: terrainStyleFunctionEurope },\n        interactive: true,\n        maxZoom: 16,\n        buffer: 256,\n        updateWhenIdle: true\n      }\n    );\n    \n    applyTerrainInteractivity(terrainLayerChoroplethEurope);\n    terrainLayerChoroplethEurope.addTo(props.mapInstance);\n  } catch (error) {\n    console.error('Error recreating terrain layer:', error);\n  }\n}\n\n// ==============================================\n// COMBINED RISK LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for combined risk value\n */\nfunction getColorEurope(rawRiskValue) {\n  return rawRiskValue > 0.437336 ? '#67001D' :\n         rawRiskValue > 0.100002 ? '#B50A2A' :\n         rawRiskValue > 0.048397 ? '#E8453C' :\n         rawRiskValue > 0.010739 ? '#F67E4F' :\n         rawRiskValue > 0.001021 ? '#FDB366' :\n         rawRiskValue > 0.000156 ? '#FFE08A' :\n         rawRiskValue > 0.0001   ? '#A3D39C' :\n                                  '#6DAED4';\n}\n\n/**\nStyle function for combined risk layer\n */\nfunction combinedRiskStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorEurope(properties.risk),\n    fillOpacity: 0.7,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: zoom >= 8 ? '3' : '0'\n  };\n}\n\n/**\nCreates features for combined risk layer\n */\nfunction createCombinedRiskFeatures(data, zoom) {\n  const minRisk = zoom < 3 ? 0.1 :\n                  zoom < 5 ? 0.01 :\n                  zoom < 7 ? 0.001 :\n                  0;\n\n  const cellSizeHalf = 0.05;\n\n  return data\n    .filter(item => item[2] >= minRisk)\n    .map(item => {\n      const [lng, lat, risk] = item;\n      \n      return {\n        type: 'Feature',\n        properties: { risk },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [lng - cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat - cellSizeHalf]\n          ]]\n        }\n      };\n    });\n}\n\n/**\nGets percentile info for combined risk value\n */\nfunction getCombinedRiskPercentileInfo(riskValue) {\n  if (riskValue > 0.437336) return \"Top 1% (Extreme risk)\";\n  if (riskValue > 0.100002) return \"95th-99th percentile (Severe risk)\";\n  if (riskValue > 0.048397) return \"90th-95th percentile (High risk)\";\n  if (riskValue > 0.010739) return \"75th-90th percentile (Elevated risk)\";\n  if (riskValue > 0.001021) return \"50th-75th percentile (Moderate risk)\";\n  if (riskValue > 0.000156) return \"25th-50th percentile (Low risk)\";\n  if (riskValue > 0.0001) return \"Minimum-25th percentile (Baseline)\";\n  return \"Below minimum detectable risk\";\n}\n\n/**\nApplies interactivity to combined risk layer\n */\nfunction applyCombinedRiskInteractivity(layer) {\n  if (!window.combinedRiskTooltip) {\n    window.combinedRiskTooltip = L.tooltip();\n  }\n  if (!window.combinedRiskPopup) {\n    window.combinedRiskPopup = L.popup();\n  }\n\n  const tooltip = window.combinedRiskTooltip;\n  const popup = window.combinedRiskPopup;\n\n  layer.on('mouseover', function(e) {\n    const risk = e.layer.properties.risk;\n    tooltip\n      .setContent(`${props.currentTranslations.combinedRisk}: ${risk.toFixed(6)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const risk = e.layer.properties.risk;\n    popup\n      .setContent(`\n        <div class=\"risk-popup\">\n          <div style=\"font-weight: bold;\">${props.currentTranslations.combinedRisk} ${props.currentTranslations.details}</div>\n          <div><strong>${props.currentTranslations.value}:</strong> ${risk.toFixed(6)}</div>\n          <div><strong>${props.currentTranslations.classification}:</strong> ${getCombinedRiskPercentileInfo(risk)}</div>\n        </div>\n      `)\n      .setLatLng(e.latlng)\n      .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates combined risk layer\n */\nfunction onCombinedRiskEuropeLayerActivated() {\n  if (combinedRiskEuropeLayer) {\n    combinedRiskEuropeLayer.addTo(props.mapInstance);\n    attachZoomHandler();\n    return;\n  }\n\n  if (!combinedRiskDataEurope?.length) {\n    console.error(\"[CombinedRisk] Error: combinedRiskDataEurope is empty or invalid.\");\n    return;\n  }\n\n  const currentZoom = props.mapInstance.getZoom();\n  const features = createCombinedRiskFeatures(combinedRiskDataEurope, currentZoom);\n  const geojsonData = { type: 'FeatureCollection', features: features };\n\n  combinedRiskEuropeLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: combinedRiskStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 16,\n    buffer: 256,\n    updateWhenIdle: true,\n    tolerance: 3\n  });\n\n  applyCombinedRiskInteractivity(combinedRiskEuropeLayer);\n  combinedRiskEuropeLayer.addTo(props.mapInstance);\n  attachZoomHandler();\n}\n\n/**\nDeactivates combined risk layer\n */\nfunction onCombinedRiskEuropeLayerDeactivated() {\n  if (combinedRiskEuropeLayer) {\n    props.mapInstance.removeLayer(combinedRiskEuropeLayer);\n    combinedRiskEuropeLayer = null;\n  }\n}\n\n// ==============================================\n// FISHING LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for fishing intensity\n */\nfunction getColorFishingEurope(intensity) {\n  return intensity > 0.99       ? '#330000' :\n         intensity > 0.247068   ? '#67001D' :\n         intensity > 0.102776   ? '#B50A2A' :\n         intensity > 0.015986   ? '#E8453C' :\n         intensity > 0.002485   ? '#F67E4F' :\n         intensity > 0.000502   ? '#FDB366' :\n                                 '#FFE08A';\n}\n\n/**\nGets percentile info for fishing intensity\n */\nfunction getPercentileInfo(intensity) {\n  if (intensity > 0.99) return \"Top 1% (Extreme risk)\";\n  if (intensity > 0.247068) return \"Above 95th percentile (Severe risk)\";\n  if (intensity > 0.102776) return \"Above 90th percentile (High risk)\";\n  if (intensity > 0.015986) return \"Above 75th percentile (Elevated risk)\";\n  if (intensity > 0.002485) return \"Above 50th percentile (Moderate risk)\";\n  if (intensity > 0.000502) return \"Above 25th percentile (Low risk)\";\n  return \"Below 25th percentile (Baseline risk)\";\n}\n\n/**\nStyle function for fishing layer\n */\nfunction styleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorFishingEurope(properties.intensity),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: 0.5,\n    opacity: 0.7\n  };\n}\n\n/**\nCreates features for fishing layer\n */\nfunction createGeoJsonFeatures(data, zoom) {\n  const minIntensity = zoom < 3 ? 0.1 :\n                      zoom < 4 ? 0.05 :\n                      zoom < 6 ? 0.01 :\n                      zoom < 8 ? 0.001 : 0;\n  \n  const cellSizeHalf = 0.05;\n  \n  return data\n    .filter(item => item[2] >= minIntensity)\n    .map(item => {\n      const [lng, lat, avgIntensity] = item;\n      \n      return {\n        type: 'Feature',\n        properties: { intensity: avgIntensity },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [lng - cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat - cellSizeHalf]\n          ]]\n        }\n      };\n    });\n}\n\n/**\nApplies interactivity to fishing layer\n */\nfunction applyInteractivityToLayer(layer) {\n  if (!window.fishingTooltip) {\n    window.fishingTooltip = L.tooltip();\n  }\n  \n  let tooltip = window.fishingTooltip;\n\n  if (!window.fishingPopup) {\n    window.fishingPopup = L.popup();\n  }\n  \n  let popup = window.fishingPopup;\n\n  layer.on('mouseover', function(e) {\n    const intensity = e.layer.properties.intensity;\n    const formattedIntensity = intensity.toFixed(6);\n    \n    tooltip.setContent(`Fishing Intensity: ${formattedIntensity}`)\n      .setLatLng(e.latlng);\n      \n    if (!tooltip.isOpen()) {\n      tooltip.addTo(props.mapInstance);\n    }\n  });\n\n  layer.on('mouseout', function() {\n    props.mapInstance.closeTooltip(tooltip);\n  });\n\n  layer.on('click', function(e) {\n    const intensity = e.layer.properties.intensity;\n    const formattedIntensity = intensity.toFixed(6);\n    const percentileInfo = getPercentileInfo(intensity);\n    \n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Fishing Intensity Details</div>\n      <div>Intensity: ${formattedIntensity}</div>\n      <div>Percentile: ${percentileInfo}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates fishing layer\n */\nfunction onFishingLayerActivatedEurope() {\n  if (!props.fishingDataEurope || props.fishingDataEurope.length === 0) {\n    console.error('Fishing data Europe is empty or not yet loaded.');\n    return;\n  }\n\n  if (fishingLayerEurope) {\n    fishingLayerEurope.addTo(props.mapInstance);\n    attachZoomHandler();\n    return;\n  }\n\n  const currentZoom = props.mapInstance.getZoom();\n  const features = createGeoJsonFeatures(props.fishingDataEurope, currentZoom);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  fishingLayerEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: styleFunctionEurope },\n    interactive: true,\n    maxZoom: 16,\n    buffer: 256,\n    updateWhenIdle: true,\n  });\n\n  applyInteractivityToLayer(fishingLayerEurope);\n  fishingLayerEurope.addTo(props.mapInstance);\n  attachZoomHandler();\n}\n\n/**\nDeactivates fishing layer\n */\nfunction onFishingLayerDeactivatedEurope() {\n  if (fishingLayerEurope) {\n    props.mapInstance.removeLayer(fishingLayerEurope);\n    fishingLayerEurope = null;\n  }\n}\n\n// ==============================================\n// ANCHORAGE LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for anchorage density\n */\nfunction getColorAnchorageEurope(density) {\n  return density > 0.409836 ? '#67001D' :\n         density > 0.262295 ? '#B50A2A' :\n         density > 0.098361 ? '#E8453C' :\n         density > 0.032787 ? '#F67E4F' :\n         density > 0.0      ? '#FDB366' :\n                             '#FFE08A';\n}\n\n/**\nGets percentile info for anchorage density\n */\nfunction getAnchoragePercentileInfo(density) {\n  if (density > 0.409836) return \"Above 95th percentile (Extreme risk)\";\n  if (density > 0.262295) return \"90th-95th percentile (Severe risk)\";\n  if (density > 0.098361) return \"75th-90th percentile (High risk)\";\n  if (density > 0.032787) return \"50th-75th percentile (Elevated risk)\";\n  if (density > 0.0) return \"Non-zero density (Low risk)\";\n  return \"Baseline (No anchorage activity)\";\n}\n\n/**\nStyle function for anchorage layer\n */\nfunction anchorageStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorAnchorageEurope(properties.density),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nApplies interactivity to anchorage layer\n */\nfunction applyAnchorageInteractivity(layer) {\n  if (!window.anchorageTooltip) {\n    window.anchorageTooltip = L.tooltip();\n  }\n  if (!window.anchoragePopup) {\n    window.anchoragePopup = L.popup();\n  }\n\n  const tooltip = window.anchorageTooltip;\n  const popup = window.anchoragePopup;\n\n  layer.on('mouseover', function(e) {\n    const density = e.layer.properties.density;\n    tooltip.setContent(`Anchorage Density: ${density.toFixed(4)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const density = e.layer.properties.density;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Anchorage Density Details</div>\n      <div>Density Value: ${density.toFixed(4)}</div>\n      <div>Risk Category: ${getAnchoragePercentileInfo(density)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates anchorage layer\n */\nfunction onAnchorageLayerActivatedEurope() {\n  if (anchorageLayerEurope) {\n    anchorageLayerEurope.addTo(props.mapInstance);\n    return;\n  }\n\n  const cellSizeHalf = 0.05;\n\n  const features = anchorageDataEurope.map(item => {\n    const [lng, lat, density] = item;\n    \n    return {\n      type: 'Feature',\n      properties: { density },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  anchorageLayerEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: anchorageStyleFunctionEurope\n    },\n    interactive: true,\n    maxZoom: 18,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyAnchorageInteractivity(anchorageLayerEurope);\n  anchorageLayerEurope.addTo(props.mapInstance);\n}\n\n/**\nDeactivates anchorage layer\n */\nfunction onAnchorageLayerDeactivatedEurope() {\n  if (anchorageLayerEurope) {\n    props.mapInstance.removeLayer(anchorageLayerEurope);\n    anchorageLayerEurope = null;\n  }\n}\n\n// ==============================================\n// EARTHQUAKES LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for earthquake magnitude\n */\nfunction getColorEarthquakesEurope(magnitude) {\n  return magnitude > 0.678532 ? '#67001D' :\n         magnitude > 0.582514 ? '#B50A2A' :\n         magnitude > 0.448087 ? '#E8453C' :\n         magnitude > 0.268852 ? '#F67E4F' :\n         magnitude > 0.134426 ? '#FDB366' :\n                               '#FFE08A';\n}\n\n/**\nGets percentile info for earthquake magnitude\n */\nfunction getEarthquakesPercentileInfo(magnitude) {\n  if (magnitude > 0.678532) return \"Above 95th percentile (Extreme risk)\";\n  if (magnitude > 0.582514) return \"90th-95th percentile (Severe risk)\";\n  if (magnitude > 0.448087) return \"75th-90th percentile (High risk)\";\n  if (magnitude > 0.268852) return \"50th-75th percentile (Elevated risk)\";\n  if (magnitude > 0.134426) return \"25th-50th percentile (Moderate risk)\";\n  return \"Below 25th percentile (Low risk)\";\n}\n\n/**\nStyle function for earthquakes layer\n */\nfunction earthquakesStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorEarthquakesEurope(properties.mag),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for earthquakes layer\n */\nfunction createEarthquakesFeatures(data) {\n  const cellSizeHalf = 0.05;\n  \n  return data.map(item => {\n    const [lng, lat, mag] = item;\n    \n    return {\n      type: 'Feature',\n      properties: { mag },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n}\n\n/**\nApplies interactivity to earthquakes layer\n */\nfunction applyEarthquakesInteractivity(layer) {\n  if (!window.earthquakesTooltip) {\n    window.earthquakesTooltip = L.tooltip();\n  }\n  if (!window.earthquakesPopup) {\n    window.earthquakesPopup = L.popup();\n  }\n\n  const tooltip = window.earthquakesTooltip;\n  const popup = window.earthquakesPopup;\n\n  layer.on('mouseover', function(e) {\n    const magnitude = e.layer.properties.mag;\n    tooltip.setContent(`Earthquake Magnitude: ${magnitude.toFixed(3)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const magnitude = e.layer.properties.mag;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Earthquake Risk Details</div>\n      <div>Normalized Magnitude: ${magnitude.toFixed(3)}</div>\n      <div>Risk Category: ${getEarthquakesPercentileInfo(magnitude)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates earthquakes layer\n */\nfunction onEarthquakesLayerActivatedEurope() {\n  if (earthquakesLayerEurope) {\n    earthquakesLayerEurope.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = createEarthquakesFeatures(earthquakesDataEurope);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  earthquakesLayerEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: earthquakesStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 18,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyEarthquakesInteractivity(earthquakesLayerEurope);\n  earthquakesLayerEurope.addTo(props.mapInstance);\n}\n\n/**\nDeactivates earthquakes layer\n */\nfunction onEarthquakesLayerDeactivatedEurope() {\n  if (earthquakesLayerEurope) {\n    props.mapInstance.removeLayer(earthquakesLayerEurope);\n    earthquakesLayerEurope = null;\n  }\n}\n\n// ==============================================\n// VOLCANO LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for volcano risk score\n */\nfunction getColorVolcanoEurope(riskScore) {\n  return riskScore > 0.75  ? '#67001D' :\n         riskScore > 0.5   ? '#B50A2A' :\n         riskScore > 0.25  ? '#E8453C' :\n         riskScore > 0.1   ? '#F67E4F' :\n         riskScore > 0.01  ? '#FDB366' :\n                           '#FFE08A';\n}\n\n/**\nGets risk category for volcano score\n */\nfunction getVolcanoRiskCategory(riskScore) {\n  if (riskScore > 0.75) return \"Extreme Risk (>0.75)\";\n  if (riskScore > 0.5) return \"Severe Risk (0.5-0.75)\";\n  if (riskScore > 0.25) return \"High Risk (0.25-0.5)\";\n  if (riskScore > 0.1) return \"Elevated Risk (0.1-0.25)\";\n  if (riskScore > 0.01) return \"Moderate Risk (0.01-0.1)\";\n  return \"Low Risk (≤0.01)\";\n}\n\n/**\nStyle function for volcano layer\n */\nfunction volcanoStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorVolcanoEurope(properties.riskScore),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for volcano layer\n */\nfunction createVolcanoFeatures(data) {\n  const cellSizeHalf = 0.05;\n  \n  return data.map(item => {\n    const [lng, lat, riskScore] = item;\n    \n    return {\n      type: 'Feature',\n      properties: { riskScore },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n}\n\n/**\nApplies interactivity to volcano layer\n */\nfunction applyVolcanoInteractivity(layer) {\n  if (!window.volcanoTooltip) {\n    window.volcanoTooltip = L.tooltip();\n  }\n  if (!window.volcanoPopup) {\n    window.volcanoPopup = L.popup();\n  }\n\n  const tooltip = window.volcanoTooltip;\n  const popup = window.volcanoPopup;\n\n  layer.on('mouseover', function(e) {\n    const riskScore = e.layer.properties.riskScore;\n    tooltip.setContent(`Volcano Risk Score: ${riskScore.toFixed(3)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const riskScore = e.layer.properties.riskScore;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Volcanic Risk Details</div>\n      <div>Normalized Risk Score: ${riskScore.toFixed(3)}</div>\n      <div>Risk Category: ${getVolcanoRiskCategory(riskScore)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates volcano layer\n */\nfunction onVolcanoLayerChoroplethActivatedEurope() {\n  if (volcanoLayerChoroplethEurope) {\n    volcanoLayerChoroplethEurope.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = createVolcanoFeatures(volcanoDataChoroplethEurope);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  volcanoLayerChoroplethEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: volcanoStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 18,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyVolcanoInteractivity(volcanoLayerChoroplethEurope);\n  volcanoLayerChoroplethEurope.addTo(props.mapInstance);\n}\n\n/**\nDeactivates volcano layer\n */\nfunction onVolcanoLayerChoroplethDeactivatedEurope() {\n  if (volcanoLayerChoroplethEurope) {\n    props.mapInstance.removeLayer(volcanoLayerChoroplethEurope);\n    volcanoLayerChoroplethEurope = null;\n  }\n}\n\n// ==============================================\n// DREDGING LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for dredging density\n */\nfunction getColorDredgingEurope(density) {\n  return density > 0.991064 ? '#67001D' :\n         density > 0.071649 ? '#B50A2A' :\n         density > 0.022322 ? '#E8453C' :\n         density > 0.000740 ? '#F67E4F' :\n         density > 0.000122 ? '#FDB366' :\n         density > 0.000026 ? '#FFE08A' :\n         density > 0        ? '#FFFFCC' :\n                             '#f0f9e7';\n}\n\n/**\nGets percentile info for dredging density\n */\nfunction getDredgingPercentileInfo(density) {\n  if (density > 0.991064) return \"Above 99th percentile (Extreme)\";\n  if (density > 0.071649) return \"95th-99th percentile (Severe)\";\n  if (density > 0.022322) return \"90th-95th percentile (High)\";\n  if (density > 0.000740) return \"75th-90th percentile (Elevated)\";\n  if (density > 0.000122) return \"50th-75th percentile (Moderate)\";\n  if (density > 0.000026) return \"25th-50th percentile (Low)\";\n  if (density > 0) return \"Below 25th percentile (Minimal)\";\n  return \"No dredging activity\";\n}\n\n/**\nStyle function for dredging layer\n */\nfunction dredgingStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorDredgingEurope(properties.density),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for dredging layer\n */\nfunction createDredgingGeoJsonFeatures(data, zoom) {\n  const minDensity = zoom < 3 ? 0.01 :\n                   zoom < 5 ? 0.001 :\n                   zoom < 7 ? 0.0001 : 0;\n  \n  const cellSizeHalf = 0.05;\n\n  return data\n    .filter(item => item[2] >= minDensity)\n    .map(item => {\n      const [lng, lat, density] = item;\n      \n      return {\n        type: 'Feature',\n        properties: { density },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [lng - cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat - cellSizeHalf]\n          ]]\n        }\n      };\n    });\n}\n\n/**\nApplies interactivity to dredging layer\n */\nfunction applyDredgingInteractivity(layer) {\n  if (!window.dredgingTooltip) {\n    window.dredgingTooltip = L.tooltip();\n  }\n  if (!window.dredgingPopup) {\n    window.dredgingPopup = L.popup();\n  }\n\n  const tooltip = window.dredgingTooltip;\n  const popup = window.dredgingPopup;\n\n  layer.on('mouseover', function(e) {\n    const density = e.layer.properties.density;\n    tooltip.setContent(`Dredging Intensity: ${density.toFixed(6)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const density = e.layer.properties.density;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Dredging Activity Details</div>\n      <div>Normalized Intensity: ${density.toFixed(6)}</div>\n      <div>Risk Category: ${getDredgingPercentileInfo(density)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates dredging layer\n */\nfunction onDredgingLayerChoroplethActivatedEurope() {\n  if (dredgingLayerChoroplethEurope) {\n    dredgingLayerChoroplethEurope.addTo(props.mapInstance);\n    isDredgingActiveChoroplethEurope.value = true;\n    return;\n  }\n\n  const currentZoom = props.mapInstance.getZoom();\n  const features = createDredgingGeoJsonFeatures(dredgingDataChoroplethEurope, currentZoom);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  dredgingLayerChoroplethEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: dredgingStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 16,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyDredgingInteractivity(dredgingLayerChoroplethEurope);\n  dredgingLayerChoroplethEurope.addTo(props.mapInstance);\n  isDredgingActiveChoroplethEurope.value = true;\n}\n\n/**\nDeactivates dredging layer\n */\nfunction onDredgingLayerChoroplethDeactivatedEurope() {\n  if (dredgingLayerChoroplethEurope) {\n    props.mapInstance.removeLayer(dredgingLayerChoroplethEurope);\n    isDredgingActiveChoroplethEurope.value = false;\n  }\n}\n\n// ==============================================\n// TERRAIN LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for terrain ruggedness\n */\nfunction getColorTerrainEurope(triValue) {\n  return triValue > 0.318765 ? '#67001D' :\n         triValue > 0.011803 ? '#B50A2A' :\n         triValue > 0.003999 ? '#E8453C' :\n         triValue > 0.001295 ? '#F67E4F' :\n         triValue > 0.000408 ? '#FDB366' :\n         triValue > 0        ? '#FEEDA9' :\n                             '#f0f9e7';\n}\n\n/**\nGets percentile info for terrain ruggedness\n */\nfunction getTerrainPercentileInfo(triValue) {\n  if (triValue > 0.318765) return \"Above 95th percentile (Extreme)\";\n  if (triValue > 0.011803) return \"90th-95th percentile (High)\";\n  if (triValue > 0.003999) return \"75th-90th percentile (Elevated)\";\n  if (triValue > 0.001295) return \"50th-75th percentile (Moderate)\";\n  if (triValue > 0.000408) return \"25th-50th percentile (Low)\";\n  if (triValue > 0) return \"Below 25th percentile (Minimal)\";\n  return \"Flat terrain (No ruggedness)\";\n}\n\n/**\nStyle function for terrain layer\n */\nfunction terrainStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorTerrainEurope(properties.triValue),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for terrain layer\n */\nfunction createTerrainGeoJsonFeatures(data, zoom) {\n  const minValue = zoom < 3 ? 0.01 :\n                 zoom < 5 ? 0.001 :\n                 zoom < 7 ? 0.0001 : 0;\n  \n  const cellSizeHalf = 0.05;\n\n  return data\n    .filter(item => item[2] >= minValue)\n    .map(item => {\n      const [lng, lat, triValue] = item;\n      \n      return {\n        type: 'Feature',\n        properties: { triValue },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [lng - cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat - cellSizeHalf]\n          ]]\n        }\n      };\n    });\n}\n\n/**\nApplies interactivity to terrain layer\n */\nfunction applyTerrainInteractivity(layer) {\n  if (!window.terrainTooltip) {\n    window.terrainTooltip = L.tooltip();\n  }\n  if (!window.terrainPopup) {\n    window.terrainPopup = L.popup();\n  }\n\n  const tooltip = window.terrainTooltip;\n  const popup = window.terrainPopup;\n\n  layer.on('mouseover', function(e) {\n    const triValue = e.layer.properties.triValue;\n    tooltip.setContent(`TRI Value: ${triValue.toFixed(6)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const triValue = e.layer.properties.triValue;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Terrain Ruggedness Details</div>\n      <div>Normalized TRI Value: ${triValue.toFixed(6)}</div>\n      <div>Ruggedness Category: ${getTerrainPercentileInfo(triValue)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates terrain layer\n */\nfunction onTerrainLayerChoroplethActivatedEurope() {\n  if (!terrainDataChoroplethEurope.value) {\n    console.error('Terrain data not loaded yet.');\n    return;\n  }\n\n  if (terrainLayerChoroplethEurope) {\n    terrainLayerChoroplethEurope.addTo(props.mapInstance);\n    isTerrainActiveChoroplethEurope.value = true;\n    return;\n  }\n\n  const currentZoom = props.mapInstance.getZoom();\n  const features = createTerrainGeoJsonFeatures(terrainDataChoroplethEurope.value, currentZoom);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  terrainLayerChoroplethEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: terrainStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 16,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyTerrainInteractivity(terrainLayerChoroplethEurope);\n  terrainLayerChoroplethEurope.addTo(props.mapInstance);\n  isTerrainActiveChoroplethEurope.value = true;\n}\n\n/**\nDeactivates terrain layer\n */\nfunction onTerrainLayerChoroplethDeactivatedEurope() {\n  if (terrainLayerChoroplethEurope) {\n    props.mapInstance.removeLayer(terrainLayerChoroplethEurope);\n    isTerrainActiveChoroplethEurope.value = false;\n  }\n}\n\n// ==============================================\n// GROUP HANDLERS\n// ==============================================\n\n/**\nActivates the combined risk layer group\n */\nfunction onCombinedRiskEuropeLayerGroupActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  isCombinedRiskEuropeGroupActive.value = true;\n  setActiveRiskEuropeLayer('combined');\n}\n\n/**\nDeactivates the combined risk layer group\n */\nfunction onCombinedRiskEuropeLayerGroupDeactivated() {\n  isCombinedRiskEuropeGroupActive.value = false;\n  deactivateAllLayersEurope();\n}\n\n// ==============================================\n// EXPORTS\n// ==============================================\n\n__expose({\n  onCombinedRiskEuropeLayerGroupActivated,\n  onCombinedRiskEuropeLayerGroupDeactivated,\n  setActiveRiskEuropeLayer,\n  deactivateAllLayersEurope\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (isCombinedRiskEuropeGroupActive.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"h3\", null, _toDisplayString(__props.currentTranslations.riskEuropeTitle), 1),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", _hoisted_4, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"combined-risk-Europe\",\n                name: \"risk-layer-eu\",\n                checked: activeRiskLayerEurope.value === 'combined',\n                onChange: _cache[0] || (_cache[0] = ($event: any) => (setActiveRiskEuropeLayer('combined')))\n              }, null, 40, _hoisted_5),\n              _createElementVNode(\"label\", _hoisted_6, _toDisplayString(__props.currentTranslations.combinedRisk), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"fishing-risk-Europe\",\n                name: \"risk-layer-eu\",\n                checked: activeRiskLayerEurope.value === 'fishing',\n                onChange: _cache[1] || (_cache[1] = ($event: any) => (setActiveRiskEuropeLayer('fishing')))\n              }, null, 40, _hoisted_8),\n              _createElementVNode(\"label\", _hoisted_9, _toDisplayString(__props.currentTranslations.fishingRisk) + \" (\" + _toDisplayString(__props.currentTranslations.percent51) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_10, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"anchorage-risk-Europe\",\n                name: \"risk-layer-eu\",\n                checked: activeRiskLayerEurope.value === 'anchorage',\n                onChange: _cache[2] || (_cache[2] = ($event: any) => (setActiveRiskEuropeLayer('anchorage')))\n              }, null, 40, _hoisted_11),\n              _createElementVNode(\"label\", _hoisted_12, _toDisplayString(__props.currentTranslations.anchorageRisk) + \" (\" + _toDisplayString(__props.currentTranslations.percent25) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_13, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"earthquakes-risk-Europe\",\n                name: \"risk-layer-eu\",\n                checked: activeRiskLayerEurope.value === 'earthquakes',\n                onChange: _cache[3] || (_cache[3] = ($event: any) => (setActiveRiskEuropeLayer('earthquakes')))\n              }, null, 40, _hoisted_14),\n              _createElementVNode(\"label\", _hoisted_15, _toDisplayString(__props.currentTranslations.earthquakesRisk) + \" (\" + _toDisplayString(__props.currentTranslations.percent10) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_16, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"volcanoes-risk-Europe\",\n                name: \"risk-layer-eu\",\n                checked: activeRiskLayerEurope.value === 'volcanoes',\n                onChange: _cache[4] || (_cache[4] = ($event: any) => (setActiveRiskEuropeLayer('volcanoes')))\n              }, null, 40, _hoisted_17),\n              _createElementVNode(\"label\", _hoisted_18, _toDisplayString(__props.currentTranslations.volcanoesRisk) + \" (\" + _toDisplayString(__props.currentTranslations['percent6.6']) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_19, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"dredging-risk-Europe\",\n                name: \"risk-layer-eu\",\n                checked: activeRiskLayerEurope.value === 'dredging',\n                onChange: _cache[5] || (_cache[5] = ($event: any) => (setActiveRiskEuropeLayer('dredging')))\n              }, null, 40, _hoisted_20),\n              _createElementVNode(\"label\", _hoisted_21, _toDisplayString(__props.currentTranslations.dredgingRisk) + \" (\" + _toDisplayString(__props.currentTranslations['percent4.4']) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_22, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"terrain-risk-Europe\",\n                name: \"risk-layer-eu\",\n                checked: activeRiskLayerEurope.value === 'terrain',\n                onChange: _cache[6] || (_cache[6] = ($event: any) => (setActiveRiskEuropeLayer('terrain')))\n              }, null, 40, _hoisted_23),\n              _createElementVNode(\"label\", _hoisted_24, _toDisplayString(__props.currentTranslations.terrainRisk) + \" (\" + _toDisplayString(__props.currentTranslations.percent3) + \")\", 1)\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_25, [\n            _hoisted_26,\n            _createElementVNode(\"div\", _hoisted_27, [\n              _createElementVNode(\"span\", null, _toDisplayString(__props.currentTranslations.low), 1),\n              _createElementVNode(\"span\", null, _toDisplayString(__props.currentTranslations.high), 1)\n            ])\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<!--\nEuropeanRiskMap.vue - Component for displaying various risk layers on a European map\n\nThis component provides interactive risk visualization layers including:\n- Combined risk\n- Fishing activity\n- Anchorage density\n- Seismic activity\n- Volcanic activity\n- Dredging activity\n- Terrain ruggedness\n\nFeatures include:\n- Layer switching via radio buttons\n- Interactive tooltips and popups\n- Zoom-level dependent rendering\n- Color-coded risk visualization\n-->\n\n<template>\n  <!-- POPUP FOR EUROPEAN RISK LAYER OVERLAY -->\n  <div v-if=\"isCombinedRiskEuropeGroupActive\" class=\"map-popup risk-popup\">\n    <h3>{{ currentTranslations.riskEuropeTitle }}</h3>\n    <div class=\"popup-content\">\n      <div class=\"risk-controls\">\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"combined-risk-Europe\" name=\"risk-layer-eu\" :checked=\"activeRiskLayerEurope === 'combined'\" @change=\"setActiveRiskEuropeLayer('combined')\"/>\n          <label for=\"combined-risk-Europe\" class=\"legend-text\">{{ currentTranslations.combinedRisk }}</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"fishing-risk-Europe\" name=\"risk-layer-eu\" :checked=\"activeRiskLayerEurope === 'fishing'\" @change=\"setActiveRiskEuropeLayer('fishing')\"/>\n          <label for=\"fishing-risk-Europe\" class=\"legend-text\">{{ currentTranslations.fishingRisk }} ({{ currentTranslations.percent51 }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"anchorage-risk-Europe\" name=\"risk-layer-eu\" :checked=\"activeRiskLayerEurope === 'anchorage'\" @change=\"setActiveRiskEuropeLayer('anchorage')\"/>\n          <label for=\"anchorage-risk-Europe\" class=\"legend-text\">{{ currentTranslations.anchorageRisk }} ({{ currentTranslations.percent25 }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"earthquakes-risk-Europe\" name=\"risk-layer-eu\" :checked=\"activeRiskLayerEurope === 'earthquakes'\" @change=\"setActiveRiskEuropeLayer('earthquakes')\"/>\n          <label for=\"earthquakes-risk-Europe\" class=\"legend-text\">{{ currentTranslations.earthquakesRisk }} ({{ currentTranslations.percent10 }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"volcanoes-risk-Europe\" name=\"risk-layer-eu\" :checked=\"activeRiskLayerEurope === 'volcanoes'\" @change=\"setActiveRiskEuropeLayer('volcanoes')\"/>\n          <label for=\"volcanoes-risk-Europe\" class=\"legend-text\">{{ currentTranslations.volcanoesRisk }} ({{ currentTranslations['percent6.6'] }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"dredging-risk-Europe\" name=\"risk-layer-eu\" :checked=\"activeRiskLayerEurope === 'dredging'\" @change=\"setActiveRiskEuropeLayer('dredging')\"/>\n          <label for=\"dredging-risk-Europe\" class=\"legend-text\">{{ currentTranslations.dredgingRisk }} ({{ currentTranslations['percent4.4'] }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"terrain-risk-Europe\" name=\"risk-layer-eu\" :checked=\"activeRiskLayerEurope === 'terrain'\" @change=\"setActiveRiskEuropeLayer('terrain')\"/>\n          <label for=\"terrain-risk-Europe\" class=\"legend-text\">{{ currentTranslations.terrainRisk }} ({{ currentTranslations.percent3 }})</label>\n        </div>\n      </div>\n      <div class=\"risk-gradient\">\n        <div class=\"color-gradient\">\n          <div style=\"background:#6DAED4;\">1</div>\n          <div style=\"background:#A3D39C;\">2</div>\n          <div style=\"background:#FFE08A;\">3</div>\n          <div style=\"background:#FDB366;\">4</div>\n          <div style=\"background:#F67E4F;\">5</div>\n          <div style=\"background:#E8453C;\">6</div>\n          <div style=\"background:#B50A2A;\">7</div>\n          <div style=\"background:#67001D;\">8</div>\n        </div>\n        <div class=\"risk-range\">\n          <span>{{ currentTranslations.low }}</span>\n          <span>{{ currentTranslations.high }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet.vectorgrid';\n\n// Data imports\nimport combinedRiskDataEurope from '@/assets/riskEurope/combined_risk_europe_ocean.json';\nimport anchorageDataEurope from '@/assets/riskEurope/anchorage_europe_cells_normalised.json';\nimport earthquakesDataEurope from '@/assets/riskEurope/seismic_europe_cells_normalised.json';\nimport volcanoDataChoroplethEurope from '@/assets/riskEurope/volcanoes_europe_cells_normalised.json';\nimport dredgingDataChoroplethEurope from '@/assets/riskEurope/dredging_europe_cells_normalised.json';\n\nimport { useDataCablesStore } from '@/store/datacables';\nconst cableStore = useDataCablesStore();\ncableStore.setCombinedRiskDataEurope(combinedRiskDataEurope);\n// ==============================================\n// PROPS AND REACTIVE STATE\n// ==============================================\n\nconst props = defineProps({\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  mapInstance: {\n    type: Object,\n    required: false,\n    validator: (value) => value !== null\n  },\n  riskLayersToggleRef: Object,\n  fishingDataEurope: {\n    type: Array,\n    required: false,\n    default: () => []\n  },\n  terrainDataChoroplethEurope: {\n    type: Array,\n    required: false,\n    default: () => []\n  },\n});\n\n// Reactive state\nconst isCombinedRiskEuropeGroupActive = ref(false);\nconst activeRiskLayerEurope = ref('combined');\nconst isDredgingActiveChoroplethEurope = ref(false);\nconst isTerrainActiveChoroplethEurope = ref(false);\nconst terrainDataChoroplethEurope = ref(props.terrainDataChoroplethEurope || []);\n\n// Layer references\nlet combinedRiskEuropeLayer = null;\nlet fishingLayerEurope = null;\nlet anchorageLayerEurope = null;\nlet earthquakesLayerEurope = null;\nlet volcanoLayerChoroplethEurope = null;\nlet dredgingLayerChoroplethEurope = null;\nlet terrainLayerChoroplethEurope = null;\n\n// Event handlers\nlet zoomEventHandler = null;\nlet isZoomHandlerAttached = false;\n\n// Workaround for click events\nL.DomEvent.fakeStop = function () {\n  return true;\n}\n\n// Watch for changes in terrain data\nwatch(() => props.terrainDataChoroplethEurope, (newData) => {\n  terrainDataChoroplethEurope.value = newData;\n});\n\n// ==============================================\n// LAYER MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nDeactivates all European risk layers\n */\nfunction deactivateAllLayersEurope() {\n  detachZoomHandler();\n  \n  if (combinedRiskEuropeLayer && props.mapInstance.hasLayer(combinedRiskEuropeLayer)) {\n    props.mapInstance.removeLayer(combinedRiskEuropeLayer);\n  }\n  \n  if (fishingLayerEurope && props.mapInstance.hasLayer(fishingLayerEurope)) {\n    props.mapInstance.removeLayer(fishingLayerEurope);\n  }\n  \n  if (anchorageLayerEurope && props.mapInstance.hasLayer(anchorageLayerEurope)) {\n    props.mapInstance.removeLayer(anchorageLayerEurope);\n  }\n  \n  if (earthquakesLayerEurope && props.mapInstance.hasLayer(earthquakesLayerEurope)) {\n    props.mapInstance.removeLayer(earthquakesLayerEurope);\n  }\n  \n  if (volcanoLayerChoroplethEurope && props.mapInstance.hasLayer(volcanoLayerChoroplethEurope)) {\n    props.mapInstance.removeLayer(volcanoLayerChoroplethEurope);\n  }\n  \n  if (dredgingLayerChoroplethEurope && props.mapInstance.hasLayer(dredgingLayerChoroplethEurope)) {\n    props.mapInstance.removeLayer(dredgingLayerChoroplethEurope);\n  }\n  \n  if (terrainLayerChoroplethEurope && props.mapInstance.hasLayer(terrainLayerChoroplethEurope)) {\n    props.mapInstance.removeLayer(terrainLayerChoroplethEurope);\n  }\n}\n\n/**\nSets the active risk layer for Europe\n@param {string} layerType - The type of layer to activate\n */\nfunction setActiveRiskEuropeLayer(layerType) {\n  deactivateAllLayersEurope();\n  activeRiskLayerEurope.value = layerType;\n  \n  switch (layerType) {\n    case 'combined':\n      onCombinedRiskEuropeLayerActivated();\n      break;\n    case 'fishing':\n      onFishingLayerActivatedEurope();\n      break;\n    case 'anchorage':\n      onAnchorageLayerActivatedEurope();\n      break;\n    case 'earthquakes':\n      onEarthquakesLayerActivatedEurope();\n      break;\n    case 'volcanoes':\n      onVolcanoLayerChoroplethActivatedEurope();\n      break;\n    case 'dredging':\n      onDredgingLayerChoroplethActivatedEurope();\n      break;\n    case 'terrain':\n      onTerrainLayerChoroplethActivatedEurope();\n      break;\n  }\n}\n\n// ==============================================\n// ZOOM HANDLING FUNCTIONS\n// ==============================================\n\n/**\nHandles zoom changes and recreates layers as needed\n */\nfunction handleZoomChange() {\n  const zoom = props.mapInstance.getZoom();\n  \n  if (![6, 8, 10, 12].includes(zoom) && zoom >= 6) {\n    return;\n  }\n  \n  if (activeRiskLayerEurope.value === 'combined' && combinedRiskEuropeLayer) {\n    recreateCombinedRiskLayer(zoom);\n  }\n  \n  if (activeRiskLayerEurope.value === 'fishing' && fishingLayerEurope) {\n    recreateFishingLayer(zoom);\n  }\n  \n  if (activeRiskLayerEurope.value === 'dredging' && dredgingLayerChoroplethEurope) {\n    recreateDredgingLayer(zoom);\n  }\n  \n  if (activeRiskLayerEurope.value === 'terrain' && terrainLayerChoroplethEurope) {\n    recreateTerrainLayer(zoom);\n  }\n}\n\n/**\nAttaches zoom event handler to the map\n */\nfunction attachZoomHandler() {\n  if (!isZoomHandlerAttached) {\n    zoomEventHandler = handleZoomChange;\n    props.mapInstance.on('zoomend', zoomEventHandler);\n    isZoomHandlerAttached = true;\n  }\n}\n\n/**\nDetaches zoom event handler from the map\n */\nfunction detachZoomHandler() {\n  if (isZoomHandlerAttached && zoomEventHandler) {\n    props.mapInstance.off('zoomend', zoomEventHandler);\n    isZoomHandlerAttached = false;\n    zoomEventHandler = null;\n  }\n}\n\n// ==============================================\n// LAYER RECREATION FUNCTIONS\n// ==============================================\n\n/**\nRecreates the combined risk layer based on zoom level\n */\nfunction recreateCombinedRiskLayer(zoom) {\n  try {\n    if (combinedRiskEuropeLayer && props.mapInstance.hasLayer(combinedRiskEuropeLayer)) {\n      props.mapInstance.removeLayer(combinedRiskEuropeLayer);\n    }\n    \n    const newFeatures = createCombinedRiskFeatures(combinedRiskDataEurope, zoom);\n    combinedRiskEuropeLayer = L.vectorGrid.slicer(\n      { type: 'FeatureCollection', features: newFeatures },\n      {\n        rendererFactory: L.canvas.tile,\n        vectorTileLayerStyles: { sliced: combinedRiskStyleFunctionEurope },\n        interactive: true,\n        maxZoom: 16,\n        buffer: 256,\n        updateWhenIdle: true\n      }\n    );\n    \n    applyCombinedRiskInteractivity(combinedRiskEuropeLayer);\n    combinedRiskEuropeLayer.addTo(props.mapInstance);\n  } catch (error) {\n    console.error('Error recreating combined risk layer:', error);\n  }\n}\n\n/**\nRecreates the fishing layer based on zoom level\n */\nfunction recreateFishingLayer(zoom) {\n  try {\n    if (fishingLayerEurope && props.mapInstance.hasLayer(fishingLayerEurope)) {\n      props.mapInstance.removeLayer(fishingLayerEurope);\n    }\n    \n    const newFeatures = createGeoJsonFeatures(props.fishingDataEurope, zoom);\n    fishingLayerEurope = L.vectorGrid.slicer(\n      { type: 'FeatureCollection', features: newFeatures },\n      {\n        rendererFactory: L.canvas.tile,\n        vectorTileLayerStyles: { sliced: styleFunctionEurope },\n        interactive: true,\n        maxZoom: 16,\n        buffer: 256,\n        updateWhenIdle: true\n      }\n    );\n    \n    applyInteractivityToLayer(fishingLayerEurope);\n    fishingLayerEurope.addTo(props.mapInstance);\n  } catch (error) {\n    console.error('Error recreating fishing layer:', error);\n  }\n}\n\n/**\nRecreates the dredging layer based on zoom level\n */\nfunction recreateDredgingLayer(zoom) {\n  try {\n    if (dredgingLayerChoroplethEurope && props.mapInstance.hasLayer(dredgingLayerChoroplethEurope)) {\n      props.mapInstance.removeLayer(dredgingLayerChoroplethEurope);\n    }\n    \n    const newFeatures = createDredgingGeoJsonFeatures(dredgingDataChoroplethEurope, zoom);\n    dredgingLayerChoroplethEurope = L.vectorGrid.slicer(\n      { type: 'FeatureCollection', features: newFeatures },\n      {\n        rendererFactory: L.canvas.tile,\n        vectorTileLayerStyles: { sliced: dredgingStyleFunctionEurope },\n        interactive: true,\n        maxZoom: 16,\n        buffer: 256,\n        updateWhenIdle: true\n      }\n    );\n    \n    applyDredgingInteractivity(dredgingLayerChoroplethEurope);\n    dredgingLayerChoroplethEurope.addTo(props.mapInstance);\n  } catch (error) {\n    console.error('Error recreating dredging layer:', error);\n  }\n}\n\n/**\nRecreates the terrain layer based on zoom level\n */\nfunction recreateTerrainLayer(zoom) {\n  try {\n    if (terrainLayerChoroplethEurope && props.mapInstance.hasLayer(terrainLayerChoroplethEurope)) {\n      props.mapInstance.removeLayer(terrainLayerChoroplethEurope);\n    }\n    \n    const newFeatures = createTerrainGeoJsonFeatures(terrainDataChoroplethEurope.value, zoom);\n    terrainLayerChoroplethEurope = L.vectorGrid.slicer(\n      { type: 'FeatureCollection', features: newFeatures },\n      {\n        rendererFactory: L.canvas.tile,\n        vectorTileLayerStyles: { sliced: terrainStyleFunctionEurope },\n        interactive: true,\n        maxZoom: 16,\n        buffer: 256,\n        updateWhenIdle: true\n      }\n    );\n    \n    applyTerrainInteractivity(terrainLayerChoroplethEurope);\n    terrainLayerChoroplethEurope.addTo(props.mapInstance);\n  } catch (error) {\n    console.error('Error recreating terrain layer:', error);\n  }\n}\n\n// ==============================================\n// COMBINED RISK LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for combined risk value\n */\nfunction getColorEurope(rawRiskValue) {\n  return rawRiskValue > 0.437336 ? '#67001D' :\n         rawRiskValue > 0.100002 ? '#B50A2A' :\n         rawRiskValue > 0.048397 ? '#E8453C' :\n         rawRiskValue > 0.010739 ? '#F67E4F' :\n         rawRiskValue > 0.001021 ? '#FDB366' :\n         rawRiskValue > 0.000156 ? '#FFE08A' :\n         rawRiskValue > 0.0001   ? '#A3D39C' :\n                                  '#6DAED4';\n}\n\n/**\nStyle function for combined risk layer\n */\nfunction combinedRiskStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorEurope(properties.risk),\n    fillOpacity: 0.7,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: zoom >= 8 ? '3' : '0'\n  };\n}\n\n/**\nCreates features for combined risk layer\n */\nfunction createCombinedRiskFeatures(data, zoom) {\n  const minRisk = zoom < 3 ? 0.1 :\n                  zoom < 5 ? 0.01 :\n                  zoom < 7 ? 0.001 :\n                  0;\n\n  const cellSizeHalf = 0.05;\n\n  return data\n    .filter(item => item[2] >= minRisk)\n    .map(item => {\n      const [lng, lat, risk] = item;\n      \n      return {\n        type: 'Feature',\n        properties: { risk },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [lng - cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat - cellSizeHalf]\n          ]]\n        }\n      };\n    });\n}\n\n/**\nGets percentile info for combined risk value\n */\nfunction getCombinedRiskPercentileInfo(riskValue) {\n  if (riskValue > 0.437336) return \"Top 1% (Extreme risk)\";\n  if (riskValue > 0.100002) return \"95th-99th percentile (Severe risk)\";\n  if (riskValue > 0.048397) return \"90th-95th percentile (High risk)\";\n  if (riskValue > 0.010739) return \"75th-90th percentile (Elevated risk)\";\n  if (riskValue > 0.001021) return \"50th-75th percentile (Moderate risk)\";\n  if (riskValue > 0.000156) return \"25th-50th percentile (Low risk)\";\n  if (riskValue > 0.0001) return \"Minimum-25th percentile (Baseline)\";\n  return \"Below minimum detectable risk\";\n}\n\n/**\nApplies interactivity to combined risk layer\n */\nfunction applyCombinedRiskInteractivity(layer) {\n  if (!window.combinedRiskTooltip) {\n    window.combinedRiskTooltip = L.tooltip();\n  }\n  if (!window.combinedRiskPopup) {\n    window.combinedRiskPopup = L.popup();\n  }\n\n  const tooltip = window.combinedRiskTooltip;\n  const popup = window.combinedRiskPopup;\n\n  layer.on('mouseover', function(e) {\n    const risk = e.layer.properties.risk;\n    tooltip\n      .setContent(`${props.currentTranslations.combinedRisk}: ${risk.toFixed(6)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const risk = e.layer.properties.risk;\n    popup\n      .setContent(`\n        <div class=\"risk-popup\">\n          <div style=\"font-weight: bold;\">${props.currentTranslations.combinedRisk} ${props.currentTranslations.details}</div>\n          <div><strong>${props.currentTranslations.value}:</strong> ${risk.toFixed(6)}</div>\n          <div><strong>${props.currentTranslations.classification}:</strong> ${getCombinedRiskPercentileInfo(risk)}</div>\n        </div>\n      `)\n      .setLatLng(e.latlng)\n      .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates combined risk layer\n */\nfunction onCombinedRiskEuropeLayerActivated() {\n  if (combinedRiskEuropeLayer) {\n    combinedRiskEuropeLayer.addTo(props.mapInstance);\n    attachZoomHandler();\n    return;\n  }\n\n  if (!combinedRiskDataEurope?.length) {\n    console.error(\"[CombinedRisk] Error: combinedRiskDataEurope is empty or invalid.\");\n    return;\n  }\n\n  const currentZoom = props.mapInstance.getZoom();\n  const features = createCombinedRiskFeatures(combinedRiskDataEurope, currentZoom);\n  const geojsonData = { type: 'FeatureCollection', features: features };\n\n  combinedRiskEuropeLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: combinedRiskStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 16,\n    buffer: 256,\n    updateWhenIdle: true,\n    tolerance: 3\n  });\n\n  applyCombinedRiskInteractivity(combinedRiskEuropeLayer);\n  combinedRiskEuropeLayer.addTo(props.mapInstance);\n  attachZoomHandler();\n}\n\n/**\nDeactivates combined risk layer\n */\nfunction onCombinedRiskEuropeLayerDeactivated() {\n  if (combinedRiskEuropeLayer) {\n    props.mapInstance.removeLayer(combinedRiskEuropeLayer);\n    combinedRiskEuropeLayer = null;\n  }\n}\n\n// ==============================================\n// FISHING LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for fishing intensity\n */\nfunction getColorFishingEurope(intensity) {\n  return intensity > 0.99       ? '#330000' :\n         intensity > 0.247068   ? '#67001D' :\n         intensity > 0.102776   ? '#B50A2A' :\n         intensity > 0.015986   ? '#E8453C' :\n         intensity > 0.002485   ? '#F67E4F' :\n         intensity > 0.000502   ? '#FDB366' :\n                                 '#FFE08A';\n}\n\n/**\nGets percentile info for fishing intensity\n */\nfunction getPercentileInfo(intensity) {\n  if (intensity > 0.99) return \"Top 1% (Extreme risk)\";\n  if (intensity > 0.247068) return \"Above 95th percentile (Severe risk)\";\n  if (intensity > 0.102776) return \"Above 90th percentile (High risk)\";\n  if (intensity > 0.015986) return \"Above 75th percentile (Elevated risk)\";\n  if (intensity > 0.002485) return \"Above 50th percentile (Moderate risk)\";\n  if (intensity > 0.000502) return \"Above 25th percentile (Low risk)\";\n  return \"Below 25th percentile (Baseline risk)\";\n}\n\n/**\nStyle function for fishing layer\n */\nfunction styleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorFishingEurope(properties.intensity),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: 0.5,\n    opacity: 0.7\n  };\n}\n\n/**\nCreates features for fishing layer\n */\nfunction createGeoJsonFeatures(data, zoom) {\n  const minIntensity = zoom < 3 ? 0.1 :\n                      zoom < 4 ? 0.05 :\n                      zoom < 6 ? 0.01 :\n                      zoom < 8 ? 0.001 : 0;\n  \n  const cellSizeHalf = 0.05;\n  \n  return data\n    .filter(item => item[2] >= minIntensity)\n    .map(item => {\n      const [lng, lat, avgIntensity] = item;\n      \n      return {\n        type: 'Feature',\n        properties: { intensity: avgIntensity },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [lng - cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat - cellSizeHalf]\n          ]]\n        }\n      };\n    });\n}\n\n/**\nApplies interactivity to fishing layer\n */\nfunction applyInteractivityToLayer(layer) {\n  if (!window.fishingTooltip) {\n    window.fishingTooltip = L.tooltip();\n  }\n  \n  let tooltip = window.fishingTooltip;\n\n  if (!window.fishingPopup) {\n    window.fishingPopup = L.popup();\n  }\n  \n  let popup = window.fishingPopup;\n\n  layer.on('mouseover', function(e) {\n    const intensity = e.layer.properties.intensity;\n    const formattedIntensity = intensity.toFixed(6);\n    \n    tooltip.setContent(`Fishing Intensity: ${formattedIntensity}`)\n      .setLatLng(e.latlng);\n      \n    if (!tooltip.isOpen()) {\n      tooltip.addTo(props.mapInstance);\n    }\n  });\n\n  layer.on('mouseout', function() {\n    props.mapInstance.closeTooltip(tooltip);\n  });\n\n  layer.on('click', function(e) {\n    const intensity = e.layer.properties.intensity;\n    const formattedIntensity = intensity.toFixed(6);\n    const percentileInfo = getPercentileInfo(intensity);\n    \n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Fishing Intensity Details</div>\n      <div>Intensity: ${formattedIntensity}</div>\n      <div>Percentile: ${percentileInfo}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates fishing layer\n */\nfunction onFishingLayerActivatedEurope() {\n  if (!props.fishingDataEurope || props.fishingDataEurope.length === 0) {\n    console.error('Fishing data Europe is empty or not yet loaded.');\n    return;\n  }\n\n  if (fishingLayerEurope) {\n    fishingLayerEurope.addTo(props.mapInstance);\n    attachZoomHandler();\n    return;\n  }\n\n  const currentZoom = props.mapInstance.getZoom();\n  const features = createGeoJsonFeatures(props.fishingDataEurope, currentZoom);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  fishingLayerEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: styleFunctionEurope },\n    interactive: true,\n    maxZoom: 16,\n    buffer: 256,\n    updateWhenIdle: true,\n  });\n\n  applyInteractivityToLayer(fishingLayerEurope);\n  fishingLayerEurope.addTo(props.mapInstance);\n  attachZoomHandler();\n}\n\n/**\nDeactivates fishing layer\n */\nfunction onFishingLayerDeactivatedEurope() {\n  if (fishingLayerEurope) {\n    props.mapInstance.removeLayer(fishingLayerEurope);\n    fishingLayerEurope = null;\n  }\n}\n\n// ==============================================\n// ANCHORAGE LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for anchorage density\n */\nfunction getColorAnchorageEurope(density) {\n  return density > 0.409836 ? '#67001D' :\n         density > 0.262295 ? '#B50A2A' :\n         density > 0.098361 ? '#E8453C' :\n         density > 0.032787 ? '#F67E4F' :\n         density > 0.0      ? '#FDB366' :\n                             '#FFE08A';\n}\n\n/**\nGets percentile info for anchorage density\n */\nfunction getAnchoragePercentileInfo(density) {\n  if (density > 0.409836) return \"Above 95th percentile (Extreme risk)\";\n  if (density > 0.262295) return \"90th-95th percentile (Severe risk)\";\n  if (density > 0.098361) return \"75th-90th percentile (High risk)\";\n  if (density > 0.032787) return \"50th-75th percentile (Elevated risk)\";\n  if (density > 0.0) return \"Non-zero density (Low risk)\";\n  return \"Baseline (No anchorage activity)\";\n}\n\n/**\nStyle function for anchorage layer\n */\nfunction anchorageStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorAnchorageEurope(properties.density),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nApplies interactivity to anchorage layer\n */\nfunction applyAnchorageInteractivity(layer) {\n  if (!window.anchorageTooltip) {\n    window.anchorageTooltip = L.tooltip();\n  }\n  if (!window.anchoragePopup) {\n    window.anchoragePopup = L.popup();\n  }\n\n  const tooltip = window.anchorageTooltip;\n  const popup = window.anchoragePopup;\n\n  layer.on('mouseover', function(e) {\n    const density = e.layer.properties.density;\n    tooltip.setContent(`Anchorage Density: ${density.toFixed(4)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const density = e.layer.properties.density;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Anchorage Density Details</div>\n      <div>Density Value: ${density.toFixed(4)}</div>\n      <div>Risk Category: ${getAnchoragePercentileInfo(density)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates anchorage layer\n */\nfunction onAnchorageLayerActivatedEurope() {\n  if (anchorageLayerEurope) {\n    anchorageLayerEurope.addTo(props.mapInstance);\n    return;\n  }\n\n  const cellSizeHalf = 0.05;\n\n  const features = anchorageDataEurope.map(item => {\n    const [lng, lat, density] = item;\n    \n    return {\n      type: 'Feature',\n      properties: { density },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  anchorageLayerEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: anchorageStyleFunctionEurope\n    },\n    interactive: true,\n    maxZoom: 18,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyAnchorageInteractivity(anchorageLayerEurope);\n  anchorageLayerEurope.addTo(props.mapInstance);\n}\n\n/**\nDeactivates anchorage layer\n */\nfunction onAnchorageLayerDeactivatedEurope() {\n  if (anchorageLayerEurope) {\n    props.mapInstance.removeLayer(anchorageLayerEurope);\n    anchorageLayerEurope = null;\n  }\n}\n\n// ==============================================\n// EARTHQUAKES LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for earthquake magnitude\n */\nfunction getColorEarthquakesEurope(magnitude) {\n  return magnitude > 0.678532 ? '#67001D' :\n         magnitude > 0.582514 ? '#B50A2A' :\n         magnitude > 0.448087 ? '#E8453C' :\n         magnitude > 0.268852 ? '#F67E4F' :\n         magnitude > 0.134426 ? '#FDB366' :\n                               '#FFE08A';\n}\n\n/**\nGets percentile info for earthquake magnitude\n */\nfunction getEarthquakesPercentileInfo(magnitude) {\n  if (magnitude > 0.678532) return \"Above 95th percentile (Extreme risk)\";\n  if (magnitude > 0.582514) return \"90th-95th percentile (Severe risk)\";\n  if (magnitude > 0.448087) return \"75th-90th percentile (High risk)\";\n  if (magnitude > 0.268852) return \"50th-75th percentile (Elevated risk)\";\n  if (magnitude > 0.134426) return \"25th-50th percentile (Moderate risk)\";\n  return \"Below 25th percentile (Low risk)\";\n}\n\n/**\nStyle function for earthquakes layer\n */\nfunction earthquakesStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorEarthquakesEurope(properties.mag),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for earthquakes layer\n */\nfunction createEarthquakesFeatures(data) {\n  const cellSizeHalf = 0.05;\n  \n  return data.map(item => {\n    const [lng, lat, mag] = item;\n    \n    return {\n      type: 'Feature',\n      properties: { mag },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n}\n\n/**\nApplies interactivity to earthquakes layer\n */\nfunction applyEarthquakesInteractivity(layer) {\n  if (!window.earthquakesTooltip) {\n    window.earthquakesTooltip = L.tooltip();\n  }\n  if (!window.earthquakesPopup) {\n    window.earthquakesPopup = L.popup();\n  }\n\n  const tooltip = window.earthquakesTooltip;\n  const popup = window.earthquakesPopup;\n\n  layer.on('mouseover', function(e) {\n    const magnitude = e.layer.properties.mag;\n    tooltip.setContent(`Earthquake Magnitude: ${magnitude.toFixed(3)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const magnitude = e.layer.properties.mag;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Earthquake Risk Details</div>\n      <div>Normalized Magnitude: ${magnitude.toFixed(3)}</div>\n      <div>Risk Category: ${getEarthquakesPercentileInfo(magnitude)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates earthquakes layer\n */\nfunction onEarthquakesLayerActivatedEurope() {\n  if (earthquakesLayerEurope) {\n    earthquakesLayerEurope.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = createEarthquakesFeatures(earthquakesDataEurope);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  earthquakesLayerEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: earthquakesStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 18,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyEarthquakesInteractivity(earthquakesLayerEurope);\n  earthquakesLayerEurope.addTo(props.mapInstance);\n}\n\n/**\nDeactivates earthquakes layer\n */\nfunction onEarthquakesLayerDeactivatedEurope() {\n  if (earthquakesLayerEurope) {\n    props.mapInstance.removeLayer(earthquakesLayerEurope);\n    earthquakesLayerEurope = null;\n  }\n}\n\n// ==============================================\n// VOLCANO LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for volcano risk score\n */\nfunction getColorVolcanoEurope(riskScore) {\n  return riskScore > 0.75  ? '#67001D' :\n         riskScore > 0.5   ? '#B50A2A' :\n         riskScore > 0.25  ? '#E8453C' :\n         riskScore > 0.1   ? '#F67E4F' :\n         riskScore > 0.01  ? '#FDB366' :\n                           '#FFE08A';\n}\n\n/**\nGets risk category for volcano score\n */\nfunction getVolcanoRiskCategory(riskScore) {\n  if (riskScore > 0.75) return \"Extreme Risk (>0.75)\";\n  if (riskScore > 0.5) return \"Severe Risk (0.5-0.75)\";\n  if (riskScore > 0.25) return \"High Risk (0.25-0.5)\";\n  if (riskScore > 0.1) return \"Elevated Risk (0.1-0.25)\";\n  if (riskScore > 0.01) return \"Moderate Risk (0.01-0.1)\";\n  return \"Low Risk (≤0.01)\";\n}\n\n/**\nStyle function for volcano layer\n */\nfunction volcanoStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorVolcanoEurope(properties.riskScore),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for volcano layer\n */\nfunction createVolcanoFeatures(data) {\n  const cellSizeHalf = 0.05;\n  \n  return data.map(item => {\n    const [lng, lat, riskScore] = item;\n    \n    return {\n      type: 'Feature',\n      properties: { riskScore },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n}\n\n/**\nApplies interactivity to volcano layer\n */\nfunction applyVolcanoInteractivity(layer) {\n  if (!window.volcanoTooltip) {\n    window.volcanoTooltip = L.tooltip();\n  }\n  if (!window.volcanoPopup) {\n    window.volcanoPopup = L.popup();\n  }\n\n  const tooltip = window.volcanoTooltip;\n  const popup = window.volcanoPopup;\n\n  layer.on('mouseover', function(e) {\n    const riskScore = e.layer.properties.riskScore;\n    tooltip.setContent(`Volcano Risk Score: ${riskScore.toFixed(3)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const riskScore = e.layer.properties.riskScore;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Volcanic Risk Details</div>\n      <div>Normalized Risk Score: ${riskScore.toFixed(3)}</div>\n      <div>Risk Category: ${getVolcanoRiskCategory(riskScore)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates volcano layer\n */\nfunction onVolcanoLayerChoroplethActivatedEurope() {\n  if (volcanoLayerChoroplethEurope) {\n    volcanoLayerChoroplethEurope.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = createVolcanoFeatures(volcanoDataChoroplethEurope);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  volcanoLayerChoroplethEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: volcanoStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 18,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyVolcanoInteractivity(volcanoLayerChoroplethEurope);\n  volcanoLayerChoroplethEurope.addTo(props.mapInstance);\n}\n\n/**\nDeactivates volcano layer\n */\nfunction onVolcanoLayerChoroplethDeactivatedEurope() {\n  if (volcanoLayerChoroplethEurope) {\n    props.mapInstance.removeLayer(volcanoLayerChoroplethEurope);\n    volcanoLayerChoroplethEurope = null;\n  }\n}\n\n// ==============================================\n// DREDGING LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for dredging density\n */\nfunction getColorDredgingEurope(density) {\n  return density > 0.991064 ? '#67001D' :\n         density > 0.071649 ? '#B50A2A' :\n         density > 0.022322 ? '#E8453C' :\n         density > 0.000740 ? '#F67E4F' :\n         density > 0.000122 ? '#FDB366' :\n         density > 0.000026 ? '#FFE08A' :\n         density > 0        ? '#FFFFCC' :\n                             '#f0f9e7';\n}\n\n/**\nGets percentile info for dredging density\n */\nfunction getDredgingPercentileInfo(density) {\n  if (density > 0.991064) return \"Above 99th percentile (Extreme)\";\n  if (density > 0.071649) return \"95th-99th percentile (Severe)\";\n  if (density > 0.022322) return \"90th-95th percentile (High)\";\n  if (density > 0.000740) return \"75th-90th percentile (Elevated)\";\n  if (density > 0.000122) return \"50th-75th percentile (Moderate)\";\n  if (density > 0.000026) return \"25th-50th percentile (Low)\";\n  if (density > 0) return \"Below 25th percentile (Minimal)\";\n  return \"No dredging activity\";\n}\n\n/**\nStyle function for dredging layer\n */\nfunction dredgingStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorDredgingEurope(properties.density),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for dredging layer\n */\nfunction createDredgingGeoJsonFeatures(data, zoom) {\n  const minDensity = zoom < 3 ? 0.01 :\n                   zoom < 5 ? 0.001 :\n                   zoom < 7 ? 0.0001 : 0;\n  \n  const cellSizeHalf = 0.05;\n\n  return data\n    .filter(item => item[2] >= minDensity)\n    .map(item => {\n      const [lng, lat, density] = item;\n      \n      return {\n        type: 'Feature',\n        properties: { density },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [lng - cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat - cellSizeHalf]\n          ]]\n        }\n      };\n    });\n}\n\n/**\nApplies interactivity to dredging layer\n */\nfunction applyDredgingInteractivity(layer) {\n  if (!window.dredgingTooltip) {\n    window.dredgingTooltip = L.tooltip();\n  }\n  if (!window.dredgingPopup) {\n    window.dredgingPopup = L.popup();\n  }\n\n  const tooltip = window.dredgingTooltip;\n  const popup = window.dredgingPopup;\n\n  layer.on('mouseover', function(e) {\n    const density = e.layer.properties.density;\n    tooltip.setContent(`Dredging Intensity: ${density.toFixed(6)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const density = e.layer.properties.density;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Dredging Activity Details</div>\n      <div>Normalized Intensity: ${density.toFixed(6)}</div>\n      <div>Risk Category: ${getDredgingPercentileInfo(density)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates dredging layer\n */\nfunction onDredgingLayerChoroplethActivatedEurope() {\n  if (dredgingLayerChoroplethEurope) {\n    dredgingLayerChoroplethEurope.addTo(props.mapInstance);\n    isDredgingActiveChoroplethEurope.value = true;\n    return;\n  }\n\n  const currentZoom = props.mapInstance.getZoom();\n  const features = createDredgingGeoJsonFeatures(dredgingDataChoroplethEurope, currentZoom);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  dredgingLayerChoroplethEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: dredgingStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 16,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyDredgingInteractivity(dredgingLayerChoroplethEurope);\n  dredgingLayerChoroplethEurope.addTo(props.mapInstance);\n  isDredgingActiveChoroplethEurope.value = true;\n}\n\n/**\nDeactivates dredging layer\n */\nfunction onDredgingLayerChoroplethDeactivatedEurope() {\n  if (dredgingLayerChoroplethEurope) {\n    props.mapInstance.removeLayer(dredgingLayerChoroplethEurope);\n    isDredgingActiveChoroplethEurope.value = false;\n  }\n}\n\n// ==============================================\n// TERRAIN LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for terrain ruggedness\n */\nfunction getColorTerrainEurope(triValue) {\n  return triValue > 0.318765 ? '#67001D' :\n         triValue > 0.011803 ? '#B50A2A' :\n         triValue > 0.003999 ? '#E8453C' :\n         triValue > 0.001295 ? '#F67E4F' :\n         triValue > 0.000408 ? '#FDB366' :\n         triValue > 0        ? '#FEEDA9' :\n                             '#f0f9e7';\n}\n\n/**\nGets percentile info for terrain ruggedness\n */\nfunction getTerrainPercentileInfo(triValue) {\n  if (triValue > 0.318765) return \"Above 95th percentile (Extreme)\";\n  if (triValue > 0.011803) return \"90th-95th percentile (High)\";\n  if (triValue > 0.003999) return \"75th-90th percentile (Elevated)\";\n  if (triValue > 0.001295) return \"50th-75th percentile (Moderate)\";\n  if (triValue > 0.000408) return \"25th-50th percentile (Low)\";\n  if (triValue > 0) return \"Below 25th percentile (Minimal)\";\n  return \"Flat terrain (No ruggedness)\";\n}\n\n/**\nStyle function for terrain layer\n */\nfunction terrainStyleFunctionEurope(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorTerrainEurope(properties.triValue),\n    fillOpacity: 0.5,\n    stroke: zoom >= 8,\n    color: 'white',\n    weight: zoom >= 8 ? 0.5 : 0,\n    opacity: 0.7,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for terrain layer\n */\nfunction createTerrainGeoJsonFeatures(data, zoom) {\n  const minValue = zoom < 3 ? 0.01 :\n                 zoom < 5 ? 0.001 :\n                 zoom < 7 ? 0.0001 : 0;\n  \n  const cellSizeHalf = 0.05;\n\n  return data\n    .filter(item => item[2] >= minValue)\n    .map(item => {\n      const [lng, lat, triValue] = item;\n      \n      return {\n        type: 'Feature',\n        properties: { triValue },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[\n            [lng - cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat - cellSizeHalf],\n            [lng + cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat + cellSizeHalf],\n            [lng - cellSizeHalf, lat - cellSizeHalf]\n          ]]\n        }\n      };\n    });\n}\n\n/**\nApplies interactivity to terrain layer\n */\nfunction applyTerrainInteractivity(layer) {\n  if (!window.terrainTooltip) {\n    window.terrainTooltip = L.tooltip();\n  }\n  if (!window.terrainPopup) {\n    window.terrainPopup = L.popup();\n  }\n\n  const tooltip = window.terrainTooltip;\n  const popup = window.terrainPopup;\n\n  layer.on('mouseover', function(e) {\n    const triValue = e.layer.properties.triValue;\n    tooltip.setContent(`TRI Value: ${triValue.toFixed(6)}`)\n      .setLatLng(e.latlng)\n      .addTo(props.mapInstance);\n  });\n\n  layer.on('mouseout', () => props.mapInstance.closeTooltip(tooltip));\n\n  layer.on('click', function(e) {\n    const triValue = e.layer.properties.triValue;\n    popup.setContent(`\n      <div style=\"font-weight: bold;\">Terrain Ruggedness Details</div>\n      <div>Normalized TRI Value: ${triValue.toFixed(6)}</div>\n      <div>Ruggedness Category: ${getTerrainPercentileInfo(triValue)}</div>\n    `)\n    .setLatLng(e.latlng)\n    .openOn(props.mapInstance);\n  });\n}\n\n/**\nActivates terrain layer\n */\nfunction onTerrainLayerChoroplethActivatedEurope() {\n  if (!terrainDataChoroplethEurope.value) {\n    console.error('Terrain data not loaded yet.');\n    return;\n  }\n\n  if (terrainLayerChoroplethEurope) {\n    terrainLayerChoroplethEurope.addTo(props.mapInstance);\n    isTerrainActiveChoroplethEurope.value = true;\n    return;\n  }\n\n  const currentZoom = props.mapInstance.getZoom();\n  const features = createTerrainGeoJsonFeatures(terrainDataChoroplethEurope.value, currentZoom);\n  const geojsonData = { type: 'FeatureCollection', features };\n\n  terrainLayerChoroplethEurope = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: { sliced: terrainStyleFunctionEurope },\n    interactive: true,\n    maxZoom: 16,\n    buffer: 256,\n    updateWhenIdle: true\n  });\n\n  applyTerrainInteractivity(terrainLayerChoroplethEurope);\n  terrainLayerChoroplethEurope.addTo(props.mapInstance);\n  isTerrainActiveChoroplethEurope.value = true;\n}\n\n/**\nDeactivates terrain layer\n */\nfunction onTerrainLayerChoroplethDeactivatedEurope() {\n  if (terrainLayerChoroplethEurope) {\n    props.mapInstance.removeLayer(terrainLayerChoroplethEurope);\n    isTerrainActiveChoroplethEurope.value = false;\n  }\n}\n\n// ==============================================\n// GROUP HANDLERS\n// ==============================================\n\n/**\nActivates the combined risk layer group\n */\nfunction onCombinedRiskEuropeLayerGroupActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  isCombinedRiskEuropeGroupActive.value = true;\n  setActiveRiskEuropeLayer('combined');\n}\n\n/**\nDeactivates the combined risk layer group\n */\nfunction onCombinedRiskEuropeLayerGroupDeactivated() {\n  isCombinedRiskEuropeGroupActive.value = false;\n  deactivateAllLayersEurope();\n}\n\n// ==============================================\n// EXPORTS\n// ==============================================\n\ndefineExpose({\n  onCombinedRiskEuropeLayerGroupActivated,\n  onCombinedRiskEuropeLayerGroupDeactivated,\n  setActiveRiskEuropeLayer,\n  deactivateAllLayersEurope\n});\n</script>\n\n<style>\n.color-gradient div {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 12px;\n  font-weight: bold;\n  text-shadow: 0 0 2px rgba(0,0,0,0.5);\n}\n</style>","import script from \"./EuropeanRiskMap.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./EuropeanRiskMap.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./EuropeanRiskMap.vue?vue&type=style&index=0&id=3ab75e0a&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"map-popup risk-popup\"\n}\nconst _hoisted_2 = { class: \"popup-content\" }\nconst _hoisted_3 = { class: \"risk-controls\" }\nconst _hoisted_4 = { class: \"control-item\" }\nconst _hoisted_5 = [\"checked\"]\nconst _hoisted_6 = {\n  for: \"combined-risk\",\n  class: \"legend-text\"\n}\nconst _hoisted_7 = { class: \"control-item\" }\nconst _hoisted_8 = [\"checked\"]\nconst _hoisted_9 = {\n  for: \"fishing-risk\",\n  class: \"legend-text\"\n}\nconst _hoisted_10 = { class: \"control-item\" }\nconst _hoisted_11 = [\"checked\"]\nconst _hoisted_12 = {\n  for: \"anchorage-risk\",\n  class: \"legend-text\"\n}\nconst _hoisted_13 = { class: \"control-item\" }\nconst _hoisted_14 = [\"checked\"]\nconst _hoisted_15 = {\n  for: \"earthquakes-risk\",\n  class: \"legend-text\"\n}\nconst _hoisted_16 = { class: \"control-item\" }\nconst _hoisted_17 = [\"checked\"]\nconst _hoisted_18 = {\n  for: \"volcanoes-risk\",\n  class: \"legend-text\"\n}\nconst _hoisted_19 = { class: \"control-item\" }\nconst _hoisted_20 = [\"checked\"]\nconst _hoisted_21 = {\n  for: \"terrain-risk\",\n  class: \"legend-text\"\n}\nconst _hoisted_22 = { class: \"risk-gradient\" }\nconst _hoisted_23 = { class: \"risk-label\" }\nconst _hoisted_24 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"color-gradient\\\"><div style=\\\"background:#6DAED4;\\\">1</div><div style=\\\"background:#A3D39C;\\\">2</div><div style=\\\"background:#FFE08A;\\\">3</div><div style=\\\"background:#FDB366;\\\">4</div><div style=\\\"background:#F67E4F;\\\">5</div><div style=\\\"background:#E8453C;\\\">6</div><div style=\\\"background:#B50A2A;\\\">7</div><div style=\\\"background:#67001D;\\\">8</div></div>\", 1)\nconst _hoisted_25 = { class: \"risk-range\" }\n\nimport { ref } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet.vectorgrid';\n\n// Data imports\nimport combinedRiskData from '@/assets/riskGlobal/combined_risk_global_ocean.json';\nimport fishingData from '@/assets/riskGlobal/aggregated_fishing2normalised99.json';\nimport anchorageData from '@/assets/riskGlobal/aggregated_anchorages2normalised99.json';\nimport earthquakesData from '@/assets/riskGlobal/aggregated_seismic2normalised99.json';\nimport volcanoDataChoropleth from '@/assets/riskGlobal/aggregated_volcanoes2normalised99.json';\nimport terrainDataChoropleth from '@/assets/riskGlobal/aggregated_tri2normalised99.json';\n\n// ==============================================\n// PROPS AND REACTIVE STATE\n// ==============================================\n\nimport { useDataCablesStore } from '@/store/datacables';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GlobalRiskMap',\n  props: {\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  riskLayersToggleRef: Object\n},\n  setup(__props, { expose: __expose }) {\n\nconst cableStore = useDataCablesStore();\ncableStore.setCombinedRiskData(combinedRiskData);\n\nconst props = __props;\n\n// Reactive state\nconst isCombinedRiskGroupActive = ref(false);\nconst activeRiskLayer = ref('combined');\n\n// Layer references\nlet combinedRiskLayer = null;\nlet fishingLayer = null;\nlet anchorageLayer = null;\nlet earthquakesLayer = null;\nlet volcanoLayerChoropleth = null;\nlet terrainLayerChoropleth = null;\n\n// Workaround for click events\nL.DomEvent.fakeStop = function () {\n  return true;\n}\n\n// ==============================================\n// LAYER MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nDeactivates all risk layers\n */\nfunction deactivateAllLayers() {\n  onCombinedRiskLayerDeactivated();\n  onFishingLayerDeactivated();\n  onAnchorageLayerDeactivated();\n  onEarthquakesLayerDeactivated();\n  onVolcanoLayerChoroplethDeactivated();\n  onTerrainLayerChoroplethDeactivated();\n}\n\n/**\nSets the active risk layer\n@param {string} layerType - The type of layer to activate\n */\nfunction setActiveRiskLayer(layerType) {\n  deactivateAllLayers();\n  activeRiskLayer.value = layerType;\n  \n  switch(layerType) {\n    case 'combined':\n      onCombinedRiskLayerActivated();\n      break;\n    case 'fishing':\n      onFishingLayerActivated();\n      break;\n    case 'anchorage':\n      onAnchorageLayerActivated();\n      break;\n    case 'earthquakes':\n      onEarthquakesLayerActivated();\n      break;\n    case 'volcanoes':\n      onVolcanoLayerChoroplethActivated();\n      break;\n    case 'terrain':\n      onTerrainLayerChoroplethActivated();\n      break;\n  }\n}\n\n// ==============================================\n// COMBINED RISK LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for combined risk value\n */\nfunction getColor(rawRiskValue) {\n  return rawRiskValue > 0.3 ? '#67001D' :\n         rawRiskValue > 0.085 ? '#B50A2A' :\n         rawRiskValue > 0.066 ? '#E8453C' :\n         rawRiskValue > 0.02 ? '#F67E4F' :\n         rawRiskValue > 0.003 ? '#FDB366' :\n         rawRiskValue > 0.0007 ? '#FFE08A' :\n         rawRiskValue > 0.0001 ? '#A3D39C' :\n                                '#6DAED4';\n}\n\n/**\nStyle function for combined risk layer\n */\nfunction combinedRiskStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColor(properties.risk),\n    fillOpacity: 0.75,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 1,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for combined risk layer\n */\nfunction createCombinedRiskFeatures(data) {\n  const cellSizeHalf = 0.5;\n  \n  return data.map(item => {\n    const [lng, lat, risk] = item;\n    \n    return {\n      type: 'Feature',\n      properties: { risk },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n}\n\n/**\nActivates combined risk layer\n */\nfunction onCombinedRiskLayerActivated() {\n  if (combinedRiskLayer) {\n    combinedRiskLayer.addTo(props.mapInstance);\n    return;\n  }\n\n  if (!combinedRiskData?.length) {\n    console.error('Combined risk data is empty or invalid.');\n    return;\n  }\n\n  const features = createCombinedRiskFeatures(combinedRiskData);\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  combinedRiskLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: combinedRiskStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  combinedRiskLayer.addTo(props.mapInstance);\n}\n\n/**\nDeactivates combined risk layer\n */\nfunction onCombinedRiskLayerDeactivated() {\n  if (combinedRiskLayer) {\n    props.mapInstance.removeLayer(combinedRiskLayer);\n    combinedRiskLayer = null;\n  }\n}\n\n// ==============================================\n// FISHING LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for fishing intensity\n */\nfunction getColorFishing(intensity) {\n  return intensity > 0.99 ? '#330000' :\n         intensity > 0.7 ? '#67001D' :\n         intensity > 0.12 ? '#B50A2A' :\n         intensity > 0.05 ? '#E8453C' :\n         intensity > 0.01 ? '#F67E4F' :\n         intensity > 0.001 ? '#FDB366' :\n                           '#FFE08A';\n}\n\n/**\nStyle function for fishing layer\n */\nfunction styleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorFishing(properties.intensity),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates fishing layer\n */\nfunction onFishingLayerActivated() {\n  if (fishingLayer) {\n    fishingLayer.addTo(props.mapInstance);\n    return;\n  }\n \n  const features = fishingData.map(item => {\n    const [lng, lat, avgIntensity] = item;\n    const cellSizeHalf = 0.5;\n   \n    return {\n      type: 'Feature',\n      properties: { intensity: avgIntensity },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  fishingLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: styleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  fishingLayer.addTo(props.mapInstance);\n}\n\n/**\nDeactivates fishing layer\n */\nfunction onFishingLayerDeactivated() {\n  if (fishingLayer) {\n    props.mapInstance.removeLayer(fishingLayer);\n    fishingLayer = null;\n  }\n}\n\n// ==============================================\n// ANCHORAGE LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for anchorage density\n */\nfunction getColorAnchorage(density) {\n  return density > 0.5 ? '#67001D' :\n         density > 0.1 ? '#B50A2A' :\n         density > 0.05 ? '#E8453C' :\n         density > 0.01 ? '#F67E4F' :\n         density > 0.001 ? '#FDB366' :\n                         '#FFE08A';\n}\n\n/**\nStyle function for anchorage layer\n */\nfunction anchorageStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorAnchorage(properties.density),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates anchorage layer\n */\nfunction onAnchorageLayerActivated() {\n  if (anchorageLayer) {\n    anchorageLayer.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = anchorageData.map(item => {\n    const [lng, lat, density] = item;\n    const cellSizeHalf = 0.5;\n    \n    return {\n      type: 'Feature',\n      properties: { density },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  anchorageLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: anchorageStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  anchorageLayer.addTo(props.mapInstance);\n}\n\n/**\nDeactivates anchorage layer\n */\nfunction onAnchorageLayerDeactivated() {\n  if (anchorageLayer) {\n    props.mapInstance.removeLayer(anchorageLayer);\n    anchorageLayer = null;\n  }\n}\n\n// ==============================================\n// EARTHQUAKES LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for earthquake magnitude\n */\nfunction getColorEarthquakes(magnitude) {\n  return magnitude > 0.778 ? '#67001D' :\n         magnitude > 0.725 ? '#B50A2A' :\n         magnitude > 0.635 ? '#E8453C' :\n         magnitude > 0.56 ? '#F67E4F' :\n         magnitude > 0.389 ? '#FDB366' :\n                           '#FFE08A';\n}\n\n/**\nStyle function for earthquakes layer\n */\nfunction earthquakesStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorEarthquakes(properties.mag),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates earthquakes layer\n */\nfunction onEarthquakesLayerActivated() {\n  if (earthquakesLayer) {\n    earthquakesLayer.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = earthquakesData.map(item => {\n    const [lng, lat, mag] = item;\n    const cellSizeHalf = 0.5;\n\n    return {\n      type: 'Feature',\n      properties: { mag },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  earthquakesLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: earthquakesStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  earthquakesLayer.addTo(props.mapInstance);\n}\n\n/**\nDeactivates earthquakes layer\n */\nfunction onEarthquakesLayerDeactivated() {\n  if (earthquakesLayer) {\n    props.mapInstance.removeLayer(earthquakesLayer);\n    earthquakesLayer = null;\n  }\n}\n\n// ==============================================\n// VOLCANO LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for volcano density\n */\nfunction getColorVolcano(density) {\n  return density > 0.75 ? '#67001D' :\n         density > 0.5 ? '#B50A2A' :\n         density > 0.25 ? '#E8453C' :\n         density > 0.1 ? '#F67E4F' :\n         density > 0.01 ? '#FDB366' :\n                        '#FFE08A';\n}\n\n/**\nStyle function for volcano layer\n */\nfunction volcanoStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorVolcano(properties.density),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates volcano layer\n */\nfunction onVolcanoLayerChoroplethActivated() {\n  if (volcanoLayerChoropleth) {\n    volcanoLayerChoropleth.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = volcanoDataChoropleth.map(item => {\n    const [lng, lat, density] = item;\n    const cellSizeHalf = 0.5;\n    \n    return {\n      type: 'Feature',\n      properties: { density },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  volcanoLayerChoropleth = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: volcanoStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  volcanoLayerChoropleth.addTo(props.mapInstance);\n}\n\n/**\nDeactivates volcano layer\n */\nfunction onVolcanoLayerChoroplethDeactivated() {\n  if (volcanoLayerChoropleth) {\n    props.mapInstance.removeLayer(volcanoLayerChoropleth);\n    volcanoLayerChoropleth = null;\n  }\n}\n\n// ==============================================\n// TERRAIN LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for terrain density\n */\nfunction getColorTerrain(density) {\n  return density > 0.5188 ? '#67001D' :\n         density > 0.2495 ? '#B50A2A' :\n         density > 0.1681 ? '#E8453C' :\n         density > 0.1211 ? '#F67E4F' :\n         density > 0.0635 ? '#FDB366' :\n         density > 0.0 ? '#FFE08A' :\n                        '#f0f9e7';\n}\n\n/**\nStyle function for terrain layer\n */\nfunction terrainStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorTerrain(properties.density),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates terrain layer\n */\nfunction onTerrainLayerChoroplethActivated() {\n  if (terrainLayerChoropleth) {\n    terrainLayerChoropleth.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = terrainDataChoropleth.map(item => {\n    const [lng, lat, density] = item;\n    const cellSizeHalf = 0.5;\n    \n    return {\n      type: 'Feature',\n      properties: { density },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  terrainLayerChoropleth = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: terrainStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  terrainLayerChoropleth.addTo(props.mapInstance);\n}\n\n/**\nDeactivates terrain layer\n */\nfunction onTerrainLayerChoroplethDeactivated() {\n  if (terrainLayerChoropleth) {\n    props.mapInstance.removeLayer(terrainLayerChoropleth);\n    terrainLayerChoropleth = null;\n  }\n}\n\n// ==============================================\n// GROUP HANDLERS\n// ==============================================\n\n/**\nActivates the combined risk layer group\n */\nfunction onCombinedRiskLayerGroupActivated() {\n  requestAnimationFrame(() => {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  isCombinedRiskGroupActive.value = true;\n  setActiveRiskLayer('combined');\n});\n}\n\n/**\nDeactivates the combined risk layer group\n */\nfunction onCombinedRiskLayerGroupDeactivated() {\n  isCombinedRiskGroupActive.value = false;\n  deactivateAllLayers();\n}\n\n// ==============================================\n// EXPORTS\n// ==============================================\n\n__expose({\n  onCombinedRiskLayerGroupActivated,\n  onCombinedRiskLayerGroupDeactivated,\n  setActiveRiskLayer,\n  deactivateAllLayers\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (isCombinedRiskGroupActive.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"h3\", null, _toDisplayString(__props.currentTranslations.riskGlobalTitle), 1),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", _hoisted_4, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"combined-risk\",\n                name: \"risk-layer-global\",\n                checked: activeRiskLayer.value === 'combined',\n                onChange: _cache[0] || (_cache[0] = ($event: any) => (setActiveRiskLayer('combined')))\n              }, null, 40, _hoisted_5),\n              _createElementVNode(\"label\", _hoisted_6, _toDisplayString(__props.currentTranslations.combinedRisk) + \" \" + _toDisplayString(__props.currentTranslations.risk), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"fishing-risk\",\n                name: \"risk-layer-global\",\n                checked: activeRiskLayer.value === 'fishing',\n                onChange: _cache[1] || (_cache[1] = ($event: any) => (setActiveRiskLayer('fishing')))\n              }, null, 40, _hoisted_8),\n              _createElementVNode(\"label\", _hoisted_9, _toDisplayString(__props.currentTranslations.fishingRisk) + \" (\" + _toDisplayString(__props.currentTranslations.percent50) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_10, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"anchorage-risk\",\n                name: \"risk-layer-global\",\n                checked: activeRiskLayer.value === 'anchorage',\n                onChange: _cache[2] || (_cache[2] = ($event: any) => (setActiveRiskLayer('anchorage')))\n              }, null, 40, _hoisted_11),\n              _createElementVNode(\"label\", _hoisted_12, _toDisplayString(__props.currentTranslations.anchorageRisk) + \" (\" + _toDisplayString(__props.currentTranslations.percent30) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_13, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"earthquakes-risk\",\n                name: \"risk-layer-global\",\n                checked: activeRiskLayer.value === 'earthquakes',\n                onChange: _cache[3] || (_cache[3] = ($event: any) => (setActiveRiskLayer('earthquakes')))\n              }, null, 40, _hoisted_14),\n              _createElementVNode(\"label\", _hoisted_15, _toDisplayString(__props.currentTranslations.earthquakesRisk) + \" (\" + _toDisplayString(__props.currentTranslations.percent10) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_16, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"volcanoes-risk\",\n                name: \"risk-layer-global\",\n                checked: activeRiskLayer.value === 'volcanoes',\n                onChange: _cache[4] || (_cache[4] = ($event: any) => (setActiveRiskLayer('volcanoes')))\n              }, null, 40, _hoisted_17),\n              _createElementVNode(\"label\", _hoisted_18, _toDisplayString(__props.currentTranslations.volcanoesRisk) + \" (\" + _toDisplayString(__props.currentTranslations['percent7.5']) + \")\", 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_19, [\n              _createElementVNode(\"input\", {\n                type: \"radio\",\n                id: \"terrain-risk\",\n                name: \"risk-layer-global\",\n                checked: activeRiskLayer.value === 'terrain',\n                onChange: _cache[5] || (_cache[5] = ($event: any) => (setActiveRiskLayer('terrain')))\n              }, null, 40, _hoisted_20),\n              _createElementVNode(\"label\", _hoisted_21, _toDisplayString(__props.currentTranslations.terrainRisk) + \" (\" + _toDisplayString(__props.currentTranslations['percent2.5']) + \")\", 1)\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_22, [\n            _createElementVNode(\"div\", _hoisted_23, _toDisplayString(__props.currentTranslations.riskLevel), 1),\n            _hoisted_24,\n            _createElementVNode(\"div\", _hoisted_25, [\n              _createElementVNode(\"span\", null, _toDisplayString(__props.currentTranslations.low), 1),\n              _createElementVNode(\"span\", null, _toDisplayString(__props.currentTranslations.high), 1)\n            ])\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<!--\nGlobalRiskMap.vue - Component for displaying various global risk layers on a map\n\nThis component provides interactive risk visualization layers including:\n- Combined risk\n- Fishing activity\n- Anchorage density\n- Seismic activity\n- Volcanic activity\n- Terrain ruggedness\n\nFeatures include:\n- Layer switching via radio buttons\n- Color-coded risk visualization\n- Interactive map layers\n-->\n\n<template>\n  <!-- POPUP FOR GLOBAL RISK LAYER OVERLAY -->\n  <div v-if=\"isCombinedRiskGroupActive\" class=\"map-popup risk-popup\">\n    <h3>{{ currentTranslations.riskGlobalTitle }}</h3>\n    <div class=\"popup-content\">\n      <div class=\"risk-controls\">\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"combined-risk\" name=\"risk-layer-global\" :checked=\"activeRiskLayer === 'combined'\" @change=\"setActiveRiskLayer('combined')\" />\n          <label for=\"combined-risk\" class=\"legend-text\">{{ currentTranslations.combinedRisk }} {{ currentTranslations.risk }}</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"fishing-risk\" name=\"risk-layer-global\" :checked=\"activeRiskLayer === 'fishing'\" @change=\"setActiveRiskLayer('fishing')\" />\n          <label for=\"fishing-risk\" class=\"legend-text\">{{ currentTranslations.fishingRisk }} ({{ currentTranslations.percent50 }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"anchorage-risk\" name=\"risk-layer-global\" :checked=\"activeRiskLayer === 'anchorage'\" @change=\"setActiveRiskLayer('anchorage')\" />\n          <label for=\"anchorage-risk\" class=\"legend-text\">{{ currentTranslations.anchorageRisk }} ({{ currentTranslations.percent30 }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"earthquakes-risk\" name=\"risk-layer-global\" :checked=\"activeRiskLayer === 'earthquakes'\" @change=\"setActiveRiskLayer('earthquakes')\" />\n          <label for=\"earthquakes-risk\" class=\"legend-text\">{{ currentTranslations.earthquakesRisk }} ({{ currentTranslations.percent10 }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"volcanoes-risk\" name=\"risk-layer-global\" :checked=\"activeRiskLayer === 'volcanoes'\" @change=\"setActiveRiskLayer('volcanoes')\" />\n          <label for=\"volcanoes-risk\" class=\"legend-text\">{{ currentTranslations.volcanoesRisk }} ({{ currentTranslations['percent7.5'] }})</label>\n        </div>\n        <div class=\"control-item\">\n          <input type=\"radio\" id=\"terrain-risk\" name=\"risk-layer-global\" :checked=\"activeRiskLayer === 'terrain'\" @change=\"setActiveRiskLayer('terrain')\" />\n          <label for=\"terrain-risk\" class=\"legend-text\">{{ currentTranslations.terrainRisk }} ({{ currentTranslations['percent2.5'] }})</label>\n        </div>\n      </div>\n      \n      <div class=\"risk-gradient\">\n        <div class=\"risk-label\">{{ currentTranslations.riskLevel }}</div>\n        <div class=\"color-gradient\">\n          <div style=\"background:#6DAED4;\">1</div>\n          <div style=\"background:#A3D39C;\">2</div>\n          <div style=\"background:#FFE08A;\">3</div>\n          <div style=\"background:#FDB366;\">4</div>\n          <div style=\"background:#F67E4F;\">5</div>\n          <div style=\"background:#E8453C;\">6</div>\n          <div style=\"background:#B50A2A;\">7</div>\n          <div style=\"background:#67001D;\">8</div>\n        </div>\n        <div class=\"risk-range\">\n          <span>{{ currentTranslations.low }}</span>\n          <span>{{ currentTranslations.high }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet.vectorgrid';\n\n// Data imports\nimport combinedRiskData from '@/assets/riskGlobal/combined_risk_global_ocean.json';\nimport fishingData from '@/assets/riskGlobal/aggregated_fishing2normalised99.json';\nimport anchorageData from '@/assets/riskGlobal/aggregated_anchorages2normalised99.json';\nimport earthquakesData from '@/assets/riskGlobal/aggregated_seismic2normalised99.json';\nimport volcanoDataChoropleth from '@/assets/riskGlobal/aggregated_volcanoes2normalised99.json';\nimport terrainDataChoropleth from '@/assets/riskGlobal/aggregated_tri2normalised99.json';\n\n// ==============================================\n// PROPS AND REACTIVE STATE\n// ==============================================\n\nimport { useDataCablesStore } from '@/store/datacables';\nconst cableStore = useDataCablesStore();\ncableStore.setCombinedRiskData(combinedRiskData);\n\nconst props = defineProps({\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  riskLayersToggleRef: Object\n});\n\n// Reactive state\nconst isCombinedRiskGroupActive = ref(false);\nconst activeRiskLayer = ref('combined');\n\n// Layer references\nlet combinedRiskLayer = null;\nlet fishingLayer = null;\nlet anchorageLayer = null;\nlet earthquakesLayer = null;\nlet volcanoLayerChoropleth = null;\nlet terrainLayerChoropleth = null;\n\n// Workaround for click events\nL.DomEvent.fakeStop = function () {\n  return true;\n}\n\n// ==============================================\n// LAYER MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nDeactivates all risk layers\n */\nfunction deactivateAllLayers() {\n  onCombinedRiskLayerDeactivated();\n  onFishingLayerDeactivated();\n  onAnchorageLayerDeactivated();\n  onEarthquakesLayerDeactivated();\n  onVolcanoLayerChoroplethDeactivated();\n  onTerrainLayerChoroplethDeactivated();\n}\n\n/**\nSets the active risk layer\n@param {string} layerType - The type of layer to activate\n */\nfunction setActiveRiskLayer(layerType) {\n  deactivateAllLayers();\n  activeRiskLayer.value = layerType;\n  \n  switch(layerType) {\n    case 'combined':\n      onCombinedRiskLayerActivated();\n      break;\n    case 'fishing':\n      onFishingLayerActivated();\n      break;\n    case 'anchorage':\n      onAnchorageLayerActivated();\n      break;\n    case 'earthquakes':\n      onEarthquakesLayerActivated();\n      break;\n    case 'volcanoes':\n      onVolcanoLayerChoroplethActivated();\n      break;\n    case 'terrain':\n      onTerrainLayerChoroplethActivated();\n      break;\n  }\n}\n\n// ==============================================\n// COMBINED RISK LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for combined risk value\n */\nfunction getColor(rawRiskValue) {\n  return rawRiskValue > 0.3 ? '#67001D' :\n         rawRiskValue > 0.085 ? '#B50A2A' :\n         rawRiskValue > 0.066 ? '#E8453C' :\n         rawRiskValue > 0.02 ? '#F67E4F' :\n         rawRiskValue > 0.003 ? '#FDB366' :\n         rawRiskValue > 0.0007 ? '#FFE08A' :\n         rawRiskValue > 0.0001 ? '#A3D39C' :\n                                '#6DAED4';\n}\n\n/**\nStyle function for combined risk layer\n */\nfunction combinedRiskStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColor(properties.risk),\n    fillOpacity: 0.75,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 1,\n    dashArray: '3'\n  };\n}\n\n/**\nCreates features for combined risk layer\n */\nfunction createCombinedRiskFeatures(data) {\n  const cellSizeHalf = 0.5;\n  \n  return data.map(item => {\n    const [lng, lat, risk] = item;\n    \n    return {\n      type: 'Feature',\n      properties: { risk },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n}\n\n/**\nActivates combined risk layer\n */\nfunction onCombinedRiskLayerActivated() {\n  if (combinedRiskLayer) {\n    combinedRiskLayer.addTo(props.mapInstance);\n    return;\n  }\n\n  if (!combinedRiskData?.length) {\n    console.error('Combined risk data is empty or invalid.');\n    return;\n  }\n\n  const features = createCombinedRiskFeatures(combinedRiskData);\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  combinedRiskLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: combinedRiskStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  combinedRiskLayer.addTo(props.mapInstance);\n}\n\n/**\nDeactivates combined risk layer\n */\nfunction onCombinedRiskLayerDeactivated() {\n  if (combinedRiskLayer) {\n    props.mapInstance.removeLayer(combinedRiskLayer);\n    combinedRiskLayer = null;\n  }\n}\n\n// ==============================================\n// FISHING LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for fishing intensity\n */\nfunction getColorFishing(intensity) {\n  return intensity > 0.99 ? '#330000' :\n         intensity > 0.7 ? '#67001D' :\n         intensity > 0.12 ? '#B50A2A' :\n         intensity > 0.05 ? '#E8453C' :\n         intensity > 0.01 ? '#F67E4F' :\n         intensity > 0.001 ? '#FDB366' :\n                           '#FFE08A';\n}\n\n/**\nStyle function for fishing layer\n */\nfunction styleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorFishing(properties.intensity),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates fishing layer\n */\nfunction onFishingLayerActivated() {\n  if (fishingLayer) {\n    fishingLayer.addTo(props.mapInstance);\n    return;\n  }\n \n  const features = fishingData.map(item => {\n    const [lng, lat, avgIntensity] = item;\n    const cellSizeHalf = 0.5;\n   \n    return {\n      type: 'Feature',\n      properties: { intensity: avgIntensity },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  fishingLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: styleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  fishingLayer.addTo(props.mapInstance);\n}\n\n/**\nDeactivates fishing layer\n */\nfunction onFishingLayerDeactivated() {\n  if (fishingLayer) {\n    props.mapInstance.removeLayer(fishingLayer);\n    fishingLayer = null;\n  }\n}\n\n// ==============================================\n// ANCHORAGE LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for anchorage density\n */\nfunction getColorAnchorage(density) {\n  return density > 0.5 ? '#67001D' :\n         density > 0.1 ? '#B50A2A' :\n         density > 0.05 ? '#E8453C' :\n         density > 0.01 ? '#F67E4F' :\n         density > 0.001 ? '#FDB366' :\n                         '#FFE08A';\n}\n\n/**\nStyle function for anchorage layer\n */\nfunction anchorageStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorAnchorage(properties.density),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates anchorage layer\n */\nfunction onAnchorageLayerActivated() {\n  if (anchorageLayer) {\n    anchorageLayer.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = anchorageData.map(item => {\n    const [lng, lat, density] = item;\n    const cellSizeHalf = 0.5;\n    \n    return {\n      type: 'Feature',\n      properties: { density },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  anchorageLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: anchorageStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  anchorageLayer.addTo(props.mapInstance);\n}\n\n/**\nDeactivates anchorage layer\n */\nfunction onAnchorageLayerDeactivated() {\n  if (anchorageLayer) {\n    props.mapInstance.removeLayer(anchorageLayer);\n    anchorageLayer = null;\n  }\n}\n\n// ==============================================\n// EARTHQUAKES LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for earthquake magnitude\n */\nfunction getColorEarthquakes(magnitude) {\n  return magnitude > 0.778 ? '#67001D' :\n         magnitude > 0.725 ? '#B50A2A' :\n         magnitude > 0.635 ? '#E8453C' :\n         magnitude > 0.56 ? '#F67E4F' :\n         magnitude > 0.389 ? '#FDB366' :\n                           '#FFE08A';\n}\n\n/**\nStyle function for earthquakes layer\n */\nfunction earthquakesStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorEarthquakes(properties.mag),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates earthquakes layer\n */\nfunction onEarthquakesLayerActivated() {\n  if (earthquakesLayer) {\n    earthquakesLayer.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = earthquakesData.map(item => {\n    const [lng, lat, mag] = item;\n    const cellSizeHalf = 0.5;\n\n    return {\n      type: 'Feature',\n      properties: { mag },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  earthquakesLayer = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: earthquakesStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  earthquakesLayer.addTo(props.mapInstance);\n}\n\n/**\nDeactivates earthquakes layer\n */\nfunction onEarthquakesLayerDeactivated() {\n  if (earthquakesLayer) {\n    props.mapInstance.removeLayer(earthquakesLayer);\n    earthquakesLayer = null;\n  }\n}\n\n// ==============================================\n// VOLCANO LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for volcano density\n */\nfunction getColorVolcano(density) {\n  return density > 0.75 ? '#67001D' :\n         density > 0.5 ? '#B50A2A' :\n         density > 0.25 ? '#E8453C' :\n         density > 0.1 ? '#F67E4F' :\n         density > 0.01 ? '#FDB366' :\n                        '#FFE08A';\n}\n\n/**\nStyle function for volcano layer\n */\nfunction volcanoStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorVolcano(properties.density),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates volcano layer\n */\nfunction onVolcanoLayerChoroplethActivated() {\n  if (volcanoLayerChoropleth) {\n    volcanoLayerChoropleth.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = volcanoDataChoropleth.map(item => {\n    const [lng, lat, density] = item;\n    const cellSizeHalf = 0.5;\n    \n    return {\n      type: 'Feature',\n      properties: { density },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  volcanoLayerChoropleth = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: volcanoStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  volcanoLayerChoropleth.addTo(props.mapInstance);\n}\n\n/**\nDeactivates volcano layer\n */\nfunction onVolcanoLayerChoroplethDeactivated() {\n  if (volcanoLayerChoropleth) {\n    props.mapInstance.removeLayer(volcanoLayerChoropleth);\n    volcanoLayerChoropleth = null;\n  }\n}\n\n// ==============================================\n// TERRAIN LAYER FUNCTIONS\n// ==============================================\n\n/**\nGets color for terrain density\n */\nfunction getColorTerrain(density) {\n  return density > 0.5188 ? '#67001D' :\n         density > 0.2495 ? '#B50A2A' :\n         density > 0.1681 ? '#E8453C' :\n         density > 0.1211 ? '#F67E4F' :\n         density > 0.0635 ? '#FDB366' :\n         density > 0.0 ? '#FFE08A' :\n                        '#f0f9e7';\n}\n\n/**\nStyle function for terrain layer\n */\nfunction terrainStyleFunction(properties, zoom) {\n  return {\n    fill: true,\n    fillColor: getColorTerrain(properties.density),\n    fillOpacity: 0.5,\n    stroke: true,\n    color: 'white',\n    weight: 1,\n    opacity: 0.7\n  };\n}\n\n/**\nActivates terrain layer\n */\nfunction onTerrainLayerChoroplethActivated() {\n  if (terrainLayerChoropleth) {\n    terrainLayerChoropleth.addTo(props.mapInstance);\n    return;\n  }\n\n  const features = terrainDataChoropleth.map(item => {\n    const [lng, lat, density] = item;\n    const cellSizeHalf = 0.5;\n    \n    return {\n      type: 'Feature',\n      properties: { density },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[\n          [lng - cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat - cellSizeHalf],\n          [lng + cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat + cellSizeHalf],\n          [lng - cellSizeHalf, lat - cellSizeHalf]\n        ]]\n      }\n    };\n  });\n\n  const geojsonData = {\n    type: 'FeatureCollection',\n    features: features\n  };\n\n  terrainLayerChoropleth = L.vectorGrid.slicer(geojsonData, {\n    rendererFactory: L.canvas.tile,\n    vectorTileLayerStyles: {\n      sliced: terrainStyleFunction\n    },\n    interactive: true,\n    maxZoom: 18\n  });\n\n  terrainLayerChoropleth.addTo(props.mapInstance);\n}\n\n/**\nDeactivates terrain layer\n */\nfunction onTerrainLayerChoroplethDeactivated() {\n  if (terrainLayerChoropleth) {\n    props.mapInstance.removeLayer(terrainLayerChoropleth);\n    terrainLayerChoropleth = null;\n  }\n}\n\n// ==============================================\n// GROUP HANDLERS\n// ==============================================\n\n/**\nActivates the combined risk layer group\n */\nfunction onCombinedRiskLayerGroupActivated() {\n  requestAnimationFrame(() => {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  isCombinedRiskGroupActive.value = true;\n  setActiveRiskLayer('combined');\n});\n}\n\n/**\nDeactivates the combined risk layer group\n */\nfunction onCombinedRiskLayerGroupDeactivated() {\n  isCombinedRiskGroupActive.value = false;\n  deactivateAllLayers();\n}\n\n// ==============================================\n// EXPORTS\n// ==============================================\n\ndefineExpose({\n  onCombinedRiskLayerGroupActivated,\n  onCombinedRiskLayerGroupDeactivated,\n  setActiveRiskLayer,\n  deactivateAllLayers\n});\n</script>\n\n<style>\n.color-gradient div {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 12px;\n  font-weight: bold;\n  text-shadow: 0 0 2px rgba(0,0,0,0.5);\n}\n</style>","import script from \"./GlobalRiskMap.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GlobalRiskMap.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GlobalRiskMap.vue?vue&type=style&index=0&id=35f00630&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\nVolcanoLayer.vue - Interactive Volcano Map Layer Component\n\nThis component displays volcanic data on a Leaflet map with interactive filtering capabilities.\nIt shows volcanoes as triangle markers with different colors based on eruption dates:\n- Red triangles: Recent eruptions (2000-2025)\n- Orange triangles: 1900s eruptions (1900-1999) \n- Black triangles: All volcanoes (when \"All Volcanoes\" filter is active)\n\nFeatures:\n- Dynamic triangle sizing based on zoom level\n- Interactive legend popup with filter checkboxes\n- Popup tooltips with volcano details\n- Real-time filtering by eruption date ranges\n-->\n\n<template>\n  <!-- Volcano Legend Popup -->\n  <div v-if=\"isVolcanoActive\" class=\"map-popup\">\n    <h3>{{ currentTranslations.volcanoLegend }}</h3>\n    <div class=\"popup-content\">\n      <!-- Filter Controls -->\n      <div class=\"legend-controls\">\n        <div class=\"control-item\">\n          <input \n            id=\"volcanoes-recent\" \n            type=\"checkbox\" \n            v-model=\"isRecentVolcanoesVisible\" \n            @change=\"toggleVolcanoFilter\" \n            class=\"volcano-checkbox\" \n          />\n          <label for=\"volcanoes-recent\" class=\"legend-text\">\n            {{ currentTranslations.eruptedRecent }}\n          </label>\n        </div>\n        <div class=\"control-item\">\n          <input \n            id=\"volcanoes-1900s\" \n            type=\"checkbox\" \n            v-model=\"is1900sVolcanoesVisible\" \n            @change=\"toggleVolcanoFilter\" \n            class=\"volcano-checkbox\" \n          />\n          <label for=\"volcanoes-1900s\" class=\"legend-text\">\n            {{ currentTranslations.erupted1900s }}\n          </label>\n        </div>\n        <div class=\"control-item\">\n          <input \n            id=\"volcanoes-all\" \n            type=\"checkbox\" \n            v-model=\"isAllVolcanoesVisible\" \n            @change=\"toggleVolcanoFilter\" \n            class=\"volcano-checkbox\" \n          />\n          <label for=\"volcanoes-all\" class=\"legend-text\">\n            {{ currentTranslations.allVolcanoes }}\n          </label>\n        </div>\n      </div>\n      \n      <!-- Color Legend -->\n      <div class=\"legend-grid\">\n        <div class=\"legend-item\">\n          <div class=\"legend-triangle\" style=\"border-bottom-color:#ff0000;\"></div>\n          <span class=\"legend-text\">{{ currentTranslations.recentEruption }}</span>\n        </div>\n        <div class=\"legend-item\">\n          <div class=\"legend-triangle\" style=\"border-bottom-color:#ff8000;\"></div>\n          <span class=\"legend-text\">{{ currentTranslations.olderEruption }}</span>\n        </div>\n        <div class=\"legend-item\">\n          <div class=\"legend-triangle\" style=\"border-bottom-color:black;\"></div>\n          <span class=\"legend-text\">{{ currentTranslations.allVolcanoes }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\nimport L from 'leaflet';\nimport volcanoData from '@/assets/volcanoes.json';\n\n// ============================================================================\n// COMPONENT PROPS\n// ============================================================================\n\nconst props = defineProps({\n  mapInstance: Object,\n  currentTranslations: Object,\n  riskLayersToggleRef: Object\n});\n\n// ============================================================================\n// REACTIVE STATE\n// ============================================================================\n\n// Main layer state\nconst volcanoLayer = ref(null);\nconst isVolcanoActive = ref(false);\n\n// Checkbox visibility states for different volcano categories\nconst isRecentVolcanoesVisible = ref(true);\nconst is1900sVolcanoesVisible = ref(false);\nconst isAllVolcanoesVisible = ref(false);\n\n// ============================================================================\n// STYLING FUNCTIONS\n// ============================================================================\n\n/**\n * Determines the visual style for volcano markers based on eruption date\n * @param {string} lastEruption - The last eruption date string\n * @param {boolean} isAllVisible - Whether \"All Volcanoes\" filter is active\n * @returns {Object} Style object with colors and opacity settings\n */\nfunction getVolcanoStyle(lastEruption, isAllVisible) {\n  let fillColor, color;\n  const currentYear = new Date().getFullYear();\n  let eruptionYear = NaN;\n\n  // Parse eruption year from the lastEruption string\n  if (lastEruption !== 'Unknown') {\n    const parts = lastEruption.split(' ');\n    let year = parseInt(parts[0]);\n    const era = parts[1];\n    if (era === 'BCE') {\n      year = -year;\n    }\n    eruptionYear = year;\n  }\n\n  // Categorize eruptions by date ranges\n  const isRecent = !isNaN(eruptionYear) && eruptionYear >= 2000 && eruptionYear <= 2025;\n  const is1900s = !isNaN(eruptionYear) && eruptionYear >= 1900 && eruptionYear <= 1999;\n\n  // Set colors based on category and visibility state\n  if (isAllVisible) {\n    fillColor = 'black'; // Black for all volcanoes when \"All Volcanoes\" is checked\n    color = 'black';\n  } else if (isRecent) {\n    fillColor = '#ff4444'; // Red for recent eruptions\n    color = '#ff0000';\n  } else if (is1900s) {\n    fillColor = '#ffaa66'; // Orange for 1900s eruptions\n    color = '#ff8000';\n  } else {\n    fillColor = '#cccccc'; // Grey for other/unknown eruptions when not \"All Volcanoes\"\n    color = '#999999';\n  }\n\n  return {\n    fillColor: fillColor,\n    color: color,\n    fillOpacity: 0.8,\n    weight: 1,\n  };\n}\n\n// ============================================================================\n// LAYER CREATION FUNCTIONS\n// ============================================================================\n\n/**\n * Creates a Leaflet GeoJSON layer with triangle markers for volcanoes\n * Triangles scale dynamically with zoom level to maintain consistent visual size\n * @param {Array} volcanoFeatures - Array of volcano GeoJSON features\n * @param {boolean} isAllVisible - Whether \"All Volcanoes\" filter is active\n * @returns {L.GeoJSON} Leaflet GeoJSON layer with styled volcano markers\n */\nfunction createVolcanoLayer(volcanoFeatures, isAllVisible) {\n  return L.geoJSON({ type: \"FeatureCollection\", features: volcanoFeatures }, {\n    pointToLayer: (feature, latlng) => {\n      const style = getVolcanoStyle(feature.properties.last_eruption, isAllVisible);\n      \n      // Calculate triangle size based on zoom level\n      const baseSize = 10; // Base size at zoom level 2 (global view)\n      const currentZoom = props.mapInstance?.getZoom() || 2;\n      \n      // Calculate size based on zoom level (inverse relationship)\n      // This makes the icon appear the same size regardless of zoom\n      const triangleSize = baseSize / Math.pow(1.5, currentZoom - 2);\n      \n      // Minimum size to prevent icons from becoming too small\n      const minSize = 5;\n      const finalSize = Math.max(triangleSize, minSize);\n\n      // Create triangle coordinates relative to the volcano position\n      const triangleLatLngs = [\n        [latlng.lat + 0.3 * (finalSize/5), latlng.lng],             // Apex\n        [latlng.lat - 0.3 * (finalSize/5), latlng.lng - 0.3 * (finalSize/5)], // Bottom Left\n        [latlng.lat - 0.3 * (finalSize/5), latlng.lng + 0.3 * (finalSize/5)]  // Bottom Right\n      ];\n\n      return L.polygon(triangleLatLngs, {\n        fillColor: style.fillColor,\n        color: style.color,\n        fillOpacity: style.fillOpacity,\n        weight: style.weight\n      });\n    },\n    onEachFeature: (feature, layer) => {\n      // Add popup with volcano information\n      const props = feature.properties;\n      layer.bindPopup(`\n        <div class=\"volcano-popup\">\n          <h4>${props.name}</h4>\n          <p><strong>Country:</strong> ${props.country}</p>\n          <p><strong>Last known eruption:</strong> ${props.last_eruption}</p>\n          <p><strong>Elevation:</strong> ${props.elevation}m</p>\n          ${props.is_submarine ? '<p class=\"submarine\">SUBMARINE VOLCANO</p>' : ''}\n        </div>\n      `);\n    }\n  });\n}\n\n// ============================================================================\n// FILTERING FUNCTIONS\n// ============================================================================\n\n/**\n * Generic function to filter volcanoes by year range\n * @param {number} startYear - Start year of the range (inclusive)\n * @param {number} endYear - End year of the range (inclusive)\n * @returns {Array} Filtered array of volcano features\n */\nfunction filterVolcanoesByYearRange(startYear, endYear) {\n  return volcanoData.features.filter(feature => {\n    const lastEruption = feature.properties.last_eruption;\n    if (lastEruption === 'Unknown') {\n      return false;\n    }\n    const parts = lastEruption.split(' ');\n    let eruptionYear = parseInt(parts[0]);\n    const era = parts[1];\n    if (era === 'BCE') {\n      eruptionYear = -eruptionYear;\n    }\n    return eruptionYear >= startYear && eruptionYear <= endYear;\n  });\n}\n\n/**\n * Filter volcanoes that erupted recently (2000-current year)\n * @returns {Array} Array of recent volcano features\n */\nfunction filterVolcanoesRecent() {\n  const currentYear = new Date().getFullYear();\n  return filterVolcanoesByYearRange(2000, currentYear);\n}\n\n/**\n * Filter volcanoes that erupted in the 1900s (1900-1999)\n * @returns {Array} Array of 1900s volcano features\n */\nfunction filterVolcanoes1900s() {\n  return filterVolcanoesByYearRange(1900, 1999);\n}\n\n/**\n * Return all volcano features without filtering\n * @returns {Array} All volcano features\n */\nfunction showAllVolcanoes() {\n  return volcanoData.features;\n}\n\n// ============================================================================\n// ZOOM HANDLING FUNCTIONS\n// ============================================================================\n\n/**\n * Updates volcano triangle sizes when the map zoom level changes\n * Maintains consistent visual size across different zoom levels\n */\nfunction updateVolcanoIconSizes() {\n  if (!volcanoLayer.value || !props.mapInstance) return;\n  const currentZoom = props.mapInstance.getZoom();\n\n  volcanoLayer.value.eachLayer(layer => {\n    if (layer instanceof L.Polygon) {\n      // Store original coordinates if not already stored\n      if (!layer.originalLatLngs) {\n        layer.originalLatLngs = layer.getLatLngs()[0].map(point => \n          L.latLng(point.lat, point.lng)\n        );\n        const bounds = L.latLngBounds(layer.originalLatLngs);\n        layer.center = bounds.getCenter();\n      }\n\n      // Get updated style based on current visibility settings\n      const style = getVolcanoStyle(layer.feature?.properties.last_eruption, isAllVolcanoesVisible.value);\n\n      // Calculate scale factor based on zoom level\n      let scale;\n      if (currentZoom <= 5) {\n        scale = 2.5 - (currentZoom - 2) * 0.35;\n      } else if (currentZoom <= 9) {\n        const exponent = currentZoom - 5;\n        scale = 1.6 * Math.pow(0.45, exponent);\n      } else {\n        scale = 0.03 * Math.pow(0.5, currentZoom - 10);\n      }\n\n      // Ensure minimum scale to keep triangles visible\n      scale = Math.max(scale, 0.005);\n\n      // Apply scaling to triangle coordinates\n      const scaledLatLngs = layer.originalLatLngs.map(point => {\n        const latOffset = point.lat - layer.center.lat;\n        const lngOffset = point.lng - layer.center.lng;\n        return L.latLng(\n          layer.center.lat + latOffset * scale,\n          layer.center.lng + lngOffset * scale\n        );\n      });\n\n      // Update layer with new coordinates and style\n      layer.setLatLngs([scaledLatLngs]);\n      layer.setStyle(style);\n    }\n  });\n}\n\n// ============================================================================\n// MAIN FILTER TOGGLE FUNCTION\n// ============================================================================\n\n/**\n * Main function that handles filter changes and updates the map layer\n * Combines selected filters and recreates the volcano layer accordingly\n */\nfunction toggleVolcanoFilter() {\n  let filteredFeatures = [];\n\n  requestAnimationFrame(() => {\n  // Combine features from selected filters\n  if (isRecentVolcanoesVisible.value) {\n    filteredFeatures = filteredFeatures.concat(filterVolcanoesRecent());\n  }\n  if (is1900sVolcanoesVisible.value) {\n    filteredFeatures = filteredFeatures.concat(filterVolcanoes1900s());\n  }\n  if (isAllVolcanoesVisible.value) {\n    filteredFeatures = showAllVolcanoes();\n  } else if (!isRecentVolcanoesVisible.value && !is1900sVolcanoesVisible.value) {\n    filteredFeatures = [];\n  }\n\n  // Remove existing layer if present\n  if (volcanoLayer.value) {\n    props.mapInstance.removeLayer(volcanoLayer.value);\n  }\n\n  // Create and add new layer if features are selected\n  if (filteredFeatures.length > 0) {\n    volcanoLayer.value = createVolcanoLayer(filteredFeatures, isAllVolcanoesVisible.value);\n    volcanoLayer.value.addTo(props.mapInstance);\n    props.mapInstance.on('zoomend', updateVolcanoIconSizes);\n    updateVolcanoIconSizes();\n  } else {\n    volcanoLayer.value = null;\n    props.mapInstance.off('zoomend', updateVolcanoIconSizes);\n  }\n  });\n}\n\n// ============================================================================\n// LAYER ACTIVATION/DEACTIVATION HANDLERS\n// ============================================================================\n\n/**\n * Handler called when the volcano layer is activated\n * Sets up initial layer state and displays recent volcanoes by default\n */\nfunction onVolcanoLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  \n  if (!isVolcanoActive.value) {\n    if (!volcanoData?.features?.length) {\n      return;\n    }\n\n    // Initially show recent volcanoes\n    const recentVolcanoes = filterVolcanoesRecent();\n    volcanoLayer.value = createVolcanoLayer(recentVolcanoes, isAllVolcanoesVisible.value);\n    volcanoLayer.value.addTo(props.mapInstance);\n    isVolcanoActive.value = true;\n\n    // Calculate bounds based on ALL volcano data for initial view\n    const coordinates = volcanoData.features\n      .map(f => f.geometry.coordinates)\n      .filter(coord => coord.length === 2);\n    \n    if (coordinates.length > 0) {\n      const bounds = L.latLngBounds(\n        coordinates.map(coord => [coord[1], coord[0]])\n      );\n    }\n\n    toggleVolcanoFilter();\n  }\n}\n\n/**\n * Handler called when the volcano layer is deactivated\n * Cleans up the layer and removes event listeners\n */\nfunction onVolcanoLayerDeactivated() {\n  if (isVolcanoActive.value && volcanoLayer.value) {\n    props.mapInstance.removeLayer(volcanoLayer.value);\n    props.mapInstance.off('zoomend', updateVolcanoIconSizes);\n    volcanoLayer.value = null;\n    isVolcanoActive.value = false;\n  }\n}\n\n// ============================================================================\n// COMPONENT EXPORTS\n// ============================================================================\n\n// Expose functions to parent component\ndefineExpose({\n  onVolcanoLayerActivated,\n  onVolcanoLayerDeactivated,\n  isVolcanoActive\n});\n</script>","import script from \"./VolcanoLayer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VolcanoLayer.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"map-popup\"\n}\nconst _hoisted_2 = { class: \"popup-content\" }\nconst _hoisted_3 = { class: \"legend-grid\" }\nconst _hoisted_4 = { class: \"legend-item\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#de2512\"}\n}, null, -1)\nconst _hoisted_6 = { class: \"legend-text\" }\nconst _hoisted_7 = { class: \"legend-item\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#ff8c26\"}\n}, null, -1)\nconst _hoisted_9 = { class: \"legend-text\" }\nconst _hoisted_10 = { class: \"legend-item\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#f0cd41\"}\n}, null, -1)\nconst _hoisted_12 = { class: \"legend-text\" }\nconst _hoisted_13 = { class: \"legend-item\" }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#188c49\"}\n}, null, -1)\nconst _hoisted_15 = { class: \"legend-text\" }\nconst _hoisted_16 = { class: \"legend-item\" }\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#40de83\"}\n}, null, -1)\nconst _hoisted_18 = { class: \"legend-text\" }\nconst _hoisted_19 = { class: \"legend-item\" }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#808080\"}\n}, null, -1)\nconst _hoisted_21 = { class: \"legend-text\" }\n\nimport { ref, computed } from 'vue';\nimport { useDataCablesStore } from '@/store/datacables';\nimport translations from \"@/assets/translations/translations.json\";\n\n// ==============================================\n// COMPONENT PROPS\n// ==============================================\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CableAgeLayer',\n  props: {\n  currentLanguage: {\n    type: String,\n    required: true\n  }\n},\n  setup(__props, { expose: __expose }) {\n\nconst props = __props;\n\n// ==============================================\n// STORE & STATE\n// ==============================================\n\nconst cableStore = useDataCablesStore();\nconst isActive = ref(false);  // Tracks if the cable age layer is active\nconst originalCableColors = ref<Record<string, string>>({});  // Stores original cable colors\n\n// ==============================================\n// COMPUTED PROPERTIES\n// ==============================================\n\n/**\nGets translations for the current language\n */\nconst currentTranslations = computed(() => {\n  return translations[props.currentLanguage] || translations.ENGLISH;\n});\n\n// ==============================================\n// CABLE COLOR MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nStores the original colors of all cables before applying age-based coloring\n */\nfunction storeOriginalCableColors() {\n  cableStore.dataCables.forEach((cable) => {\n    if (!originalCableColors.value[cable.name]) {\n      originalCableColors.value[cable.name] = cable.color || \"#000000\";\n    }\n  });\n}\n\n/**\nRestores the original colors of all cables\n */\nfunction restoreOriginalCableColors() {\n  cableStore.dataCables.forEach((cable) => {\n    cable.color = originalCableColors.value[cable.name] || \"#000000\";\n  });\n}\n\n/**\nApplies color coding to cables based on their age (RFS year)\n */\nfunction applyCableColorsByAge() {\n  const currentYear = new Date().getFullYear();\n\n  cableStore.dataCables.forEach((cable) => {\n    const rfsYear = new Date(cable.readyForService).getFullYear();\n\n    if (isNaN(rfsYear)) {\n      console.error(`Invalid RFS date: ${cable.readyForService}`);\n      return;\n    }\n\n    const cableAge = currentYear - rfsYear;\n\n    // Apply color based on cable age\n    if (cableAge > 20) {\n      cable.color = \"#DE2512\"; // Red (oldest cables)\n    } else if (cableAge >= 16) {\n      cable.color = \"#FF8C26\"; // Orange (16-20 years)\n    } else if (cableAge >= 11) {\n      cable.color = \"#F0CD41\"; // Yellow (11-15 years)\n    } else if (cableAge >= 6) {\n      cable.color = \"#188c49\"; // Darker green (6-10 years)\n    } else if (cableAge >= 0) {\n      cable.color = \"#40DE83\"; // Green (0-5 years)\n    } else {\n      cable.color = \"#808080\"; // Grey (future RFS)\n    }\n  });\n}\n\n// ==============================================\n// LAYER CONTROL FUNCTIONS\n// ==============================================\n\n/**\nActivates the cable age layer\n- Stores original colors\n- Applies age-based coloring\n- Shows the legend\n */\nfunction activateCableAgeLayer() {\n  isActive.value = true;\n  storeOriginalCableColors();\n  applyCableColorsByAge();\n}\n\n/**\nDeactivates the cable age layer\n- Restores original colors\n- Hides the legend\n */\nfunction deactivateCableAgeLayer() {\n  isActive.value = false;\n  restoreOriginalCableColors();\n}\n\n// ==============================================\n// COMPONENT EXPOSURES\n// ==============================================\n\n__expose({\n  activateCableAgeLayer,\n  deactivateCableAgeLayer\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (isActive.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"h3\", null, _toDisplayString(currentTranslations.value.cableAgeTitle), 1),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", _hoisted_4, [\n              _hoisted_5,\n              _createElementVNode(\"span\", _hoisted_6, _toDisplayString(currentTranslations.value.cableAge20Plus), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_7, [\n              _hoisted_8,\n              _createElementVNode(\"span\", _hoisted_9, _toDisplayString(currentTranslations.value.cableAge16to20), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_10, [\n              _hoisted_11,\n              _createElementVNode(\"span\", _hoisted_12, _toDisplayString(currentTranslations.value.cableAge11to15), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_13, [\n              _hoisted_14,\n              _createElementVNode(\"span\", _hoisted_15, _toDisplayString(currentTranslations.value.cableAge6to10), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_16, [\n              _hoisted_17,\n              _createElementVNode(\"span\", _hoisted_18, _toDisplayString(currentTranslations.value.cableAge0to5), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_19, [\n              _hoisted_20,\n              _createElementVNode(\"span\", _hoisted_21, _toDisplayString(currentTranslations.value.cableAgeFuture), 1)\n            ])\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<!--\nCableAgeLayer.vue - Component for visualizing submarine cable ages through color coding\n\nFeatures:\n- Displays a legend showing cable age color coding\n- Applies color coding to cables based on their Ready For Service (RFS) year\n- Stores and restores original cable colors when toggling the layer\n- Supports multiple languages through translations\n- Provides activation/deactivation methods for parent components\n-->\n\n<template>\n  <!-- Cable Age Layer Legend Popup -->\n  <div v-if=\"isActive\" class=\"map-popup\">\n    <h3>{{ currentTranslations.cableAgeTitle }}</h3>\n    <div class=\"popup-content\">\n      <div class=\"legend-grid\">\n        <div class=\"legend-item\">\n          <span class=\"color-box\" style=\"background-color: #de2512\"></span>\n          <span class=\"legend-text\">{{ currentTranslations.cableAge20Plus }}</span>\n        </div>\n        <div class=\"legend-item\">\n          <span class=\"color-box\" style=\"background-color: #ff8c26\"></span>\n          <span class=\"legend-text\">{{ currentTranslations.cableAge16to20 }}</span>\n        </div>\n        <div class=\"legend-item\">\n          <span class=\"color-box\" style=\"background-color: #f0cd41\"></span>\n          <span class=\"legend-text\">{{ currentTranslations.cableAge11to15 }}</span>\n        </div>\n        <div class=\"legend-item\">\n          <span class=\"color-box\" style=\"background-color: #188c49\"></span>\n          <span class=\"legend-text\">{{ currentTranslations.cableAge6to10 }}</span>\n        </div>\n        <div class=\"legend-item\">\n          <span class=\"color-box\" style=\"background-color: #40de83\"></span>\n          <span class=\"legend-text\">{{ currentTranslations.cableAge0to5 }}</span>\n        </div>\n        <div class=\"legend-item\">\n          <span class=\"color-box\" style=\"background-color: #808080\"></span>\n          <span class=\"legend-text\">{{ currentTranslations.cableAgeFuture }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport { useDataCablesStore } from '@/store/datacables';\nimport translations from \"@/assets/translations/translations.json\";\n\n// ==============================================\n// COMPONENT PROPS\n// ==============================================\n\nconst props = defineProps({\n  currentLanguage: {\n    type: String,\n    required: true\n  }\n});\n\n// ==============================================\n// STORE & STATE\n// ==============================================\n\nconst cableStore = useDataCablesStore();\nconst isActive = ref(false);  // Tracks if the cable age layer is active\nconst originalCableColors = ref<Record<string, string>>({});  // Stores original cable colors\n\n// ==============================================\n// COMPUTED PROPERTIES\n// ==============================================\n\n/**\nGets translations for the current language\n */\nconst currentTranslations = computed(() => {\n  return translations[props.currentLanguage] || translations.ENGLISH;\n});\n\n// ==============================================\n// CABLE COLOR MANAGEMENT FUNCTIONS\n// ==============================================\n\n/**\nStores the original colors of all cables before applying age-based coloring\n */\nfunction storeOriginalCableColors() {\n  cableStore.dataCables.forEach((cable) => {\n    if (!originalCableColors.value[cable.name]) {\n      originalCableColors.value[cable.name] = cable.color || \"#000000\";\n    }\n  });\n}\n\n/**\nRestores the original colors of all cables\n */\nfunction restoreOriginalCableColors() {\n  cableStore.dataCables.forEach((cable) => {\n    cable.color = originalCableColors.value[cable.name] || \"#000000\";\n  });\n}\n\n/**\nApplies color coding to cables based on their age (RFS year)\n */\nfunction applyCableColorsByAge() {\n  const currentYear = new Date().getFullYear();\n\n  cableStore.dataCables.forEach((cable) => {\n    const rfsYear = new Date(cable.readyForService).getFullYear();\n\n    if (isNaN(rfsYear)) {\n      console.error(`Invalid RFS date: ${cable.readyForService}`);\n      return;\n    }\n\n    const cableAge = currentYear - rfsYear;\n\n    // Apply color based on cable age\n    if (cableAge > 20) {\n      cable.color = \"#DE2512\"; // Red (oldest cables)\n    } else if (cableAge >= 16) {\n      cable.color = \"#FF8C26\"; // Orange (16-20 years)\n    } else if (cableAge >= 11) {\n      cable.color = \"#F0CD41\"; // Yellow (11-15 years)\n    } else if (cableAge >= 6) {\n      cable.color = \"#188c49\"; // Darker green (6-10 years)\n    } else if (cableAge >= 0) {\n      cable.color = \"#40DE83\"; // Green (0-5 years)\n    } else {\n      cable.color = \"#808080\"; // Grey (future RFS)\n    }\n  });\n}\n\n// ==============================================\n// LAYER CONTROL FUNCTIONS\n// ==============================================\n\n/**\nActivates the cable age layer\n- Stores original colors\n- Applies age-based coloring\n- Shows the legend\n */\nfunction activateCableAgeLayer() {\n  isActive.value = true;\n  storeOriginalCableColors();\n  applyCableColorsByAge();\n}\n\n/**\nDeactivates the cable age layer\n- Restores original colors\n- Hides the legend\n */\nfunction deactivateCableAgeLayer() {\n  isActive.value = false;\n  restoreOriginalCableColors();\n}\n\n// ==============================================\n// COMPONENT EXPOSURES\n// ==============================================\n\ndefineExpose({\n  activateCableAgeLayer,\n  deactivateCableAgeLayer\n});\n</script>","import script from \"./CableAgeLayer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CableAgeLayer.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-77a4ed40\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"map-popup distance-popup\"\n}\nconst _hoisted_2 = { class: \"popup-content\" }\nconst _hoisted_3 = { class: \"legend-grid\" }\nconst _hoisted_4 = { class: \"legend-item\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#6DAED4\"}\n}, null, -1))\nconst _hoisted_6 = { class: \"legend-text\" }\nconst _hoisted_7 = { class: \"legend-item\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#A3D39C\"}\n}, null, -1))\nconst _hoisted_9 = { class: \"legend-text\" }\nconst _hoisted_10 = { class: \"legend-item\" }\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#FFE08A\"}\n}, null, -1))\nconst _hoisted_12 = { class: \"legend-text\" }\nconst _hoisted_13 = { class: \"legend-item\" }\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#FDB366\"}\n}, null, -1))\nconst _hoisted_15 = { class: \"legend-text\" }\nconst _hoisted_16 = { class: \"legend-item\" }\nconst _hoisted_17 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#F67E4F\"}\n}, null, -1))\nconst _hoisted_18 = { class: \"legend-text\" }\nconst _hoisted_19 = { class: \"legend-item\" }\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#E8453C\"}\n}, null, -1))\nconst _hoisted_21 = { class: \"legend-text\" }\nconst _hoisted_22 = { class: \"legend-item\" }\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#B50A2A\"}\n}, null, -1))\nconst _hoisted_24 = { class: \"legend-text\" }\nconst _hoisted_25 = { class: \"legend-item\" }\nconst _hoisted_26 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#67001D\"}\n}, null, -1))\nconst _hoisted_27 = { class: \"legend-text\" }\nconst _hoisted_28 = { class: \"progress-container\" }\nconst _hoisted_29 = {\n  key: 0,\n  class: \"progress-bar\"\n}\nconst _hoisted_30 = { class: \"progress-text\" }\n\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport L from 'leaflet';\nimport type { FeatureCollection } from 'geojson';\nimport oceanCellsData from '@/assets/global_ocean_cells.json';\n\n// ==============================================\n// COMPONENT PROPS\n// ==============================================\n\nconst GRID_SIZE = 10; // degrees\nconst RENDER_BATCH_SIZE = 100; // Render features in batches\nconst RENDER_DELAY = 16; // ~60fps\nconst MIN_ZOOM_LEVEL = 4; // Don't render at very low zoom\nconst MAX_DISTANCE = 3001;\n\n// Pre-process and spatially index ocean cells\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DistanceToShips',\n  props: {\nvesselPositions: {\n  type: Array,\n  required: false\n},\ncurrentTranslations: {\n  type: Object,\n  required: false\n},\nmapInstance: {\n  type: Object,\n  required: false\n},\nriskLayersToggleRef: Object\n},\n  setup(__props, { expose: __expose }) {\n\nconst props = __props;\n\n// ==============================================\n// REACTIVE STATE\n// ==============================================\n\nconst distanceGridPolygonLayer = ref(null);\nconst distanceGridActive = ref(false);\nconst isCalculating = ref(false);\nconst calculationProgress = ref(0);\nconst calculationWorker = ref(null);\nconst renderQueue = ref([]);\nconst isRendering = ref(false);\n\n// ==============================================\n// CONSTANTS & OPTIMIZATIONS\n// ==============================================\n\n// Spatial indexing for faster lookups\nconst spatialIndex = new Map();\n\n// Performance settings\nconst processedOceanCells = (() => {\nconst processed = oceanCellsData.map(cell => {\n  const [centerLon, centerLat] = cell.center;\n  return {\n    ...cell,\n    centerLat,\n    centerLon,\n    cosLat: Math.cos(centerLat * Math.PI / 180)\n  };\n});\n\n// Build spatial index\nprocessed.forEach(cell => {\n  const gridX = Math.floor(cell.centerLon / GRID_SIZE);\n  const gridY = Math.floor(cell.centerLat / GRID_SIZE);\n  const key = `${gridX},${gridY}`;\n  \n  if (!spatialIndex.has(key)) {\n    spatialIndex.set(key, []);\n  }\n  spatialIndex.get(key).push(cell);\n});\n\nreturn processed;\n})();\n\n// ==============================================\n// UTILITY FUNCTIONS\n// ==============================================\n\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\nconst R = 6371;\nconst dLat = (lat2 - lat1) * Math.PI / 180;\nconst dLon = (lon2 - lon1) * Math.PI / 180;\n\nconst a =\n  Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n  Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\n  Math.sin(dLon / 2) * Math.sin(dLon / 2);\nconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\nreturn R * c;\n};\n\nconst getDistanceCategory = (distance) => {\nif (distance <= 100) return { category: \"<100km\", score: 0.1 };\nif (distance <= 500) return { category: \"100-500km\", score: 0.2 };\nif (distance <= 1000) return { category: \"500-1000km\", score: 0.35 };\nif (distance <= 1500) return { category: \"1000-1500km\", score: 0.5 };\nif (distance <= 2000) return { category: \"1500-2000km\", score: 0.65 };\nif (distance <= 2500) return { category: \"2000-2500km\", score: 0.8 };\nif (distance <= 3000) return { category: \"2500-3000km\", score: 0.9 };\nreturn { category: \">3000km\", score: 1.0 };\n};\n\n// ==============================================\n// WEB WORKER FOR CALCULATIONS\n// ==============================================\n\nconst createWorker = () => {\nconst workerScript = `\n  self.onmessage = function(e) {\n    const { cells, vessels, chunkIndex, totalChunks } = e.data;\n    const results = new Map();\n    \n    // Process this chunk of cells\n    cells.forEach(cell => {\n      let minDistance = Infinity;\n      \n      vessels.forEach(vessel => {\n        // Quick bounding box check\n        if (Math.abs(vessel.lat - cell.centerLat) > 27 || \n            Math.abs(vessel.lon - cell.centerLon) > 27) {\n          return;\n        }\n        \n        // Calculate distance\n        const R = 6371;\n        const dLat = (vessel.lat - cell.centerLat) * Math.PI / 180;\n        const dLon = (vessel.lon - cell.centerLon) * Math.PI / 180;\n        \n        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.cos(cell.centerLat * Math.PI / 180) * Math.cos(vessel.lat * Math.PI / 180) *\n          Math.sin(dLon / 2) * Math.sin(dLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = R * c;\n        \n        if (distance < minDistance) {\n          minDistance = distance;\n        }\n      });\n      \n      results.set(cell.cell_id, minDistance === Infinity ? 3001 : minDistance);\n    });\n    \n    self.postMessage({\n      chunkIndex,\n      results: Array.from(results.entries()),\n      progress: ((chunkIndex + 1) / totalChunks) * 100\n    });\n  };\n`;\n\nconst blob = new Blob([workerScript], { type: 'application/javascript' });\nreturn new Worker(URL.createObjectURL(blob));\n};\n\n// ==============================================\n// OPTIMIZED DISTANCE CALCULATION\n// ==============================================\n\nconst calculateDistancesAsync = async (vesselPositions) => {\nreturn new Promise((resolve, reject) => {\n  const validVessels = vesselPositions.filter(vessel => \n    vessel?.position?.lat && vessel?.position?.lon\n  ).map(vessel => ({\n    lat: vessel.position.lat,\n    lon: vessel.position.lon\n  }));\n\n  if (validVessels.length === 0) {\n    resolve(new Map());\n    return;\n  }\n\n  calculationWorker.value = createWorker();\n  const cellDistances = new Map();\n  const CHUNK_SIZE = 500; // Smaller chunks for better progress updates\n  const chunks = [];\n  \n  // Create chunks\n  for (let i = 0; i < processedOceanCells.length; i += CHUNK_SIZE) {\n    chunks.push(processedOceanCells.slice(i, i + CHUNK_SIZE));\n  }\n\n  let completedChunks = 0;\n  calculationProgress.value = 0;\n\n  calculationWorker.value.onmessage = (e) => {\n    const { results, progress } = e.data;\n    \n    // Merge results\n    results.forEach(([cellId, distance]) => {\n      if (!cellDistances.has(cellId) || distance < cellDistances.get(cellId)) {\n        cellDistances.set(cellId, distance);\n      }\n    });\n\n    completedChunks++;\n    calculationProgress.value = progress;\n\n    if (completedChunks === chunks.length) {\n      calculationWorker.value.terminate();\n      calculationWorker.value = null;\n      resolve(cellDistances);\n    }\n  };\n\n  calculationWorker.value.onerror = (error) => {\n    calculationWorker.value?.terminate();\n    calculationWorker.value = null;\n    reject(error);\n  };\n\n  // Send chunks to worker\n  chunks.forEach((chunk, index) => {\n    calculationWorker.value.postMessage({\n      cells: chunk,\n      vessels: validVessels,\n      chunkIndex: index,\n      totalChunks: chunks.length\n    });\n  });\n});\n};\n\n// ==============================================\n// OPTIMIZED RENDERING\n// ==============================================\n\nconst renderBatch = async () => {\nif (isRendering.value || renderQueue.value.length === 0) return;\n\nisRendering.value = true;\nconst batch = renderQueue.value.splice(0, RENDER_BATCH_SIZE);\n\n// Create features for this batch\nconst features = batch.map(cell => {\n  const { category, score } = getDistanceCategory(cell.distance);\n  const [minLon, minLat, maxLon, maxLat] = cell.bounds;\n  \n  return {\n    type: \"Feature\",\n    properties: {\n      cell_id: cell.cell_id,\n      distance_km: cell.distance,\n      distance_category: category,\n      score: score\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [[\n        [minLon, maxLat],\n        [maxLon, maxLat],\n        [maxLon, minLat],\n        [minLon, minLat],\n        [minLon, maxLat]\n      ]]\n    }\n  };\n});\n\n// Add batch to layer\nif (distanceGridPolygonLayer.value && features.length > 0) {\n  const batchLayer = L.geoJSON({ type: \"FeatureCollection\", features }, {\n    style: (feature) => {\n      const colorMap = {\n        \"<100km\": \"#6DAED4\",\n        \"100-500km\": \"#A3D39C\",\n        \"500-1000km\": \"#FFE08A\",\n        \"1000-1500km\": \"#FDB366\",\n        \"1500-2000km\": \"#F67E4F\",\n        \"2000-2500km\": \"#E8453C\",\n        \"2500-3000km\": \"#B50A2A\",\n        \">3000km\": \"#67001D\"\n      };\n\n      return {\n        fillColor: colorMap[feature.properties.distance_category] || '#808080',\n        weight: 0.1, // Reduced weight for better performance\n        color: 'rgba(0,0,0,0.1)',\n        fillOpacity: 0.6\n      };\n    }\n  });\n\n  batchLayer.addTo(distanceGridPolygonLayer.value);\n}\n\nisRendering.value = false;\n\n// Continue rendering if there are more items\nif (renderQueue.value.length > 0) {\n  setTimeout(renderBatch, RENDER_DELAY);\n}\n};\n\nconst displayDistancePolygonGrid = async (vesselPositions) => {\nif (!props.mapInstance?.addLayer) return;\n\n// Check zoom level\nconst currentZoom = props.mapInstance.getZoom();\nif (currentZoom < MIN_ZOOM_LEVEL) {\n  console.warn(`Zoom level too low (${currentZoom}). Minimum required: ${MIN_ZOOM_LEVEL}`);\n  return;\n}\n\nisCalculating.value = true;\ncalculationProgress.value = 0;\n\ntry {\n  // Calculate distances asynchronously\n  const cellDistances = await calculateDistancesAsync(vesselPositions);\n\n  // Create layer group for efficient management\n  distanceGridPolygonLayer.value = L.layerGroup();\n  \n  // Prepare render queue with visible cells only\n  const mapBounds = props.mapInstance.getBounds();\n  renderQueue.value = processedOceanCells\n    .filter(cell => {\n      // Only include cells that are visible\n      return mapBounds.contains([cell.centerLat, cell.centerLon]);\n    })\n    .map(cell => ({\n      ...cell,\n      distance: cellDistances.get(cell.cell_id) || MAX_DISTANCE\n    }));\n\n  // Add layer to map\n  distanceGridPolygonLayer.value.addTo(props.mapInstance);\n  distanceGridPolygonLayer.value.bringToBack();\n\n  // Start batch rendering\n  renderBatch();\n\n} catch (error) {\n  console.error('Error calculating distances:', error);\n} finally {\n  isCalculating.value = false;\n  calculationProgress.value = 100;\n}\n};\n\n// ==============================================\n// LAYER MANAGEMENT WITH CLEANUP\n// ==============================================\n\nconst onDistancePolygonGridActivated = (vesselPositions) => {\ndisplayDistancePolygonGrid(vesselPositions);\n};\n\nconst onDistancePolygonGridDeactivated = () => {\n// Cancel any ongoing calculations\nif (calculationWorker.value) {\n  calculationWorker.value.terminate();\n  calculationWorker.value = null;\n}\n\n// Clear render queue\nrenderQueue.value = [];\nisRendering.value = false;\nisCalculating.value = false;\ncalculationProgress.value = 0;\n\n// Remove layer\nif (distanceGridPolygonLayer.value) {\n  distanceGridPolygonLayer.value.clearLayers();\n  distanceGridPolygonLayer.value.remove();\n  distanceGridPolygonLayer.value = null;\n}\n};\n\n// ==============================================\n// PUBLIC API\n// ==============================================\n\nconst activateDistancePolygonGridLayer = () => {\nif (!props.riskLayersToggleRef?.isManualToggle) return;\ndistanceGridActive.value = true;\nonDistancePolygonGridActivated(props.vesselPositions);\n};\n\nconst deactivateDistancePolygonGridLayer = () => {\ndistanceGridActive.value = false;\nonDistancePolygonGridDeactivated();\n};\n\n// ==============================================\n// LIFECYCLE HOOKS\n// ==============================================\n\nonUnmounted(() => {\nonDistancePolygonGridDeactivated();\n});\n\n// Expose public methods\n__expose({\nactivateDistancePolygonGridLayer,\ndeactivateDistancePolygonGridLayer,\ndistanceGridActive\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (distanceGridActive.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"h3\", null, _toDisplayString(__props.currentTranslations.cableRepairTimes), 1),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", _hoisted_4, [\n              _hoisted_5,\n              _createElementVNode(\"span\", _hoisted_6, _toDisplayString(__props.currentTranslations.repairUnder100km), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_7, [\n              _hoisted_8,\n              _createElementVNode(\"span\", _hoisted_9, _toDisplayString(__props.currentTranslations.repair100to500km), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_10, [\n              _hoisted_11,\n              _createElementVNode(\"span\", _hoisted_12, _toDisplayString(__props.currentTranslations.repair500to1000km), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_13, [\n              _hoisted_14,\n              _createElementVNode(\"span\", _hoisted_15, _toDisplayString(__props.currentTranslations.repair1000to1500km), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_16, [\n              _hoisted_17,\n              _createElementVNode(\"span\", _hoisted_18, _toDisplayString(__props.currentTranslations.repair1500to2000km), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_19, [\n              _hoisted_20,\n              _createElementVNode(\"span\", _hoisted_21, _toDisplayString(__props.currentTranslations.repair2000to2500km), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_22, [\n              _hoisted_23,\n              _createElementVNode(\"span\", _hoisted_24, _toDisplayString(__props.currentTranslations.repair2500to3000km), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_25, [\n              _hoisted_26,\n              _createElementVNode(\"span\", _hoisted_27, _toDisplayString(__props.currentTranslations.repairOver3000km), 1)\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_28, [\n            (isCalculating.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [\n                  _createElementVNode(\"div\", {\n                    class: \"progress-fill\",\n                    style: _normalizeStyle({ width: calculationProgress.value + '%' })\n                  }, null, 4),\n                  _createElementVNode(\"span\", _hoisted_30, _toDisplayString(Math.round(calculationProgress.value)) + \"%\", 1)\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\n  <!-- Distance Grid Popup -->\n  <div v-if=\"distanceGridActive\" class=\"map-popup distance-popup\">\n    <h3>{{ currentTranslations.cableRepairTimes }}</h3>\n    <div class=\"popup-content\">\n      <div class=\"legend-grid\">\n        <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#6DAED4\"></span><span class=\"legend-text\">{{ currentTranslations.repairUnder100km }}</span></div>\n        <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#A3D39C\"></span><span class=\"legend-text\">{{ currentTranslations.repair100to500km }}</span></div>\n        <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#FFE08A\"></span><span class=\"legend-text\">{{ currentTranslations.repair500to1000km }}</span></div>\n        <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#FDB366\"></span><span class=\"legend-text\">{{ currentTranslations.repair1000to1500km }}</span></div>\n        <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#F67E4F\"></span><span class=\"legend-text\">{{ currentTranslations.repair1500to2000km }}</span></div>\n        <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#E8453C\"></span><span class=\"legend-text\">{{ currentTranslations.repair2000to2500km }}</span></div>\n        <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#B50A2A\"></span><span class=\"legend-text\">{{ currentTranslations.repair2500to3000km }}</span></div>\n        <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#67001D\"></span><span class=\"legend-text\">{{ currentTranslations.repairOver3000km }}</span></div>\n      </div>\n      <div class=\"progress-container\">\n        <div v-if=\"isCalculating\" class=\"progress-bar\">\n          <div class=\"progress-fill\" :style=\"{ width: calculationProgress + '%' }\"></div>\n          <span class=\"progress-text\">{{ Math.round(calculationProgress) }}%</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport L from 'leaflet';\nimport type { FeatureCollection } from 'geojson';\nimport oceanCellsData from '@/assets/global_ocean_cells.json';\n\n// ==============================================\n// COMPONENT PROPS\n// ==============================================\n\nconst props = defineProps({\nvesselPositions: {\n  type: Array,\n  required: false\n},\ncurrentTranslations: {\n  type: Object,\n  required: false\n},\nmapInstance: {\n  type: Object,\n  required: false\n},\nriskLayersToggleRef: Object\n});\n\n// ==============================================\n// REACTIVE STATE\n// ==============================================\n\nconst distanceGridPolygonLayer = ref(null);\nconst distanceGridActive = ref(false);\nconst isCalculating = ref(false);\nconst calculationProgress = ref(0);\nconst calculationWorker = ref(null);\nconst renderQueue = ref([]);\nconst isRendering = ref(false);\n\n// ==============================================\n// CONSTANTS & OPTIMIZATIONS\n// ==============================================\n\n// Spatial indexing for faster lookups\nconst GRID_SIZE = 10; // degrees\nconst spatialIndex = new Map();\n\n// Performance settings\nconst RENDER_BATCH_SIZE = 100; // Render features in batches\nconst RENDER_DELAY = 16; // ~60fps\nconst MIN_ZOOM_LEVEL = 4; // Don't render at very low zoom\nconst MAX_DISTANCE = 3001;\n\n// Pre-process and spatially index ocean cells\nconst processedOceanCells = (() => {\nconst processed = oceanCellsData.map(cell => {\n  const [centerLon, centerLat] = cell.center;\n  return {\n    ...cell,\n    centerLat,\n    centerLon,\n    cosLat: Math.cos(centerLat * Math.PI / 180)\n  };\n});\n\n// Build spatial index\nprocessed.forEach(cell => {\n  const gridX = Math.floor(cell.centerLon / GRID_SIZE);\n  const gridY = Math.floor(cell.centerLat / GRID_SIZE);\n  const key = `${gridX},${gridY}`;\n  \n  if (!spatialIndex.has(key)) {\n    spatialIndex.set(key, []);\n  }\n  spatialIndex.get(key).push(cell);\n});\n\nreturn processed;\n})();\n\n// ==============================================\n// UTILITY FUNCTIONS\n// ==============================================\n\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\nconst R = 6371;\nconst dLat = (lat2 - lat1) * Math.PI / 180;\nconst dLon = (lon2 - lon1) * Math.PI / 180;\n\nconst a =\n  Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n  Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\n  Math.sin(dLon / 2) * Math.sin(dLon / 2);\nconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\nreturn R * c;\n};\n\nconst getDistanceCategory = (distance) => {\nif (distance <= 100) return { category: \"<100km\", score: 0.1 };\nif (distance <= 500) return { category: \"100-500km\", score: 0.2 };\nif (distance <= 1000) return { category: \"500-1000km\", score: 0.35 };\nif (distance <= 1500) return { category: \"1000-1500km\", score: 0.5 };\nif (distance <= 2000) return { category: \"1500-2000km\", score: 0.65 };\nif (distance <= 2500) return { category: \"2000-2500km\", score: 0.8 };\nif (distance <= 3000) return { category: \"2500-3000km\", score: 0.9 };\nreturn { category: \">3000km\", score: 1.0 };\n};\n\n// ==============================================\n// WEB WORKER FOR CALCULATIONS\n// ==============================================\n\nconst createWorker = () => {\nconst workerScript = `\n  self.onmessage = function(e) {\n    const { cells, vessels, chunkIndex, totalChunks } = e.data;\n    const results = new Map();\n    \n    // Process this chunk of cells\n    cells.forEach(cell => {\n      let minDistance = Infinity;\n      \n      vessels.forEach(vessel => {\n        // Quick bounding box check\n        if (Math.abs(vessel.lat - cell.centerLat) > 27 || \n            Math.abs(vessel.lon - cell.centerLon) > 27) {\n          return;\n        }\n        \n        // Calculate distance\n        const R = 6371;\n        const dLat = (vessel.lat - cell.centerLat) * Math.PI / 180;\n        const dLon = (vessel.lon - cell.centerLon) * Math.PI / 180;\n        \n        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.cos(cell.centerLat * Math.PI / 180) * Math.cos(vessel.lat * Math.PI / 180) *\n          Math.sin(dLon / 2) * Math.sin(dLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = R * c;\n        \n        if (distance < minDistance) {\n          minDistance = distance;\n        }\n      });\n      \n      results.set(cell.cell_id, minDistance === Infinity ? 3001 : minDistance);\n    });\n    \n    self.postMessage({\n      chunkIndex,\n      results: Array.from(results.entries()),\n      progress: ((chunkIndex + 1) / totalChunks) * 100\n    });\n  };\n`;\n\nconst blob = new Blob([workerScript], { type: 'application/javascript' });\nreturn new Worker(URL.createObjectURL(blob));\n};\n\n// ==============================================\n// OPTIMIZED DISTANCE CALCULATION\n// ==============================================\n\nconst calculateDistancesAsync = async (vesselPositions) => {\nreturn new Promise((resolve, reject) => {\n  const validVessels = vesselPositions.filter(vessel => \n    vessel?.position?.lat && vessel?.position?.lon\n  ).map(vessel => ({\n    lat: vessel.position.lat,\n    lon: vessel.position.lon\n  }));\n\n  if (validVessels.length === 0) {\n    resolve(new Map());\n    return;\n  }\n\n  calculationWorker.value = createWorker();\n  const cellDistances = new Map();\n  const CHUNK_SIZE = 500; // Smaller chunks for better progress updates\n  const chunks = [];\n  \n  // Create chunks\n  for (let i = 0; i < processedOceanCells.length; i += CHUNK_SIZE) {\n    chunks.push(processedOceanCells.slice(i, i + CHUNK_SIZE));\n  }\n\n  let completedChunks = 0;\n  calculationProgress.value = 0;\n\n  calculationWorker.value.onmessage = (e) => {\n    const { results, progress } = e.data;\n    \n    // Merge results\n    results.forEach(([cellId, distance]) => {\n      if (!cellDistances.has(cellId) || distance < cellDistances.get(cellId)) {\n        cellDistances.set(cellId, distance);\n      }\n    });\n\n    completedChunks++;\n    calculationProgress.value = progress;\n\n    if (completedChunks === chunks.length) {\n      calculationWorker.value.terminate();\n      calculationWorker.value = null;\n      resolve(cellDistances);\n    }\n  };\n\n  calculationWorker.value.onerror = (error) => {\n    calculationWorker.value?.terminate();\n    calculationWorker.value = null;\n    reject(error);\n  };\n\n  // Send chunks to worker\n  chunks.forEach((chunk, index) => {\n    calculationWorker.value.postMessage({\n      cells: chunk,\n      vessels: validVessels,\n      chunkIndex: index,\n      totalChunks: chunks.length\n    });\n  });\n});\n};\n\n// ==============================================\n// OPTIMIZED RENDERING\n// ==============================================\n\nconst renderBatch = async () => {\nif (isRendering.value || renderQueue.value.length === 0) return;\n\nisRendering.value = true;\nconst batch = renderQueue.value.splice(0, RENDER_BATCH_SIZE);\n\n// Create features for this batch\nconst features = batch.map(cell => {\n  const { category, score } = getDistanceCategory(cell.distance);\n  const [minLon, minLat, maxLon, maxLat] = cell.bounds;\n  \n  return {\n    type: \"Feature\",\n    properties: {\n      cell_id: cell.cell_id,\n      distance_km: cell.distance,\n      distance_category: category,\n      score: score\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [[\n        [minLon, maxLat],\n        [maxLon, maxLat],\n        [maxLon, minLat],\n        [minLon, minLat],\n        [minLon, maxLat]\n      ]]\n    }\n  };\n});\n\n// Add batch to layer\nif (distanceGridPolygonLayer.value && features.length > 0) {\n  const batchLayer = L.geoJSON({ type: \"FeatureCollection\", features }, {\n    style: (feature) => {\n      const colorMap = {\n        \"<100km\": \"#6DAED4\",\n        \"100-500km\": \"#A3D39C\",\n        \"500-1000km\": \"#FFE08A\",\n        \"1000-1500km\": \"#FDB366\",\n        \"1500-2000km\": \"#F67E4F\",\n        \"2000-2500km\": \"#E8453C\",\n        \"2500-3000km\": \"#B50A2A\",\n        \">3000km\": \"#67001D\"\n      };\n\n      return {\n        fillColor: colorMap[feature.properties.distance_category] || '#808080',\n        weight: 0.1, // Reduced weight for better performance\n        color: 'rgba(0,0,0,0.1)',\n        fillOpacity: 0.6\n      };\n    }\n  });\n\n  batchLayer.addTo(distanceGridPolygonLayer.value);\n}\n\nisRendering.value = false;\n\n// Continue rendering if there are more items\nif (renderQueue.value.length > 0) {\n  setTimeout(renderBatch, RENDER_DELAY);\n}\n};\n\nconst displayDistancePolygonGrid = async (vesselPositions) => {\nif (!props.mapInstance?.addLayer) return;\n\n// Check zoom level\nconst currentZoom = props.mapInstance.getZoom();\nif (currentZoom < MIN_ZOOM_LEVEL) {\n  console.warn(`Zoom level too low (${currentZoom}). Minimum required: ${MIN_ZOOM_LEVEL}`);\n  return;\n}\n\nisCalculating.value = true;\ncalculationProgress.value = 0;\n\ntry {\n  // Calculate distances asynchronously\n  const cellDistances = await calculateDistancesAsync(vesselPositions);\n\n  // Create layer group for efficient management\n  distanceGridPolygonLayer.value = L.layerGroup();\n  \n  // Prepare render queue with visible cells only\n  const mapBounds = props.mapInstance.getBounds();\n  renderQueue.value = processedOceanCells\n    .filter(cell => {\n      // Only include cells that are visible\n      return mapBounds.contains([cell.centerLat, cell.centerLon]);\n    })\n    .map(cell => ({\n      ...cell,\n      distance: cellDistances.get(cell.cell_id) || MAX_DISTANCE\n    }));\n\n  // Add layer to map\n  distanceGridPolygonLayer.value.addTo(props.mapInstance);\n  distanceGridPolygonLayer.value.bringToBack();\n\n  // Start batch rendering\n  renderBatch();\n\n} catch (error) {\n  console.error('Error calculating distances:', error);\n} finally {\n  isCalculating.value = false;\n  calculationProgress.value = 100;\n}\n};\n\n// ==============================================\n// LAYER MANAGEMENT WITH CLEANUP\n// ==============================================\n\nconst onDistancePolygonGridActivated = (vesselPositions) => {\ndisplayDistancePolygonGrid(vesselPositions);\n};\n\nconst onDistancePolygonGridDeactivated = () => {\n// Cancel any ongoing calculations\nif (calculationWorker.value) {\n  calculationWorker.value.terminate();\n  calculationWorker.value = null;\n}\n\n// Clear render queue\nrenderQueue.value = [];\nisRendering.value = false;\nisCalculating.value = false;\ncalculationProgress.value = 0;\n\n// Remove layer\nif (distanceGridPolygonLayer.value) {\n  distanceGridPolygonLayer.value.clearLayers();\n  distanceGridPolygonLayer.value.remove();\n  distanceGridPolygonLayer.value = null;\n}\n};\n\n// ==============================================\n// PUBLIC API\n// ==============================================\n\nconst activateDistancePolygonGridLayer = () => {\nif (!props.riskLayersToggleRef?.isManualToggle) return;\ndistanceGridActive.value = true;\nonDistancePolygonGridActivated(props.vesselPositions);\n};\n\nconst deactivateDistancePolygonGridLayer = () => {\ndistanceGridActive.value = false;\nonDistancePolygonGridDeactivated();\n};\n\n// ==============================================\n// LIFECYCLE HOOKS\n// ==============================================\n\nonUnmounted(() => {\nonDistancePolygonGridDeactivated();\n});\n\n// Expose public methods\ndefineExpose({\nactivateDistancePolygonGridLayer,\ndeactivateDistancePolygonGridLayer,\ndistanceGridActive\n});\n</script>\n\n<style scoped>\n/* Progress Bar */\n.progress-container {\nmargin-top: 10px;\n}\n\n.progress-bar {\nposition: relative;\nwidth: 100%;\nheight: 20px;\nbackground-color: #f0f0f0;\nborder-radius: 10px;\noverflow: hidden;\n}\n\n.progress-fill {\nheight: 100%;\nbackground: linear-gradient(90deg, #4CAF50, #8BC34A);\ntransition: width 0.3s ease;\nborder-radius: 10px;\n}\n\n.progress-text {\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nfont-size: 12px;\nfont-weight: bold;\ncolor: #333;\nz-index: 1;\n}\n</style>","import script from \"./DistanceToShips.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DistanceToShips.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./DistanceToShips.vue?vue&type=style&index=0&id=77a4ed40&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-77a4ed40\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"map-popup-container\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"map-popup\"\n}\nconst _hoisted_3 = { class: \"popup-content\" }\nconst _hoisted_4 = { class: \"legend-grid\" }\nconst _hoisted_5 = { class: \"legend-item\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#92ddfa\"}\n}, null, -1)\nconst _hoisted_7 = { class: \"legend-text\" }\nconst _hoisted_8 = { class: \"legend-item\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#f7f37c\"}\n}, null, -1)\nconst _hoisted_10 = { class: \"legend-text\" }\nconst _hoisted_11 = { class: \"legend-item\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#cfcc67\"}\n}, null, -1)\nconst _hoisted_13 = { class: \"legend-text\" }\nconst _hoisted_14 = { class: \"legend-item\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#dbb09f\"}\n}, null, -1)\nconst _hoisted_16 = { class: \"legend-text\" }\nconst _hoisted_17 = { class: \"legend-item\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"color-box\",\n  style: {\"background-color\":\"#7e0004\"}\n}, null, -1)\nconst _hoisted_19 = { class: \"legend-text\" }\n\nimport { ref, onMounted, watch, onBeforeUnmount, nextTick } from 'vue';\nimport {\n  LLayerGroup,\n  LTileLayer,\n  LGeoJson\n} from '@vue-leaflet/vue-leaflet';\nimport 'leaflet.heat';\nimport 'leaflet.vectorgrid';\n\n// Components\nimport RiskEuropeLayer from './EuropeanRiskMap.vue';\nimport GlobalRiskMap from './GlobalRiskMap.vue';\nimport VolcanoLayer from './VolcanoLayer.vue';\nimport CableAgeLayer from './CableAgeLayer.vue';\nimport DistanceToShips from './DistanceToShips.vue';\n\n// ======================\n// PROPS DEFINITION\n// ======================\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'RiskLayers',\n  props: {\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  riskLayersToggleRef: {\n    type: Object,\n    required: false\n  },\n  currentLanguage: {\n    type: String,\n    required: false\n  },\n  vesselPositions: {\n    type: Array,\n    required: false\n  },\n  fishingDataEurope: {\n    type: Object,\n    required: false\n  },\n  terrainDataChoroplethEurope: {\n    type: Object,\n    required: false\n  },\n  dredgingData: {\n    type: Object,\n    required: false\n  },\n  aggregatedSeismicData: {\n    type: Array,\n    required: false\n  },\n  anchorageRiskData: {\n    type: Object,\n    required: false\n  },\n  aggregatedFishingData: {\n    type: Array,\n    required: false\n  }\n},\n  setup(__props) {\n\nconst props = __props;\n\n// ======================\n// COMPONENT REFERENCES\n// ======================\nconst riskEuropeLayerRef = ref(null);\nconst globalRiskMapRef = ref(null);\nconst volcanoLayerRef = ref(null);\nconst cableAgeLayerRef = ref(null);\nconst distanceToShipsRef = ref(null);\n\n// ======================\n// LAYER VISIBILITY STATES\n// ======================\nconst isSeabedActive = ref(false);\nconst gmtdsLayerVisible = ref(false);\nconst seismicRiskLayerVisible = ref(false);\nconst anchorageLayerVisible = ref(false);\nconst fishingLayerVisible = ref(false);\nconst isShallowWatersLayerActive = ref(false);\n\n// ======================\n// LAYER INSTANCES & CACHES\n// ======================\nlet gmtdsWMSLayer = null;\nlet seismicRiskHeatmap = null;\nlet anchorageHeatmapLayer = null;\nlet dredgingRiskHeatmap = null;\nlet seabedLayer = null;\nlet fishingRiskHeatmap = null;\nlet shallowWatersLayers = [];\nconst imageCache = {};\nconst heatmapCache = new Map();\n\n// ======================\n// DATA WATCHERS\n// ======================\nwatch(() => props.aggregatedFishingData, (newData) => {\n  if (newData && newData.length > 0 && !heatmapCache.has('fishing')) {\n    // Process in background without blocking\n    processHeatmapInChunks(\n      newData, \n      'fishing',\n      { radius: 10, blur: 10, maxZoom: 10, max: 100 }\n    ).catch(err => console.error('Error processing fishing data:', err));\n  }\n}, { immediate: true });\n\nwatch(() => props.aggregatedSeismicData, (newData) => {\n  if (newData && newData.length > 0 && !heatmapCache.has('seismic')) {\n    // Process in background without blocking\n    processHeatmapInChunks(\n      newData,\n      'seismic', \n      { radius: 25, blur: 15, maxZoom: 10 }\n    ).catch(err => console.error('Error processing seismic data:', err));\n  }\n}, { immediate: true });\n\nwatch(() => props.anchorageRiskData, (newData) => {\n  if (newData?.features?.length > 0 && !heatmapCache.has('anchorage')) {\n    const heatmapData = newData.features\n      .filter(feature => feature.geometry?.coordinates)\n      .map(feature => {\n        const [longitude, latitude] = feature.geometry.coordinates;\n        return [latitude, longitude, 1];\n      });\n    \n    if (heatmapData.length > 0) {\n      // Process in background without blocking\n      processHeatmapInChunks(\n        heatmapData,\n        'anchorage',\n        { radius: 25, blur: 15, maxZoom: 13 }\n      ).catch(err => console.error('Error processing anchorage data:', err));\n    }\n  }\n}, { immediate: true });\n// ======================\n// LIFECYCLE HOOKS\n// ======================\nonMounted(() => {\n  // Use intersection observer to only preprocess when component is visible\n  nextTick(() => {\n    setTimeout(() => {\n      if ('IntersectionObserver' in window) {\n        const observer = new IntersectionObserver((entries) => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              preloadShallowWatersImages();\n              observer.disconnect();\n            }\n          });\n        });\n        \n        const target = document.querySelector('.risk-layers-container') || document.body;\n        observer.observe(target);\n      } else {\n        preloadShallowWatersImages();\n      }\n    }, 500); // Give map time to initialize\n  });\n});\nonBeforeUnmount(() => {\n  // Clean up all timeouts and intervals\n  debouncedOperations.forEach(timeoutId => clearTimeout(timeoutId));\n  debouncedOperations.clear();\n  \n  // Clear all cached layers\n  heatmapCache.forEach(layer => {\n    if (layer && props.mapInstance && props.mapInstance.hasLayer(layer)) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n  heatmapCache.clear();\n});\n// ======================\n// LAYER PRE-PROCESSING\n// ======================\n\nfunction processHeatmapInChunks(data, layerKey, options) {\n  return new Promise((resolve) => {\n    const CHUNK_SIZE = 1000;\n    const SAMPLE_RATE = 2; // Adjust this to control memory usage and rendering time\n\n    let processedData = [];\n    let currentIndex = 0;\n\n    function processChunk() {\n      const endIndex = Math.min(currentIndex + CHUNK_SIZE, data.length);\n\n      for (let i = currentIndex; i < endIndex; i++) {\n        // Sample every Nth item to reduce final size\n        if (i % SAMPLE_RATE === 0) {\n          processedData.push(data[i]);\n        }\n      }\n\n      currentIndex = endIndex;\n      if(currentIndex == 800000 || currentIndex == 1800000){\n        console.log(\"CURRENT INDEX: \", currentIndex);\n      }\n      if (currentIndex < data.length) {\n        setTimeout(processChunk, 0); // Yield to browser\n      } else {\n        const heatmapLayer = L.heatLayer(processedData, options);\n        heatmapCache.set(layerKey, heatmapLayer);\n        resolve();\n      }\n    }\n\n    setTimeout(processChunk, 200); // Initial delay for readiness\n  });\n}\n\n\n\n\nconst layerLoadingStates = ref({\n  fishing: false,\n  seismic: false,\n  anchorage: false,\n  gmtds: false\n});\n// ======================\n// MAIN RISK LAYERS GROUP HANDLERS\n// ======================\nfunction onRiskLayersActivated() {\n  const mapContainer = props.mapInstance._container;\n  mapContainer.classList.add('risk-layers-active');\n  \n  // Ensure all sub-layers are initially hidden (only non-component layers)\n  [ \n    gmtdsWMSLayer, \n    seismicRiskHeatmap, \n    anchorageHeatmapLayer, \n    dredgingRiskHeatmap,\n    seabedLayer, \n    fishingRiskHeatmap\n  ].forEach(layer => {\n    if (layer && props.mapInstance.hasLayer(layer)) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n\n  // Tell component-based layers to deactivate\n  if (volcanoLayerRef.value?.isVolcanoActive) {\n    volcanoLayerRef.value.onVolcanoLayerDeactivated();\n  }\n  \n  if (distanceToShipsRef.value?.distanceGridActive) {\n    distanceToShipsRef.value.deactivateDistancePolygonGridLayer();\n  }\n  \n  // Deactivate Cable Age layer through component if active\n  if (cableAgeLayerRef.value) {\n    cableAgeLayerRef.value.deactivateCableAgeLayer();\n  }\n  \n  // Deactivate European risk layers through child component\n  if (riskEuropeLayerRef.value) {\n    riskEuropeLayerRef.value.onCombinedRiskEuropeLayerGroupDeactivated();\n  }\n  \n  // Deactivate Global risk layers through child component\n  if (globalRiskMapRef.value) {\n    globalRiskMapRef.value.onCombinedRiskLayerGroupDeactivated();\n  }\n  \n  // Reset all layer visibility states for non-component layers\n  gmtdsLayerVisible.value = false;\n  seismicRiskLayerVisible.value = false;\n  anchorageLayerVisible.value = false;\n  isSeabedActive.value = false;\n  \n  if (props.riskLayersToggleRef) {\n    props.riskLayersToggleRef.show();\n  }\n}\n\nfunction onRiskLayersDeactivated() {\n  const mapContainer = props.mapInstance._container;\n  mapContainer.classList.remove('risk-layers-active');\n  if (props.riskLayersToggleRef) {\n    props.riskLayersToggleRef.hide();\n  }\n}\n\n// ======================\n// INDIVIDUAL LAYER HANDLERS\n// ======================\n\n// GMTDS (Shipping Density) Layer\nfunction onGMTDSLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  gmtdsLayerVisible.value = true;\n  \n  if (!gmtdsWMSLayer) {\n    gmtdsWMSLayer = L.tileLayer.wms('https://gmtds.maplarge.com/ogc/ais:density/wms?', {\n      layers: 'ais:density',\n      format: 'image/png',\n      transparent: true,\n      attribution: 'Traffic density data &copy; <a href=\"https://globalmaritimetraffic.org/gmtds-data.html\" target=\"_blank\">GMTDS</a>',\n      maxZoom: 12,\n      minZoom: 0,\n      crs: L.CRS.EPSG3857,\n      time: '2024-01-01T00:00:00Z'\n    }).addTo(props.mapInstance);\n  }\n}\n\nfunction onGMTDSLayerDeactivated() {\n  gmtdsLayerVisible.value = false;\n  if (gmtdsWMSLayer) {\n    props.mapInstance.removeLayer(gmtdsWMSLayer);\n    gmtdsWMSLayer = null;\n  }\n}\n\n// Seismic Risk Layer\nfunction onSeismicRiskLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  \n  debounceLayerOperation('seismic-activate', () => {\n    layerLoadingStates.value.seismic = true;\n    seismicRiskLayerVisible.value = true;\n\n    const cachedLayer = heatmapCache.get('seismic');\n    if (cachedLayer) {\n      nextTick(() => {\n        cachedLayer.addTo(props.mapInstance);\n        layerLoadingStates.value.seismic = false;\n      });\n      return;\n    }\n\n    if (!props.aggregatedSeismicData || props.aggregatedSeismicData.length === 0) {\n      layerLoadingStates.value.seismic = false;\n      return;\n    }\n\n    requestIdleCallback(() => {\n      seismicRiskHeatmap = L.heatLayer(props.aggregatedSeismicData, {\n        radius: 20,       // Reduced from 25\n        blur: 12,         // Reduced from 15\n        maxZoom: 10,\n        minOpacity: 0.2\n      });\n      \n      seismicRiskHeatmap.addTo(props.mapInstance);\n      heatmapCache.set('seismic', seismicRiskHeatmap);\n      layerLoadingStates.value.seismic = false;\n    }, { timeout: 1000 });\n  });\n}\n\nfunction onSeismicRiskLayerDeactivated() {\n  seismicRiskLayerVisible.value = false;\n  const cachedLayer = heatmapCache.get('seismic');\n  if (cachedLayer && props.mapInstance.hasLayer(cachedLayer)) {\n    props.mapInstance.removeLayer(cachedLayer);\n  }\n  if (seismicRiskHeatmap && props.mapInstance.hasLayer(seismicRiskHeatmap)) {\n    props.mapInstance.removeLayer(seismicRiskHeatmap);\n  }\n}\n\n// Seabed Substrate Layer\nfunction createSeabedSubstrateLayer() {\n  return L.tileLayer.wms('https://drive.emodnet-geology.eu/geoserver/gtk/wms?', {\n    layers: 'gtk:seabed_substrate_1m',\n    format: 'image/png',\n    transparent: true,\n    version: '1.1.1',\n    crs: L.CRS.EPSG3857\n  });\n}\n\nfunction onSeabedSubstrateLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  if (!isSeabedActive.value) {\n    seabedLayer = createSeabedSubstrateLayer();\n    seabedLayer.addTo(props.mapInstance);\n    isSeabedActive.value = true;\n  }\n}\n\nfunction onSeabedSubstrateLayerDeactivated() {\n  if (isSeabedActive.value && seabedLayer) {\n    props.mapInstance.removeLayer(seabedLayer);\n    isSeabedActive.value = false;\n  }\n}\n\n// Fishing Risk Layer\nfunction onFishingRiskLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  \n  layerLoadingStates.value.fishing = true;\n  fishingLayerVisible.value = true;\n  \n  // Use cached layer if available\n  const cachedLayer = heatmapCache.get('fishing');\n  if (cachedLayer) {\n    // Add layer in next tick to prevent blocking\n    nextTick(() => {\n      cachedLayer.addTo(props.mapInstance);\n      layerLoadingStates.value.fishing = false;\n    });\n    return;\n  }\n  \n  // Show loading indicator and create layer asynchronously\n  if (!props.aggregatedFishingData || props.aggregatedFishingData.length === 0) {\n    layerLoadingStates.value.fishing = false;\n    return;\n  }\n  \n  // Create layer with reduced complexity for better performance\n  requestIdleCallback(() => {\n    fishingRiskHeatmap = L.heatLayer(props.aggregatedFishingData, {\n      radius: 10,\n      blur: 10,\n      maxZoom: 10,\n      max: 100,\n    });\n    \n    fishingRiskHeatmap.addTo(props.mapInstance);\n    heatmapCache.set('fishing', fishingRiskHeatmap);\n    layerLoadingStates.value.fishing = false;\n  }, { timeout: 1000 });\n}\n\nfunction onFishingRiskLayerDeactivated() {\n  fishingLayerVisible.value = false;\n  const cachedLayer = heatmapCache.get('fishing');\n  if (cachedLayer && props.mapInstance.hasLayer(cachedLayer)) {\n    props.mapInstance.removeLayer(cachedLayer);\n  }\n  if (fishingRiskHeatmap && props.mapInstance.hasLayer(fishingRiskHeatmap)) {\n    props.mapInstance.removeLayer(fishingRiskHeatmap);\n  }\n}\n\nconst debouncedOperations = new Map();\n\nfunction debounceLayerOperation(key, operation, delay = 100) {\n  if (debouncedOperations.has(key)) {\n    clearTimeout(debouncedOperations.get(key));\n  }\n  \n  const timeoutId = setTimeout(() => {\n    operation();\n    debouncedOperations.delete(key);\n  }, delay);\n  \n  debouncedOperations.set(key, timeoutId);\n}\n\nfunction cleanupUnusedLayers() {\n  // Clean up layers that haven't been used recently\n  const MAX_CACHE_SIZE = 5;\n  if (heatmapCache.size > MAX_CACHE_SIZE) {\n    // Remove oldest entries (simple FIFO)\n    const entries = Array.from(heatmapCache.entries());\n    const toRemove = entries.slice(0, entries.length - MAX_CACHE_SIZE);\n    \n    toRemove.forEach(([key, layer]) => {\n      if (layer && props.mapInstance.hasLayer(layer)) {\n        props.mapInstance.removeLayer(layer);\n      }\n      heatmapCache.delete(key);\n    });\n  }\n}\n\n// Anchorage Risk Layer\nfunction onAnchorageRiskLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  \n  debounceLayerOperation('anchorage-activate', () => {\n    layerLoadingStates.value.anchorage = true;\n    anchorageLayerVisible.value = true;\n\n    if (!props.mapInstance) {\n      layerLoadingStates.value.anchorage = false;\n      return;\n    }\n\n    const cachedLayer = heatmapCache.get('anchorage');\n    if (cachedLayer) {\n      nextTick(() => {\n        cachedLayer.addTo(props.mapInstance);\n        layerLoadingStates.value.anchorage = false;\n      });\n      return;\n    }\n\n    const data = props.anchorageRiskData;\n    if (!data || !Array.isArray(data.features)) {\n      layerLoadingStates.value.anchorage = false;\n      return;\n    }\n\n    // Process data in chunks to prevent blocking\n    requestIdleCallback(() => {\n      const heatmapData = data.features\n        .filter((feature) => feature.geometry && Array.isArray(feature.geometry.coordinates))\n        .map((feature) => {\n          const [longitude, latitude] = feature.geometry.coordinates;\n          return [latitude, longitude, 1];\n        });\n\n      if (heatmapData.length === 0) {\n        layerLoadingStates.value.anchorage = false;\n        return;\n      }\n\n      anchorageHeatmapLayer = L.heatLayer(heatmapData, {\n        radius: 25,\n        blur: 15,\n        maxZoom: 13,\n      });\n\n      anchorageHeatmapLayer.addTo(props.mapInstance);\n      heatmapCache.set('anchorage', anchorageHeatmapLayer);\n      layerLoadingStates.value.anchorage = false;\n    }, { timeout: 1000 });\n  });\n}\n\nfunction onAnchorageRiskLayerDeactivated() {\n  anchorageLayerVisible.value = false;\n  const cachedLayer = heatmapCache.get('anchorage');\n  if (cachedLayer && props.mapInstance.hasLayer(cachedLayer)) {\n    props.mapInstance.removeLayer(cachedLayer);\n  }\n  if (anchorageHeatmapLayer && props.mapInstance.hasLayer(anchorageHeatmapLayer)) {\n    props.mapInstance.removeLayer(anchorageHeatmapLayer);\n  }\n}\n\n// Dredging Risk Layer\nfunction onDredgingRiskLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle || !props.mapInstance) return;\n  if (!props.dredgingData || !props.dredgingData?.features) return;\n\n  if (dredgingRiskHeatmap) {\n    dredgingRiskHeatmap.addTo(props.mapInstance);\n    return;\n  }\n\n  const heatData = props.dredgingData.features.map(feature => {\n    const coords = feature.geometry.coordinates;\n    const intensity = feature.properties.extracted_amount_m3\n      ? parseFloat(feature.properties.extracted_amount_m3)\n      : 1;\n    return [coords[1], coords[0], intensity];\n  });\n\n  dredgingRiskHeatmap = L.heatLayer(heatData, {\n    radius: 15,\n    blur: 10,\n    maxZoom: 10\n  });\n\n  if (props.mapInstance) {\n    dredgingRiskHeatmap.addTo(props.mapInstance);\n  }\n}\n\nfunction onDredgingRiskLayerDeactivated() {\n  if (dredgingRiskHeatmap && props.mapInstance) {\n    props.mapInstance.removeLayer(dredgingRiskHeatmap);\n    dredgingRiskHeatmap = null;\n  }\n}\n\n// Shallow Waters Layer\n\nconst imageLoadPromises = new Map();\n\nfunction preloadShallowWatersImages() {\n  const shallowWatersImages = [\n    { url: require('@/assets/shallowWaters/1.webp'), bounds: [[0.0, -180.0], [90.0, -90.0]] },\n    { url: require('@/assets/shallowWaters/2.webp'), bounds: [[0.0, 90.0], [90.0, 180.0]] },\n    { url: require('@/assets/shallowWaters/3.webp'), bounds: [[0.0, -90.0], [90.0, 0.0]] },\n    { url: require('@/assets/shallowWaters/4.webp'), bounds: [[0.0, 0.0], [90.0, 90.0]] },\n    { url: require('@/assets/shallowWaters/5.webp'), bounds: [[-90.0, 90.0], [0.0, 180.0]] },\n    { url: require('@/assets/shallowWaters/6.webp'), bounds: [[-90.0, -90.0], [0.0, 0.0]] },\n    { url: require('@/assets/shallowWaters/7.webp'), bounds: [[-90.0, 0.0], [0.0, 90.0]] }\n  ];\n\n  // Load images progressively\n  shallowWatersImages.forEach((img, index) => {\n    if (!imageLoadPromises.has(img.url)) {\n      const promise = new Promise((resolve) => {\n        const imgObj = new Image();\n        imgObj.onload = () => {\n          imageCache[img.url] = imgObj;\n          resolve(imgObj);\n        };\n        imgObj.onerror = () => resolve(null); // Handle errors gracefully\n        // Delay loading to prevent blocking initial render\n        setTimeout(() => {\n          imgObj.src = img.url;\n        }, index * 100); // Stagger loading\n      });\n      imageLoadPromises.set(img.url, promise);\n    }\n  });\n}\n\nfunction monitorLayerPerformance(layerName, operation) {\n  const startTime = performance.now();\n  \n  return operation().finally(() => {\n    const endTime = performance.now();\n    const duration = endTime - startTime;\n    \n    if (duration > 100) { // Log slow operations\n      console.warn(`Layer ${layerName} took ${duration.toFixed(2)}ms to load`);\n    }\n  });\n}\n\nfunction onShallowWatersLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  if (shallowWatersLayers.length === 0) {\n    const shallowWatersImages = [\n      { url: require('@/assets/shallowWaters/1.webp'), bounds: [[0.0, -180.0], [90.0, -90.0]] },\n      { url: require('@/assets/shallowWaters/2.webp'), bounds: [[0.0, 90.0], [90.0, 180.0]] },\n      { url: require('@/assets/shallowWaters/3.webp'), bounds: [[0.0, -90.0], [90.0, 0.0]] },\n      { url: require('@/assets/shallowWaters/4.webp'), bounds: [[0.0, 0.0], [90.0, 90.0]] },\n      { url: require('@/assets/shallowWaters/5.webp'), bounds: [[-90.0, 90.0], [0.0, 180.0]] },\n      { url: require('@/assets/shallowWaters/6.webp'), bounds: [[-90.0, -90.0], [0.0, 0.0]] },\n      { url: require('@/assets/shallowWaters/7.webp'), bounds: [[-90.0, 0.0], [0.0, 90.0]] }\n    ];\n\n    shallowWatersLayers = shallowWatersImages.map(img => \n      L.imageOverlay(img.url, img.bounds, { opacity: 0.7 })\n    );\n  }\n\n  shallowWatersLayers.forEach(layer => props.mapInstance.addLayer(layer));\n  isShallowWatersLayerActive.value = true;\n}\n\nfunction onShallowWatersLayerDeactivated() {\n  shallowWatersLayers.forEach(layer => props.mapInstance.removeLayer(layer));\n  isShallowWatersLayerActive.value = false;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(LLayerGroup), {\n      name: \"Risk Layers\",\n      \"layer-type\": \"overlay\",\n      visible: false,\n      onAdd: onRiskLayersActivated,\n      onRemove: onRiskLayersDeactivated\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_unref(LLayerGroup), {\n          name: \"European Risk Map\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: riskEuropeLayerRef.value?.onCombinedRiskEuropeLayerGroupActivated,\n          onRemove: riskEuropeLayerRef.value?.onCombinedRiskEuropeLayerGroupDeactivated\n        }, null, 8, [\"onAdd\", \"onRemove\"]),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Global Risk Map\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: globalRiskMapRef.value?.onCombinedRiskLayerGroupActivated,\n          onRemove: globalRiskMapRef.value?.onCombinedRiskLayerGroupDeactivated\n        }, null, 8, [\"onAdd\", \"onRemove\"]),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Aggregated Fishing Activity\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: onFishingRiskLayerActivated,\n          onRemove: onFishingRiskLayerDeactivated\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              url: \"\",\n              attribution: \"<a href=\\\"https://globalfishingwatch.org\\\">Powered by Global Fishing Watch (2012 - 2024)</a>\"\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Aggregated Anchorage\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: onAnchorageRiskLayerActivated,\n          onRemove: onAnchorageRiskLayerDeactivated\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              url: \"\",\n              attribution: \"<a href=\\\"https://globalfishingwatch.org\\\">Powered by Global Fishing Watch</a>\"\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Aggregated Dredging (Europe)\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: onDredgingRiskLayerActivated,\n          onRemove: onDredgingRiskLayerDeactivated\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LGeoJson), {\n              geojson: __props.dredgingData,\n              options: { pointToLayer: () => null },\n              attribution: \"<a href=\\\"https://emodnet.ec.europa.eu/en/human-activities\\\">Powered by EMODnet (1964 - 2023)</a>\"\n            }, null, 8, [\"geojson\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Maritime Traffic Density (Sep. 2024)\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: onGMTDSLayerActivated,\n          onRemove: onGMTDSLayerDeactivated\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              url: \"\",\n              attribution: \"<a href=\\\"https://globalmaritimetraffic.org/gmtds-data.html\\\">Powered by Global Maritime Traffic Density Service</a>\"\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Heatmap Seismic Activity\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: onSeismicRiskLayerActivated,\n          onRemove: onSeismicRiskLayerDeactivated\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Seabed Substrates (Europe)\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: onSeabedSubstrateLayerActivated,\n          onRemove: onSeabedSubstrateLayerDeactivated\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              url: \"\",\n              attribution: \"<a href=\\\"https://emodnet.ec.europa.eu/en/human-activities\\\">Powered by EMODnet</a>\"\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Volcanoes\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: volcanoLayerRef.value?.onVolcanoLayerActivated,\n          onRemove: volcanoLayerRef.value?.onVolcanoLayerDeactivated\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              url: \"\",\n              attribution: \"Global Volcanism Program, 2025. [Database] Volcanoes of the World (v. 5.2.7; 21 Feb 2025). Distributed by Smithsonian Institution, compiled by Venzke, E. <a href=\\\"https://doi.org/10.5479/si.GVP.VOTW5-2024.5.2\\\">https://doi.org/10.5479/si.GVP.VOTW5-2024.5.2</a>\"\n            })\n          ]),\n          _: 1\n        }, 8, [\"onAdd\", \"onRemove\"]),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Shallow Waters (-1 to -200m)\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: onShallowWatersLayerActivated,\n          onRemove: onShallowWatersLayerDeactivated\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              url: \"\",\n              attribution: \"<a href=\\\"https://www.gebco.net/data_and_products/gridded_bathymetry_data/\\\">Powered by General Bathymetric Chart of the Oceans (2024)</a>\"\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Cable Age\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: cableAgeLayerRef.value?.activateCableAgeLayer,\n          onRemove: cableAgeLayerRef.value?.deactivateCableAgeLayer\n        }, null, 8, [\"onAdd\", \"onRemove\"]),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Distance to Cable Ships\",\n          \"layer-type\": \"overlay\",\n          visible: false,\n          onAdd: distanceToShipsRef.value?.activateDistancePolygonGridLayer,\n          onRemove: distanceToShipsRef.value?.deactivateDistancePolygonGridLayer\n        }, null, 8, [\"onAdd\", \"onRemove\"])\n      ]),\n      _: 1\n    }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(RiskEuropeLayer, {\n        \"current-translations\": __props.currentTranslations,\n        \"map-instance\": __props.mapInstance,\n        \"risk-layers-toggle-ref\": __props.riskLayersToggleRef,\n        \"fishing-data-europe\": __props.fishingDataEurope,\n        \"terrain-data-choropleth-europe\": __props.terrainDataChoroplethEurope,\n        ref_key: \"riskEuropeLayerRef\",\n        ref: riskEuropeLayerRef\n      }, null, 8, [\"current-translations\", \"map-instance\", \"risk-layers-toggle-ref\", \"fishing-data-europe\", \"terrain-data-choropleth-europe\"]),\n      _createVNode(GlobalRiskMap, {\n        \"current-translations\": __props.currentTranslations,\n        \"map-instance\": __props.mapInstance,\n        \"risk-layers-toggle-ref\": __props.riskLayersToggleRef,\n        ref_key: \"globalRiskMapRef\",\n        ref: globalRiskMapRef\n      }, null, 8, [\"current-translations\", \"map-instance\", \"risk-layers-toggle-ref\"]),\n      _createVNode(VolcanoLayer, {\n        \"map-instance\": __props.mapInstance,\n        \"current-translations\": __props.currentTranslations,\n        \"risk-layers-toggle-ref\": __props.riskLayersToggleRef,\n        ref_key: \"volcanoLayerRef\",\n        ref: volcanoLayerRef\n      }, null, 8, [\"map-instance\", \"current-translations\", \"risk-layers-toggle-ref\"]),\n      (isSeabedActive.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n            _createElementVNode(\"h3\", null, _toDisplayString(__props.currentTranslations.seabedSubstratesTitle), 1),\n            _createElementVNode(\"div\", _hoisted_3, [\n              _createElementVNode(\"div\", _hoisted_4, [\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _hoisted_6,\n                  _createElementVNode(\"span\", _hoisted_7, _toDisplayString(__props.currentTranslations.mudToMuddySand), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _hoisted_9,\n                  _createElementVNode(\"span\", _hoisted_10, _toDisplayString(__props.currentTranslations.sand), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _hoisted_12,\n                  _createElementVNode(\"span\", _hoisted_13, _toDisplayString(__props.currentTranslations.coarseSubstrate), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_14, [\n                  _hoisted_15,\n                  _createElementVNode(\"span\", _hoisted_16, _toDisplayString(__props.currentTranslations.mixedSediment), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_17, [\n                  _hoisted_18,\n                  _createElementVNode(\"span\", _hoisted_19, _toDisplayString(__props.currentTranslations.rockBoulders), 1)\n                ])\n              ])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(CableAgeLayer, {\n        ref_key: \"cableAgeLayerRef\",\n        ref: cableAgeLayerRef,\n        \"current-language\": __props.currentLanguage\n      }, null, 8, [\"current-language\"]),\n      _createVNode(DistanceToShips, {\n        \"vessel-positions\": __props.vesselPositions,\n        \"current-translations\": __props.currentTranslations,\n        \"map-instance\": __props.mapInstance,\n        \"risk-layers-toggle-ref\": __props.riskLayersToggleRef,\n        ref_key: \"distanceToShipsRef\",\n        ref: distanceToShipsRef\n      }, null, 8, [\"vessel-positions\", \"current-translations\", \"map-instance\", \"risk-layers-toggle-ref\"])\n    ])\n  ], 64))\n}\n}\n\n})","<!-- \n  RiskLayers.vue - Component that manages all risk-related map layers\n  Includes:\n  - European and Global risk maps\n  - Various heatmap layers (fishing, anchorage, dredging, seismic)\n  - Seabed substrates, shallow waters, and other specialized layers\n  - Associated popups and legends\n-->\n  \n<template>\n  <l-layer-group\n    name=\"Risk Layers\" \n    layer-type=\"overlay\" \n    :visible=\"false\"\n    @add=\"onRiskLayersActivated\"\n    @remove=\"onRiskLayersDeactivated\"\n  >\n    <!-- European Risk Map Layer Group -->\n    <l-layer-group\n      name=\"European Risk Map\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"riskEuropeLayerRef?.onCombinedRiskEuropeLayerGroupActivated\"\n      @remove=\"riskEuropeLayerRef?.onCombinedRiskEuropeLayerGroupDeactivated\"\n    ></l-layer-group>\n  \n    <!-- Global Risk Map Layer Group -->\n    <l-layer-group\n      name=\"Global Risk Map\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"globalRiskMapRef?.onCombinedRiskLayerGroupActivated\"\n      @remove=\"globalRiskMapRef?.onCombinedRiskLayerGroupDeactivated\"\n    ></l-layer-group>\n  \n    <!-- Fishing Activity Heatmap Layer -->\n    <l-layer-group\n      name=\"Aggregated Fishing Activity\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"onFishingRiskLayerActivated\"\n      @remove=\"onFishingRiskLayerDeactivated\"\n    >\n      <l-tile-layer\n        url=\"\"\n        attribution='<a href=\"https://globalfishingwatch.org\">Powered by Global Fishing Watch (2012 - 2024)</a>'\n      />\n    </l-layer-group>\n  \n    <!-- Anchorage Heatmap Layer -->\n    <l-layer-group\n      name=\"Aggregated Anchorage\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"onAnchorageRiskLayerActivated\"\n      @remove=\"onAnchorageRiskLayerDeactivated\"\n    >\n      <l-tile-layer\n        url=\"\"\n        attribution='<a href=\"https://globalfishingwatch.org\">Powered by Global Fishing Watch</a>'\n      />\n    </l-layer-group>\n  \n    <!-- Dredging Heatmap Layer -->\n    <l-layer-group\n      name=\"Aggregated Dredging (Europe)\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"onDredgingRiskLayerActivated\"\n      @remove=\"onDredgingRiskLayerDeactivated\"\n    >\n      <l-geo-json\n        :geojson=\"dredgingData\"\n        :options=\"{ pointToLayer: () => null }\"\n        attribution='<a href=\"https://emodnet.ec.europa.eu/en/human-activities\">Powered by EMODnet (1964 - 2023)</a>'\n      />\n    </l-layer-group>\n  \n    <!-- Shipping Density Layer -->\n    <l-layer-group\n      name=\"Maritime Traffic Density (Sep. 2024)\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"onGMTDSLayerActivated\"\n      @remove=\"onGMTDSLayerDeactivated\"\n    >\n      <l-tile-layer\n        url=\"\"\n        attribution='<a href=\"https://globalmaritimetraffic.org/gmtds-data.html\">Powered by Global Maritime Traffic Density Service</a>'\n      />\n    </l-layer-group>\n  \n    <!-- Seismic Activity Heatmap Layer -->\n    <l-layer-group\n      name=\"Heatmap Seismic Activity\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"onSeismicRiskLayerActivated\"\n      @remove=\"onSeismicRiskLayerDeactivated\"\n    ></l-layer-group>\n\n    <!-- Seabed Substrates Layer -->\n    <l-layer-group\n      name=\"Seabed Substrates (Europe)\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"onSeabedSubstrateLayerActivated\"\n      @remove=\"onSeabedSubstrateLayerDeactivated\"\n    >\n      <l-tile-layer\n        url=\"\"\n        attribution='<a href=\"https://emodnet.ec.europa.eu/en/human-activities\">Powered by EMODnet</a>'\n      />\n    </l-layer-group>\n  \n    <!-- Volcanoes Layer -->\n    <l-layer-group\n      name=\"Volcanoes\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"volcanoLayerRef?.onVolcanoLayerActivated\"\n      @remove=\"volcanoLayerRef?.onVolcanoLayerDeactivated\"\n    >\n      <l-tile-layer\n        url=\"\"\n        attribution='Global Volcanism Program, 2025. [Database] Volcanoes of the World (v. 5.2.7; 21 Feb 2025). Distributed by Smithsonian Institution, compiled by Venzke, E. <a href=\"https://doi.org/10.5479/si.GVP.VOTW5-2024.5.2\">https://doi.org/10.5479/si.GVP.VOTW5-2024.5.2</a>'\n      />\n    </l-layer-group>\n    \n    <!-- Shallow Waters Layer -->\n    <l-layer-group\n      name=\"Shallow Waters (-1 to -200m)\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"onShallowWatersLayerActivated\"\n      @remove=\"onShallowWatersLayerDeactivated\"\n    >\n      <l-tile-layer\n        url=\"\"\n        attribution='<a href=\"https://www.gebco.net/data_and_products/gridded_bathymetry_data/\">Powered by General Bathymetric Chart of the Oceans (2024)</a>'\n      />\n    </l-layer-group>\n  \n    <!-- Cable Age Layer -->\n    <l-layer-group\n      name=\"Cable Age\"\n      layer-type=\"overlay\"\n      :visible=\"false\"\n      @add=\"cableAgeLayerRef?.activateCableAgeLayer\"\n      @remove=\"cableAgeLayerRef?.deactivateCableAgeLayer\"\n    ></l-layer-group>\n  \n    <!-- Distance to Cable Ships Layer -->\n    <l-layer-group\n      name=\"Distance to Cable Ships\"\n      layer-type=\"overlay\" \n      :visible=\"false\"\n      @add=\"distanceToShipsRef?.activateDistancePolygonGridLayer\"\n      @remove=\"distanceToShipsRef?.deactivateDistancePolygonGridLayer\"\n    ></l-layer-group>\n  </l-layer-group>\n\n  <!-- Popups and Legends Container -->\n  <div class=\"map-popup-container\">\n    <!-- European Risk Map Popup -->\n    <RiskEuropeLayer \n      :current-translations=\"currentTranslations\"\n      :map-instance=\"mapInstance\"\n      :risk-layers-toggle-ref=\"riskLayersToggleRef\"\n      :fishing-data-europe=\"fishingDataEurope\"\n      :terrain-data-choropleth-europe=\"terrainDataChoroplethEurope\"\n      ref=\"riskEuropeLayerRef\"\n    />\n  \n    <!-- Global Risk Map Popup -->\n    <GlobalRiskMap \n      :current-translations=\"currentTranslations\"\n      :map-instance=\"mapInstance\"\n      :risk-layers-toggle-ref=\"riskLayersToggleRef\"\n      ref=\"globalRiskMapRef\"\n    />\n  \n    <!-- Volcano Layer Popup -->\n    <VolcanoLayer \n      :map-instance=\"mapInstance\"\n      :current-translations=\"currentTranslations\"\n      :risk-layers-toggle-ref=\"riskLayersToggleRef\"\n      ref=\"volcanoLayerRef\"\n    />\n  \n    <!-- Seabed Substrates Legend Popup -->\n    <div v-if=\"isSeabedActive\" class=\"map-popup\">\n      <h3>{{ currentTranslations.seabedSubstratesTitle }}</h3>\n      <div class=\"popup-content\">\n        <div class=\"legend-grid\">\n          <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#92ddfa\"></span><span class=\"legend-text\">{{ currentTranslations.mudToMuddySand }}</span></div>\n          <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#f7f37c\"></span><span class=\"legend-text\">{{ currentTranslations.sand }}</span></div>\n          <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#cfcc67\"></span><span class=\"legend-text\">{{ currentTranslations.coarseSubstrate }}</span></div>\n          <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#dbb09f\"></span><span class=\"legend-text\">{{ currentTranslations.mixedSediment }}</span></div>\n          <div class=\"legend-item\"><span class=\"color-box\" style=\"background-color:#7e0004\"></span><span class=\"legend-text\">{{ currentTranslations.rockBoulders }}</span></div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Cable Age Layer Popup -->\n    <CableAgeLayer \n      ref=\"cableAgeLayerRef\"\n      :current-language=\"currentLanguage\"\n    />\n  \n    <!-- Distance to Ships Popup -->\n    <DistanceToShips \n      :vessel-positions=\"vesselPositions\"\n      :current-translations=\"currentTranslations\"\n      :map-instance=\"mapInstance\"\n      :risk-layers-toggle-ref=\"riskLayersToggleRef\"\n      ref=\"distanceToShipsRef\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, watch, onBeforeUnmount, nextTick } from 'vue';\nimport {\n  LLayerGroup,\n  LTileLayer,\n  LGeoJson\n} from '@vue-leaflet/vue-leaflet';\nimport 'leaflet.heat';\nimport 'leaflet.vectorgrid';\n\n// Components\nimport RiskEuropeLayer from './EuropeanRiskMap.vue';\nimport GlobalRiskMap from './GlobalRiskMap.vue';\nimport VolcanoLayer from './VolcanoLayer.vue';\nimport CableAgeLayer from './CableAgeLayer.vue';\nimport DistanceToShips from './DistanceToShips.vue';\n\n// ======================\n// PROPS DEFINITION\n// ======================\nconst props = defineProps({\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  riskLayersToggleRef: {\n    type: Object,\n    required: false\n  },\n  currentLanguage: {\n    type: String,\n    required: false\n  },\n  vesselPositions: {\n    type: Array,\n    required: false\n  },\n  fishingDataEurope: {\n    type: Object,\n    required: false\n  },\n  terrainDataChoroplethEurope: {\n    type: Object,\n    required: false\n  },\n  dredgingData: {\n    type: Object,\n    required: false\n  },\n  aggregatedSeismicData: {\n    type: Array,\n    required: false\n  },\n  anchorageRiskData: {\n    type: Object,\n    required: false\n  },\n  aggregatedFishingData: {\n    type: Array,\n    required: false\n  }\n});\n\n// ======================\n// COMPONENT REFERENCES\n// ======================\nconst riskEuropeLayerRef = ref(null);\nconst globalRiskMapRef = ref(null);\nconst volcanoLayerRef = ref(null);\nconst cableAgeLayerRef = ref(null);\nconst distanceToShipsRef = ref(null);\n\n// ======================\n// LAYER VISIBILITY STATES\n// ======================\nconst isSeabedActive = ref(false);\nconst gmtdsLayerVisible = ref(false);\nconst seismicRiskLayerVisible = ref(false);\nconst anchorageLayerVisible = ref(false);\nconst fishingLayerVisible = ref(false);\nconst isShallowWatersLayerActive = ref(false);\n\n// ======================\n// LAYER INSTANCES & CACHES\n// ======================\nlet gmtdsWMSLayer = null;\nlet seismicRiskHeatmap = null;\nlet anchorageHeatmapLayer = null;\nlet dredgingRiskHeatmap = null;\nlet seabedLayer = null;\nlet fishingRiskHeatmap = null;\nlet shallowWatersLayers = [];\nconst imageCache = {};\nconst heatmapCache = new Map();\n\n// ======================\n// DATA WATCHERS\n// ======================\nwatch(() => props.aggregatedFishingData, (newData) => {\n  if (newData && newData.length > 0 && !heatmapCache.has('fishing')) {\n    // Process in background without blocking\n    processHeatmapInChunks(\n      newData, \n      'fishing',\n      { radius: 10, blur: 10, maxZoom: 10, max: 100 }\n    ).catch(err => console.error('Error processing fishing data:', err));\n  }\n}, { immediate: true });\n\nwatch(() => props.aggregatedSeismicData, (newData) => {\n  if (newData && newData.length > 0 && !heatmapCache.has('seismic')) {\n    // Process in background without blocking\n    processHeatmapInChunks(\n      newData,\n      'seismic', \n      { radius: 25, blur: 15, maxZoom: 10 }\n    ).catch(err => console.error('Error processing seismic data:', err));\n  }\n}, { immediate: true });\n\nwatch(() => props.anchorageRiskData, (newData) => {\n  if (newData?.features?.length > 0 && !heatmapCache.has('anchorage')) {\n    const heatmapData = newData.features\n      .filter(feature => feature.geometry?.coordinates)\n      .map(feature => {\n        const [longitude, latitude] = feature.geometry.coordinates;\n        return [latitude, longitude, 1];\n      });\n    \n    if (heatmapData.length > 0) {\n      // Process in background without blocking\n      processHeatmapInChunks(\n        heatmapData,\n        'anchorage',\n        { radius: 25, blur: 15, maxZoom: 13 }\n      ).catch(err => console.error('Error processing anchorage data:', err));\n    }\n  }\n}, { immediate: true });\n// ======================\n// LIFECYCLE HOOKS\n// ======================\nonMounted(() => {\n  // Use intersection observer to only preprocess when component is visible\n  nextTick(() => {\n    setTimeout(() => {\n      if ('IntersectionObserver' in window) {\n        const observer = new IntersectionObserver((entries) => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              preloadShallowWatersImages();\n              observer.disconnect();\n            }\n          });\n        });\n        \n        const target = document.querySelector('.risk-layers-container') || document.body;\n        observer.observe(target);\n      } else {\n        preloadShallowWatersImages();\n      }\n    }, 500); // Give map time to initialize\n  });\n});\nonBeforeUnmount(() => {\n  // Clean up all timeouts and intervals\n  debouncedOperations.forEach(timeoutId => clearTimeout(timeoutId));\n  debouncedOperations.clear();\n  \n  // Clear all cached layers\n  heatmapCache.forEach(layer => {\n    if (layer && props.mapInstance && props.mapInstance.hasLayer(layer)) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n  heatmapCache.clear();\n});\n// ======================\n// LAYER PRE-PROCESSING\n// ======================\n\nfunction processHeatmapInChunks(data, layerKey, options) {\n  return new Promise((resolve) => {\n    const CHUNK_SIZE = 1000;\n    const SAMPLE_RATE = 2; // Adjust this to control memory usage and rendering time\n\n    let processedData = [];\n    let currentIndex = 0;\n\n    function processChunk() {\n      const endIndex = Math.min(currentIndex + CHUNK_SIZE, data.length);\n\n      for (let i = currentIndex; i < endIndex; i++) {\n        // Sample every Nth item to reduce final size\n        if (i % SAMPLE_RATE === 0) {\n          processedData.push(data[i]);\n        }\n      }\n\n      currentIndex = endIndex;\n      if(currentIndex == 800000 || currentIndex == 1800000){\n        console.log(\"CURRENT INDEX: \", currentIndex);\n      }\n      if (currentIndex < data.length) {\n        setTimeout(processChunk, 0); // Yield to browser\n      } else {\n        const heatmapLayer = L.heatLayer(processedData, options);\n        heatmapCache.set(layerKey, heatmapLayer);\n        resolve();\n      }\n    }\n\n    setTimeout(processChunk, 200); // Initial delay for readiness\n  });\n}\n\n\n\n\nconst layerLoadingStates = ref({\n  fishing: false,\n  seismic: false,\n  anchorage: false,\n  gmtds: false\n});\n// ======================\n// MAIN RISK LAYERS GROUP HANDLERS\n// ======================\nfunction onRiskLayersActivated() {\n  const mapContainer = props.mapInstance._container;\n  mapContainer.classList.add('risk-layers-active');\n  \n  // Ensure all sub-layers are initially hidden (only non-component layers)\n  [ \n    gmtdsWMSLayer, \n    seismicRiskHeatmap, \n    anchorageHeatmapLayer, \n    dredgingRiskHeatmap,\n    seabedLayer, \n    fishingRiskHeatmap\n  ].forEach(layer => {\n    if (layer && props.mapInstance.hasLayer(layer)) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n\n  // Tell component-based layers to deactivate\n  if (volcanoLayerRef.value?.isVolcanoActive) {\n    volcanoLayerRef.value.onVolcanoLayerDeactivated();\n  }\n  \n  if (distanceToShipsRef.value?.distanceGridActive) {\n    distanceToShipsRef.value.deactivateDistancePolygonGridLayer();\n  }\n  \n  // Deactivate Cable Age layer through component if active\n  if (cableAgeLayerRef.value) {\n    cableAgeLayerRef.value.deactivateCableAgeLayer();\n  }\n  \n  // Deactivate European risk layers through child component\n  if (riskEuropeLayerRef.value) {\n    riskEuropeLayerRef.value.onCombinedRiskEuropeLayerGroupDeactivated();\n  }\n  \n  // Deactivate Global risk layers through child component\n  if (globalRiskMapRef.value) {\n    globalRiskMapRef.value.onCombinedRiskLayerGroupDeactivated();\n  }\n  \n  // Reset all layer visibility states for non-component layers\n  gmtdsLayerVisible.value = false;\n  seismicRiskLayerVisible.value = false;\n  anchorageLayerVisible.value = false;\n  isSeabedActive.value = false;\n  \n  if (props.riskLayersToggleRef) {\n    props.riskLayersToggleRef.show();\n  }\n}\n\nfunction onRiskLayersDeactivated() {\n  const mapContainer = props.mapInstance._container;\n  mapContainer.classList.remove('risk-layers-active');\n  if (props.riskLayersToggleRef) {\n    props.riskLayersToggleRef.hide();\n  }\n}\n\n// ======================\n// INDIVIDUAL LAYER HANDLERS\n// ======================\n\n// GMTDS (Shipping Density) Layer\nfunction onGMTDSLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  gmtdsLayerVisible.value = true;\n  \n  if (!gmtdsWMSLayer) {\n    gmtdsWMSLayer = L.tileLayer.wms('https://gmtds.maplarge.com/ogc/ais:density/wms?', {\n      layers: 'ais:density',\n      format: 'image/png',\n      transparent: true,\n      attribution: 'Traffic density data &copy; <a href=\"https://globalmaritimetraffic.org/gmtds-data.html\" target=\"_blank\">GMTDS</a>',\n      maxZoom: 12,\n      minZoom: 0,\n      crs: L.CRS.EPSG3857,\n      time: '2024-01-01T00:00:00Z'\n    }).addTo(props.mapInstance);\n  }\n}\n\nfunction onGMTDSLayerDeactivated() {\n  gmtdsLayerVisible.value = false;\n  if (gmtdsWMSLayer) {\n    props.mapInstance.removeLayer(gmtdsWMSLayer);\n    gmtdsWMSLayer = null;\n  }\n}\n\n// Seismic Risk Layer\nfunction onSeismicRiskLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  \n  debounceLayerOperation('seismic-activate', () => {\n    layerLoadingStates.value.seismic = true;\n    seismicRiskLayerVisible.value = true;\n\n    const cachedLayer = heatmapCache.get('seismic');\n    if (cachedLayer) {\n      nextTick(() => {\n        cachedLayer.addTo(props.mapInstance);\n        layerLoadingStates.value.seismic = false;\n      });\n      return;\n    }\n\n    if (!props.aggregatedSeismicData || props.aggregatedSeismicData.length === 0) {\n      layerLoadingStates.value.seismic = false;\n      return;\n    }\n\n    requestIdleCallback(() => {\n      seismicRiskHeatmap = L.heatLayer(props.aggregatedSeismicData, {\n        radius: 20,       // Reduced from 25\n        blur: 12,         // Reduced from 15\n        maxZoom: 10,\n        minOpacity: 0.2\n      });\n      \n      seismicRiskHeatmap.addTo(props.mapInstance);\n      heatmapCache.set('seismic', seismicRiskHeatmap);\n      layerLoadingStates.value.seismic = false;\n    }, { timeout: 1000 });\n  });\n}\n\nfunction onSeismicRiskLayerDeactivated() {\n  seismicRiskLayerVisible.value = false;\n  const cachedLayer = heatmapCache.get('seismic');\n  if (cachedLayer && props.mapInstance.hasLayer(cachedLayer)) {\n    props.mapInstance.removeLayer(cachedLayer);\n  }\n  if (seismicRiskHeatmap && props.mapInstance.hasLayer(seismicRiskHeatmap)) {\n    props.mapInstance.removeLayer(seismicRiskHeatmap);\n  }\n}\n\n// Seabed Substrate Layer\nfunction createSeabedSubstrateLayer() {\n  return L.tileLayer.wms('https://drive.emodnet-geology.eu/geoserver/gtk/wms?', {\n    layers: 'gtk:seabed_substrate_1m',\n    format: 'image/png',\n    transparent: true,\n    version: '1.1.1',\n    crs: L.CRS.EPSG3857\n  });\n}\n\nfunction onSeabedSubstrateLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  if (!isSeabedActive.value) {\n    seabedLayer = createSeabedSubstrateLayer();\n    seabedLayer.addTo(props.mapInstance);\n    isSeabedActive.value = true;\n  }\n}\n\nfunction onSeabedSubstrateLayerDeactivated() {\n  if (isSeabedActive.value && seabedLayer) {\n    props.mapInstance.removeLayer(seabedLayer);\n    isSeabedActive.value = false;\n  }\n}\n\n// Fishing Risk Layer\nfunction onFishingRiskLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  \n  layerLoadingStates.value.fishing = true;\n  fishingLayerVisible.value = true;\n  \n  // Use cached layer if available\n  const cachedLayer = heatmapCache.get('fishing');\n  if (cachedLayer) {\n    // Add layer in next tick to prevent blocking\n    nextTick(() => {\n      cachedLayer.addTo(props.mapInstance);\n      layerLoadingStates.value.fishing = false;\n    });\n    return;\n  }\n  \n  // Show loading indicator and create layer asynchronously\n  if (!props.aggregatedFishingData || props.aggregatedFishingData.length === 0) {\n    layerLoadingStates.value.fishing = false;\n    return;\n  }\n  \n  // Create layer with reduced complexity for better performance\n  requestIdleCallback(() => {\n    fishingRiskHeatmap = L.heatLayer(props.aggregatedFishingData, {\n      radius: 10,\n      blur: 10,\n      maxZoom: 10,\n      max: 100,\n    });\n    \n    fishingRiskHeatmap.addTo(props.mapInstance);\n    heatmapCache.set('fishing', fishingRiskHeatmap);\n    layerLoadingStates.value.fishing = false;\n  }, { timeout: 1000 });\n}\n\nfunction onFishingRiskLayerDeactivated() {\n  fishingLayerVisible.value = false;\n  const cachedLayer = heatmapCache.get('fishing');\n  if (cachedLayer && props.mapInstance.hasLayer(cachedLayer)) {\n    props.mapInstance.removeLayer(cachedLayer);\n  }\n  if (fishingRiskHeatmap && props.mapInstance.hasLayer(fishingRiskHeatmap)) {\n    props.mapInstance.removeLayer(fishingRiskHeatmap);\n  }\n}\n\nconst debouncedOperations = new Map();\n\nfunction debounceLayerOperation(key, operation, delay = 100) {\n  if (debouncedOperations.has(key)) {\n    clearTimeout(debouncedOperations.get(key));\n  }\n  \n  const timeoutId = setTimeout(() => {\n    operation();\n    debouncedOperations.delete(key);\n  }, delay);\n  \n  debouncedOperations.set(key, timeoutId);\n}\n\nfunction cleanupUnusedLayers() {\n  // Clean up layers that haven't been used recently\n  const MAX_CACHE_SIZE = 5;\n  if (heatmapCache.size > MAX_CACHE_SIZE) {\n    // Remove oldest entries (simple FIFO)\n    const entries = Array.from(heatmapCache.entries());\n    const toRemove = entries.slice(0, entries.length - MAX_CACHE_SIZE);\n    \n    toRemove.forEach(([key, layer]) => {\n      if (layer && props.mapInstance.hasLayer(layer)) {\n        props.mapInstance.removeLayer(layer);\n      }\n      heatmapCache.delete(key);\n    });\n  }\n}\n\n// Anchorage Risk Layer\nfunction onAnchorageRiskLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  \n  debounceLayerOperation('anchorage-activate', () => {\n    layerLoadingStates.value.anchorage = true;\n    anchorageLayerVisible.value = true;\n\n    if (!props.mapInstance) {\n      layerLoadingStates.value.anchorage = false;\n      return;\n    }\n\n    const cachedLayer = heatmapCache.get('anchorage');\n    if (cachedLayer) {\n      nextTick(() => {\n        cachedLayer.addTo(props.mapInstance);\n        layerLoadingStates.value.anchorage = false;\n      });\n      return;\n    }\n\n    const data = props.anchorageRiskData;\n    if (!data || !Array.isArray(data.features)) {\n      layerLoadingStates.value.anchorage = false;\n      return;\n    }\n\n    // Process data in chunks to prevent blocking\n    requestIdleCallback(() => {\n      const heatmapData = data.features\n        .filter((feature) => feature.geometry && Array.isArray(feature.geometry.coordinates))\n        .map((feature) => {\n          const [longitude, latitude] = feature.geometry.coordinates;\n          return [latitude, longitude, 1];\n        });\n\n      if (heatmapData.length === 0) {\n        layerLoadingStates.value.anchorage = false;\n        return;\n      }\n\n      anchorageHeatmapLayer = L.heatLayer(heatmapData, {\n        radius: 25,\n        blur: 15,\n        maxZoom: 13,\n      });\n\n      anchorageHeatmapLayer.addTo(props.mapInstance);\n      heatmapCache.set('anchorage', anchorageHeatmapLayer);\n      layerLoadingStates.value.anchorage = false;\n    }, { timeout: 1000 });\n  });\n}\n\nfunction onAnchorageRiskLayerDeactivated() {\n  anchorageLayerVisible.value = false;\n  const cachedLayer = heatmapCache.get('anchorage');\n  if (cachedLayer && props.mapInstance.hasLayer(cachedLayer)) {\n    props.mapInstance.removeLayer(cachedLayer);\n  }\n  if (anchorageHeatmapLayer && props.mapInstance.hasLayer(anchorageHeatmapLayer)) {\n    props.mapInstance.removeLayer(anchorageHeatmapLayer);\n  }\n}\n\n// Dredging Risk Layer\nfunction onDredgingRiskLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle || !props.mapInstance) return;\n  if (!props.dredgingData || !props.dredgingData?.features) return;\n\n  if (dredgingRiskHeatmap) {\n    dredgingRiskHeatmap.addTo(props.mapInstance);\n    return;\n  }\n\n  const heatData = props.dredgingData.features.map(feature => {\n    const coords = feature.geometry.coordinates;\n    const intensity = feature.properties.extracted_amount_m3\n      ? parseFloat(feature.properties.extracted_amount_m3)\n      : 1;\n    return [coords[1], coords[0], intensity];\n  });\n\n  dredgingRiskHeatmap = L.heatLayer(heatData, {\n    radius: 15,\n    blur: 10,\n    maxZoom: 10\n  });\n\n  if (props.mapInstance) {\n    dredgingRiskHeatmap.addTo(props.mapInstance);\n  }\n}\n\nfunction onDredgingRiskLayerDeactivated() {\n  if (dredgingRiskHeatmap && props.mapInstance) {\n    props.mapInstance.removeLayer(dredgingRiskHeatmap);\n    dredgingRiskHeatmap = null;\n  }\n}\n\n// Shallow Waters Layer\n\nconst imageLoadPromises = new Map();\n\nfunction preloadShallowWatersImages() {\n  const shallowWatersImages = [\n    { url: require('@/assets/shallowWaters/1.webp'), bounds: [[0.0, -180.0], [90.0, -90.0]] },\n    { url: require('@/assets/shallowWaters/2.webp'), bounds: [[0.0, 90.0], [90.0, 180.0]] },\n    { url: require('@/assets/shallowWaters/3.webp'), bounds: [[0.0, -90.0], [90.0, 0.0]] },\n    { url: require('@/assets/shallowWaters/4.webp'), bounds: [[0.0, 0.0], [90.0, 90.0]] },\n    { url: require('@/assets/shallowWaters/5.webp'), bounds: [[-90.0, 90.0], [0.0, 180.0]] },\n    { url: require('@/assets/shallowWaters/6.webp'), bounds: [[-90.0, -90.0], [0.0, 0.0]] },\n    { url: require('@/assets/shallowWaters/7.webp'), bounds: [[-90.0, 0.0], [0.0, 90.0]] }\n  ];\n\n  // Load images progressively\n  shallowWatersImages.forEach((img, index) => {\n    if (!imageLoadPromises.has(img.url)) {\n      const promise = new Promise((resolve) => {\n        const imgObj = new Image();\n        imgObj.onload = () => {\n          imageCache[img.url] = imgObj;\n          resolve(imgObj);\n        };\n        imgObj.onerror = () => resolve(null); // Handle errors gracefully\n        // Delay loading to prevent blocking initial render\n        setTimeout(() => {\n          imgObj.src = img.url;\n        }, index * 100); // Stagger loading\n      });\n      imageLoadPromises.set(img.url, promise);\n    }\n  });\n}\n\nfunction monitorLayerPerformance(layerName, operation) {\n  const startTime = performance.now();\n  \n  return operation().finally(() => {\n    const endTime = performance.now();\n    const duration = endTime - startTime;\n    \n    if (duration > 100) { // Log slow operations\n      console.warn(`Layer ${layerName} took ${duration.toFixed(2)}ms to load`);\n    }\n  });\n}\n\nfunction onShallowWatersLayerActivated() {\n  if (!props.riskLayersToggleRef?.isManualToggle) return;\n  if (shallowWatersLayers.length === 0) {\n    const shallowWatersImages = [\n      { url: require('@/assets/shallowWaters/1.webp'), bounds: [[0.0, -180.0], [90.0, -90.0]] },\n      { url: require('@/assets/shallowWaters/2.webp'), bounds: [[0.0, 90.0], [90.0, 180.0]] },\n      { url: require('@/assets/shallowWaters/3.webp'), bounds: [[0.0, -90.0], [90.0, 0.0]] },\n      { url: require('@/assets/shallowWaters/4.webp'), bounds: [[0.0, 0.0], [90.0, 90.0]] },\n      { url: require('@/assets/shallowWaters/5.webp'), bounds: [[-90.0, 90.0], [0.0, 180.0]] },\n      { url: require('@/assets/shallowWaters/6.webp'), bounds: [[-90.0, -90.0], [0.0, 0.0]] },\n      { url: require('@/assets/shallowWaters/7.webp'), bounds: [[-90.0, 0.0], [0.0, 90.0]] }\n    ];\n\n    shallowWatersLayers = shallowWatersImages.map(img => \n      L.imageOverlay(img.url, img.bounds, { opacity: 0.7 })\n    );\n  }\n\n  shallowWatersLayers.forEach(layer => props.mapInstance.addLayer(layer));\n  isShallowWatersLayerActive.value = true;\n}\n\nfunction onShallowWatersLayerDeactivated() {\n  shallowWatersLayers.forEach(layer => props.mapInstance.removeLayer(layer));\n  isShallowWatersLayerActive.value = false;\n}\n</script>","import script from \"./RiskLayers.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./RiskLayers.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\n  RiskLayersToggle.vue\n  \n  A Vue component that provides a collapsible sidebar panel for toggling visibility of various \n  risk and geographic layers on a map. The component organizes layers into categorized groups \n  (Risk Assessment Maps, Maritime Activity, Natural Features, Cable Infrastructure) and provides \n  an expandable interface for users to control layer visibility with loading states and smooth animations.\n  \n  Features:\n  - Collapsible toggle panel with arrow indicator\n  - Grouped layer organization with individual group expansion\n  - Layer visibility controls with loading states\n  - Translation support for internationalization\n  - Responsive design with custom scrollbars\n  - Integration with Leaflet map and layer control instances\n-->\n\n<template>\n  <div v-if=\"isVisible\" class=\"risk-layers-toggle-popup\" :class=\"{'collapsed':!isExpanded}\" @click.stop @mousedown.stop @mouseup.stop>\n    <!-- Toggle Tab -->\n    <div class=\"toggle-tab\" @click.stop=\"toggleExpanded\">\n      <div class=\"arrow-container\">\n        <svg class=\"arrow-icon\" viewBox=\"0 0 24 80\" width=\"10\" height=\"70\">\n          <path d=\"M16 10 L8 40 L16 70\" stroke=\"white\" stroke-width=\"2\" fill=\"none\" :transform=\"isExpanded ? 'rotate(180 12 40)' : ''\"/>\n        </svg>\n      </div>\n      <span class=\"tab-text\" v-if=\"!isExpanded\">{{props.currentTranslations.riskLayersToggles}}</span>\n    </div>\n    \n    <!-- Panel Content -->\n    <div class=\"panel-content\" v-show=\"isExpanded\">\n      <h3 class=\"risk-layers-title\">{{props.currentTranslations.riskLayersTitle || 'Risk Layers'}}</h3>\n      \n      <!-- Clustered Layer Groups -->\n      <div class=\"layers-container\">\n        <!-- Risk Assessment Maps Group -->\n        <div class=\"layer-group\">\n          <div class=\"group-header\" @click.stop=\"toggleGroup('riskMaps')\">\n            <div class=\"group-title-container\">\n              <svg class=\"group-icon\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\">\n                <path d=\"M20.5 3l-.16.03L15 5.1 9 3.33l-6.64.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z\" fill=\"white\"/>\n              </svg>\n              <div class=\"group-title\">{{getGroupTitle('riskMaps')}}</div>\n            </div>\n            <svg class=\"group-arrow\" viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n              <path d=\"M7 10l5 5 5-5\" stroke=\"white\" stroke-width=\"2\" fill=\"none\" :transform=\"expandedGroups.riskMaps ? 'rotate(180 12 12)' : ''\"/>\n            </svg>\n          </div>\n          <div class=\"group-content\" v-show=\"expandedGroups.riskMaps\">\n            <div v-for=\"layer in layerGroups.riskMaps\" :key=\"layer.name\" class=\"layer-toggle\" @click.stop>\n              <input :id=\"layer.name\" type=\"checkbox\" :checked=\"layer.visible\" @change.stop=\"toggleLayer(layer)\" @click.stop class=\"layer-checkbox\" :disabled=\"loadingLayers[layer.name]\"/>\n              <label :for=\"layer.name\" class=\"layer-label\" @click.stop=\"toggleLayer(layer)\">{{getTranslatedName(layer)}}</label>\n              <div v-if=\"loadingLayers[layer.name]\" class=\"layer-loading\" @click.stop>\n                <div class=\"loading-spinner\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Maritime Activity Group -->\n        <div class=\"layer-group\">\n          <div class=\"group-header\" @click.stop=\"toggleGroup('maritimeActivity')\">\n            <div class=\"group-title-container\">\n              <svg class=\"group-icon\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\">\n                <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v-2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\" fill=\"white\"/>\n              </svg>\n              <div class=\"group-title\">{{getGroupTitle('maritimeActivity')}}</div>\n            </div>\n            <svg class=\"group-arrow\" viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n              <path d=\"M7 10l5 5 5-5\" stroke=\"white\" stroke-width=\"2\" fill=\"none\" :transform=\"expandedGroups.maritimeActivity ? 'rotate(180 12 12)' : ''\"/>\n            </svg>\n          </div>\n          <div class=\"group-content\" v-show=\"expandedGroups.maritimeActivity\">\n            <div v-for=\"layer in layerGroups.maritimeActivity\" :key=\"layer.name\" class=\"layer-toggle\">\n              <input :id=\"layer.name\" type=\"checkbox\" :checked=\"layer.visible\" @change.stop=\"toggleLayer(layer)\" class=\"layer-checkbox\" :disabled=\"loadingLayers[layer.name]\"/>\n              <label :for=\"layer.name\" class=\"layer-label\">{{getTranslatedName(layer)}}</label>\n              <div v-if=\"loadingLayers[layer.name]\" class=\"layer-loading\" @click.stop>\n                <div class=\"loading-spinner\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Natural Features Group -->\n        <div class=\"layer-group\">\n          <div class=\"group-header\" @click.stop=\"toggleGroup('naturalFeatures')\">\n            <div class=\"group-title-container\">\n              <svg class=\"group-icon\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\">\n                <path d=\"M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z\" fill=\"white\"/>\n              </svg>\n              <div class=\"group-title\">{{getGroupTitle('naturalFeatures')}}</div>\n            </div>\n            <svg class=\"group-arrow\" viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n              <path d=\"M7 10l5 5 5-5\" stroke=\"white\" stroke-width=\"2\" fill=\"none\" :transform=\"expandedGroups.naturalFeatures ? 'rotate(180 12 12)' : ''\"/>\n            </svg>\n          </div>\n          <div class=\"group-content\" v-show=\"expandedGroups.naturalFeatures\">\n            <div v-for=\"layer in layerGroups.naturalFeatures\" :key=\"layer.name\" class=\"layer-toggle\">\n              <input :id=\"layer.name\" type=\"checkbox\" :checked=\"layer.visible\" @change.stop=\"toggleLayer(layer)\" class=\"layer-checkbox\" :disabled=\"loadingLayers[layer.name]\"/>\n              <label :for=\"layer.name\" class=\"layer-label\">{{getTranslatedName(layer)}}</label>\n              <div v-if=\"loadingLayers[layer.name]\" class=\"layer-loading\">\n                <div class=\"loading-spinner\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Cable Infrastructure Group -->\n        <div class=\"layer-group\">\n          <div class=\"group-header\" @click.stop=\"toggleGroup('cableInfo')\">\n            <div class=\"group-title-container\">\n              <svg class=\"group-icon\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\">\n                <path d=\"M20 5V4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1h-1v4c0 .55.45 1 1 1h1v7c0 1.1-.9 2-2 2s-2-.9-2-2V7c0-2.21-1.79-4-4-4S5 4.79 5 7v7H4c-.55 0-1 .45-1 1v4h1v1c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1h1v-4c0-.55-.45-1-1-1H7V7c0-1.1.9-2 2-2s2 .9 2 2v10c0 2.21 1.79 4 4 4s4-1.79 4-4v-7h1c.55 0 1-.45 1-1V5h-1z\" fill=\"white\"/>\n              </svg>\n              <div class=\"group-title\">{{getGroupTitle('cableInfo')}}</div>\n            </div>\n            <svg class=\"group-arrow\" viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n              <path d=\"M7 10l5 5 5-5\" stroke=\"white\" stroke-width=\"2\" fill=\"none\" :transform=\"expandedGroups.cableInfo ? 'rotate(180 12 12)' : ''\"/>\n            </svg>\n          </div>\n          <div class=\"group-content\" v-show=\"expandedGroups.cableInfo\">\n            <div v-for=\"layer in layerGroups.cableInfo\" :key=\"layer.name\" class=\"layer-toggle\">\n              <input :id=\"layer.name\" type=\"checkbox\" :checked=\"layer.visible\" @change.stop=\"toggleLayer(layer)\" class=\"layer-checkbox\" :disabled=\"loadingLayers[layer.name]\"/>\n              <label :for=\"layer.name\" class=\"layer-label\">{{getTranslatedName(layer)}}</label>\n              <div v-if=\"loadingLayers[layer.name]\" class=\"layer-loading\">\n                <div class=\"loading-spinner\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, watch, onMounted, computed } from 'vue';\n\n// ================================\n// PROPS DEFINITION\n// ================================\nconst props = defineProps({\n  mapInstance: {\n    type: Object,\n    required: false\n  },\n  controlInstance: {\n    type: Object,\n    required: false\n  },\n  currentTranslations: {\n    type: Object,\n    required: false\n  },\n  currentLanguage: {\n    type: String,\n    required: false\n  }\n});\n\n// ================================\n// REACTIVE STATE\n// ================================\n// Component visibility and expansion states\nconst isVisible = ref(false);\nconst isManualToggle = ref(false);\nconst isExpanded = ref(false);\n\n// Loading states for individual layers\nconst loadingLayers = reactive({});\n\n// Group expansion states for collapsible categories\nconst expandedGroups = reactive({\n  riskMaps: false,\n  maritimeActivity: false,\n  naturalFeatures: false,\n  cableInfo: false\n});\n\n// ================================\n// LAYER DEFINITIONS AND CONFIGURATION\n// ================================\n// Define the layers with predefined names to match map layers\nconst layerDefinitions = [\n  // Risk Assessment Maps\n  {\n    name: 'EuropeanRiskMap',\n    translatedKey: 'europeanRiskMap',\n    defaultName: 'European Risk Map',\n    popupSelector: '.custom-popup',\n    group: 'riskMaps'\n  },\n  {\n    name: 'GlobalRiskMap',\n    translatedKey: 'globalRiskMap',\n    defaultName: 'Global Risk Map',\n    popupSelector: '.custom-popup',\n    group: 'riskMaps'\n  },\n  // Maritime Activity\n  {\n    name: 'AggregatedFishingActivity',\n    translatedKey: 'fishingActivityLayer',\n    defaultName: 'Fishing Activity',\n    popupSelector: '.custom-popup',\n    group: 'maritimeActivity'\n  },\n  {\n    name: 'AggregatedAnchorage',\n    translatedKey: 'anchorageActivityLayer',\n    defaultName: 'Anchorage Activity',\n    popupSelector: '.custom-popup',\n    group: 'maritimeActivity'\n  },\n  {\n    name: 'AggregatedDredging(Europe)',\n    translatedKey: 'dredgingActivityLayer',\n    defaultName: 'Dredging Activity',\n    popupSelector: '.custom-popup',\n    group: 'maritimeActivity'\n  },\n  {\n    name: 'MaritimeTrafficDensity(Sep.2024)',\n    translatedKey: 'maritimeTrafficDensityLayer',\n    defaultName: 'Maritime Traffic Density',\n    popupSelector: '.custom-popup',\n    group: 'maritimeActivity'\n  },\n  // Natural Features\n  {\n    name: 'AggregatedSeismicActivity',\n    translatedKey: 'seismicActivityLayer',\n    defaultName: 'Seismic Activity',\n    popupSelector: '.custom-popup',\n    group: 'naturalFeatures'\n  },\n  {\n    name: 'SeabedSubstrates(Europe)',\n    translatedKey: 'seabedSubstratesLayer',\n    defaultName: 'Seabed Substrates',\n    popupSelector: '.custom-popup',\n    group: 'naturalFeatures'\n  },\n  {\n    name: 'Volcanoes',\n    translatedKey: 'volcanoesLayer',\n    defaultName: 'Volcanoes',\n    popupSelector: '.custom-popup',\n    group: 'naturalFeatures'\n  },\n  {\n    name: 'ShallowWaters(-1to-200m)',\n    translatedKey: 'shallowWatersLayer',\n    defaultName: 'Shallow Waters',\n    popupSelector: '.custom-popup',\n    group: 'naturalFeatures'\n  },\n  // Cable Infrastructure\n  {\n    name: 'CableAge',\n    translatedKey: 'cableAgeLayer',\n    defaultName: 'Cable Age',\n    popupSelector: '.custom-age-legend',\n    group: 'cableInfo'\n  },\n  {\n    name: 'DistancetoCableShips',\n    translatedKey: 'distanceToCableShipsLayer',\n    defaultName: 'Distance to Cable Ships',\n    popupSelector: 'custom-popup',\n    group: 'cableInfo'\n  }\n];\n\n// Group translation keys and default names for internationalization\nconst groupTranslations = {\n  riskMaps: {\n    translationKey: 'riskMapsGroupTitle',\n    defaultName: 'Risk Assessment Maps'\n  },\n  maritimeActivity: {\n    translationKey: 'maritimeActivityGroupTitle',\n    defaultName: 'Maritime Activity'\n  },\n  naturalFeatures: {\n    translationKey: 'naturalFeaturesGroupTitle',\n    defaultName: 'Natural Features'\n  },\n  cableInfo: {\n    translationKey: 'cableInfrastructureGroupTitle',\n    defaultName: 'Cable Infrastructure'\n  }\n};\n\n// ================================\n// COMPUTED AND REACTIVE DATA\n// ================================\n// Create layers ref with basic information from layer definitions\nconst layers = ref(layerDefinitions.map(def => {\n  return {\n    name: def.name,\n    translatedKey: def.translatedKey,\n    defaultName: def.defaultName,\n    layer: null,\n    visible: false,\n    popupSelector: def.popupSelector,\n    popupElement: null,\n    group: def.group\n  };\n}));\n\n// Organize layers into groups for the UI display\nconst layerGroups = reactive({\n  riskMaps: layers.value.filter(layer => layer.group === 'riskMaps'),\n  maritimeActivity: layers.value.filter(layer => layer.group === 'maritimeActivity'),\n  naturalFeatures: layers.value.filter(layer => layer.group === 'naturalFeatures'),\n  cableInfo: layers.value.filter(layer => layer.group === 'cableInfo')\n});\n\n// ================================\n// UTILITY FUNCTIONS\n// ================================\n/**\n * Get translated name for a layer, fallback to default name if translation not available\n * @param {Object} layer - Layer object containing translation key and default name\n * @returns {String} Translated or default layer name\n */\nconst getTranslatedName = (layer) => {\n  const translation = props.currentTranslations[layer.translatedKey];\n  return translation || layer.defaultName;\n};\n\n/**\n * Get translated group title, fallback to default name if translation not available\n * @param {String} groupName - Name of the layer group\n * @returns {String} Translated or default group title\n */\nconst getGroupTitle = (groupName) => {\n  const groupInfo = groupTranslations[groupName];\n  if (!groupInfo) return groupName;\n  \n  const translation = props.currentTranslations[groupInfo.translationKey];\n  return translation || groupInfo.defaultName;\n};\n\n// ================================\n// UI INTERACTION METHODS\n// ================================\n/**\n * Toggle expansion state of a specific layer group\n * @param {String} groupName - Name of the group to toggle\n */\nconst toggleGroup = (groupName) => {\n  expandedGroups[groupName] = !expandedGroups[groupName];\n};\n\n/**\n * Toggle main panel expansion state\n */\nconst toggleExpanded = () => {\n  isExpanded.value = !isExpanded.value;\n};\n\n// ================================\n// LAYER MANAGEMENT\n// ================================\n/**\n * Initialize layers when map and control instances are ready\n * Matches layer definitions with actual map layers from the control instance\n */\nconst initializeLayers = () => {\n  // Check if required instances are available\n  if (!props.controlInstance || !props.mapInstance) {\n    return;\n  }\n\n  // Wait for map to be fully loaded\n  if (!props.mapInstance._loaded) {\n    setTimeout(initializeLayers, 100);\n    return;\n  }\n\n  // Find the Risk Layers group in the control instance\n  const groupedLayerObj = props.controlInstance._layers.find(layerObj => layerObj.originalName === \"Risk Layers\");\n  if (!groupedLayerObj) {\n    console.error(\"RiskLayers group not found\");\n    return;\n  }\n\n  // Get the grouped layer and validate it\n  const groupedLayer = groupedLayerObj.layer;\n  if (!groupedLayer || typeof groupedLayer.getLayers !== 'function') {\n    console.error(\"Invalid grouped layer or getLayers method not available\");\n    return;\n  }\n\n  // Match layer definitions with actual map layers\n  const allGroupLayers = groupedLayer.getLayers();\n  layers.value.forEach((layerConfig, index) => {\n    const matchedLayer = allGroupLayers.find(layer => \n      layer.options?.name?.toLowerCase().includes(layerConfig.name.toLowerCase())\n    ) || allGroupLayers[index];\n\n    if (matchedLayer) {\n      layerConfig.layer = matchedLayer;\n      layerConfig.visible = false;\n      // Remove layer from map initially (layers start hidden)\n      if (props.mapInstance.hasLayer(matchedLayer)) {\n        props.mapInstance.removeLayer(matchedLayer);\n      }\n    }\n  });\n};\n\n/**\n * Toggle individual layer visibility with loading state management\n * @param {Object} layerConfig - Configuration object for the layer to toggle\n */\nconst toggleLayer = async (layerConfig) => {\n  // Validate layer and map availability\n  if (!layerConfig.layer || !props.mapInstance) {\n    console.error(\"Layer or map not available:\", layerConfig.name);\n    return;\n  }\n  \n  // Set loading state\n  loadingLayers[layerConfig.name] = true;\n  isManualToggle.value = true;\n  \n  try {\n    await new Promise((resolve) => {\n      requestAnimationFrame(() => {\n        if (layerConfig.visible) {\n          props.mapInstance.removeLayer(layerConfig.layer);\n        } else {\n          props.mapInstance.addLayer(layerConfig.layer);\n        }\n        layerConfig.visible = !layerConfig.visible;\n        resolve();\n      });\n    });\n  } catch (error) {\n    console.error(\"Error toggling layer:\", error);\n  } finally {\n    setTimeout(() => {\n      loadingLayers[layerConfig.name] = false;\n      isManualToggle.value = false;\n    }, 300);\n  }\n};\n\n// ================================\n// WATCHERS AND LIFECYCLE\n// ================================\n// Watch for changes in control instance and reinitialize layers\nwatch(() => props.controlInstance, () => {\n  initializeLayers();\n}, { immediate: true });\n\n// Watch for changes in map instance and reinitialize if both instances available\nwatch(() => props.mapInstance, () => {\n  if (props.mapInstance && props.controlInstance) {\n    initializeLayers();\n  }\n}, { immediate: true });\n\n// Watch for changes in translations to refresh display\nwatch(() => props.currentTranslations, () => {\n  // Translations updated, component will reactively update display names\n}, { deep: true });\n\n// Initialize layers when component is mounted if instances are available\nonMounted(() => {\n  if (props.mapInstance && props.controlInstance) {\n    initializeLayers();\n  }\n});\n\n// ================================\n// COMPONENT EXPOSURE\n// ================================\n// Expose methods to parent component for external control\ndefineExpose({\n  show: () => {\n    isVisible.value = true;\n    initializeLayers();\n  },\n  hide: () => {\n    isVisible.value = false;\n  },\n  isManualToggle: isManualToggle,\n  expand: () => {\n    isExpanded.value = true;\n  },\n  collapse: () => {\n    isExpanded.value = false;\n  }\n});\n</script>\n\n<style scoped>\n/* ================================ */\n/* MAIN CONTAINER STYLES */\n/* ================================ */\n.risk-layers-toggle-popup {\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-align: left;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 0;\n  display: flex;\n  z-index: 1000;\n  transition: all 0.3s ease;\n  overflow: hidden;\n}\n\n/* ================================ */\n/* TOGGLE TAB STYLES */\n/* ================================ */\n.toggle-tab {\n  display: flex;\n  align-items: center;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-right: none;\n  border-radius: 8px 0 0 8px;\n  padding: 0.75rem;\n  cursor: pointer;\n  user-select: none;\n  box-shadow: -2px 0 8px rgba(0, 0, 0, 0.2);\n  height: 80px;\n  white-space: nowrap;\n  transition: all 0.2s ease;\n}\n\n.toggle-tab:hover {\n  background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);\n  box-shadow: -4px 0 12px rgba(0, 0, 0, 0.3);\n}\n\n.arrow-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 80px;\n}\n\n.arrow-icon {\n  transition: transform 0.3s ease;\n  height: 70px;\n  color: #63b3ed;\n}\n\n.tab-text {\n  color: white;\n  font-size: 0.8rem;\n  margin-left: 0.5rem;\n  opacity: 1;\n  transition: opacity 0.3s;\n}\n\n/* ================================ */\n/* PANEL CONTENT STYLES */\n/* ================================ */\n.panel-content {\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 0 12px 12px 0;\n  padding: 1rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  width: 300px;\n  max-height: 400px;\n  transition: all 0.3s ease;\n}\n\n.risk-layers-title {\n  margin-bottom: 1rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: white;\n  text-align: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  padding-bottom: 0.75rem;\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n/* ================================ */\n/* LAYERS CONTAINER AND GROUPS */\n/* ================================ */\n.layers-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 600px;\n  overflow-y: auto;\n  gap: 0.5rem;\n}\n\n.layer-group {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n  transition: all 0.2s ease;\n}\n\n.layer-group:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  border-color: rgba(255, 255, 255, 0.15);\n}\n\n/* ================================ */\n/* GROUP HEADER STYLES */\n/* ================================ */\n.group-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.6rem 0.75rem;\n  background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.group-header:hover {\n  background: linear-gradient(135deg, #4a5568 0%, #718096 100%);\n}\n\n.group-title-container {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.group-icon {\n  color: #63b3ed;\n  font-size: 1rem;\n}\n\n.group-title {\n  font-weight: 600;\n  color: white;\n  font-size: 0.9rem;\n}\n\n.group-arrow {\n  transition: transform 0.3s ease;\n  color: #a0aec0;\n}\n\n/* ================================ */\n/* GROUP CONTENT AND LAYER TOGGLES */\n/* ================================ */\n.group-content {\n  padding: 5px;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n}\n\n.layer-toggle {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  position: relative;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.layer-toggle:last-child {\n  margin-bottom: 0;\n}\n\n.layer-toggle:hover {\n  background: rgba(255, 255, 255, 0.1);\n  transform: translateY(-1px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* ================================ */\n/* CHECKBOX AND LABEL STYLES */\n/* ================================ */\n.layer-checkbox {\n  appearance: none;\n  -webkit-appearance: none;\n  width: 16px;\n  height: 16px;\n  border: 2px solid #a0aec0;\n  border-radius: 3px;\n  margin-right: 0.75rem;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s;\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.layer-checkbox:checked {\n  background: linear-gradient(135deg, #4299e1, #3182ce);\n  border-color: #4299e1;\n}\n\n.layer-checkbox:checked::after {\n  content: '';\n  position: absolute;\n  left: 4px;\n  top: 1px;\n  width: 4px;\n  height: 8px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n\n.layer-checkbox:hover {\n  border-color: #63b3ed;\n}\n\n.layer-label {\n  color: white;\n  font-size: 0.8rem;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n}\n\n/* ================================ */\n/* LOADING STATES */\n/* ================================ */\n.layer-loading {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(135deg, rgba(26, 32, 44, 0.8) 0%, rgba(45, 55, 72, 0.8) 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 6px;\n  z-index: 1;\n  backdrop-filter: blur(5px);\n}\n\n.loading-spinner {\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(99, 179, 237, 0.3);\n  border-radius: 50%;\n  border-top-color: #63b3ed;\n  animation: spin 0.8s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.ocean-depth-active.risk-layers-toggle-popup {\n  right: 200px;\n}\n\n/* Custom scrollbar matching the sidebar theme */\n.layers-container::-webkit-scrollbar {\n  width: 12px;\n}\n\n.layers-container::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 6px;\n  margin: 4px;\n}\n\n.layers-container::-webkit-scrollbar-thumb {\n  background: rgba(99, 179, 237, 0.4);\n  border-radius: 6px;\n  border: 2px solid rgba(26, 32, 44, 0.5);\n  transition: background 0.2s ease;\n}\n\n.layers-container::-webkit-scrollbar-thumb:hover {\n  background: rgba(99, 179, 237, 0.6);\n}\n\n.layers-container::-webkit-scrollbar-thumb:active {\n  background: rgba(99, 179, 237, 0.8);\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .panel-content {\n    width: 280px;\n    padding: 0.75rem;\n  }\n  \n  .toggle-tab {\n    padding: 0.5rem;\n  }\n  \n  .tab-text {\n    font-size: 0.75rem;\n  }\n  \n  .risk-layers-title {\n    font-size: 0.9rem;\n  }\n}\n</style>","import script from \"./RiskLayersToggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RiskLayersToggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RiskLayersToggle.vue?vue&type=style&index=0&id=c0110f0c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c0110f0c\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"?\", -1)\nconst _hoisted_2 = [\n  _hoisted_1\n]\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"×\", -1)\nconst _hoisted_4 = [\n  _hoisted_3\n]\nconst _hoisted_5 = { class: \"modal-buttons\" }\nconst _hoisted_6 = { class: \"language-selector\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"language-icon\" }, null, -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"ENGLISH\" }, \"English\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"GERMAN\" }, \"Deutsch\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"SPANISH\" }, \"Español\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"FRENCH\" }, \"Français\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"ITALIAN\" }, \"Italiano\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"CHINESE\" }, \"中国\", -1)\nconst _hoisted_14 = [\n  _hoisted_8,\n  _hoisted_9,\n  _hoisted_10,\n  _hoisted_11,\n  _hoisted_12,\n  _hoisted_13\n]\nconst _hoisted_15 = { class: \"cable-source-selector\" }\nconst _hoisted_16 = {\n  key: 0,\n  class: \"earthquake-details\"\n}\n\nimport FunctionalityOverview from '@/components/controls/FunctionalityOverview.vue';\nimport { ref, onMounted, watch, toRaw, computed } from 'vue';\nimport L from 'leaflet';\nimport type { LeafletMouseEvent } from 'leaflet';\nimport type { FeatureCollection } from 'geojson';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure.css';\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure';\nimport {\n  LMap,\n  LTileLayer,\n  LTooltip,\n  LPolyline,\n  LMarker,\n  LCircleMarker,\n  LGeoJson,\n  LLayerGroup,\n} from '@vue-leaflet/vue-leaflet';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\n\nimport LayerManager from '@/components/LayerManager.vue';\nimport CableSourceSelector from '@/components/controls/CableSourceSelector.vue';\nimport translations from \"@/assets/translations/translations.json\";\n\nimport VesselTracking from './layers/maritime/VesselTracking.vue';\nimport MaintenanceLayerToggle from '@/components/layers/infrastructure/MaintenanceLayerToggle.vue';\nimport eezBoundariesJson from \"@/assets/eez_boundaries_v12.json\";\nimport eez12nmJson from \"@/assets/eez_12nm_v4.json\";\nimport OceanDepth from '@/components/layers/natural/OceanDepth.vue';\nimport FishingDatePicker from '@/components/controls/FishingDatePicker.vue';\nimport GasPipelines from '@/components/layers/infrastructure/GasPipelines.vue';\nimport fixedInfrastructure from \"@/assets/fixedInfrastructure.json\";\nimport ClusteredDataCenters from '@/components/layers/infrastructure/ClusteredDataCenters.vue';\nimport AnchorageLayerToggle from '@/components/layers/infrastructure/AnchorageLayerToggle.vue';\nimport ClusteredAnchorage from '@/components/layers/infrastructure/ClusteredAnchorage.vue';\nimport SeismicActivity from '@/components/layers/natural/SeismicActivity.vue';\nimport RiskLayers from '@/components/layers/risk/RiskLayers.vue';\nimport RiskLayersToggle from '@/components/layers/risk/RiskLayersToggle.vue';\n\nimport debounce from \"lodash.debounce\";\nimport \"@maptiler/leaflet-maptilersdk\";\nimport 'leaflet-arrowheads';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LeafletMap',\n  setup(__props) {\n\n// ***********************\n// *** IMPORTS SECTION ***\n// ***********************\nconst showAbortModal = ref(false);\n\nconst abortEvaluation = () => {\n  try {\n    // Access the global tracker instance\n    const tracker = (window as any)._trackerInstance;\n    \n    if (tracker) {\n      // Stop the current session\n      tracker.stop();\n      console.log('Session replay aborted');\n    }\n    \n    // Close the modal\n    showAbortModal.value = false;\n    \n    // Try different methods to close the window\n    if (navigator.app) {\n      // For mobile apps\n      navigator.app.exitApp();\n    } else if (window.opener) {\n      // For popup windows\n      window.close();\n    } else {\n      // For main windows - this may not work due to browser restrictions\n      window.open('', '_self', '').close();\n      // Fallback: redirect to a blank page or confirmation page\n      window.location.href = 'about:blank';\n    }\n  } catch (error) {\n    console.error('Error aborting evaluation:', error);\n    showAbortModal.value = false;\n  }\n};\n\n// **************************\n// *** STORE DECLARATIONS ***\n// **************************\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\n\n// **************************\n// *** REF DECLARATIONS ***\n// **************************\nconst layerManagerRef = ref<any>(null);\nconst gasPipelineLayerRef = ref();\nconst vesselTrackingRef = ref<any>(null);\nconst maintenanceLayerToggleRef = ref(null);\nconst clusteredDataCentersRef = ref(null);\nconst anchorageLayerToggleRef = ref(null);\nconst oceanDepthRef = ref<any>(null);\nconst functionalityOverviewRef = ref(null);\nconst riskLayersToggleRef = ref(null);\n\n// **************************\n// *** REACTIVE STATE ***\n// **************************\n// Map configuration\nconst zoom = ref(2.5);\nconst center = ref([47.41322, -1.219482]);\nconst map = ref<LMap | null>(null);\nconst mapReady = ref(false);\nconst mapInstance = ref(null);\nconst controlInstance = ref(null);\nconst polylineMeasure = ref(null);\n\n// Landing site markers style\nconst circle = {\n  radius: 3,\n  selectedRadius: 6,\n  color: 'grey',\n  selectedColor: 'red',\n};\n\n// Layer states\nconst oceanSelected = ref(false);\nconst isDrawingModeActive = ref(false);\nconst fishingSelected = ref(false);\nconst showSeismicOverlay = ref(false);\nconst modifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png');\nconst fishLayerReady = ref(false);\n// Seismic\nconst selectedEarthquake = ref(null);\n// Vessel tracking\nconst hoveredMarker = ref(null);\nconst eventMarkerLayer = ref(null);\nconst viewingVesselTrack = ref(false);\nconst vesselPositions = ref([]);\nconst cableShipsLayerGroup = ref(L.layerGroup());\n\n// Infrastructure data\nconst infrastructurePositions = ref([]);\nconst resetMapLayer = ref(null);\n\n// Data cache for lazy loading\nconst dataCache = ref({\n  anchorage: null,\n  dredging: null,\n  fishing: null,\n  gasPipelines: null,\n  seismic: null,\n  terrainEurope: null,\n  fishingEurope: null,\n  loaded: {\n    anchorage: false,\n    dredging: false,\n    fishing: false,\n    gasPipelines: false,\n    seismic: false,\n    terrainEurope: false,\n    fishingEurope: false\n  }\n});\n\n// Computed data properties\nconst anchorageRiskHeatmapData = computed(() => dataCache.value.anchorage);\nconst dredgingData = computed<FeatureCollection | undefined>(() => {return dataCache.value.dredging ?? undefined;});\nconst aggregatedFishingData = computed(() => dataCache.value.fishing);\nconst gasPipelineData = computed(() => dataCache.value.gasPipelines);\nconst aggregatedSeismicData = computed(() => dataCache.value.seismic);\nconst terrainDataChoroplethEurope = computed(() => dataCache.value.terrainEurope);\nconst fishingDataEurope = computed(() => dataCache.value.fishingEurope);\n\n// **************************\n// *** TRANSLATION SYSTEM ***\n// **************************\nconst currentLanguage = ref('ENGLISH');\nconst currentTranslations = computed(() => {\n  return translations[currentLanguage.value];\n});\n\n/**\n * Changes the application language and updates all translated elements\n * @param {string} language - The language code to switch to\n */\nconst changeLanguage = (language) => {\n  currentLanguage.value = language;\n  if (layerManagerRef.value) {\n    layerManagerRef.value.changeLanguage(language);\n  }\n};\n\n/**\n * Gets translated infrastructure name with confidence level\n * @param {Object} infrastructure - The infrastructure object\n * @returns {string} Translated name with confidence\n */\nconst getTranslatedInfrastructureName = (infrastructure) => {\n  const name = currentTranslations.value[infrastructure.name] || currentTranslations.value.unknown;\n  const confidence = currentTranslations.value[infrastructure.confidence];\n  return `${name} (${currentTranslations.value.confidence} ${confidence})`;\n};\n\n// **************************\n// *** MAP INITIALIZATION ***\n// **************************\n/**\n * Handles map ready event, initializes tools and layers\n * @param {L.Map} mapIns - The Leaflet map instance\n */\nconst onMapReady = (mapIns) => {\n  mapInstance.value = mapIns;\n  cableStore.setMapInstance(mapIns);\n\n  // Initialize polyline measurement tool\n  polylineMeasure.value = L.control.polylineMeasure({\n    position: 'topleft',\n    showUnitControl: true,\n    unitControlUnits: [\"kilometres\", \"nauticalmiles\", \"landmiles\"],\n    unitControlTitle: {\n        text: 'Change Units',\n        metres: 'metres',\n        nauticalmiles: 'nautical miles',\n        landmiles: 'land miles'\n    },\n    unitControlLabel: {\n        metres: 'm',\n        kilometres: 'km',\n        feet: 'ft',\n        landmiles: 'mi',\n        nauticalmiles: 'nm'\n    }\n  });\n  polylineMeasure.value.addTo(mapInstance.value);\n  \n  // Initialize tooltip for cable hover\n  tooltip = L.tooltip({\n    permanent: false,\n    direction: 'top',\n    offset: L.point(0, -10),\n    className: 'custom-tooltip'\n  });\n\n  // Initialize marker layer for events\n  eventMarkerLayer.value = L.layerGroup().addTo(mapInstance.value);\n\n  mapReady.value = true;\n};\n\n/**\n * Handles layer control ready event\n * @param {L.Control.Layers} controlIns - The Leaflet layers control instance\n */\nconst onLayerControlReady = (controlIns) => {   \n  controlInstance.value = controlIns;    \n};\n\n// **************************\n// *** CABLE & POLYLINE FUNCTIONS ***\n// **************************\nconst polylinesBounds = {};\n\n/**\n * Handles polyline creation, stores bounds for each cable\n * @param {L.Polyline} polylineInstance - The created polyline instance\n * @param {string} cableId - ID of the associated cable\n */\nconst onCreateLine = (polylineInstance, cableId) => {\n  const bounds = polylineInstance.getBounds();\n  polylinesBounds[cableId] = polylinesBounds[cableId] ? polylinesBounds[cableId].extend(bounds) : bounds;\n\n  polylineInstance.on('mouseover', () => {\n    polylineInstance.openTooltip();\n  });\n  polylineInstance.on('mouseout', () => {\n    polylineInstance.closeTooltip();\n  });\n};\n\n// Watch for cable selection changes to pan/zoom map\nwatch(() => cableStore.selectCable, (state) => {\n  if (!mapInstance.value) return;\n  if (cableStore.selectedFromSidebar) {\n    let bounds;\n    for (const cable of state) {\n      const bound = polylinesBounds[cable];\n      bounds = bounds ? bounds.extend(bound) : bound;\n    }\n    if (bounds) {\n      mapInstance.value.fitBounds(bounds);\n    }\n    cableStore.selectedFromSidebar = false;\n  }\n});\n\n// Watch for landing site selection changes to pan map\nwatch(() => landingSiteStore.selectLandingSites, (state) => {\n  if (!mapInstance.value) return;\n  if (landingSiteStore.selectedFromSidebar) {\n    const geo = state[0]?.geoData;\n    if (!geo || geo.length < 2) return;  \n    const latlng = L.latLng(geo[0], geo[1]);\n    mapInstance.value.setView(latlng);\n    landingSiteStore.selectedFromSidebar = false;\n  }\n});\n\n\n// **************************\n// *** TOOLTIP FUNCTIONS ***\n// **************************\nlet tooltip = null;\n\n/**\n * Shows tooltip at mouse position with cable name\n * @param {LeafletMouseEvent} e - Mouse event\n * @param {string} cableName - Name of the cable to display\n */\nconst showTooltip = (e, cableName) => {\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(cableName)\n      .addTo(mapInstance.value);\n  }\n};\n\n/**\n * Hides the currently visible tooltip\n */\nconst hideTooltip = () => {\n  if (mapInstance.value && tooltip) {\n    mapInstance.value.removeLayer(tooltip);\n  }\n};\n\n// **************************\n// *** VESSEL FUNCTIONS ***\n// **************************\n/**\n * Creates a ship icon for vessel markers\n * @param {Object} vessel - Vessel data\n * @param {string} caller - Context where the icon is created\n * @returns {L.Icon} The created icon\n */\nconst createShipIcon = (vessel: Vessel, caller : string) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return null;\n  }\n  return vesselTrackingRef.value.createShipIcon('#ff7800', vessel.flag, vessel);\n};\n\n/**\n * Handles ship click events, delegates to VesselTracking component\n * @param {Event} e - Click event\n * @param {Object} vessel - Clicked vessel data\n */\nconst onShipClick = (e: Event, vessel: Vessel) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return;\n  }\n  vesselTrackingRef.value.onShipClick(e, vessel);\n};\n\n/**\n * Exits vessel tracking mode\n */\nconst exitVesselTrackingMode = () => {\n  vesselTrackingRef.value.exitVesselTrackingMode();\n}\n\n// Watch for vessel position changes\nwatch(\n  () => vesselPositions,\n  (newPositions) => {\n    if (newPositions && Array.isArray(newPositions) && newPositions.length > 0) {\n      vesselPositions.value = newPositions;\n    }\n  },\n  { deep: true }\n);\n\n// Watch for hovered marker changes\nwatch(\n  () => hoveredMarker.value,\n  (newMarker) => {\n    if (newMarker && eventMarkerLayer.value) {\n      eventMarkerLayer.value.addLayer(newMarker);\n    } else if (eventMarkerLayer.value && newMarker === null) {\n      eventMarkerLayer.value.clearLayers();\n    }\n  },\n  { deep: true }\n);\n\n// **************************\n// *** LAYER FUNCTIONS ***\n// **************************\n/**\n * Resets the map to its initial state\n */\nconst resetMap = () => {\n  if (!mapInstance.value || !layerManagerRef.value) {\n    console.warn('Map instance or layer manager not available');\n    return;\n  }\n\n  // Reset state variables\n  oceanSelected.value = false;\n  fishingSelected.value = false;\n  showSeismicOverlay.value = false;\n\n  // Use LayerManager methods\n  layerManagerRef.value.removeAllOverlays();\n\n  // Remove class modifiers from map container\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active',\n    'fishing-active',\n    'seismic-active',\n    'anchorage-active',\n    'cable-ships-active'\n  );\n\n  // Exit vessel tracking mode if active\n  if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  }\n\n  // Clear any selections\n  cableStore.deselectCables();\n  landingSiteStore.deselectLandingSite();\n\n  // Hide any open toggles\n  if (anchorageLayerToggleRef.value) {\n    anchorageLayerToggleRef.value.hide();\n  }\n  if (maintenanceLayerToggleRef.value) {\n    maintenanceLayerToggleRef.value.hide();\n  }\n\n  // Switch to the default base layer\n  layerManagerRef.value.switchToBaseLayer(\"Base Layer\");\n};\n\n/**\n * Handles base layer change events\n * @param {Object} e - Layer change event\n */\nfunction layerChanged(e) {\n  if (!mapInstance.value || !mapInstance.value._container) {\n    return;\n  }\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active', \n    'fishing-active', \n    'seismic-active',\n    'risk-layers-active'\n  );\n\n  if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  }\n  \n\n  if (e.originalName === \"Reset Map\") {\n    resetMap();\n    \n    // Find and switch to Base Layer\n    const baseLayer = controlInstance._layers.find(layer => \n      !layer.overlay && layer.originalName === \"Base Layer\"\n    );\n    \n    if (baseLayer && baseLayer.layer) {\n      // Remove current base layer if any\n      controlInstance._layers\n        .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n        .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n      \n      // Add Base Layer\n      mapInstance.value.addLayer(baseLayer.layer);\n      \n      // Update layer control\n      controlInstance._update();\n    }\n    return;\n  }\n  if(e.originalName === \"Base Layer\"){\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if(e.originalName === \"Seismic Activity\"){\n    mapContainer.classList.add('seismic-active');\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = true;\n  }\n  else if (e.originalName === \"Fishing Activity\"){\n    mapContainer.classList.add('fishing-active');\n    fishingSelected.value = true;\n    oceanSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if (e.originalName === \"Ocean Depth\") {\n    mapContainer.classList.add('ocean-depth-active');\n    oceanSelected.value = true;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if (e.originalName === \"Risk Layers\") {\n    mapContainer.classList.add('risk-layers-active');\n  }\n  else {\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n}\n\n/**\n * Handles overlay addition events\n * @param {Object} e - Overlay event\n */\nfunction overlayAdded(e) {\n  const mapContainer = mapInstance.value._container;\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.add('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.show();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.add('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.show();\n    }\n  }\n}\n\n/**\n * Handles overlay removal events\n * @param {Object} e - Overlay event\n */\nfunction overlayRemoved(e) {\n  const mapContainer = mapInstance.value._container;\n\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.remove('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.hide();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.remove('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.hide();\n    }\n  }\n}\n\n// **************************\n// *** CLICK HANDLERS ***\n// **************************\nlet set = false;\n\n/**\n * Handles map click events\n * @param {LeafletMouseEvent} event - The click event\n */\nconst onMapClick = (event) => {\n  if (gasPipelineLayerRef.value?.clearHighlight) {\n    gasPipelineLayerRef.value.clearHighlight();\n  }\n\n  if (maintenanceLayerToggleRef.value) {\n    const targetElement = event.originalEvent.target;\n    if (targetElement && !targetElement.classList.contains('leaflet-interactive')) {\n      maintenanceLayerToggleRef.value.clearHighlightedZones();\n    }\n  }\n\n  if (!set) {\n    cableStore.deselectCables();\n    landingSiteStore.deselectLandingSite();\n  }\n  set = false;\n};\n\n/**\n * Handles cable click events\n * @param {Event} e - The click event\n * @param {Object} cable - The clicked cable\n */\nconst onCableClick = (e: Event, cable) => {\n    // Original non-simulation behavior\n    set = true;\n    if (!landingSiteStore.isOneSelected() && cableStore.isCableSelected(cable.id)) {\n      cableStore.deselectCables();\n    } else {\n      landingSiteStore.deselectLandingSite();\n      cableStore.setSelectCable(cable.id, false);\n    }\n\n  // Display popup at click location\n  L.popup()\n    .setLatLng(e.latlng)\n    .setContent(cable.name)\n    .openOn(mapInstance.value);\n};\n\n/**\n * Handles landing site click events\n * @param {Event} e - The click event\n * @param {Object} landingSite - The clicked landing site\n */\nconst onLandingSiteClick = (e, landingSite) => {\n  set = true\n  cableStore.deselectCables();\n  if(landingSiteStore.isLandingSiteSelected(toRaw(landingSite))) {\n    landingSiteStore.deselectLandingSite();\n  } else {\n    landingSiteStore.setSelectLandingSite(toRaw(landingSite))\n  }\n}\n\n// **************************\n// *** MARITIME ZONE STYLES ***\n// **************************\n/**\n * Returns style options for territorial waters (12nm)\n * @returns {Object} Style options\n */\nfunction getTerritorialOptionsStyle(){\n  return {\n    color: '#4a2727',\n    dashArray: '8',\n    fillColor: '#4a2727',\n    fillOpacity: '0.2',\n  };\n}\n\n/**\n * Returns style options for EEZ (200nm)\n * @returns {Object} Style options\n */\nfunction getEEZOptionsStyle(){\n  return{\n    color: '#8a3030', \n    dashArray: '8'\n  }\n}\n\n// **************************\n// *** MOUSE INTERACTION ***\n// **************************\n/**\n * Updates mouse position for ocean depth layer\n * @param {LeafletMouseEvent} e - Mouse move event\n */\nconst updateMousePosition = debounce((e: LeafletMouseEvent) => {\n  if (oceanSelected.value && oceanDepthRef.value) {\n    oceanDepthRef.value.updateMousePosition(e);\n  }\n}, 100);\n\n// **************************\n// *** UI FUNCTIONS ***\n// **************************\n/**\n * Handles question mark click to show functionality overview\n */\nconst questionMarkClicked = () => {\n  if(functionalityOverviewRef.value){\n    functionalityOverviewRef.value.openModal();\n  }\n}\n\n// **************************\n// *** INITIALIZATION ***\n// **************************\n/**\n * Processes fixed infrastructure data from JSON\n */\nconst processInfrastructureData = () => {\n  infrastructurePositions.value = fixedInfrastructure.results\n    .filter(item => !(item.label === \"noise\") && item.structure_end_date === \"\")\n    .map(item => ({\n      id: item.detection_id,\n      position: [item.lat, item.lon],\n      name: item.label,\n      confidence: item.label_confidence,\n      lastSeen: item.detection_date\n    }));\n};\n\nonMounted(() => {\n  // Process infrastructure data immediately (small dataset)\n  processInfrastructureData();\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n\n  // Load critical data first (whatever's needed for initial view)\n  const loadCriticalData = async () => {\n    try {\n      const response = await fetch('/data/GEM-GGIT-Gas-Pipelines-2023-12.json');\n      dataCache.value.gasPipelines = await response.json();\n      dataCache.value.loaded.gasPipelines = true;\n    } catch (err) {\n      console.error('Error loading gas pipelines data:', err);\n    }\n  };\n\n  // Load non-critical data in background\n  const loadBackgroundData = async () => {\n    const backgroundData = [\n      { key: 'anchorage', url: '/data/anchorage.json' },\n      { key: 'dredging', url: '/data/dredgingEurope.json' },\n      { key: 'fishing', url: '/data/riskFishing_2012-2024.json' },\n      { key: 'seismic', url: '/data/riskSeismic_2000-2024.json' },\n      { key: 'terrainEurope', url: '/data/riskEurope/terrain_europe_cells_normalised.json' },\n      { key: 'fishingEurope', url: '/data/riskEurope/fishing_europe_cells_normalised.json' }\n    ];\n\n    for (const item of backgroundData) {\n      try {\n        const response = await fetch(item.url);\n        dataCache.value[item.key] = await response.json();\n        dataCache.value.loaded[item.key] = true;\n      \n      } catch (err) {\n        console.error(`Error loading ${item.key} data:`, err);\n      }\n    }\n  };\n\n  // Start critical load immediately\n  loadCriticalData();\n  \n  // Start background load after short delay to prioritize UI responsiveness\n  setTimeout(loadBackgroundData, 500);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(LMap), {\n      ref_key: \"map\",\n      ref: map,\n      zoom: zoom.value,\n      center: center.value,\n      minZoom: 1.5,\n      maxZoom: 20,\n      options: { zoomControl: true, markerZoomAnimation: false, worldCopyJump: true },\n      onBaselayerchange: layerChanged,\n      onOverlayadd: overlayAdded,\n      onOverlayremove: overlayRemoved,\n      onClick: _cache[13] || (_cache[13] = (e) => onMapClick(e)),\n      onReady: onMapReady,\n      onMousemove: _cache[14] || (_cache[14] = (e) => _unref(updateMousePosition)(e))\n    }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(cableStore).dataCables, (cable) => {\n          return (_openBlock(), _createElementBlock(_Fragment, null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.geoData, (section) => {\n              return (_openBlock(), _createBlock(_unref(LPolyline), {\n                \"lat-lngs\": section,\n                key: section,\n                color: cable.color,\n                opacity: \n          !viewingVesselTrack.value && (_unref(cableStore).isNoneSelected ||_unref(cableStore).isCableSelected(cable.id))\n            ? 1\n            : 0.15\n        ,\n                dashArray: cable.outOfService ? '5 5' : undefined,\n                onClick: (e) => onCableClick(e, cable),\n                onReady: (e) => onCreateLine(e, cable.id),\n                onMouseover: (e) => showTooltip(e, cable.name),\n                onMouseout: hideTooltip\n              }, null, 8, [\"lat-lngs\", \"color\", \"opacity\", \"dashArray\", \"onClick\", \"onReady\", \"onMouseover\"]))\n            }), 128))\n          ], 64))\n        }), 256)),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(landingSiteStore).getLandingSites, (tee) => {\n          return (_openBlock(), _createBlock(_unref(LCircleMarker), {\n            \"lat-lng\": tee.geoData,\n            key: tee,\n            radius: \n        _unref(landingSiteStore).isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedRadius\n          : circle.radius\n      ,\n            color: \n        _unref(landingSiteStore).isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedColor\n          : circle.color\n      ,\n            onClick: (e) => onLandingSiteClick(e, tee)\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_unref(LTooltip), null, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(tee.name) + \", \" + _toDisplayString(tee.country), 1)\n                ]),\n                _: 2\n              }, 1024)\n            ]),\n            _: 2\n          }, 1032, [\"lat-lng\", \"radius\", \"color\", \"onClick\"]))\n        }), 128)),\n        _createVNode(LayerManager, {\n          \"map-instance\": mapInstance.value,\n          \"current-language\": currentLanguage.value,\n          \"current-translations\": currentTranslations.value,\n          \"clustered-data-centers-ref\": clusteredDataCentersRef.value,\n          \"reset-map-layer\": resetMapLayer.value,\n          onLayerControlReady: onLayerControlReady,\n          onResetMap: resetMap,\n          ref_key: \"layerManagerRef\",\n          ref: layerManagerRef\n        }, null, 8, [\"map-instance\", \"current-language\", \"current-translations\", \"clustered-data-centers-ref\", \"reset-map-layer\"]),\n        _createVNode(SeismicActivity, {\n          \"current-translations\": currentTranslations.value,\n          \"show-seismic-overlay\": showSeismicOverlay.value,\n          \"current-language\": currentLanguage.value\n        }, null, 8, [\"current-translations\", \"show-seismic-overlay\", \"current-language\"]),\n        _createVNode(_unref(LTileLayer), {\n          name: \"Fishing Activity\",\n          url: modifiedPostUrl.value,\n          visible: false,\n          attribution: \"<a href=\\\" https://globalfishingwatch.org\\\">Powered by Global Fishing Watch</a>\",\n          \"layer-type\": \"base\"\n        }, null, 8, [\"url\"]),\n        _createVNode(OceanDepth, {\n          ref_key: \"oceanDepthRef\",\n          ref: oceanDepthRef,\n          \"map-instance\": mapInstance.value,\n          translations: currentTranslations.value,\n          \"is-ocean-selected\": oceanSelected.value,\n          \"is-drawing-mode-active\": isDrawingModeActive.value,\n          \"onUpdate:isDrawingModeActive\": _cache[0] || (_cache[0] = (val) => isDrawingModeActive.value = val)\n        }, null, 8, [\"map-instance\", \"translations\", \"is-ocean-selected\", \"is-drawing-mode-active\"]),\n        (oceanSelected.value)\n          ? (_openBlock(), _createBlock(_unref(LTileLayer), {\n              key: 0,\n              name: \"Ocean Depth\",\n              url: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_only_labels/{z}/{x}/{y}{r}.png\",\n              attribution: \"Tiles © Esri — Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n              maxZoom: 10,\n              visible: false\n            }))\n          : _createCommentVNode(\"\", true),\n        _createVNode(RiskLayers, {\n          \"current-translations\": currentTranslations.value,\n          \"map-instance\": mapInstance.value,\n          \"risk-layers-toggle-ref\": riskLayersToggleRef.value,\n          \"current-language\": currentLanguage.value,\n          \"vessel-positions\": vesselPositions.value,\n          \"fishing-data-europe\": fishingDataEurope.value,\n          \"terrain-data-choropleth-europe\": terrainDataChoroplethEurope.value,\n          \"dredging-data\": dredgingData.value,\n          \"aggregated-seismic-data\": aggregatedSeismicData.value,\n          \"anchorage-risk-data\": anchorageRiskHeatmapData.value,\n          \"aggregated-fishing-data\": aggregatedFishingData.value\n        }, null, 8, [\"current-translations\", \"map-instance\", \"risk-layers-toggle-ref\", \"current-language\", \"vessel-positions\", \"fishing-data-europe\", \"terrain-data-choropleth-europe\", \"dredging-data\", \"aggregated-seismic-data\", \"anchorage-risk-data\", \"aggregated-fishing-data\"]),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Anchorage and seabed use\",\n          \"layer-type\": \"overlay\",\n          visible: false\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              name: \"Seamarks\",\n              url: \"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\",\n              attribution: \"Map data: © <a href=\\\"http://www.openseamap.org\\\">OpenSeaMap</a> contributors\",\n              visible: false\n            }),\n            _createVNode(_unref(LLayerGroup), {\n              name: \"Fixed Infrastructure\",\n              \"layer-type\": \"overlay\"\n            }, {\n              default: _withCtx(() => [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(infrastructurePositions.value, (infrastructure) => {\n                  return (_openBlock(), _createBlock(_unref(LCircleMarker), {\n                    key: infrastructure.id,\n                    \"lat-lng\": infrastructure.position,\n                    radius: 5,\n                    color: \"#FFFFFF\",\n                    \"fill-color\": \"#1d8f82\",\n                    opacity: 1,\n                    \"fill-opacity\": 1,\n                    weight: 1\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_unref(LTooltip), null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(getTranslatedInfrastructureName(infrastructure)) + \", \" + _toDisplayString(currentTranslations.value.since) + \": \" + _toDisplayString(infrastructure.lastSeen), 1)\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"lat-lng\"]))\n                }), 128))\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Base Layer\",\n          \"layer-type\": \"base\",\n          visible: true\n        }),\n        _createVNode(_unref(LGeoJson), {\n          geojson: _unref(eez12nmJson),\n          \"layer-type\": \"overlay\",\n          name: \"Territorial Waters (12nm)\",\n          visible: false,\n          \"options-style\": getTerritorialOptionsStyle\n        }, null, 8, [\"geojson\"]),\n        _createVNode(_unref(LGeoJson), {\n          geojson: _unref(eezBoundariesJson),\n          \"layer-type\": \"overlay\",\n          name: \"Exclusive Economic Zone (200nm)\",\n          visible: false,\n          \"options-style\": getEEZOptionsStyle\n        }, null, 8, [\"geojson\"]),\n        _createVNode(GasPipelines, {\n          ref_key: \"gasPipelineLayerRef\",\n          ref: gasPipelineLayerRef,\n          \"gas-pipeline-data\": gasPipelineData.value,\n          \"map-instance\": mapInstance.value,\n          \"current-translations\": currentTranslations.value\n        }, null, 8, [\"gas-pipeline-data\", \"map-instance\", \"current-translations\"]),\n        _createVNode(VesselTracking, {\n          mapReady: mapReady.value,\n          mapInstance: mapInstance.value,\n          controlInstance: controlInstance.value,\n          currentLanguage: currentLanguage.value,\n          cableStore: _unref(cableStore),\n          \"layer-group\": cableShipsLayerGroup.value,\n          vesselPositions: vesselPositions.value,\n          \"onUpdate:vesselPositions\": _cache[1] || (_cache[1] = ($event: any) => ((vesselPositions).value = $event)),\n          hoveredMarker: hoveredMarker.value,\n          \"onUpdate:hoveredMarker\": _cache[2] || (_cache[2] = ($event: any) => ((hoveredMarker).value = $event)),\n          viewingVesselTrack: viewingVesselTrack.value,\n          \"onUpdate:viewingVesselTrack\": _cache[3] || (_cache[3] = ($event: any) => ((viewingVesselTrack).value = $event)),\n          ref_key: \"vesselTrackingRef\",\n          ref: vesselTrackingRef\n        }, null, 8, [\"mapReady\", \"mapInstance\", \"controlInstance\", \"currentLanguage\", \"cableStore\", \"layer-group\", \"vesselPositions\", \"hoveredMarker\", \"viewingVesselTrack\"]),\n        _createVNode(_unref(LLayerGroup), {\n          visible: false,\n          name: \"Cable Ships\",\n          \"layer-type\": \"overlay\",\n          onRemove: _cache[4] || (_cache[4] = ($event: any) => (exitVesselTrackingMode()))\n        }, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(vesselPositions.value, (vessel) => {\n              return (_openBlock(), _createBlock(_unref(LMarker), {\n                key: vessel.id,\n                \"lat-lng\": vessel.position,\n                icon: createShipIcon(vessel, 'OVERLAY'),\n                onClick: (e) => onShipClick(e, vessel)\n              }, null, 8, [\"lat-lng\", \"icon\", \"onClick\"]))\n            }), 128))\n          ]),\n          _: 1\n        }),\n        _createElementVNode(\"div\", {\n          onClick: questionMarkClicked,\n          class: \"question-mark\"\n        }, _hoisted_2),\n        _createElementVNode(\"div\", {\n          onClick: _cache[5] || (_cache[5] = ($event: any) => (showAbortModal.value = true)),\n          class: \"abort-evaluation-button\"\n        }, _hoisted_4),\n        (showAbortModal.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 1,\n              class: \"abort-modal-overlay\",\n              onClick: _cache[8] || (_cache[8] = ($event: any) => (showAbortModal.value = false))\n            }, [\n              _createElementVNode(\"div\", {\n                class: \"abort-modal\",\n                onClick: _cache[7] || (_cache[7] = _withModifiers(() => {}, [\"stop\"]))\n              }, [\n                _createElementVNode(\"h3\", null, _toDisplayString(currentTranslations.value.abortEvaluation || 'Abort Evaluation'), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(currentTranslations.value.abortEvaluationText || 'Are you sure you want to abort the evaluation? This will remove your current session replay.'), 1),\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _createElementVNode(\"button\", {\n                    onClick: _cache[6] || (_cache[6] = ($event: any) => (showAbortModal.value = false)),\n                    class: \"cancel-button\"\n                  }, _toDisplayString(currentTranslations.value.cancel || 'Cancel'), 1),\n                  _createElementVNode(\"button\", {\n                    onClick: abortEvaluation,\n                    class: \"confirm-button\"\n                  }, _toDisplayString(currentTranslations.value.confirm || 'Confirm'), 1)\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createVNode(FunctionalityOverview, {\n          ref_key: \"functionalityOverviewRef\",\n          ref: functionalityOverviewRef,\n          \"current-translations\": currentTranslations.value,\n          currentLanguage: currentLanguage.value\n        }, null, 8, [\"current-translations\", \"currentLanguage\"]),\n        _createVNode(FishingDatePicker, {\n          visible: fishingSelected.value,\n          \"current-translations\": currentTranslations.value,\n          \"onUpdate:fishingUrl\": _cache[9] || (_cache[9] = (url) => modifiedPostUrl.value = url),\n          onFishingLayerReady: _cache[10] || (_cache[10] = (ready) => fishLayerReady.value = ready)\n        }, null, 8, [\"visible\", \"current-translations\"]),\n        _createElementVNode(\"div\", _hoisted_6, [\n          _hoisted_7,\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((currentLanguage).value = $event)),\n            onChange: _cache[12] || (_cache[12] = ($event: any) => (changeLanguage(currentLanguage.value)))\n          }, _hoisted_14, 544), [\n            [_vModelSelect, currentLanguage.value]\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_15, [\n          _createVNode(CableSourceSelector, {\n            \"current-translations\": currentTranslations.value,\n            currentLanguage: currentLanguage.value\n          }, null, 8, [\"current-translations\", \"currentLanguage\"])\n        ]),\n        _createVNode(ClusteredAnchorage, {\n          mapInstance: mapInstance.value,\n          controlInstance: controlInstance.value,\n          \"map-ready\": mapReady.value,\n          \"current-translations\": currentTranslations.value\n        }, null, 8, [\"mapInstance\", \"controlInstance\", \"map-ready\", \"current-translations\"]),\n        _createVNode(ClusteredDataCenters, {\n          ref_key: \"clusteredDataCentersRef\",\n          ref: clusteredDataCentersRef,\n          mapInstance: mapInstance.value,\n          controlInstance: controlInstance.value,\n          mapReady: mapReady.value,\n          currentTranslations: currentTranslations.value\n        }, null, 8, [\"mapInstance\", \"controlInstance\", \"mapReady\", \"currentTranslations\"]),\n        _createVNode(AnchorageLayerToggle, {\n          ref_key: \"anchorageLayerToggleRef\",\n          ref: anchorageLayerToggleRef,\n          \"map-instance\": mapInstance.value,\n          \"control-instance\": controlInstance.value,\n          \"current-translations\": currentTranslations.value\n        }, null, 8, [\"map-instance\", \"control-instance\", \"current-translations\"]),\n        _createVNode(RiskLayersToggle, {\n          ref_key: \"riskLayersToggleRef\",\n          ref: riskLayersToggleRef,\n          \"map-instance\": mapInstance.value,\n          \"control-instance\": controlInstance.value,\n          \"current-translations\": currentTranslations.value,\n          currentLanguage: currentLanguage.value\n        }, null, 8, [\"map-instance\", \"control-instance\", \"current-translations\", \"currentLanguage\"]),\n        _createVNode(MaintenanceLayerToggle, {\n          ref_key: \"maintenanceLayerToggleRef\",\n          ref: maintenanceLayerToggleRef,\n          \"map-instance\": mapInstance.value,\n          \"control-instance\": controlInstance.value,\n          \"current-translations\": currentTranslations.value,\n          viewingVesselTrack: viewingVesselTrack.value\n        }, null, 8, [\"map-instance\", \"control-instance\", \"current-translations\", \"viewingVesselTrack\"])\n      ]),\n      _: 1\n    }, 8, [\"zoom\", \"center\"]),\n    (selectedEarthquake.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n          _createElementVNode(\"h2\", null, _toDisplayString(currentTranslations.value.selectedEarthquakeDetails) + \":\", 1),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.magnitude) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(selectedEarthquake.value.mag), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.location) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(selectedEarthquake.value.place), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.time) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(new Date(selectedEarthquake.value.time).toLocaleString()), 1)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\n  <!-- \n    LeafletMap.vue - Main map component for submarine cable visualization\n    Features:\n    - Displays submarine cables, landing sites, and related infrastructure\n    - Multiple interactive layers (ocean depth, fishing activity, seismic data)\n    - Risk assessment visualization\n    - Vessel tracking functionality\n    - Multi-language support\n  -->\n  <l-map\n    ref=\"map\"\n    :zoom=\"zoom\"\n    :center=\"center\"\n    :minZoom=\"1.5\"\n    :maxZoom=\"20\"\n    :options=\"{ zoomControl: true, markerZoomAnimation: false, worldCopyJump: true }\"\n    @baselayerchange=\"layerChanged\"\n    @overlayadd=\"overlayAdded\"\n    @overlayremove=\"overlayRemoved\"\n    @click=\"(e: LeafletMouseEvent) => onMapClick(e)\"\n    @ready=\"onMapReady\"\n    @mousemove=\"(e: LeafletMouseEvent) => updateMousePosition(e)\"\n  >\n    <!-- *********************** -->\n    <!-- *** CABLE RENDERING *** -->\n    <!-- *********************** -->\n    <template v-for=\"cable in cableStore.dataCables\">\n      <l-polyline\n        v-for=\"section in cable.geoData\"\n        :lat-lngs=\"section\"\n        :key=\"section\"\n        :color=\"cable.color\"\n        :opacity=\"\n          !viewingVesselTrack && (cableStore.isNoneSelected ||cableStore.isCableSelected(cable.id))\n            ? 1\n            : 0.15\n        \"\n        :dashArray=\"cable.outOfService ? '5 5' : undefined\"\n        @click=\"(e) => onCableClick(e, cable)\"\n        @ready=\"(e) => onCreateLine(e, cable.id)\"\n        @mouseover=\"(e) => showTooltip(e, cable.name)\"\n        @mouseout=\"hideTooltip\"\n      >\n      </l-polyline>\n    </template>\n\n    <!-- **************************** -->\n    <!-- *** LANDING SITE MARKERS *** -->\n    <!-- **************************** -->\n    <l-circle-marker\n      v-for=\"tee in landingSiteStore.getLandingSites\"\n      :lat-lng=\"tee.geoData\"\n      :key=\"tee\"\n      :radius=\"\n        landingSiteStore.isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedRadius\n          : circle.radius\n      \"\n      :color=\"\n        landingSiteStore.isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedColor\n          : circle.color\n      \"\n      @click=\"(e) => onLandingSiteClick(e, tee)\"\n    >\n      <l-tooltip>{{ tee.name }}, {{ tee.country }}</l-tooltip>\n    </l-circle-marker>\n\n    <!-- ************************ -->\n    <!-- *** LAYER MANAGEMENT *** -->\n    <!-- ************************ -->\n    <LayerManager\n      :map-instance=\"mapInstance\"\n      :current-language=\"currentLanguage\"\n      :current-translations=\"currentTranslations\"\n      :clustered-data-centers-ref=\"clusteredDataCentersRef\"\n      :reset-map-layer=\"resetMapLayer\"\n      @layer-control-ready=\"onLayerControlReady\"\n      @reset-map=\"resetMap\"\n      ref=\"layerManagerRef\"\n    />\n\n    <!-- *********************** -->\n    <!-- *** SEISMIC ACTIVITY *** -->\n    <!-- *********************** -->\n    <SeismicActivity \n      :current-translations=\"currentTranslations\"\n      :show-seismic-overlay=\"showSeismicOverlay\"\n      :current-language=\"currentLanguage\"\n    />\n\n    <!-- *********************** -->\n    <!-- *** FISHING ACTIVITY *** -->\n    <!-- *********************** -->\n    <l-tile-layer\n      name=\"Fishing Activity\"\n      :url=\"modifiedPostUrl\"\n      :visible=\"false\"\n      attribution='<a href=\" https://globalfishingwatch.org\">Powered by Global Fishing Watch</a>'\n      layer-type=\"base\"\n    ></l-tile-layer>\n\n    <!-- ******************** -->\n    <!-- *** OCEAN DEPTH *** -->\n    <!-- ******************** -->\n    <OceanDepth\n      ref=\"oceanDepthRef\"\n      :map-instance=\"mapInstance\"\n      :translations=\"currentTranslations\"\n      :is-ocean-selected=\"oceanSelected\"\n      :is-drawing-mode-active=\"isDrawingModeActive\"\n      @update:isDrawingModeActive=\"(val) => isDrawingModeActive = val\"\n    />\n\n    <l-tile-layer\n      v-if=\"oceanSelected\"\n      name=\"Ocean Depth\"\n      url=\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_only_labels/{z}/{x}/{y}{r}.png\"\n      attribution=\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\"\n      :maxZoom=\"10\"\n      :visible=\"false\"\n    >\n    </l-tile-layer>\n\n    <!-- *********************** -->\n    <!-- *** RISK LAYERS *** -->\n    <!-- *********************** -->\n    <RiskLayers \n      :current-translations=\"currentTranslations\"\n      :map-instance=\"mapInstance\"\n      :risk-layers-toggle-ref=\"riskLayersToggleRef\"\n      :current-language=\"currentLanguage\"\n      :vessel-positions=\"vesselPositions\"\n      :fishing-data-europe=\"fishingDataEurope\"\n      :terrain-data-choropleth-europe=\"terrainDataChoroplethEurope\"\n      :dredging-data=\"dredgingData\"\n      :aggregated-seismic-data=\"aggregatedSeismicData\"\n      :anchorage-risk-data=\"anchorageRiskHeatmapData\"\n      :aggregated-fishing-data=\"aggregatedFishingData\"\n    />\n\n    <!-- ******************************** -->\n    <!-- *** ANCHORAGE & SEABED USE *** -->\n    <!-- ******************************** -->\n    <l-layer-group \n      name=\"Anchorage and seabed use\" \n      layer-type=\"overlay\" \n      :visible=\"false\"\n    >\n      <!-- Seamarks Layer -->\n      <l-tile-layer\n        name=\"Seamarks\"\n        url=\"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\"\n        attribution='Map data: &copy; <a href=\"http://www.openseamap.org\">OpenSeaMap</a> contributors'\n        :visible=\"false\"\n      />\n\n      <!-- Fixed Infrastructure Layer -->\n      <l-layer-group name=\"Fixed Infrastructure\" layer-type=\"overlay\">\n        <l-circle-marker\n          v-for=\"infrastructure in infrastructurePositions\"\n          :key=\"infrastructure.id\"\n          :lat-lng=\"infrastructure.position\"\n          :radius=\"5\"\n          color=\"#FFFFFF\"\n          fill-color=\"#1d8f82\"\n          :opacity=\"1\"\n          :fill-opacity=\"1\"\n          :weight=\"1\"\n        >\n          <l-tooltip>\n            {{ getTranslatedInfrastructureName(infrastructure) }}, \n            {{ currentTranslations.since }}: {{ infrastructure.lastSeen }}\n          </l-tooltip>\n        </l-circle-marker>\n      </l-layer-group>\n    </l-layer-group>\n\n    <!-- *********************** -->\n    <!-- *** BASE LAYER GROUP *** -->\n    <!-- *********************** -->\n    <l-layer-group name=\"Base Layer\" layer-type=\"base\" :visible=\"true\">\n    </l-layer-group>\n    \n    <!-- *********************** -->\n    <!-- *** MARITIME ZONES *** -->\n    <!-- *********************** -->\n    <l-geo-json\n      :geojson=\"eez12nmJson\"\n      layer-type=\"overlay\"\n      name=\"Territorial Waters (12nm)\"\n      :visible=\"false\"\n      :options-style=\"getTerritorialOptionsStyle\"\n    ></l-geo-json>\n\n    <l-geo-json\n      :geojson=\"eezBoundariesJson\"\n      layer-type=\"overlay\"\n      name=\"Exclusive Economic Zone (200nm)\"\n      :visible=\"false\"\n      :options-style=\"getEEZOptionsStyle\"\n    ></l-geo-json>\n\n    <!-- *********************** -->\n    <!-- *** GAS PIPELINES *** -->\n    <!-- *********************** -->\n    <GasPipelines\n      ref=\"gasPipelineLayerRef\"\n      :gas-pipeline-data=\"gasPipelineData\"\n      :map-instance=\"mapInstance\"\n      :current-translations=\"currentTranslations\"\n    />\n\n    <!-- *********************** -->\n    <!-- *** VESSEL TRACKING *** -->\n    <!-- *********************** -->\n    <VesselTracking\n      :mapReady=\"mapReady\"\n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :currentLanguage=\"currentLanguage\"\n      :cableStore=\"cableStore\"\n      :layer-group=\"cableShipsLayerGroup\"\n      v-model:vesselPositions=\"vesselPositions\"\n      v-model:hoveredMarker=\"hoveredMarker\"\n      v-model:viewingVesselTrack=\"viewingVesselTrack\"\n      ref=\"vesselTrackingRef\"\n    />\n\n    <l-layer-group\n      :visible=\"false\"\n      name=\"Cable Ships\"\n      layer-type=\"overlay\"\n      @remove= \"exitVesselTrackingMode()\"\n    >\n      <l-marker \n        v-for=\"vessel in vesselPositions\" \n        :key=\"vessel.id\" \n        :lat-lng=\"vessel.position\" \n        :icon=\"createShipIcon(vessel, 'OVERLAY')\"\n        @click=\"(e) => onShipClick(e, vessel)\">\n      </l-marker>\n    </l-layer-group>\n\n    <!-- *********************** -->\n    <!-- *** UI CONTROLS *** -->\n    <!-- *********************** -->\n    <!-- Help Button -->\n    <div @click=\"questionMarkClicked\" class=\"question-mark\">\n      <h2>?</h2>\n    </div>\n\n    <div @click=\"showAbortModal = true\" class=\"abort-evaluation-button\">\n  <h2>×</h2>\n</div>\n\n<!-- Abort Evaluation Modal -->\n<div v-if=\"showAbortModal\" class=\"abort-modal-overlay\" @click=\"showAbortModal = false\">\n  <div class=\"abort-modal\" @click.stop>\n    <h3>{{ currentTranslations.abortEvaluation || 'Abort Evaluation' }}</h3>\n    <p>{{ currentTranslations.abortEvaluationText || 'Are you sure you want to abort the evaluation? This will remove your current session replay.' }}</p>\n    <div class=\"modal-buttons\">\n      <button @click=\"showAbortModal = false\" class=\"cancel-button\">\n        {{ currentTranslations.cancel || 'Cancel' }}\n      </button>\n      <button @click=\"abortEvaluation\" class=\"confirm-button\">\n        {{ currentTranslations.confirm || 'Confirm' }}\n      </button>\n    </div>\n  </div>\n</div>\n\n    <!-- Functionality Overview Modal -->\n    <FunctionalityOverview \n      ref=\"functionalityOverviewRef\"\n      :current-translations=\"currentTranslations\"\n      :currentLanguage=\"currentLanguage\"\n    />\n\n    <!-- Fishing Date Picker -->\n    <FishingDatePicker\n      :visible=\"fishingSelected\"\n      :current-translations=\"currentTranslations\"\n      @update:fishingUrl=\"(url) => modifiedPostUrl = url\"\n      @fishing-layer-ready=\"(ready) => fishLayerReady = ready\"\n    />\n\n    <!-- Language Selector -->\n    <div class=\"language-selector\">\n      <div class=\"language-icon\"></div>\n      <select v-model=\"currentLanguage\" @change=\"changeLanguage(currentLanguage)\">\n        <option value=\"ENGLISH\">English</option>\n        <option value=\"GERMAN\">Deutsch</option>\n        <option value=\"SPANISH\">Español</option>\n        <option value=\"FRENCH\">Français</option>\n        <option value=\"ITALIAN\">Italiano</option>\n        <option value=\"CHINESE\">中国</option>\n      </select>\n    </div>\n\n    <!-- Cable Source Selector -->\n    <div class=\"cable-source-selector\">\n      <CableSourceSelector \n        :current-translations=\"currentTranslations\"\n        :currentLanguage=\"currentLanguage\"\n      />\n    </div>\n\n    <!-- *********************** -->\n    <!-- *** CLUSTERED DATA *** -->\n    <!-- *********************** -->\n    <!-- Clustered Anchorage -->\n    <ClusteredAnchorage \n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :map-ready=\"mapReady\"\n      :current-translations=\"currentTranslations\"\n    />\n\n    <!-- Clustered Data Centers -->\n    <ClusteredDataCenters\n      ref=\"clusteredDataCentersRef\"\n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :mapReady=\"mapReady\"\n      :currentTranslations=\"currentTranslations\"\n    />\n\n    <!-- *********************** -->\n    <!-- *** LAYER TOGGLES *** -->\n    <!-- *********************** -->\n    <!-- Anchorage Layer Toggle -->\n    <AnchorageLayerToggle \n      ref=\"anchorageLayerToggleRef\"\n      :map-instance=\"mapInstance\"\n      :control-instance=\"controlInstance\"\n      :current-translations=\"currentTranslations\"\n    />\n\n    <!-- Risk Layers Toggle -->\n    <RiskLayersToggle \n      ref=\"riskLayersToggleRef\"\n      :map-instance=\"mapInstance\"\n      :control-instance=\"controlInstance\"\n      :current-translations=\"currentTranslations\"\n      :currentLanguage=\"currentLanguage\"\n    />\n\n    <!-- Maintenance Layer Toggle -->\n    <MaintenanceLayerToggle \n      ref=\"maintenanceLayerToggleRef\"\n      :map-instance=\"mapInstance\"\n      :control-instance=\"controlInstance\"\n      :current-translations=\"currentTranslations\"\n      :viewingVesselTrack=\"viewingVesselTrack\"\n    />\n  </l-map>\n\n  <!-- *********************** -->\n  <!-- *** DETAILS PANELS *** -->\n  <!-- *********************** -->\n  <!-- Earthquake Details Panel -->\n  <div v-if=\"selectedEarthquake\" class=\"earthquake-details\">\n    <h2>{{ currentTranslations.selectedEarthquakeDetails }}:</h2>\n    <p><strong>{{ currentTranslations.value.magnitude }}:</strong> {{ selectedEarthquake.mag }}</p>\n    <p><strong>{{ currentTranslations.value.location }}:</strong> {{ selectedEarthquake.place }}</p>\n    <p><strong>{{ currentTranslations.value.time }}:</strong> {{ new Date(selectedEarthquake.time).toLocaleString() }}</p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// ***********************\n// *** IMPORTS SECTION ***\n// ***********************\nimport FunctionalityOverview from '@/components/controls/FunctionalityOverview.vue';\nimport { ref, onMounted, watch, toRaw, computed } from 'vue';\nimport L from 'leaflet';\nimport type { LeafletMouseEvent } from 'leaflet';\nimport type { FeatureCollection } from 'geojson';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure.css';\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure';\nimport {\n  LMap,\n  LTileLayer,\n  LTooltip,\n  LPolyline,\n  LMarker,\n  LCircleMarker,\n  LGeoJson,\n  LLayerGroup,\n} from '@vue-leaflet/vue-leaflet';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\n\nimport LayerManager from '@/components/LayerManager.vue';\nimport CableSourceSelector from '@/components/controls/CableSourceSelector.vue';\nimport translations from \"@/assets/translations/translations.json\";\n\nimport VesselTracking from './layers/maritime/VesselTracking.vue';\nimport MaintenanceLayerToggle from '@/components/layers/infrastructure/MaintenanceLayerToggle.vue';\nimport eezBoundariesJson from \"@/assets/eez_boundaries_v12.json\";\nimport eez12nmJson from \"@/assets/eez_12nm_v4.json\";\nimport OceanDepth from '@/components/layers/natural/OceanDepth.vue';\nimport FishingDatePicker from '@/components/controls/FishingDatePicker.vue';\nimport GasPipelines from '@/components/layers/infrastructure/GasPipelines.vue';\nimport fixedInfrastructure from \"@/assets/fixedInfrastructure.json\";\nimport ClusteredDataCenters from '@/components/layers/infrastructure/ClusteredDataCenters.vue';\nimport AnchorageLayerToggle from '@/components/layers/infrastructure/AnchorageLayerToggle.vue';\nimport ClusteredAnchorage from '@/components/layers/infrastructure/ClusteredAnchorage.vue';\nimport SeismicActivity from '@/components/layers/natural/SeismicActivity.vue';\nimport RiskLayers from '@/components/layers/risk/RiskLayers.vue';\nimport RiskLayersToggle from '@/components/layers/risk/RiskLayersToggle.vue';\n\nimport debounce from \"lodash.debounce\";\nimport \"@maptiler/leaflet-maptilersdk\";\nimport 'leaflet-arrowheads';\n\nconst showAbortModal = ref(false);\n\nconst abortEvaluation = () => {\n  try {\n    // Access the global tracker instance\n    const tracker = (window as any)._trackerInstance;\n    \n    if (tracker) {\n      // Stop the current session\n      tracker.stop();\n      console.log('Session replay aborted');\n    }\n    \n    // Close the modal\n    showAbortModal.value = false;\n    \n    // Try different methods to close the window\n    if (navigator.app) {\n      // For mobile apps\n      navigator.app.exitApp();\n    } else if (window.opener) {\n      // For popup windows\n      window.close();\n    } else {\n      // For main windows - this may not work due to browser restrictions\n      window.open('', '_self', '').close();\n      // Fallback: redirect to a blank page or confirmation page\n      window.location.href = 'about:blank';\n    }\n  } catch (error) {\n    console.error('Error aborting evaluation:', error);\n    showAbortModal.value = false;\n  }\n};\n\n// **************************\n// *** STORE DECLARATIONS ***\n// **************************\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\n\n// **************************\n// *** REF DECLARATIONS ***\n// **************************\nconst layerManagerRef = ref<any>(null);\nconst gasPipelineLayerRef = ref();\nconst vesselTrackingRef = ref<any>(null);\nconst maintenanceLayerToggleRef = ref(null);\nconst clusteredDataCentersRef = ref(null);\nconst anchorageLayerToggleRef = ref(null);\nconst oceanDepthRef = ref<any>(null);\nconst functionalityOverviewRef = ref(null);\nconst riskLayersToggleRef = ref(null);\n\n// **************************\n// *** REACTIVE STATE ***\n// **************************\n// Map configuration\nconst zoom = ref(2.5);\nconst center = ref([47.41322, -1.219482]);\nconst map = ref<LMap | null>(null);\nconst mapReady = ref(false);\nconst mapInstance = ref(null);\nconst controlInstance = ref(null);\nconst polylineMeasure = ref(null);\n\n// Landing site markers style\nconst circle = {\n  radius: 3,\n  selectedRadius: 6,\n  color: 'grey',\n  selectedColor: 'red',\n};\n\n// Layer states\nconst oceanSelected = ref(false);\nconst isDrawingModeActive = ref(false);\nconst fishingSelected = ref(false);\nconst showSeismicOverlay = ref(false);\nconst modifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png');\nconst fishLayerReady = ref(false);\n// Seismic\nconst selectedEarthquake = ref(null);\n// Vessel tracking\nconst hoveredMarker = ref(null);\nconst eventMarkerLayer = ref(null);\nconst viewingVesselTrack = ref(false);\nconst vesselPositions = ref([]);\nconst cableShipsLayerGroup = ref(L.layerGroup());\n\n// Infrastructure data\nconst infrastructurePositions = ref([]);\nconst resetMapLayer = ref(null);\n\n// Data cache for lazy loading\nconst dataCache = ref({\n  anchorage: null,\n  dredging: null,\n  fishing: null,\n  gasPipelines: null,\n  seismic: null,\n  terrainEurope: null,\n  fishingEurope: null,\n  loaded: {\n    anchorage: false,\n    dredging: false,\n    fishing: false,\n    gasPipelines: false,\n    seismic: false,\n    terrainEurope: false,\n    fishingEurope: false\n  }\n});\n\n// Computed data properties\nconst anchorageRiskHeatmapData = computed(() => dataCache.value.anchorage);\nconst dredgingData = computed<FeatureCollection | undefined>(() => {return dataCache.value.dredging ?? undefined;});\nconst aggregatedFishingData = computed(() => dataCache.value.fishing);\nconst gasPipelineData = computed(() => dataCache.value.gasPipelines);\nconst aggregatedSeismicData = computed(() => dataCache.value.seismic);\nconst terrainDataChoroplethEurope = computed(() => dataCache.value.terrainEurope);\nconst fishingDataEurope = computed(() => dataCache.value.fishingEurope);\n\n// **************************\n// *** TRANSLATION SYSTEM ***\n// **************************\nconst currentLanguage = ref('ENGLISH');\nconst currentTranslations = computed(() => {\n  return translations[currentLanguage.value];\n});\n\n/**\n * Changes the application language and updates all translated elements\n * @param {string} language - The language code to switch to\n */\nconst changeLanguage = (language) => {\n  currentLanguage.value = language;\n  if (layerManagerRef.value) {\n    layerManagerRef.value.changeLanguage(language);\n  }\n};\n\n/**\n * Gets translated infrastructure name with confidence level\n * @param {Object} infrastructure - The infrastructure object\n * @returns {string} Translated name with confidence\n */\nconst getTranslatedInfrastructureName = (infrastructure) => {\n  const name = currentTranslations.value[infrastructure.name] || currentTranslations.value.unknown;\n  const confidence = currentTranslations.value[infrastructure.confidence];\n  return `${name} (${currentTranslations.value.confidence} ${confidence})`;\n};\n\n// **************************\n// *** MAP INITIALIZATION ***\n// **************************\n/**\n * Handles map ready event, initializes tools and layers\n * @param {L.Map} mapIns - The Leaflet map instance\n */\nconst onMapReady = (mapIns) => {\n  mapInstance.value = mapIns;\n  cableStore.setMapInstance(mapIns);\n\n  // Initialize polyline measurement tool\n  polylineMeasure.value = L.control.polylineMeasure({\n    position: 'topleft',\n    showUnitControl: true,\n    unitControlUnits: [\"kilometres\", \"nauticalmiles\", \"landmiles\"],\n    unitControlTitle: {\n        text: 'Change Units',\n        metres: 'metres',\n        nauticalmiles: 'nautical miles',\n        landmiles: 'land miles'\n    },\n    unitControlLabel: {\n        metres: 'm',\n        kilometres: 'km',\n        feet: 'ft',\n        landmiles: 'mi',\n        nauticalmiles: 'nm'\n    }\n  });\n  polylineMeasure.value.addTo(mapInstance.value);\n  \n  // Initialize tooltip for cable hover\n  tooltip = L.tooltip({\n    permanent: false,\n    direction: 'top',\n    offset: L.point(0, -10),\n    className: 'custom-tooltip'\n  });\n\n  // Initialize marker layer for events\n  eventMarkerLayer.value = L.layerGroup().addTo(mapInstance.value);\n\n  mapReady.value = true;\n};\n\n/**\n * Handles layer control ready event\n * @param {L.Control.Layers} controlIns - The Leaflet layers control instance\n */\nconst onLayerControlReady = (controlIns) => {   \n  controlInstance.value = controlIns;    \n};\n\n// **************************\n// *** CABLE & POLYLINE FUNCTIONS ***\n// **************************\nconst polylinesBounds = {};\n\n/**\n * Handles polyline creation, stores bounds for each cable\n * @param {L.Polyline} polylineInstance - The created polyline instance\n * @param {string} cableId - ID of the associated cable\n */\nconst onCreateLine = (polylineInstance, cableId) => {\n  const bounds = polylineInstance.getBounds();\n  polylinesBounds[cableId] = polylinesBounds[cableId] ? polylinesBounds[cableId].extend(bounds) : bounds;\n\n  polylineInstance.on('mouseover', () => {\n    polylineInstance.openTooltip();\n  });\n  polylineInstance.on('mouseout', () => {\n    polylineInstance.closeTooltip();\n  });\n};\n\n// Watch for cable selection changes to pan/zoom map\nwatch(() => cableStore.selectCable, (state) => {\n  if (!mapInstance.value) return;\n  if (cableStore.selectedFromSidebar) {\n    let bounds;\n    for (const cable of state) {\n      const bound = polylinesBounds[cable];\n      bounds = bounds ? bounds.extend(bound) : bound;\n    }\n    if (bounds) {\n      mapInstance.value.fitBounds(bounds);\n    }\n    cableStore.selectedFromSidebar = false;\n  }\n});\n\n// Watch for landing site selection changes to pan map\nwatch(() => landingSiteStore.selectLandingSites, (state) => {\n  if (!mapInstance.value) return;\n  if (landingSiteStore.selectedFromSidebar) {\n    const geo = state[0]?.geoData;\n    if (!geo || geo.length < 2) return;  \n    const latlng = L.latLng(geo[0], geo[1]);\n    mapInstance.value.setView(latlng);\n    landingSiteStore.selectedFromSidebar = false;\n  }\n});\n\n\n// **************************\n// *** TOOLTIP FUNCTIONS ***\n// **************************\nlet tooltip = null;\n\n/**\n * Shows tooltip at mouse position with cable name\n * @param {LeafletMouseEvent} e - Mouse event\n * @param {string} cableName - Name of the cable to display\n */\nconst showTooltip = (e, cableName) => {\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(cableName)\n      .addTo(mapInstance.value);\n  }\n};\n\n/**\n * Hides the currently visible tooltip\n */\nconst hideTooltip = () => {\n  if (mapInstance.value && tooltip) {\n    mapInstance.value.removeLayer(tooltip);\n  }\n};\n\n// **************************\n// *** VESSEL FUNCTIONS ***\n// **************************\n/**\n * Creates a ship icon for vessel markers\n * @param {Object} vessel - Vessel data\n * @param {string} caller - Context where the icon is created\n * @returns {L.Icon} The created icon\n */\nconst createShipIcon = (vessel: Vessel, caller : string) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return null;\n  }\n  return vesselTrackingRef.value.createShipIcon('#ff7800', vessel.flag, vessel);\n};\n\n/**\n * Handles ship click events, delegates to VesselTracking component\n * @param {Event} e - Click event\n * @param {Object} vessel - Clicked vessel data\n */\nconst onShipClick = (e: Event, vessel: Vessel) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return;\n  }\n  vesselTrackingRef.value.onShipClick(e, vessel);\n};\n\n/**\n * Exits vessel tracking mode\n */\nconst exitVesselTrackingMode = () => {\n  vesselTrackingRef.value.exitVesselTrackingMode();\n}\n\n// Watch for vessel position changes\nwatch(\n  () => vesselPositions,\n  (newPositions) => {\n    if (newPositions && Array.isArray(newPositions) && newPositions.length > 0) {\n      vesselPositions.value = newPositions;\n    }\n  },\n  { deep: true }\n);\n\n// Watch for hovered marker changes\nwatch(\n  () => hoveredMarker.value,\n  (newMarker) => {\n    if (newMarker && eventMarkerLayer.value) {\n      eventMarkerLayer.value.addLayer(newMarker);\n    } else if (eventMarkerLayer.value && newMarker === null) {\n      eventMarkerLayer.value.clearLayers();\n    }\n  },\n  { deep: true }\n);\n\n// **************************\n// *** LAYER FUNCTIONS ***\n// **************************\n/**\n * Resets the map to its initial state\n */\nconst resetMap = () => {\n  if (!mapInstance.value || !layerManagerRef.value) {\n    console.warn('Map instance or layer manager not available');\n    return;\n  }\n\n  // Reset state variables\n  oceanSelected.value = false;\n  fishingSelected.value = false;\n  showSeismicOverlay.value = false;\n\n  // Use LayerManager methods\n  layerManagerRef.value.removeAllOverlays();\n\n  // Remove class modifiers from map container\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active',\n    'fishing-active',\n    'seismic-active',\n    'anchorage-active',\n    'cable-ships-active'\n  );\n\n  // Exit vessel tracking mode if active\n  if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  }\n\n  // Clear any selections\n  cableStore.deselectCables();\n  landingSiteStore.deselectLandingSite();\n\n  // Hide any open toggles\n  if (anchorageLayerToggleRef.value) {\n    anchorageLayerToggleRef.value.hide();\n  }\n  if (maintenanceLayerToggleRef.value) {\n    maintenanceLayerToggleRef.value.hide();\n  }\n\n  // Switch to the default base layer\n  layerManagerRef.value.switchToBaseLayer(\"Base Layer\");\n};\n\n/**\n * Handles base layer change events\n * @param {Object} e - Layer change event\n */\nfunction layerChanged(e) {\n  if (!mapInstance.value || !mapInstance.value._container) {\n    return;\n  }\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active', \n    'fishing-active', \n    'seismic-active',\n    'risk-layers-active'\n  );\n\n  if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  }\n  \n\n  if (e.originalName === \"Reset Map\") {\n    resetMap();\n    \n    // Find and switch to Base Layer\n    const baseLayer = controlInstance._layers.find(layer => \n      !layer.overlay && layer.originalName === \"Base Layer\"\n    );\n    \n    if (baseLayer && baseLayer.layer) {\n      // Remove current base layer if any\n      controlInstance._layers\n        .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n        .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n      \n      // Add Base Layer\n      mapInstance.value.addLayer(baseLayer.layer);\n      \n      // Update layer control\n      controlInstance._update();\n    }\n    return;\n  }\n  if(e.originalName === \"Base Layer\"){\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if(e.originalName === \"Seismic Activity\"){\n    mapContainer.classList.add('seismic-active');\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = true;\n  }\n  else if (e.originalName === \"Fishing Activity\"){\n    mapContainer.classList.add('fishing-active');\n    fishingSelected.value = true;\n    oceanSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if (e.originalName === \"Ocean Depth\") {\n    mapContainer.classList.add('ocean-depth-active');\n    oceanSelected.value = true;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if (e.originalName === \"Risk Layers\") {\n    mapContainer.classList.add('risk-layers-active');\n  }\n  else {\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n}\n\n/**\n * Handles overlay addition events\n * @param {Object} e - Overlay event\n */\nfunction overlayAdded(e) {\n  const mapContainer = mapInstance.value._container;\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.add('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.show();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.add('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.show();\n    }\n  }\n}\n\n/**\n * Handles overlay removal events\n * @param {Object} e - Overlay event\n */\nfunction overlayRemoved(e) {\n  const mapContainer = mapInstance.value._container;\n\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.remove('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.hide();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.remove('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.hide();\n    }\n  }\n}\n\n// **************************\n// *** CLICK HANDLERS ***\n// **************************\nlet set = false;\n\n/**\n * Handles map click events\n * @param {LeafletMouseEvent} event - The click event\n */\nconst onMapClick = (event) => {\n  if (gasPipelineLayerRef.value?.clearHighlight) {\n    gasPipelineLayerRef.value.clearHighlight();\n  }\n\n  if (maintenanceLayerToggleRef.value) {\n    const targetElement = event.originalEvent.target;\n    if (targetElement && !targetElement.classList.contains('leaflet-interactive')) {\n      maintenanceLayerToggleRef.value.clearHighlightedZones();\n    }\n  }\n\n  if (!set) {\n    cableStore.deselectCables();\n    landingSiteStore.deselectLandingSite();\n  }\n  set = false;\n};\n\n/**\n * Handles cable click events\n * @param {Event} e - The click event\n * @param {Object} cable - The clicked cable\n */\nconst onCableClick = (e: Event, cable) => {\n    // Original non-simulation behavior\n    set = true;\n    if (!landingSiteStore.isOneSelected() && cableStore.isCableSelected(cable.id)) {\n      cableStore.deselectCables();\n    } else {\n      landingSiteStore.deselectLandingSite();\n      cableStore.setSelectCable(cable.id, false);\n    }\n\n  // Display popup at click location\n  L.popup()\n    .setLatLng(e.latlng)\n    .setContent(cable.name)\n    .openOn(mapInstance.value);\n};\n\n/**\n * Handles landing site click events\n * @param {Event} e - The click event\n * @param {Object} landingSite - The clicked landing site\n */\nconst onLandingSiteClick = (e, landingSite) => {\n  set = true\n  cableStore.deselectCables();\n  if(landingSiteStore.isLandingSiteSelected(toRaw(landingSite))) {\n    landingSiteStore.deselectLandingSite();\n  } else {\n    landingSiteStore.setSelectLandingSite(toRaw(landingSite))\n  }\n}\n\n// **************************\n// *** MARITIME ZONE STYLES ***\n// **************************\n/**\n * Returns style options for territorial waters (12nm)\n * @returns {Object} Style options\n */\nfunction getTerritorialOptionsStyle(){\n  return {\n    color: '#4a2727',\n    dashArray: '8',\n    fillColor: '#4a2727',\n    fillOpacity: '0.2',\n  };\n}\n\n/**\n * Returns style options for EEZ (200nm)\n * @returns {Object} Style options\n */\nfunction getEEZOptionsStyle(){\n  return{\n    color: '#8a3030', \n    dashArray: '8'\n  }\n}\n\n// **************************\n// *** MOUSE INTERACTION ***\n// **************************\n/**\n * Updates mouse position for ocean depth layer\n * @param {LeafletMouseEvent} e - Mouse move event\n */\nconst updateMousePosition = debounce((e: LeafletMouseEvent) => {\n  if (oceanSelected.value && oceanDepthRef.value) {\n    oceanDepthRef.value.updateMousePosition(e);\n  }\n}, 100);\n\n// **************************\n// *** UI FUNCTIONS ***\n// **************************\n/**\n * Handles question mark click to show functionality overview\n */\nconst questionMarkClicked = () => {\n  if(functionalityOverviewRef.value){\n    functionalityOverviewRef.value.openModal();\n  }\n}\n\n// **************************\n// *** INITIALIZATION ***\n// **************************\n/**\n * Processes fixed infrastructure data from JSON\n */\nconst processInfrastructureData = () => {\n  infrastructurePositions.value = fixedInfrastructure.results\n    .filter(item => !(item.label === \"noise\") && item.structure_end_date === \"\")\n    .map(item => ({\n      id: item.detection_id,\n      position: [item.lat, item.lon],\n      name: item.label,\n      confidence: item.label_confidence,\n      lastSeen: item.detection_date\n    }));\n};\n\nonMounted(() => {\n  // Process infrastructure data immediately (small dataset)\n  processInfrastructureData();\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n\n  // Load critical data first (whatever's needed for initial view)\n  const loadCriticalData = async () => {\n    try {\n      const response = await fetch('/data/GEM-GGIT-Gas-Pipelines-2023-12.json');\n      dataCache.value.gasPipelines = await response.json();\n      dataCache.value.loaded.gasPipelines = true;\n    } catch (err) {\n      console.error('Error loading gas pipelines data:', err);\n    }\n  };\n\n  // Load non-critical data in background\n  const loadBackgroundData = async () => {\n    const backgroundData = [\n      { key: 'anchorage', url: '/data/anchorage.json' },\n      { key: 'dredging', url: '/data/dredgingEurope.json' },\n      { key: 'fishing', url: '/data/riskFishing_2012-2024.json' },\n      { key: 'seismic', url: '/data/riskSeismic_2000-2024.json' },\n      { key: 'terrainEurope', url: '/data/riskEurope/terrain_europe_cells_normalised.json' },\n      { key: 'fishingEurope', url: '/data/riskEurope/fishing_europe_cells_normalised.json' }\n    ];\n\n    for (const item of backgroundData) {\n      try {\n        const response = await fetch(item.url);\n        dataCache.value[item.key] = await response.json();\n        dataCache.value.loaded[item.key] = true;\n      \n      } catch (err) {\n        console.error(`Error loading ${item.key} data:`, err);\n      }\n    }\n  };\n\n  // Start critical load immediately\n  loadCriticalData();\n  \n  // Start background load after short delay to prioritize UI responsiveness\n  setTimeout(loadBackgroundData, 500);\n});\n</script>\n\n<style>\n  @import '@/assets/styles/mapStyles.css';\n</style>","import script from \"./LeafletMap.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LeafletMap.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LeafletMap.vue?vue&type=style&index=0&id=58c31dce&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0e6a1d7f\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"landing-site-details-container\" }\nconst _hoisted_2 = { class: \"header-section\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-arrow-left\" }, null, -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Back to Map\", -1))\nconst _hoisted_5 = { class: \"landing-site-title\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"content-grid\"\n}\nconst _hoisted_7 = { class: \"info-card\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"card-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-info-circle\" }),\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Landing Site Information\")\n], -1))\nconst _hoisted_9 = { class: \"card-content\" }\nconst _hoisted_10 = { class: \"info-row\" }\nconst _hoisted_11 = { class: \"info-item\" }\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"label\" }, \"Country\", -1))\nconst _hoisted_13 = { class: \"value\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"info-card\"\n}\nconst _hoisted_15 = { class: \"card-header\" }\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-ethernet\" }, null, -1))\nconst _hoisted_17 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Connected Cables\", -1))\nconst _hoisted_18 = { class: \"count-badge\" }\nconst _hoisted_19 = { class: \"card-content\" }\nconst _hoisted_20 = { class: \"cables-grid\" }\nconst _hoisted_21 = [\"onClick\"]\nconst _hoisted_22 = {\n  key: 1,\n  class: \"info-card\"\n}\nconst _hoisted_23 = { class: \"card-header\" }\nconst _hoisted_24 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-geo-alt\" }, null, -1))\nconst _hoisted_25 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Connected Landing Sites\", -1))\nconst _hoisted_26 = { class: \"count-badge\" }\nconst _hoisted_27 = { class: \"card-content\" }\nconst _hoisted_28 = { class: \"connected-sites-grid\" }\nconst _hoisted_29 = [\"onClick\"]\n\nimport { ref } from \"vue\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { queryLandingSiteById } from \"@/service/hasura\";\n\n// ============================================================================\n// REACTIVE STATE\n// ============================================================================\n\n// Main landing site data\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LandingSiteViewer',\n  setup(__props) {\n\nconst landingSite = ref();\n\n// Store instances\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\n\n// GraphQL client handle\nconst handle = useClientHandle();\n\n// Current route information\nconst route = useRoute();\n\n// ============================================================================\n// DATA LOADING FUNCTIONS\n// ============================================================================\n\n/**\n * Loads landing site data from the API based on the provided ID\n * Also initializes the data cable store and sets selected cables\n * @param {string} id - The landing site ID to load\n */\nconst loadLandingSite = async (id: string) => {\n  try {\n    const result = await handle.client\n      .query(queryLandingSiteById, { id: id })\n      .toPromise();\n\n    if (result.error) {\n      return;\n    }\n\n    const data = result.data.Landingsites[0];\n    landingSite.value = data;\n\n    // Initialize cable store and select related cables\n    await dataCableStore.initialize();\n    dataCableStore.setManySelectedCables(\n      data.CableSystem_X_Landingsites.map((cable: any) => cable.CableSystem.id)\n    );\n  } catch (error) {\n    // Error handling could be added here if needed\n  }\n};\n\n/**\n * Sets up the landing site selection in the store\n * Ensures the current landing site is properly selected\n */\nasync function setLandingSite() {\n  await dataCableStore.initialize();\n  const currentId = route.params.landingSiteId.toString();\n  \n  if (!landingSitesStore.isLandingSiteSelectedById(currentId)) {\n    landingSitesStore.setSelectLandingSiteById(currentId);\n  }\n}\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Calculates the number of connected landing sites that are not currently selected\n * Used for displaying the count badge in the connected sites card\n * @returns {number} Count of unselected connected sites\n */\nconst getConnectedSitesCount = () => {\n  if (!landingSite.value?.CableSystem_X_Landingsites_t) return 0;\n  \n  return landingSite.value.CableSystem_X_Landingsites_t.filter(\n    (site: string) => !landingSitesStore.isLandingSiteSelectedById(site)\n  ).length;\n};\n\n// ============================================================================\n// NAVIGATION FUNCTIONS\n// ============================================================================\n\n/**\n * Handles navigation to a specific cable\n * Deselects current landing site and selects the target cable\n * @param {string} cableId - The ID of the cable to navigate to\n */\nconst navigateToCable = (cableId: string) => {\n  landingSitesStore.deselectLandingSite();\n  dataCableStore.setSelectCable(cableId);\n};\n\n/**\n * Handles navigation to a connected landing site\n * Selects the target landing site\n * @param {string} siteId - The ID of the landing site to navigate to\n */\nconst navigateToLandingSite = (siteId: string) => {\n  landingSitesStore.setSelectLandingSiteById(siteId);\n};\n\n// ============================================================================\n// COMPONENT INITIALIZATION\n// ============================================================================\n\n// Load initial landing site data based on route parameter\nconst initialId = route.params.landingSiteId.toString();\nloadLandingSite(initialId);\nsetLandingSite();\n\n// ============================================================================\n// ROUTE WATCHERS\n// ============================================================================\n\n/**\n * Handles route updates when navigating between different landing sites\n * Reloads landing site data when the route parameter changes\n */\nonBeforeRouteUpdate((to) => {\n  const newId = to.params.landingSiteId.toString();\n  loadLandingSite(newId);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(dataCableStore).deselectCables(), _unref(landingSitesStore).deselectLandingSite())),\n        class: \"back-button\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_3,\n          _hoisted_4\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"h1\", null, _toDisplayString(landingSite.value?.name || 'Loading...'), 1)\n      ])\n    ]),\n    (landingSite.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _hoisted_8,\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _hoisted_12,\n                  _createElementVNode(\"span\", _hoisted_13, _toDisplayString(landingSite.value.country), 1)\n                ])\n              ])\n            ])\n          ]),\n          (landingSite.value.CableSystem_X_Landingsites?.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _hoisted_16,\n                  _hoisted_17,\n                  _createElementVNode(\"span\", _hoisted_18, _toDisplayString(landingSite.value.CableSystem_X_Landingsites.length), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_19, [\n                  _createElementVNode(\"div\", _hoisted_20, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(landingSite.value.CableSystem_X_Landingsites, (cable) => {\n                      return (_openBlock(), _createElementBlock(\"div\", {\n                        key: cable.CableSystem.id,\n                        class: \"cable-chip\",\n                        onClick: ($event: any) => (navigateToCable(cable.CableSystem.id))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(cable.CableSystem.name), 1)\n                      ], 8, _hoisted_21))\n                    }), 128))\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (landingSite.value.CableSystem_X_Landingsites_t?.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [\n                _createElementVNode(\"div\", _hoisted_23, [\n                  _hoisted_24,\n                  _hoisted_25,\n                  _createElementVNode(\"span\", _hoisted_26, _toDisplayString(getConnectedSitesCount()), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_27, [\n                  _createElementVNode(\"div\", _hoisted_28, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(landingSite.value.CableSystem_X_Landingsites_t, (connectedSite) => {\n                      return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                        key: connectedSite,\n                        class: \"connected-site-chip\",\n                        onClick: ($event: any) => (navigateToLandingSite(connectedSite))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(connectedSite), 1)\n                      ], 8, _hoisted_29)), [\n                        [_vShow, !_unref(landingSitesStore).isLandingSiteSelectedById(connectedSite)]\n                      ])\n                    }), 128))\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!--\nLandingSiteViewer.vue - Landing Site Details Page Component\n\nThis component displays comprehensive information about a specific submarine cable landing site.\nIt shows the landing site's basic information, connected cables, and other connected landing sites\nin an organized card-based layout.\n\nFeatures:\n- Dynamic route-based landing site loading\n- Interactive cable and landing site navigation\n- Real-time connected sites count filtering\n- Responsive card-based layout with hover effects\n- Automatic store synchronization for selected cables and sites\n-->\n\n<template>\n  <div class=\"landing-site-details-container\">\n    <!-- Header Section -->\n    <div class=\"header-section\">\n      <!-- Back Navigation -->\n      <router-link\n        to=\"/\"\n        @click=\"dataCableStore.deselectCables(), landingSitesStore.deselectLandingSite()\"\n        class=\"back-button\"\n      >\n        <i class=\"bi bi-arrow-left\"></i>\n        <span>Back to Map</span>\n      </router-link>\n      \n      <!-- Landing Site Title -->\n      <div class=\"landing-site-title\">\n        <h1>{{ landingSite?.name || 'Loading...' }}</h1>\n      </div>\n    </div>\n\n    <!-- Main Content Grid -->\n    <div v-if=\"landingSite\" class=\"content-grid\">\n      <!-- Basic Information Card -->\n      <div class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-info-circle\"></i>\n          <h3>Landing Site Information</h3>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"info-row\">\n            <div class=\"info-item\">\n              <span class=\"label\">Country</span>\n              <span class=\"value\">{{ landingSite.country }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Connected Cables Card -->\n      <div v-if=\"landingSite.CableSystem_X_Landingsites?.length\" class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-ethernet\"></i>\n          <h3>Connected Cables</h3>\n          <span class=\"count-badge\">{{ landingSite.CableSystem_X_Landingsites.length }}</span>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"cables-grid\">\n            <div\n              v-for=\"cable in landingSite.CableSystem_X_Landingsites\"\n              :key=\"cable.CableSystem.id\"\n              class=\"cable-chip\"\n              @click=\"navigateToCable(cable.CableSystem.id)\"\n            >\n              <span>{{ cable.CableSystem.name }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Connected Landing Sites Card -->\n      <div v-if=\"landingSite.CableSystem_X_Landingsites_t?.length\" class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-geo-alt\"></i>\n          <h3>Connected Landing Sites</h3>\n          <span class=\"count-badge\">{{ getConnectedSitesCount() }}</span>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"connected-sites-grid\">\n            <div\n              v-for=\"connectedSite in landingSite.CableSystem_X_Landingsites_t\"\n              :key=\"connectedSite\"\n              v-show=\"!landingSitesStore.isLandingSiteSelectedById(connectedSite)\"\n              class=\"connected-site-chip\"\n              @click=\"navigateToLandingSite(connectedSite)\"\n            >\n              <span>{{ connectedSite }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { queryLandingSiteById } from \"@/service/hasura\";\n\n// ============================================================================\n// REACTIVE STATE\n// ============================================================================\n\n// Main landing site data\nconst landingSite = ref();\n\n// Store instances\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\n\n// GraphQL client handle\nconst handle = useClientHandle();\n\n// Current route information\nconst route = useRoute();\n\n// ============================================================================\n// DATA LOADING FUNCTIONS\n// ============================================================================\n\n/**\n * Loads landing site data from the API based on the provided ID\n * Also initializes the data cable store and sets selected cables\n * @param {string} id - The landing site ID to load\n */\nconst loadLandingSite = async (id: string) => {\n  try {\n    const result = await handle.client\n      .query(queryLandingSiteById, { id: id })\n      .toPromise();\n\n    if (result.error) {\n      return;\n    }\n\n    const data = result.data.Landingsites[0];\n    landingSite.value = data;\n\n    // Initialize cable store and select related cables\n    await dataCableStore.initialize();\n    dataCableStore.setManySelectedCables(\n      data.CableSystem_X_Landingsites.map((cable: any) => cable.CableSystem.id)\n    );\n  } catch (error) {\n    // Error handling could be added here if needed\n  }\n};\n\n/**\n * Sets up the landing site selection in the store\n * Ensures the current landing site is properly selected\n */\nasync function setLandingSite() {\n  await dataCableStore.initialize();\n  const currentId = route.params.landingSiteId.toString();\n  \n  if (!landingSitesStore.isLandingSiteSelectedById(currentId)) {\n    landingSitesStore.setSelectLandingSiteById(currentId);\n  }\n}\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Calculates the number of connected landing sites that are not currently selected\n * Used for displaying the count badge in the connected sites card\n * @returns {number} Count of unselected connected sites\n */\nconst getConnectedSitesCount = () => {\n  if (!landingSite.value?.CableSystem_X_Landingsites_t) return 0;\n  \n  return landingSite.value.CableSystem_X_Landingsites_t.filter(\n    (site: string) => !landingSitesStore.isLandingSiteSelectedById(site)\n  ).length;\n};\n\n// ============================================================================\n// NAVIGATION FUNCTIONS\n// ============================================================================\n\n/**\n * Handles navigation to a specific cable\n * Deselects current landing site and selects the target cable\n * @param {string} cableId - The ID of the cable to navigate to\n */\nconst navigateToCable = (cableId: string) => {\n  landingSitesStore.deselectLandingSite();\n  dataCableStore.setSelectCable(cableId);\n};\n\n/**\n * Handles navigation to a connected landing site\n * Selects the target landing site\n * @param {string} siteId - The ID of the landing site to navigate to\n */\nconst navigateToLandingSite = (siteId: string) => {\n  landingSitesStore.setSelectLandingSiteById(siteId);\n};\n\n// ============================================================================\n// COMPONENT INITIALIZATION\n// ============================================================================\n\n// Load initial landing site data based on route parameter\nconst initialId = route.params.landingSiteId.toString();\nloadLandingSite(initialId);\nsetLandingSite();\n\n// ============================================================================\n// ROUTE WATCHERS\n// ============================================================================\n\n/**\n * Handles route updates when navigating between different landing sites\n * Reloads landing site data when the route parameter changes\n */\nonBeforeRouteUpdate((to) => {\n  const newId = to.params.landingSiteId.toString();\n  loadLandingSite(newId);\n});\n</script>\n\n<style scoped>\n/* ============================================================================\n   MAIN CONTAINER STYLES\n   ============================================================================ */\n\n.landing-site-details-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  color: white;\n  padding: 0.5rem;\n  max-width: 100%;\n}\n\n/* ============================================================================\n   HEADER SECTION STYLES\n   ============================================================================ */\n\n.header-section {\n  margin-bottom: 0.75rem;\n}\n\n.back-button {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #cbd5e0;\n  text-decoration: none;\n  font-size: 0.95rem;\n  padding: 0.5rem 0.75rem;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 0.8rem;\n  width: fit-content;\n}\n\n.back-button:hover {\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  text-decoration: none;\n  transform: translateX(-2px);\n}\n\n.landing-site-title {\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n}\n\n.landing-site-title h1 {\n  font-size: 1.3rem;\n  font-weight: 700;\n  margin: 0;\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  line-height: 1.2;\n}\n\n/* ============================================================================\n   CONTENT GRID STYLES\n   ============================================================================ */\n\n.content-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  flex: 1;\n}\n\n/* ============================================================================\n   INFO CARD STYLES\n   ============================================================================ */\n\n.info-card {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n  transition: all 0.2s ease;\n}\n\n.info-card:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  border-color: rgba(255, 255, 255, 0.15);\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.6rem 0.8rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.card-header i {\n  font-size: 1rem;\n  color: #63b3ed;\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 600;\n  flex: 1;\n}\n\n.count-badge {\n  background: rgba(99, 179, 237, 0.2);\n  color: #63b3ed;\n  padding: 0.2rem 0.5rem;\n  border-radius: 10px;\n  font-size: 0.75rem;\n  font-weight: 700;\n  min-width: 1.5rem;\n  text-align: center;\n}\n\n.card-content {\n  padding: 0.75rem;\n}\n\n/* ============================================================================\n   INFO ITEMS STYLES\n   ============================================================================ */\n\n.info-row {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  padding: 0.75rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 6px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.info-item .label {\n  font-size: 0.75rem;\n  color: #a0aec0;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  font-weight: 500;\n}\n\n.info-item .value {\n  font-size: 1rem;\n  font-weight: 600;\n  color: white;\n  text-align: center;\n}\n\n/* ============================================================================\n   CABLES GRID STYLES\n   ============================================================================ */\n\n.cables-grid {\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  gap: 0.5rem;\n}\n\n.cable-chip {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.4rem 0.6rem;\n  background: rgba(99, 179, 237, 0.1);\n  border: 1px solid rgba(99, 179, 237, 0.2);\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.85rem;\n  width: 100%;\n}\n\n.cable-chip:hover {\n  background: rgba(99, 179, 237, 0.25);\n  transform: translateY(-2px);\n  box-shadow: 0 2px 8px rgba(99, 179, 237, 0.2);\n}\n\n/* ============================================================================\n   CONNECTED SITES GRID STYLES\n   ============================================================================ */\n\n.connected-sites-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.5rem;\n}\n\n.connected-site-chip {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.4rem 0.6rem;\n  background: rgba(72, 187, 120, 0.1);\n  border: 1px solid rgba(72, 187, 120, 0.2);\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.85rem;\n  width: 100%;\n}\n\n.connected-site-chip:hover {\n  background: rgba(72, 187, 120, 0.25);\n  transform: translateY(-2px);\n  box-shadow: 0 2px 8px rgba(72, 187, 120, 0.2);\n}\n\n/* ============================================================================\n   RESPONSIVE DESIGN\n   ============================================================================ */\n\n@media (max-width: 768px) {\n  .landing-site-details-container {\n    padding: 0.75rem;\n  }\n  \n  .landing-site-title h1 {\n    font-size: 1.1rem;\n  }\n  \n  .card-header {\n    padding: 0.5rem 0.75rem;\n  }\n  \n  .card-content {\n    padding: 0.75rem;\n  }\n  \n  .connected-sites-grid {\n    grid-template-columns: 1fr;\n  }\n}\n</style>","import script from \"./LandingSiteViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LandingSiteViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LandingSiteViewer.vue?vue&type=style&index=0&id=0e6a1d7f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0e6a1d7f\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\nimport SidebarList from \"@/components/sidebar/SideBarList.vue\";\nimport CableViewer from '@/components/sidebar/CableViewer.vue';\nimport LeafletMap from '@/components/LeafletMap.vue';\nimport LandingsiteViewer from '@/components/sidebar/LandingSiteViewer.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'home',\n    components: {\n      main: LeafletMap,\n      sidebar: SidebarList,\n    },\n  },\n  {\n    path: '/cables/:cableId',\n    name: 'cables',\n    components: {\n      main: LeafletMap,\n      sidebar: CableViewer,\n    },\n  },\n  {\n    path: '/landingSites/:landingSiteId',\n    name: 'landingSites',\n    components: {\n      main: LeafletMap,\n      sidebar: LandingsiteViewer,\n    },\n  },\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { defineStore } from \"pinia\";\nimport router from \"@/router/index\";\nimport { loadCables } from \"@/service/hasura\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\n\nexport const useDataCablesStore = defineStore(\"dataCables\", {\n  state: () => ({\n    dataCables: [] as any[],\n    selectCable: [] as any[],\n    landingSite: useLandingSitesStore(),\n    firstLoad: null as any,\n    selectedFromSidebar: false,\n    cableDetails: null as any,\n    mapInstance: null as any,\n    viewingVesselTrack: false,\n    combinedRiskData: [] as Array<[number, number, number]>, //Set in GlobalRiskMap.vue\n    combinedRiskDataEurope: [] as Array<[number, number, number]>, //Set in EuropeanRiskMap.vue\n  }),\n  getters: {\n    getDataCables: (state) => {\n      return state.dataCables;\n    },\n    isNoneSelected: (state) => {\n      return state.selectCable.length == 0;\n    },\n    getSelectedCable: (state) => {\n      const cableId = state.selectCable[0];\n      return state.dataCables.find(cable => cable.id === cableId);\n    },\n    getMapInstance: (state) => {\n      return state.mapInstance;\n    }\n  },\n  actions: {\n    async initialize() {\n      if (this.firstLoad) {\n        await this.firstLoad;\n      } else {\n        this.firstLoad = Promise.all([\n          this.fetchDataCables(),\n          this.landingSite.fetchLandingSites(),\n        ]);\n      }\n    },\n    async fetchDataCables() {\n      const cables = ((await loadCables()) as any).data._rawValue.CableSystems;\n      cables.forEach((e: any) => {\n        e.geoData = JSON.parse(e.geoData);\n        e.opacity = 1; // Ensure opacity is defined and reactive\n      });\n      this.dataCables = cables;\n    },\n    setAllCablesOpacity(opacity: number) {\n      this.dataCables.forEach(cable => {\n        cable.opacity = opacity;\n    \n        if (cable.layer && this.mapInstance.hasLayer(cable.layer)) {\n          // Remove the layer and re-add it to force a re-render\n          this.mapInstance.removeLayer(cable.layer);\n          cable.layer.options.opacity = opacity; // Update the layer's opacity\n          cable.layer.addTo(this.mapInstance);\n        }\n      });\n    },\n    setSelectCable(cableId: string, fromSidebar = false){\n      this.selectCable = [cableId];\n      this.selectedFromSidebar = fromSidebar;\n      this.fetchCableDetails(cableId);\n      router.push({ path: `/cables/${cableId}` });\n    },\n    setManySelectedCables(cableIds: string[]) {\n      this.selectCable = cableIds;\n    },\n    deselectCables() {\n      if (this.selectCable.length) {\n        this.selectCable = [];\n        this.cableDetails = [];\n        router.push({ path: \"/\" });\n      }\n    },\n    isCableSelected(cableId: string): boolean {\n      return this.selectCable.includes(cableId);\n    },\n    async fetchCableDetails(cableId: string) {\n      const cable = this.dataCables.find(c => c.id === cableId);\n      if (cable) {\n        this.cableDetails = cable;\n      }\n    },\n    setMapInstance(map: any) {\n      this.mapInstance = map;\n    },\n    setViewingVesselTrack(value: boolean) {\n      this.viewingVesselTrack = value;\n    },\n    countCablesByRFSYear() {\n      const yearCounts = new Map<number, number>();\n      \n      this.dataCables.forEach(cable => {\n        const rfsDate = cable.readyForService;\n        if (!rfsDate) return; // Skip cables without a RFS date\n  \n        const date = new Date(rfsDate);\n        if (isNaN(date.getTime())) {\n          console.error(`Invalid RFS date for cable ${cable.id}: ${rfsDate}`);\n          return;\n        }\n  \n        const year = date.getFullYear();\n        yearCounts.set(year, (yearCounts.get(year) || 0) + 1);\n      });\n  \n      // Sort years from oldest to newest\n      const sortedYears = Array.from(yearCounts.entries()).sort((a, b) => a[0] - b[0]);\n  \n      // Log results\n      console.log('Cables per Ready for Service Year:');\n      sortedYears.forEach(([year, count]) => {\n        console.log(`${year}: ${count} cable${count !== 1 ? 's' : ''}`);\n      });\n    },\n    setCombinedRiskData(data: Array<[number, number, number]>) {\n      this.combinedRiskData = data;\n    },\n    setCombinedRiskDataEurope(data: Array<[number, number, number]>) {\n      this.combinedRiskDataEurope = data;\n    },\n  },\n});","<!--\n  SourcesModal.vue\n  \n  A modal component that displays data source attribution and licensing information.\n  Features an expandable sources section with detailed information about each data provider.\n  Supports keyboard navigation (ESC to close) and responsive design.\n-->\n\n<template>\n  <div>\n    <!-- Attribution Footer -->\n    <p class=\"text-[#a0aec0] text-xs\">\n      Cable data by \n      <a href=\"https://www2.telegeography.com/\" \n         target=\"_blank\" \n         class=\"text-blue-400 hover:text-blue-300 transition-colors\">\n        Telegeography\n      </a>\n      (<a href=\"https://www.submarinecablemap.com/\" \n          target=\"_blank\" \n          class=\"text-blue-400 hover:text-blue-300 transition-colors\">\n        cable map\n      </a>),\n      licensed under \n      <a href=\"https://creativecommons.org/licenses/by-sa/4.0/\" \n         target=\"_blank\" \n         class=\"text-blue-400 hover:text-blue-300 transition-colors\">\n        Creative Commons Attribution-ShareAlike 4.0 International\n      </a>,\n      merged with own data and data from \n      <a href=\"https://subtelforum.com/\" \n         target=\"_blank\" \n         class=\"text-blue-400 hover:text-blue-300 transition-colors\">\n        Submarine Telecoms Forum\n      </a>\n      (<a href=\"https://subtelforum.com/online-map/\" \n          target=\"_blank\" \n          class=\"text-blue-400 hover:text-blue-300 transition-colors\">\n        cable map\n      </a>) used under fair use.\n      \n      <!-- Toggle Button for Sources -->\n      <button \n        v-if=\"!showSources\"\n        @click=\"showSources = true\" \n        class=\"toggle-button\"\n      >\n        Data Sources\n        <svg class=\"toggle-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n    </p>\n\n    <!-- Expandable Sources Modal -->\n    <div v-if=\"showSources\" class=\"sources-container\">\n      <div class=\"sources-content\">\n        <!-- Modal Header -->\n        <div class=\"sources-header\">\n          <h3 class=\"sources-title\">Data Sources</h3>\n          <button @click=\"showSources = false\" class=\"close-button\">\n            <span class=\"sr-only\">Close</span>\n            <svg class=\"close-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.5\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n        \n        <!-- Sources List -->\n        <div class=\"sources-list\">\n          <div v-for=\"(source, index) in sources\" \n               :key=\"index\" \n               class=\"source-item\">\n            <h4 class=\"source-title\">{{ source.title }}</h4>\n            <div class=\"source-details\">\n              <p v-if=\"source.sourceName\" class=\"source-name\">\n                Source: {{ source.sourceName }}\n              </p>\n              <a :href=\"source.url\" \n                 target=\"_blank\" \n                 class=\"source-url\">\n                {{ source.url }}\n              </a>\n              <p v-if=\"source.description\" \n                 class=\"source-description\">\n                {{ source.description }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Vue composition API imports\nimport { ref, onMounted, onUnmounted } from 'vue';\n\n// Reactive state\nconst showSources = ref(false);\n\n// Data sources configuration\nconst sources = [\n  {\n    title: 'Cable Source \"Telegeography\"',\n    url: 'https://www2.telegeography.com/',\n    description: 'Mixed with own data'\n  },\n  {\n    title: 'Cable Source \"Mixed Sources\"',\n    url: 'https://kis-orca.org/map/',\n    description: 'Mixed with telegeography and own data'\n  },\n  {\n    title: 'Seismic Activity',\n    url: 'https://earthquake.usgs.gov/earthquakes/map/',\n    sourceName: 'U.S. Geological Survey (USGS)'\n  },\n  {\n    title: 'Fishing Activity',\n    url: 'https://globalfishingwatch.org/our-apis/documentation#4wings-introduction',\n    sourceName: 'Global Fishing Watch'\n  },\n  {\n    title: 'Ocean Depth',\n    url: 'https://www.gebco.net/data_and_products/gridded_bathymetry_data/',\n    sourceName: 'General Bathymetric Chart of the Oceans (GEBCO)'\n  },\n  {\n    title: 'Anchorage',\n    url: 'https://globalfishingwatch.org/datasets-and-code-anchorages/',\n    sourceName: 'Global Fishing Watch'\n  },\n  {\n    title: 'Fixed Infrastructure',\n    url: 'https://globalfishingwatch.org/our-apis/documentation#get-fixed-infrastructure-in-mvt-http-request',\n    sourceName: 'Global Fishing Watch'\n  },\n  {\n    title: 'Seamarks',\n    url: 'https://wiki.openstreetmap.org/wiki/Seamarks/Seamark_Objects',\n    sourceName: 'OpenStreetMap'\n  },\n  {\n    title: 'EEZ, Territorial Waters',\n    url: 'https://marineregions.org/downloads.php',\n    sourceName: 'Marine Regions'\n  },\n  {\n    title: 'Gas Pipelines',\n    url: 'https://globalenergymonitor.org/projects/global-gas-infrastructure-tracker/',\n    sourceName: 'Global Energy Monitor'\n  },\n  {\n    title: 'Cable Ships',\n    url: 'https://globalfishingwatch.org/our-apis/documentation#vessels-api',\n    sourceName: 'Global Fishing Watch'\n  },\n  {\n    title: 'ITU Broadband Networks',\n    url: 'https://bbmaps.itu.int/geonetwork/srv/api/records/f9af598b-da16-4a7a-a757-6cffc02e9565',\n    sourceName: 'ITU'\n  },\n  {\n    title: 'Data Centers',\n    url: 'https://wiki.openstreetmap.org/wiki/Tag:telecom=data_center',\n    sourceName: 'OpenStreetMap' \n  },\n  {\n    title: 'Map',\n    url: 'https://www.maptiler.com/',\n    sourceName: 'MapTiler'\n  }\n];\n\n// Event handlers\nconst handleKeydown = (event) => {\n  if (event.key === 'Escape' && showSources.value) {\n    showSources.value = false;\n  }\n};\n\n// Lifecycle hooks\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown);\n});\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown);\n});\n</script>\n\n<style scoped>\n/* Toggle Button Styling */\n.toggle-button {\n  background: rgba(99, 179, 237, 0.2);\n  border: 1px solid rgba(99, 179, 237, 0.4);\n  color: white;\n  font-size: 12px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  margin-left: 4px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.toggle-button:hover {\n  background: rgba(99, 179, 237, 0.3);\n  border-color: rgba(99, 179, 237, 0.6);\n  filter: brightness(1.1);\n}\n\n.toggle-icon {\n  width: 14px;\n  height: 14px;\n  transition: transform 0.3s ease;\n}\n\n.toggle-icon.rotated {\n  transform: rotate(180deg);\n}\n\n/* Modal Container */\n.sources-container {\n  position: relative;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  margin-top: 8px;\n  animation: slideDown 0.3s ease-out;\n}\n\n/* Slide down animation */\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Modal Content Styling */\n.sources-content {\n  background-color: #1a202c;\n  color: white;\n  padding: 20px;\n  border-radius: 8px;\n  border: 1px solid #2d3748;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n/* Modal Header */\n.sources-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  border-bottom: 1px solid #2d3748;\n  padding-bottom: 12px;\n}\n\n.sources-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #63b3ed;\n  margin: 0;\n}\n\n/* Close Button Styling */\n.close-button {\n  background: linear-gradient(135deg, #63b3ed 0%, #4299e1 100%);\n  border: 2px solid rgba(99, 179, 237, 0.3);\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 3px 10px rgba(99, 179, 237, 0.3);\n}\n\n.close-button:hover {\n  background: linear-gradient(135deg, #90cdf4 0%, #63b3ed 100%);\n  transform: scale(1.1) rotate(90deg);\n  box-shadow: 0 6px 16px rgba(99, 179, 237, 0.5);\n  border-color: rgba(144, 205, 244, 0.5);\n}\n\n.close-button:active {\n  transform: scale(0.95) rotate(90deg);\n}\n\n.close-icon {\n  width: 16px;\n  height: 16px;\n  stroke-width: 2.5;\n}\n\n/* Sources List Layout */\n.sources-list {\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n}\n\n/* Individual Source Item */\n.source-item {\n  border-bottom: 1px solid #2d3748;\n  padding-bottom: 10px;\n}\n\n.source-item:last-child {\n  border-bottom: none;\n}\n\n/* Source Content Styling */\n.source-title {\n  font-weight: 600;\n  margin-bottom: 4px;\n  color: #a0aec0;\n  margin: 0 0 4px 0;\n  font-size: 14px;\n}\n\n.source-details {\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n}\n\n.source-name {\n  color: #718096;\n  font-size: 13px;\n  margin: 0;\n}\n\n/* URL Link Styling */\n.source-url {\n  color: #63b3ed;\n  font-size: 13px;\n  text-decoration: none;\n  transition: color 0.2s ease;\n  display: block;\n  word-break: break-all;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  line-height: 1.4;\n}\n\n.source-url:hover {\n  color: #90cdf4;\n  text-decoration: underline;\n}\n\n.source-description {\n  color: #718096;\n  font-size: 13px;\n  margin: 0;\n}\n\n/* Accessibility - Screen reader only */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n/* Custom Scrollbar Styling */\n.sources-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.sources-content::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 3px;\n}\n\n.sources-content::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 3px;\n}\n\n.sources-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n</style>","import script from \"./SourcesModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourcesModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourcesModal.vue?vue&type=style&index=0&id=26ba8eaa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-26ba8eaa\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@/assets/logo.png'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-04d16ff4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"sidebar-container\" }\nconst _hoisted_2 = { class: \"sidebar-header\" }\nconst _hoisted_3 = { class: \"d-flex align-items-center\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"cable-icon-container me-2\"\n}\nconst _hoisted_5 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"landing-icon\"\n}\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M4 8c4 8 12-8 16 8\",\n  stroke: \"white\",\n  \"stroke-width\": \"2\",\n  \"stroke-linecap\": \"round\"\n}, null, -1))\nconst _hoisted_7 = [\"fill\"]\nconst _hoisted_8 = [\"fill\"]\nconst _hoisted_9 = {\n  key: 1,\n  class: \"landing-icon-container me-2\"\n}\nconst _hoisted_10 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"landing-icon\"\n}\nconst _hoisted_11 = [\"fill\"]\nconst _hoisted_12 = {\n  key: 2,\n  class: \"ship-icon-container me-2\"\n}\nconst _hoisted_13 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"ship-icon\"\n}\nconst _hoisted_14 = [\"fill\"]\nconst _hoisted_15 = { class: \"ship-flag\" }\nconst _hoisted_16 = { class: \"scrollable-container\" }\nconst _hoisted_17 = { class: \"scrollable-content\" }\nconst _hoisted_18 = { class: \"sidebar-footer\" }\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  style: { width: '250px', height: 'auto' }\n}, null, -1))\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\" Copyright © Jonas Franken, 2024\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\" Licensed under the \"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    target: \"blank\",\n    href: \"https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12\"\n  }, \"EUPL\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"mailto:franken@peasec.de\" }, \"franken@peasec.de\")\n], -1))\n\nimport { ref, watch, onMounted, nextTick } from 'vue';\nimport L from 'leaflet';\nimport VueMultiselect from 'vue-multiselect';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\nimport SourcesModal from './SourcesModal.vue';\nimport vesselIds from '@/assets/vesselIds.json';\nimport VesselTracking from '@/components/layers/maritime/VesselTracking.vue';\nimport axios from 'axios';\n\n// ======================\n// PROPS & EMITS\n// ======================\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TheSidebar',\n  props: {\n  currentLanguage: { type: String, default: 'ENGLISH' },  \n  cableStore: { type: Object, required: false },     \n  controlInstance: { type: Object, default: null }, \n  layerGroup: { type: Object, default: null },      \n  mapReady: { type: Boolean, default: false },  \n  vesselPositions: { type: Array, default: () => [] }\n},\n  emits: ['update:vesselPositions', 'update:hoveredMarker', 'update:viewingVesselTrack'],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emit = __emit;\n\n// ======================\n// STORE REFERENCES\n// ======================\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\n\n// ======================\n// COMPONENT REFERENCES\n// ======================\nconst vesselTrackingRef = ref(null);\nconst sidebarMarkerLayerGroup = ref<L.LayerGroup | null>(null);\nconst currentSidebarMarker = ref(null);\n\n// ======================\n// STATE VARIABLES\n// ======================\nconst selectedCables = ref([]);\nconst selectedLandingSite = ref(null);\nconst landingSitesAndCables = ref([]);\nconst isLoading = ref(false);\nconst mapInstance = ref(null);\nconst hoveredMarker = ref(null);\nlet inputArray = [];\n\n// ======================\n// WATCHERS\n// ======================\n// Watch for cable selection changes\nwatch(() => cableStore.selectCable, (state) => {\n  if (state.length > 0) {\n    const selectedCable = inputArray.find((str) => state[0] == str.id);\n    selectedCables.value = selectedCable;\n  } else {\n    selectedCables.value = [];\n  }\n  \n  if (selectedLandingSite.value?.geoData?.length > 0) {\n    selectedCables.value = selectedLandingSite.value;\n  }\n});\n\n// Watch for landing site selection changes\nwatch(() => landingSiteStore.selectLandingSites, (selectedLandingSites) => {\n  if (selectedLandingSites.length > 0) {\n    selectedLandingSite.value = inputArray.find((str) => selectedLandingSites[0].id == str.id);\n  } else {\n    selectedLandingSite.value = null;\n    selectedCables.value = [];\n  }\n});\n\n// Watch for selected cables changes\nwatch(() => selectedCables.value, (newValue) => {\n  if (!newValue || newValue.length === 0) {\n    clearSidebarVessel();\n  }\n});\n\n// Watch for hovered marker updates\nwatch(() => hoveredMarker.value, (newMarker) => {\n  if (newMarker && mapInstance.value) {\n    newMarker.addTo(mapInstance.value);\n  } else if (hoveredMarker.value && mapInstance.value && newMarker === null) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n    hoveredMarker.value = null;\n  }\n}, { deep: true });\n\n// ======================\n// HELPER FUNCTIONS\n// ======================\nfunction getShipColor(vessel) {\n  return vessel.color || '#636363';\n}\n\nfunction getFlagEmoji(vessel) {\n  return vessel.flag || '🚩';\n}\n\nfunction getCableColor(cable) {\n  return cable.color || '#007BFF';\n}\n\nfunction getLandingColor(landingSite) {\n  return landingSite.color || '#28A745';\n}\n\n// ======================\n// EVENT HANDLERS\n// ======================\nfunction updateHoveredMarker(marker) {\n  if (hoveredMarker.value && mapInstance.value && mapInstance.value.hasLayer(hoveredMarker.value)) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n  }\n  hoveredMarker.value = marker;\n}\n\nfunction updateVesselPositions(positions) {\n  emit('update:vesselPositions', positions);\n}\n\nfunction updateViewingVesselTrack(isViewing) {\n  emit('update:viewingVesselTrack', isViewing);\n}\n\nfunction selectCableOrLandingSiteOrVessel(selection) {\n  if (selection.type === 'vessel') {\n    handleVesselSearchSelect(selection);\n  } else if (selection.country) {\n    cableStore.deselectCables();\n    landingSiteStore.setSelectLandingSite(selection, true);\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(selection.id, true);\n  }\n}\n\n// ======================\n// VESSEL FUNCTIONS\n// ======================\nfunction clearSidebarVessel() {\n  if (sidebarMarkerLayerGroup.value) {\n    sidebarMarkerLayerGroup.value.clearLayers();\n  }\n\n  if (props.vesselPositions && props.vesselPositions.length > 0) {\n    const updatedPositions = props.vesselPositions.filter(vessel => !vessel.fromSidebar);\n    emit('update:vesselPositions', updatedPositions);\n  }\n}\n\nasync function handleVesselSearchSelect(vessel) {\n  clearSidebarVessel();\n\n  if (!vesselTrackingRef.value) return;\n\n  try {\n    const vesselInfo = vessel;\n    const latestPosition = await getVesselLatestPosition(vesselInfo.vesselId);\n\n    if (!latestPosition) return;\n\n    const vesselData = {\n      ...vessel,\n      ...latestPosition.vessel,\n      id: vesselInfo.vesselId,\n      position: latestPosition.position,\n      lastSeen: latestPosition.lastSeen || new Date().toISOString(),\n      eventType: latestPosition.eventType || 'Unknown',\n      flag: latestPosition.vessel?.flag || vessel.country || 'Unknown',\n      ssvid: vessel.ssvid || latestPosition.vessel?.ssvid,\n      name: vessel.name || latestPosition.vessel?.name || 'Unknown Vessel',\n      length: vesselInfo.length || 'Unknown',\n      beam: vesselInfo.beam || 'Unknown',\n      grossTonage: vesselInfo.grossTonage || 'Unknown',\n      purpose: vesselInfo.purpose || 'Unknown',\n      cableCapacity: vesselInfo.cableCapacity || 'Unknown',\n      notes: vesselInfo.notes || 'Unknown',\n      baseport: vesselInfo.baseport || 'Unknown',\n      owner: vesselInfo.owner || 'Unknown',\n      fromSidebar: true,\n    };\n\n    if (Array.isArray(props.vesselPositions)) {\n      const updatedPositions = [...props.vesselPositions, vesselData];\n      emit('update:vesselPositions', updatedPositions);\n    } else {\n      emit('update:vesselPositions', [vesselData]);\n    }\n\n    cableStore.setAllCablesOpacity(0.15);\n\n    if (mapInstance.value && vesselData.position) {\n      mapInstance.value.setView([vesselData.position.lat, vesselData.position.lon], 8);\n    }\n\n    await nextTick();\n\n    if (!vesselTrackingRef.value) return;\n\n    const shipIcon = vesselTrackingRef.value.createShipIcon('#636363', vesselData.flag, vesselData);\n\n    if (mapInstance.value && vesselData.position) {\n      const marker = new L.Marker([vesselData.position.lat, vesselData.position.lon], {\n        icon: shipIcon,\n      });\n\n      marker.on('click', (e) => {\n        const clickEvent = {\n          latlng: {\n            lat: vesselData.position.lat,\n            lng: vesselData.position.lon,\n          },\n          originalEvent: e.originalEvent,\n        };\n\n        if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n          vesselTrackingRef.value.onShipClick(clickEvent, vesselData);\n        }\n      });\n\n      if (sidebarMarkerLayerGroup.value) {\n        marker.addTo(sidebarMarkerLayerGroup.value);\n      }\n\n      vesselData.marker = marker;\n      currentSidebarMarker.value = marker;\n      marker.fromSidebar = true;\n    }\n\n    const mockEvent = {\n      latlng: {\n        lat: vesselData.position.lat,\n        lng: vesselData.position.lon,\n      },\n      originalEvent: new Event('click'),\n    };\n\n    if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n      vesselTrackingRef.value.onShipClick(mockEvent, vesselData);\n    }\n  } catch (error) {\n    console.error('Error in handleVesselSearchSelect:', error);\n  }\n}\n\nasync function getVesselLatestPosition(vesselId) {\n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const params = {\n    limit: 1,\n    offset: 0,\n    sort: '-start',\n    vessels: [vesselId]\n  };\n  \n  try {\n    params['datasets[0]'] = 'public-global-loitering-events:latest';\n    const loiteringResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    params['datasets[0]'] = 'public-global-port-visits-c2-events:latest';\n    const portVisitResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    let latestEvent = null;\n    let eventType = '';\n    \n    if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0 &&\n        portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      const loiteringEvent = loiteringResponse.data.entries[0];\n      const portVisitEvent = portVisitResponse.data.entries[0];\n      \n      const loiteringDate = new Date(loiteringEvent.end);\n      const portVisitDate = new Date(portVisitEvent.end);\n      \n      if (loiteringDate > portVisitDate) {\n        latestEvent = loiteringEvent;\n        eventType = 'Loitering';\n      } else {\n        latestEvent = portVisitEvent;\n        eventType = 'PortVisit';\n      }\n    } else if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n      latestEvent = loiteringResponse.data.entries[0];\n      eventType = 'Loitering';\n    } else if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      latestEvent = portVisitResponse.data.entries[0];\n      eventType = 'PortVisit';\n    }\n        \n    if (latestEvent) {\n      return {\n        position: latestEvent.position,\n        lastSeen: latestEvent.end,\n        ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n        eventType: eventType,\n        vessel: {\n          ...latestEvent.vessel,\n          name: latestEvent.vessel.name || 'Unknown Vessel'\n        }\n      };\n    }\n    \n    return null;\n  } catch (error) {\n    console.error(\"Error fetching vessel position:\", error);\n    return null;\n  }\n}\n\n// ======================\n// SEARCH FUNCTIONS\n// ======================\nasync function asyncFind(queryGiven: string) {\n  clearSidebarVessel();\n\n  if (!queryGiven) {\n    landingSitesAndCables.value = inputArray;\n    return;\n  }\n\n  // Entfernt alle nicht-alphanumerischen Zeichen und macht alles klein\n  const normalize = (str: string) =>\n    str.toLowerCase().replace(/[^a-z0-9]/gi, '');\n\n  const normalizedQuery = normalize(queryGiven);\n\n  const filteredArray = inputArray.filter((item) => {\n    if (item && typeof item.name === 'string') {\n      const normalizedName = normalize(item.name);\n      return normalizedName.includes(normalizedQuery);\n    }\n    return false;\n  });\n\n  landingSitesAndCables.value = filteredArray;\n}\n\n// ======================\n// INITIALIZATION\n// ======================\nasync function initializeSearchBar() {\n  await cableStore.initialize();\n  const vesselSearchOptions = Object.values(vesselIds).map((vessel) => ({\n    id: vessel.vesselId,\n    name: vessel.shipname,\n    type: 'vessel',\n    ssvid: vessel.ssvid,\n    color: '#636363',\n    flag: vessel.flag || '🚩',\n    ...vessel,\n  }));\n\n  const cableOptions = cableStore.getDataCables.map((cable) => ({\n    ...cable,\n    type: 'cable',\n  }));\n\n  const landingSiteOptions = landingSiteStore.getLandingSites.map((landingSite) => ({\n    ...landingSite,\n    type: 'landingSite',\n  }));\n\n  inputArray = cableOptions.concat(landingSiteOptions).concat(vesselSearchOptions);\n  landingSitesAndCables.value = inputArray;\n}\n\nonMounted(async () => {\n  await initializeSearchBar();\n  \n  sidebarMarkerLayerGroup.value = L.layerGroup();\n  \n  if (cableStore.getMapInstance?._loaded) {\n    mapInstance.value = cableStore.getMapInstance;\n    sidebarMarkerLayerGroup.value.addTo(mapInstance.value);\n  } else {\n    const interval = setInterval(() => {\n      if (cableStore.getMapInstance?._loaded) {\n        mapInstance.value = cableStore.getMapInstance;\n        sidebarMarkerLayerGroup.value.addTo(mapInstance.value);\n        clearInterval(interval);\n      }\n    }, 100);\n  }\n  \n  landingSitesAndCables.value = inputArray;\n});\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_unref(VueMultiselect), {\n        modelValue: selectedCables.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedCables).value = $event)),\n        \"track-by\": \"id\",\n        label: \"name\",\n        options: landingSitesAndCables.value,\n        searchable: true,\n        loading: isLoading.value,\n        \"internal-search\": false,\n        \"show-no-options\": false,\n        placeholder: selectedCables.value && selectedCables.value.length > 0 ? '' : 'Search...',\n        onSearchChange: asyncFind,\n        onSelect: selectCableOrLandingSiteOrVessel\n      }, {\n        option: _withCtx(({ option }) => [\n          _createElementVNode(\"div\", _hoisted_3, [\n            (option.type === 'cable')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                  (_openBlock(), _createElementBlock(\"svg\", _hoisted_5, [\n                    _hoisted_6,\n                    _createElementVNode(\"circle\", {\n                      cx: \"4\",\n                      cy: \"8\",\n                      r: \"2\",\n                      fill: getLandingColor(option),\n                      stroke: \"white\",\n                      \"stroke-width\": \"1\"\n                    }, null, 8, _hoisted_7),\n                    _createElementVNode(\"circle\", {\n                      cx: \"20\",\n                      cy: \"16\",\n                      r: \"2\",\n                      fill: getLandingColor(option),\n                      stroke: \"white\",\n                      \"stroke-width\": \"1\"\n                    }, null, 8, _hoisted_8)\n                  ]))\n                ]))\n              : _createCommentVNode(\"\", true),\n            (option.type === 'landingSite')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                  (_openBlock(), _createElementBlock(\"svg\", _hoisted_10, [\n                    _createElementVNode(\"path\", {\n                      d: \"M12 2C8.69 2 6 4.69 6 8c0 2.64 2.07 6.64 4.42 9.71 0 .01.01.02.02.03l1.28 1.56 1.28-1.56c.01-.01.02-.02.02-.03C15.93 14.64 18 10.64 18 8c0-3.31-2.69-6-6-6zm0 2c2.21 0 4 1.79 4 4 0 1.91-1.63 5.17-4 8.33-2.37-3.16-4-6.42-4-8.33 0-2.21 1.79-4 4-4zm-1 3v2h2V7h-2zm0 4v2h2v-2h-2zm-9 6v2h20v-2h-20z\",\n                      fill: getLandingColor(option),\n                      stroke: \"white\",\n                      \"stroke-width\": \"1\"\n                    }, null, 8, _hoisted_11)\n                  ]))\n                ]))\n              : _createCommentVNode(\"\", true),\n            (option.type === 'vessel')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                  (_openBlock(), _createElementBlock(\"svg\", _hoisted_13, [\n                    _createElementVNode(\"path\", {\n                      d: \"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\",\n                      fill: getShipColor(option),\n                      stroke: \"white\",\n                      \"stroke-width\": \"1\"\n                    }, null, 8, _hoisted_14)\n                  ])),\n                  _createElementVNode(\"span\", _hoisted_15, _toDisplayString(getFlagEmoji(option)), 1)\n                ]))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"span\", null, _toDisplayString(option.name), 1)\n          ])\n        ]),\n        _: 1\n      }, 8, [\"modelValue\", \"options\", \"loading\", \"placeholder\"]),\n      _createVNode(VesselTracking, {\n        ref_key: \"vesselTrackingRef\",\n        ref: vesselTrackingRef,\n        mapInstance: mapInstance.value,\n        currentLanguage: __props.currentLanguage || 'ENGLISH',\n        cableStore: _unref(cableStore),\n        controlInstance: __props.controlInstance,\n        layerGroup: __props.layerGroup || sidebarMarkerLayerGroup.value,\n        mapReady: !!mapInstance.value?.value,\n        vesselPositions: __props.vesselPositions,\n        \"onUpdate:vesselPositions\": updateVesselPositions,\n        \"onUpdate:hoveredMarker\": updateHoveredMarker,\n        \"onUpdate:viewingVesselTrack\": updateViewingVesselTrack\n      }, null, 8, [\"mapInstance\", \"currentLanguage\", \"cableStore\", \"controlInstance\", \"layerGroup\", \"mapReady\", \"vesselPositions\"])\n    ]),\n    _createElementVNode(\"div\", _hoisted_16, [\n      _createElementVNode(\"div\", _hoisted_17, [\n        _createVNode(_component_router_view, { name: \"sidebar\" })\n      ]),\n      _createElementVNode(\"div\", _hoisted_18, [\n        _hoisted_19,\n        _createVNode(SourcesModal),\n        _hoisted_20\n      ])\n    ])\n  ]))\n}\n}\n\n})","<!--\nTheSidebar.vue - Main sidebar component for the application\n\nFeatures:\n- Search functionality for cables, landing sites, and vessels\n- Vessel tracking integration\n- Responsive layout with scrollable content\n- Custom icons for different search result types\n\nProps:\n- currentLanguage: Current language setting\n- cableStore: Store for cable data\n- controlInstance: Leaflet control instance\n- layerGroup: Leaflet layer group\n- mapReady: Flag indicating if map is ready\n- vesselPositions: Array of vessel positions\n-->\n\n<template>\n  <div class=\"sidebar-container\">\n    <!-- Fixed header section with search and vessel tracking -->\n    <div class=\"sidebar-header\">\n      <VueMultiselect\n        v-model=\"selectedCables\"\n        track-by=\"id\"\n        label=\"name\"\n        :options=\"landingSitesAndCables\"\n        :searchable=\"true\"\n        :loading=\"isLoading\"\n        :internal-search=\"false\"\n        :show-no-options=\"false\"\n        :placeholder=\"selectedCables && selectedCables.length > 0 ? '' : 'Search...'\"\n        @search-change=\"asyncFind\"\n        @select=\"selectCableOrLandingSiteOrVessel\"\n      >\n        <!-- Custom option template for different types (cable, landing site, vessel) -->\n        <template v-slot:option=\"{ option }\">\n          <div class=\"d-flex align-items-center\">\n            <!-- Cable icon -->\n            <div v-if=\"option.type === 'cable'\" class=\"cable-icon-container me-2\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" class=\"landing-icon\">\n                <path d=\"M4 8c4 8 12-8 16 8\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n                <circle cx=\"4\" cy=\"8\" r=\"2\" :fill=\"getLandingColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n                <circle cx=\"20\" cy=\"16\" r=\"2\" :fill=\"getLandingColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n              </svg>\n            </div>\n            <!-- Landing site icon -->\n            <div v-if=\"option.type === 'landingSite'\" class=\"landing-icon-container me-2\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" class=\"landing-icon\">\n                <path d=\"M12 2C8.69 2 6 4.69 6 8c0 2.64 2.07 6.64 4.42 9.71 0 .01.01.02.02.03l1.28 1.56 1.28-1.56c.01-.01.02-.02.02-.03C15.93 14.64 18 10.64 18 8c0-3.31-2.69-6-6-6zm0 2c2.21 0 4 1.79 4 4 0 1.91-1.63 5.17-4 8.33-2.37-3.16-4-6.42-4-8.33 0-2.21 1.79-4 4-4zm-1 3v2h2V7h-2zm0 4v2h2v-2h-2zm-9 6v2h20v-2h-20z\"\n                  :fill=\"getLandingColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n              </svg>\n            </div>\n            <!-- Ship icon -->\n            <div v-if=\"option.type === 'vessel'\" class=\"ship-icon-container me-2\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" class=\"ship-icon\">\n                <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\"\n                  :fill=\"getShipColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n              </svg>\n              <span class=\"ship-flag\">{{ getFlagEmoji(option) }}</span>\n            </div>\n            <span>{{ option.name }}</span>\n          </div>\n        </template>\n      </VueMultiselect>\n\n      <VesselTracking\n        ref=\"vesselTrackingRef\"\n        :mapInstance=\"mapInstance\"\n        :currentLanguage=\"currentLanguage || 'ENGLISH'\"\n        :cableStore=\"cableStore\"\n        :controlInstance=\"controlInstance\"\n        :layerGroup=\"layerGroup || sidebarMarkerLayerGroup\"\n        :mapReady=\"!!mapInstance?.value\"\n        :vesselPositions=\"vesselPositions\"\n        @update:vesselPositions=\"updateVesselPositions\"\n        @update:hoveredMarker=\"updateHoveredMarker\"\n        @update:viewingVesselTrack=\"updateViewingVesselTrack\"\n      />\n    </div>\n\n    <!-- Scrollable content area with router view and footer -->\n    <div class=\"scrollable-container\">\n      <div class=\"scrollable-content\">\n        <router-view name=\"sidebar\" />\n      </div>\n      \n      <!-- Footer section with logo and copyright information -->\n      <div class=\"sidebar-footer\">\n        <img src=\"@/assets/logo.png\" :style=\"{ width: '250px', height: 'auto' }\" />\n        <SourcesModal />\n        <p>\n          Copyright © Jonas Franken, 2024<br />\n          Licensed under the\n          <a target=\"blank\" href=\"https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12\">EUPL</a><br />\n          <a href=\"mailto:franken@peasec.de\">franken@peasec.de</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onMounted, nextTick } from 'vue';\nimport L from 'leaflet';\nimport VueMultiselect from 'vue-multiselect';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\nimport SourcesModal from './SourcesModal.vue';\nimport vesselIds from '@/assets/vesselIds.json';\nimport VesselTracking from '@/components/layers/maritime/VesselTracking.vue';\nimport axios from 'axios';\n\n// ======================\n// PROPS & EMITS\n// ======================\nconst props = defineProps({\n  currentLanguage: { type: String, default: 'ENGLISH' },  \n  cableStore: { type: Object, required: false },     \n  controlInstance: { type: Object, default: null }, \n  layerGroup: { type: Object, default: null },      \n  mapReady: { type: Boolean, default: false },  \n  vesselPositions: { type: Array, default: () => [] }\n});\n\nconst emit = defineEmits(['update:vesselPositions', 'update:hoveredMarker', 'update:viewingVesselTrack']);\n\n// ======================\n// STORE REFERENCES\n// ======================\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\n\n// ======================\n// COMPONENT REFERENCES\n// ======================\nconst vesselTrackingRef = ref(null);\nconst sidebarMarkerLayerGroup = ref<L.LayerGroup | null>(null);\nconst currentSidebarMarker = ref(null);\n\n// ======================\n// STATE VARIABLES\n// ======================\nconst selectedCables = ref([]);\nconst selectedLandingSite = ref(null);\nconst landingSitesAndCables = ref([]);\nconst isLoading = ref(false);\nconst mapInstance = ref(null);\nconst hoveredMarker = ref(null);\nlet inputArray = [];\n\n// ======================\n// WATCHERS\n// ======================\n// Watch for cable selection changes\nwatch(() => cableStore.selectCable, (state) => {\n  if (state.length > 0) {\n    const selectedCable = inputArray.find((str) => state[0] == str.id);\n    selectedCables.value = selectedCable;\n  } else {\n    selectedCables.value = [];\n  }\n  \n  if (selectedLandingSite.value?.geoData?.length > 0) {\n    selectedCables.value = selectedLandingSite.value;\n  }\n});\n\n// Watch for landing site selection changes\nwatch(() => landingSiteStore.selectLandingSites, (selectedLandingSites) => {\n  if (selectedLandingSites.length > 0) {\n    selectedLandingSite.value = inputArray.find((str) => selectedLandingSites[0].id == str.id);\n  } else {\n    selectedLandingSite.value = null;\n    selectedCables.value = [];\n  }\n});\n\n// Watch for selected cables changes\nwatch(() => selectedCables.value, (newValue) => {\n  if (!newValue || newValue.length === 0) {\n    clearSidebarVessel();\n  }\n});\n\n// Watch for hovered marker updates\nwatch(() => hoveredMarker.value, (newMarker) => {\n  if (newMarker && mapInstance.value) {\n    newMarker.addTo(mapInstance.value);\n  } else if (hoveredMarker.value && mapInstance.value && newMarker === null) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n    hoveredMarker.value = null;\n  }\n}, { deep: true });\n\n// ======================\n// HELPER FUNCTIONS\n// ======================\nfunction getShipColor(vessel) {\n  return vessel.color || '#636363';\n}\n\nfunction getFlagEmoji(vessel) {\n  return vessel.flag || '🚩';\n}\n\nfunction getCableColor(cable) {\n  return cable.color || '#007BFF';\n}\n\nfunction getLandingColor(landingSite) {\n  return landingSite.color || '#28A745';\n}\n\n// ======================\n// EVENT HANDLERS\n// ======================\nfunction updateHoveredMarker(marker) {\n  if (hoveredMarker.value && mapInstance.value && mapInstance.value.hasLayer(hoveredMarker.value)) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n  }\n  hoveredMarker.value = marker;\n}\n\nfunction updateVesselPositions(positions) {\n  emit('update:vesselPositions', positions);\n}\n\nfunction updateViewingVesselTrack(isViewing) {\n  emit('update:viewingVesselTrack', isViewing);\n}\n\nfunction selectCableOrLandingSiteOrVessel(selection) {\n  if (selection.type === 'vessel') {\n    handleVesselSearchSelect(selection);\n  } else if (selection.country) {\n    cableStore.deselectCables();\n    landingSiteStore.setSelectLandingSite(selection, true);\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(selection.id, true);\n  }\n}\n\n// ======================\n// VESSEL FUNCTIONS\n// ======================\nfunction clearSidebarVessel() {\n  if (sidebarMarkerLayerGroup.value) {\n    sidebarMarkerLayerGroup.value.clearLayers();\n  }\n\n  if (props.vesselPositions && props.vesselPositions.length > 0) {\n    const updatedPositions = props.vesselPositions.filter(vessel => !vessel.fromSidebar);\n    emit('update:vesselPositions', updatedPositions);\n  }\n}\n\nasync function handleVesselSearchSelect(vessel) {\n  clearSidebarVessel();\n\n  if (!vesselTrackingRef.value) return;\n\n  try {\n    const vesselInfo = vessel;\n    const latestPosition = await getVesselLatestPosition(vesselInfo.vesselId);\n\n    if (!latestPosition) return;\n\n    const vesselData = {\n      ...vessel,\n      ...latestPosition.vessel,\n      id: vesselInfo.vesselId,\n      position: latestPosition.position,\n      lastSeen: latestPosition.lastSeen || new Date().toISOString(),\n      eventType: latestPosition.eventType || 'Unknown',\n      flag: latestPosition.vessel?.flag || vessel.country || 'Unknown',\n      ssvid: vessel.ssvid || latestPosition.vessel?.ssvid,\n      name: vessel.name || latestPosition.vessel?.name || 'Unknown Vessel',\n      length: vesselInfo.length || 'Unknown',\n      beam: vesselInfo.beam || 'Unknown',\n      grossTonage: vesselInfo.grossTonage || 'Unknown',\n      purpose: vesselInfo.purpose || 'Unknown',\n      cableCapacity: vesselInfo.cableCapacity || 'Unknown',\n      notes: vesselInfo.notes || 'Unknown',\n      baseport: vesselInfo.baseport || 'Unknown',\n      owner: vesselInfo.owner || 'Unknown',\n      fromSidebar: true,\n    };\n\n    if (Array.isArray(props.vesselPositions)) {\n      const updatedPositions = [...props.vesselPositions, vesselData];\n      emit('update:vesselPositions', updatedPositions);\n    } else {\n      emit('update:vesselPositions', [vesselData]);\n    }\n\n    cableStore.setAllCablesOpacity(0.15);\n\n    if (mapInstance.value && vesselData.position) {\n      mapInstance.value.setView([vesselData.position.lat, vesselData.position.lon], 8);\n    }\n\n    await nextTick();\n\n    if (!vesselTrackingRef.value) return;\n\n    const shipIcon = vesselTrackingRef.value.createShipIcon('#636363', vesselData.flag, vesselData);\n\n    if (mapInstance.value && vesselData.position) {\n      const marker = new L.Marker([vesselData.position.lat, vesselData.position.lon], {\n        icon: shipIcon,\n      });\n\n      marker.on('click', (e) => {\n        const clickEvent = {\n          latlng: {\n            lat: vesselData.position.lat,\n            lng: vesselData.position.lon,\n          },\n          originalEvent: e.originalEvent,\n        };\n\n        if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n          vesselTrackingRef.value.onShipClick(clickEvent, vesselData);\n        }\n      });\n\n      if (sidebarMarkerLayerGroup.value) {\n        marker.addTo(sidebarMarkerLayerGroup.value);\n      }\n\n      vesselData.marker = marker;\n      currentSidebarMarker.value = marker;\n      marker.fromSidebar = true;\n    }\n\n    const mockEvent = {\n      latlng: {\n        lat: vesselData.position.lat,\n        lng: vesselData.position.lon,\n      },\n      originalEvent: new Event('click'),\n    };\n\n    if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n      vesselTrackingRef.value.onShipClick(mockEvent, vesselData);\n    }\n  } catch (error) {\n    console.error('Error in handleVesselSearchSelect:', error);\n  }\n}\n\nasync function getVesselLatestPosition(vesselId) {\n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const params = {\n    limit: 1,\n    offset: 0,\n    sort: '-start',\n    vessels: [vesselId]\n  };\n  \n  try {\n    params['datasets[0]'] = 'public-global-loitering-events:latest';\n    const loiteringResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    params['datasets[0]'] = 'public-global-port-visits-c2-events:latest';\n    const portVisitResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    let latestEvent = null;\n    let eventType = '';\n    \n    if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0 &&\n        portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      const loiteringEvent = loiteringResponse.data.entries[0];\n      const portVisitEvent = portVisitResponse.data.entries[0];\n      \n      const loiteringDate = new Date(loiteringEvent.end);\n      const portVisitDate = new Date(portVisitEvent.end);\n      \n      if (loiteringDate > portVisitDate) {\n        latestEvent = loiteringEvent;\n        eventType = 'Loitering';\n      } else {\n        latestEvent = portVisitEvent;\n        eventType = 'PortVisit';\n      }\n    } else if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n      latestEvent = loiteringResponse.data.entries[0];\n      eventType = 'Loitering';\n    } else if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      latestEvent = portVisitResponse.data.entries[0];\n      eventType = 'PortVisit';\n    }\n        \n    if (latestEvent) {\n      return {\n        position: latestEvent.position,\n        lastSeen: latestEvent.end,\n        ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n        eventType: eventType,\n        vessel: {\n          ...latestEvent.vessel,\n          name: latestEvent.vessel.name || 'Unknown Vessel'\n        }\n      };\n    }\n    \n    return null;\n  } catch (error) {\n    console.error(\"Error fetching vessel position:\", error);\n    return null;\n  }\n}\n\n// ======================\n// SEARCH FUNCTIONS\n// ======================\nasync function asyncFind(queryGiven: string) {\n  clearSidebarVessel();\n\n  if (!queryGiven) {\n    landingSitesAndCables.value = inputArray;\n    return;\n  }\n\n  // Entfernt alle nicht-alphanumerischen Zeichen und macht alles klein\n  const normalize = (str: string) =>\n    str.toLowerCase().replace(/[^a-z0-9]/gi, '');\n\n  const normalizedQuery = normalize(queryGiven);\n\n  const filteredArray = inputArray.filter((item) => {\n    if (item && typeof item.name === 'string') {\n      const normalizedName = normalize(item.name);\n      return normalizedName.includes(normalizedQuery);\n    }\n    return false;\n  });\n\n  landingSitesAndCables.value = filteredArray;\n}\n\n// ======================\n// INITIALIZATION\n// ======================\nasync function initializeSearchBar() {\n  await cableStore.initialize();\n  const vesselSearchOptions = Object.values(vesselIds).map((vessel) => ({\n    id: vessel.vesselId,\n    name: vessel.shipname,\n    type: 'vessel',\n    ssvid: vessel.ssvid,\n    color: '#636363',\n    flag: vessel.flag || '🚩',\n    ...vessel,\n  }));\n\n  const cableOptions = cableStore.getDataCables.map((cable) => ({\n    ...cable,\n    type: 'cable',\n  }));\n\n  const landingSiteOptions = landingSiteStore.getLandingSites.map((landingSite) => ({\n    ...landingSite,\n    type: 'landingSite',\n  }));\n\n  inputArray = cableOptions.concat(landingSiteOptions).concat(vesselSearchOptions);\n  landingSitesAndCables.value = inputArray;\n}\n\nonMounted(async () => {\n  await initializeSearchBar();\n  \n  sidebarMarkerLayerGroup.value = L.layerGroup();\n  \n  if (cableStore.getMapInstance?._loaded) {\n    mapInstance.value = cableStore.getMapInstance;\n    sidebarMarkerLayerGroup.value.addTo(mapInstance.value);\n  } else {\n    const interval = setInterval(() => {\n      if (cableStore.getMapInstance?._loaded) {\n        mapInstance.value = cableStore.getMapInstance;\n        sidebarMarkerLayerGroup.value.addTo(mapInstance.value);\n        clearInterval(interval);\n      }\n    }, 100);\n  }\n  \n  landingSitesAndCables.value = inputArray;\n});\n\n</script>\n\n<style scoped>\n/* ======================\n   SIDEBAR LAYOUT STYLES\n   ====================== */\n.sidebar-container {\n  height: 100vh;\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  color: white;\n  border-right: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.sidebar-header {\n  padding: 0.9rem 0.5rem 0rem;\n  flex-shrink: 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.scrollable-container {\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.scrollable-content {\n  flex: 1;\n}\n\n.sidebar-footer {\n  flex-shrink: 0;\n  padding: 1rem;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  font-size: 0.8rem;\n  color: #a0aec0;\n}\n\n/* ======================\n   SCROLLBAR STYLING\n   ====================== */\n.scrollable-container::-webkit-scrollbar {\n  width: 12px;\n}\n\n.scrollable-container::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 6px;\n  margin: 4px;\n}\n\n.scrollable-container::-webkit-scrollbar-thumb {\n  background: rgba(99, 179, 237, 0.4);\n  border-radius: 6px;\n  border: 2px solid rgba(26, 32, 44, 0.5);\n  transition: background 0.2s ease;\n}\n\n.scrollable-container::-webkit-scrollbar-thumb:hover {\n  background: rgba(99, 179, 237, 0.6);\n}\n\n.scrollable-container::-webkit-scrollbar-thumb:active {\n  background: rgba(99, 179, 237, 0.8);\n}\n</style>\n\n<style>\n/* ======================\n   MULTISELECT COMPONENT STYLES\n   ====================== */\n.multiselect {\n  width: 100%;\n  background: rgba(45, 55, 72, 0.9);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  font-family: inherit;\n  font-size: 1rem;\n  color: white;\n  position: relative;\n  margin-bottom: 1rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n  transition: all 0.3s ease;\n}\n\n.multiselect:hover {\n  border-color: rgba(99, 179, 237, 0.5);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\n}\n\n.multiselect__tags {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 0.7rem 3rem 0.7rem 3rem;\n  min-height: 2.8rem;\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n  color: white;\n  transition: all 0.3s ease;\n  position: relative;\n}\n\n.multiselect--active .multiselect__tags {\n  background: rgba(45, 55, 72, 0.95);\n  border-radius: 8px 8px 0 0;\n}\n\n.multiselect__tags::before {\n  content: \"\";\n  position: absolute;\n  left: 0.8rem;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 16px;\n  height: 16px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.6)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='8'%3E%3C/circle%3E%3Cpath d='m21 21-4.35-4.35'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  pointer-events: none;\n  z-index: 2;\n  transition: all 0.3s ease;\n}\n\n.multiselect--active .multiselect__tags::before {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='rgba(99,179,237,0.8)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='8'%3E%3C/circle%3E%3Cpath d='m21 21-4.35-4.35'%3E%3C/path%3E%3C/svg%3E\");\n}\n\n.multiselect__input,\n.multiselect__single {\n  background: transparent;\n  border: none;\n  padding: 0.3rem 0;\n  font-size: 1rem;\n  color: white;\n  flex-grow: 1;\n  outline: none;\n  min-width: 100px;\n  box-sizing: border-box;\n  margin-left: 0;\n  padding-left: 0;\n}\n\n.multiselect__single {\n  color: white;\n  font-weight: 500;\n  position: relative;\n  z-index: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: calc(100% - 1rem);\n}\n\n.multiselect__select {\n  position: absolute;\n  top: 50%;\n  right: 0.8rem;\n  transform: translateY(-50%);\n  width: 1.2rem;\n  height: 1.2rem;\n  cursor: pointer;\n  color: rgba(255, 255, 255, 0.7);\n  transition: color 0.2s ease, transform 0.2s ease;\n  z-index: 3;\n}\n\n.multiselect__select:hover {\n  color: #63b3ed;\n  transform: translateY(-50%) scale(1.1);\n}\n\n.multiselect--active .multiselect__select {\n  transform: translateY(-50%) rotate(180deg);\n}\n\n.multiselect__content-wrapper {\n  position: absolute;\n  z-index: 1000;\n  background: rgba(26, 32, 44, 0.98);\n  border: 1px solid rgba(99, 179, 237, 0.3);\n  border-top: none;\n  border-radius: 0 0 8px 8px;\n  width: 100%;\n  max-height: 400px;\n  overflow-y: auto;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);\n  box-sizing: border-box;\n}\n\n.multiselect__content {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.multiselect__element {\n  list-style: none;\n}\n\n.multiselect__option {\n  position: relative;\n  padding: 0.6rem 0.8rem;\n  min-height: 40px;\n  line-height: 1.4;\n  background: transparent;\n  color: rgba(255, 255, 255, 0.9);\n  cursor: pointer;\n  white-space: nowrap;\n  transition: all 0.15s ease;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.03);\n  list-style: none;\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n}\n\n.multiselect__option::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: -1;\n  background: transparent;\n  transition: background 0.15s ease;\n}\n\n.multiselect__option:hover::after,\n.multiselect__option--highlight::after {\n  background: rgba(99, 179, 237, 0.4);\n}\n\n.multiselect__option:hover,\n.multiselect__option--highlight {\n  color: white !important;\n}\n\n.multiselect__option:last-child {\n  border-bottom: none;\n  border-radius: 0 0 8px 8px;\n}\n\n.multiselect__option--selected {\n  background: rgba(72, 187, 120, 0.35);\n  color: #68d391;\n  font-weight: 600;\n  border-bottom: 1px solid rgba(72, 187, 120, 0.2);\n}\n\n.multiselect__option--selected:hover {\n  background: rgba(72, 187, 120, 0.5) !important;\n  border-bottom: 1px solid rgba(72, 187, 120, 0.3);\n}\n\n.multiselect__tag {\n  background: rgba(99, 179, 237, 0.2);\n  border: 1px solid rgba(99, 179, 237, 0.4);\n  border-radius: 6px;\n  margin-right: 0.5rem;\n  margin-bottom: 0.25rem;\n  padding: 0.3rem 0.6rem;\n  color: #63b3ed;\n  font-size: 0.9rem;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  transition: all 0.2s ease;\n}\n\n.multiselect__tag:hover {\n  background: rgba(99, 179, 237, 0.3);\n  border-color: rgba(99, 179, 237, 0.6);\n  transform: translateY(-1px);\n}\n\n.multiselect__tag-icon {\n  margin-left: 0.5rem;\n  cursor: pointer;\n  color: rgba(99, 179, 237, 0.8);\n  font-weight: bold;\n  transition: color 0.2s ease;\n}\n\n.multiselect__tag-icon:hover {\n  color: #e53e3e;\n}\n\n.multiselect__option::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: -1;\n  background: transparent;\n  transition: background 0.15s ease;\n}\n\n.multiselect--disabled {\n  background: rgba(45, 55, 72, 0.5);\n  color: rgba(255, 255, 255, 0.5);\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.multiselect--disabled .multiselect__select {\n  color: rgba(255, 255, 255, 0.3);\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar {\n  width: 12px;\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  margin: 2px;\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar-thumb {\n  background: rgba(99, 179, 237, 0.6);\n  border-radius: 6px;\n  border: 2px solid rgba(26, 32, 44, 0.98);\n  transition: background 0.2s ease;\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar-thumb:hover {\n  background: rgba(99, 179, 237, 0.8);\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar-thumb:active {\n  background: rgba(99, 179, 237, 1);\n}\n\n.cable-icon-container,\n.landing-icon-container,\n.ship-icon-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 26px;\n  height: 26px;\n  margin-right: 10px;\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n.multiselect__option:hover .cable-icon-container,\n.multiselect__option:hover .landing-icon-container,\n.multiselect__option:hover .ship-icon-container {\n  background: rgba(99, 179, 237, 0.2);\n}\n\n.ship-flag {\n  position: absolute;\n  bottom: -2px;\n  right: -2px;\n  font-size: 0.8rem;\n  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.5));\n}\n\n.multiselect--active {\n  border-color: rgba(99, 179, 237, 0.7);\n  box-shadow: 0 0 0 2px rgba(99, 179, 237, 0.2);\n}\n\n.multiselect:not(.multiselect--active):hover .multiselect__tags::before {\n  color: rgba(99, 179, 237, 0.7);\n  transform: translateY(-50%) scale(1.1);\n}\n</style>","import script from \"./TheSidebar.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TheSidebar.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./TheSidebar.vue?vue&type=style&index=0&id=04d16ff4&scoped=true&lang=css\"\nimport \"./TheSidebar.vue?vue&type=style&index=1&id=04d16ff4&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-04d16ff4\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4d4bdbf4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"d-flex full-height resizable-container\" }\nconst _hoisted_2 = { class: \"map-container\" }\n\nimport { ref, onBeforeUnmount } from 'vue';\nimport SidebarNav from '@/components/sidebar/TheSidebar.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\nconst sidebarWidth = ref(250); // Initial sidebar width\nlet isResizing = false;\n\nconst startResizing = (event: MouseEvent) => {\n  isResizing = true;\n  document.addEventListener('mousemove', resizeSidebar);\n  document.addEventListener('mouseup', stopResizing);\n};\n\nconst resizeSidebar = (event: MouseEvent) => {\n  if (isResizing) {\n    sidebarWidth.value = event.clientX;\n  }\n};\n\nconst stopResizing = () => {\n  isResizing = false;\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n};\n\nonBeforeUnmount(() => {\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n});\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref: \"sidebar\",\n      class: \"sidebar-nav\",\n      style: _normalizeStyle({ width: sidebarWidth.value + 'px' })\n    }, [\n      _createVNode(SidebarNav)\n    ], 4),\n    _createElementVNode(\"div\", {\n      ref: \"resizer\",\n      class: \"resizer\",\n      onMousedown: startResizing\n    }, null, 544),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_view, { name: \"main\" })\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"d-flex full-height resizable-container\">\n    <!-- SIDEBAR -->\n    <div ref=\"sidebar\" class=\"sidebar-nav\" :style=\"{ width: sidebarWidth + 'px' }\">\n    <SidebarNav />\n    </div>\n\n    <div ref=\"resizer\" class=\"resizer\" @mousedown=\"startResizing\"></div>\n\n    \n    <!-- CONTENT -->\n    <div class=\"map-container\">\n      <router-view name=\"main\"/>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onBeforeUnmount } from 'vue';\nimport SidebarNav from '@/components/sidebar/TheSidebar.vue';\n\nconst sidebarWidth = ref(250); // Initial sidebar width\nlet isResizing = false;\n\nconst startResizing = (event: MouseEvent) => {\n  isResizing = true;\n  document.addEventListener('mousemove', resizeSidebar);\n  document.addEventListener('mouseup', stopResizing);\n};\n\nconst resizeSidebar = (event: MouseEvent) => {\n  if (isResizing) {\n    sidebarWidth.value = event.clientX;\n  }\n};\n\nconst stopResizing = () => {\n  isResizing = false;\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n};\n\nonBeforeUnmount(() => {\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n});\n\n</script>\n\n<style scoped>\n/* Ensure the entire layout takes full viewport height */\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* Ensure the main container takes full height and uses flexbox */\n.full-height {\n  height: 100vh; /* Full viewport height */\n}\n\n.d-flex {\n  display: flex; /* Flexbox layout for the sidebar and main content */\n}\n\n/* SidebarNav component should be styled to take up the necessary width */\n.sidebar-nav {\n  min-width: 320px; /* or any width you need for the sidebar */\n  background-color: #f8f9fa; /* Background color for the sidebar */\n}\n\n/* The map container should take up all remaining space */\n.map-container {\n  flex-grow: 1; /* Take up the remaining space next to the sidebar */\n  height: 100%; /* Ensure it takes full height */\n  position: relative; /* Necessary for Leaflet or other map controls */\n}\n</style>\n","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=4d4bdbf4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4d4bdbf4\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport HomeView from \"@/views/HomeView.vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport '@/assets/styles/mapStyles.css';\n\n//first load of cables and landing sites\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\nconst dataCableStore = useDataCablesStore();\ndataCableStore.initialize();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(HomeView)\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <HomeView />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport HomeView from \"@/views/HomeView.vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport '@/assets/styles/mapStyles.css';\n\n//first load of cables and landing sites\nconst dataCableStore = useDataCablesStore();\ndataCableStore.initialize();\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  --bs-dark-rgb: 72, 80, 106;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=052077c6&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport { createPinia } from 'pinia';\nimport urql, { Client, cacheExchange, fetchExchange } from '@urql/vue';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport 'bootstrap';\n// commented out because opening the app in a browser would not show the most recent state, \n// could be reintegrated in the future to improve loading time\n// import './registerServiceWorker';\n\nconst client = new Client({\n    url: process.env.VUE_APP_GRAPHQL_SERVER_URL,\n    exchanges: [cacheExchange, fetchExchange],\n    fetchOptions: {\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret': process.env.VUE_APP_HASURA_ADMIN_SECRET,\n      },\n    },\n  });\n\ncreateApp(App).use(createPinia()).use(router).use(urql, client).mount('#app');\n//creates app instance of vue App and mounts it at ID app","var map = {\n\t\"./cables.gif\": 1416,\n\t\"./landingSite.gif\": 214,\n\t\"./layers.gif\": 484,\n\t\"./tools.gif\": 7976\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8432;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"32\":\"a62bb77d\",\"224\":\"d80e564a\",\"312\":\"b9d6588e\",\"384\":\"fd188ae0\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"sdcs-dashboard:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksdcs_dashboard\"] = self[\"webpackChunksdcs_dashboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [999], function() { return __webpack_require__(8469); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","_hoisted_2","class","_hoisted_3","__name","setup","__props","dataCableStore","useDataCablesStore","_ctx","_cache","getDataCables","listItems","key","id","onClick","$event","setSelectCable","selectedCableId","name","__exports__","loadCables","handle","useQuery","query","result","loadLandingSites","queryCableById","queryLandingSiteById","useLandingSitesStore","state","landingSites","selectLandingSites","isLoading","selectedFromSidebar","getters","getLandingSites","actions","fetchLandingSites","data","_rawValue","Landingsites","forEach","e","geoData","JSON","parse","this","setSelectLandingSiteById","landingSiteId","fromSidebar","landingSite","find","site","setSelectLandingSite","console","error","log","push","path","deselectLandingSite","length","isOneSelected","isLandingSiteSelectedById","some","isLandingSiteSelected","n","_hoisted_4","_hoisted_5","props","currentTranslations","type","Object","required","mapInstance","drawnGeometry","default","samplePointCount","Number","showPopup","Boolean","emits","__expose","__emit","emit","depthAnalysis","isAnalyzing","analysisStore","Map","geometryIdCounter","WeakMap","calculateDistance","point1","point2","R","lat1","lat","Math","PI","lat2","deltaLat","deltaLng","lng","a","sin","cos","c","atan2","sqrt","interpolateLinePoints","segments","totalPoints","totalLength","segmentLengths","i","pointsPerSegment","map","max","round","interpolatedPoints","start","end","numPoints","j","fraction","interpolatedLat","interpolatedLng","isPointInPolygon","point","polygon","inside","x","y","xi","yi","xj","yj","intersect","samplePolygonPoints","bounds","getBounds","polygonLatLngs","getLatLngs","points","adjustedPoints","geodesicArea","min","maxAttempts","attempts","getSouth","random","getNorth","getWest","getEast","contains","sampleCirclePoints","circle","center","getLatLng","radius","getRadius","angle","r","extractSamplePoints","geometry","fetchOceanDepth","Promise","minx","miny","maxx","maxy","url","axios","get","response","searchString","searchIndex","indexOf","extractedText","substring","parseFloat","NaN","analyzeGeometryDepths","value","samplePoints","depthPromises","coord","all","depths","validDepths","filter","depth","isNaN","averageDepth","reduce","b","deepestPoint","shallowestPoint","geomId","set","feature","properties","analysisId","analysis","depthAnalysisTitle","meters","totalSamplePoints","off","on","stop","layer","target","setLatLng","latlng","setContent","openOn","newGeometry","oceanDepthAnalysis","forLastGeometry","lastGeometry","drawn","analyzingDepthData","_hoisted_6","_hoisted_7","_hoisted_8","window","d3","showProfile","isFullscreen","fetchingPoints","fetchedPoints","isComponentMounted","resizeObserver","isOceanDepthActive","isCableShipsActive","isAnchorageActive","currentElevationControl","currentElevationLayer","resizeTimeout","oceanDepthFullscreenClass","baseClasses","fullscreen","elevationOptions","theme","detached","elevationDiv","followMarker","reverseCoords","autofitBounds","imperial","altitude","distance","summary","ruler","legend","edgeScale","hotline","preferCanvas","waypoints","onRemove","disconnect","_onRemove","_container","MutationObserver","mutations","mutation","attributeName","classList","observe","attributes","attributeFilter","cleanupElevationProfile","showElevationProfile","options","_originalResizeChart","_resizeChart","_safeResizeChart","bind","_map","_data","chart","_chart","area","_area","select","document","body","warn","onAdd","_initEvents","clearTimeout","listeners","event","removeEventListener","_mousemoveHandler","Elevation","toggleFullscreen","height","removeCurrentElevationControl","convertToGeoJSON","geoJson","SafeElevationControl","addTo","load","setupResizeHandling","coordinates","rawCoordinates","stringify","unsortedSegments","Array","isArray","sortedSegments","sortCableSegments","maxDistanceThreshold","minPointDensity","calculateTotalPoints","processedCoordinates","segment","segmentToProcess","shouldInterpolateSegment","interpolateSegment","multiLineString","acc","rawSegments","used","currentEndPoint","nextSegment","findClosestSegment","segmentIndex","shouldReverse","segmentToAdd","reverse","minDistance","Infinity","closestSegmentIndex","index","distanceToStart","distanceToEnd","p1","p2","pow","calculateSegmentLength","lng1","lng2","segmentLength","SHORT_SEGMENT_THRESHOLD","SHORT_SEGMENT_MIN_DENSITY","NORMAL_SEGMENT_MIN_DENSITY","pointDensity","requiredDensity","interpolatedSegment","SHORT_SEGMENT_DISTANCE","NORMAL_SEGMENT_DISTANCE","actualThreshold","numExtraPoints","ceil","total","removeControl","removeLayer","eachLayer","className","style","resetFullscreen","clear","originalRemoveClass","removeClass","el","safeRemoveClasses","getElementById","innerHTML","selectors","selector","querySelectorAll","element","HTMLElement","remove","_path","includes","classNames","classes","split","trim","debounce","func","wait","timeout","later","apply","args","setTimeout","ResizeObserver","disabled","width","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","for","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","landingSitesStore","route","cable","filteredDepthAnalysis","activeAnalysis","oceanDepthAnalyzerRef","elevationProfileRef","getMapInstance","selectCable","cableDetails","clearAnalysis","params","cableId","toString","isCableSelected","to","loadCable","client","toPromise","CableSystems","formatDate","dateString","Date","toLocaleDateString","year","month","day","cleanupAnalysis","cleanup","cableRiskAnalysisRef","toggleElevationProfile","extractDepthInfo","cableGeo","flattenedCoordinates","flatMap","latlngs","filterDepthAnalysis","fullAnalysis","_component_router_link","deselectCables","_","outOfService","toLocaleString","readyForService","CableSystem_X_Landingsites","Landingsite","Ownerships","entry","Company","nationality","count","active","ElevationProfile","ref_key","ref","autoStart","OceanDepthAnalyzer","onDepthAnalysisComplete","showConsent","clickToClose","styles","modalStyles","acceptTracking","declineTracking","show","closeModal","showLanguageDropdown","toggleLanguageDropdown","title","getCurrentLanguageName","currentLanguage","toUpperCase","availableLanguages","lang","code","changeLanguage","translations","welcomeOverview","belowSummary","steps","step","currentStep","setCurrentStep","src","getCurrentGif","alt","getCurrentStepTitle","getCurrentStepDescription","previousStep","previous","nextStep","next","getStarted","components","VueFinalModal","String","hasConsented","tracker","gif","titleKey","descriptionKey","initializeTracker","projectKey","ingestPoint","privateMode","canvas","disableCanvas","useAnimationFrame","fileExt","resourceBaseHref","_trackerInstance","startTracker","isActive","consent","localStorage","getItem","setItem","resetConsent","removeItem","openModal","stepIndex","getDefaultTitle","descKey","getDefaultDescription","titles","descriptions","builtInTranslations","en","cableInteractionTitle","landingSiteTitle","layerSwitchTitle","mapToolsTitle","cableInteractionDesc","landingSiteDesc","layerSwitchDesc","mapToolsDesc","close","language","de","es","fr","it","zh","l","langCode","current","overlay","zIndex","content","render","clusteredDataCentersRef","resetMapLayer","layerControl","controlInstance","mtLayer","resetMapButton","getLayerTranslation","layerName","onLayerControlReady","controlIns","setupResetMapControl","dataCenterLayer","addOverlay","updateLayerControlNames","resetMapContainer","createElement","button","textContent","appendChild","layerControlContainer","getContainer","addEventListener","_layers","layerObj","originalName","translatedName","_update","initializeBaseLayers","apiKey","DATAVIZ","layertype","setLanguage","removeAllOverlays","hasLayer","_layerControlInputs","input","checked","switchToBaseLayer","baseLayer","addLayer","removeOverlay","newLanguage","newMapInstance","onReady","dataCablesStore","selectedSource","isOpen","currentHoveredItem","originalCableData","toggleDropdown","selectSource","source","updateCableSource","async","dataCables","updateMixedSourceCables","originalCable","orig","initialize","mixedSourceCable","item","timeline","leftPosition","rightPosition","hoverPosition","currentStartDate","currentEndDate","minDate","maxDate","setMonth","getMonth","visibleRangeStart","visibleRangeEnd","showLeftTooltip","showRightTooltip","isEventTooltipVisible","eventTooltipContent","eventTooltipStyle","hoverEffectStyle","display","hoveredEvent","visibleEvents","startPosition","endPosition","hoveredLine","interEventLines","line","left","backgroundColor","timeRange","extendedVisibleRangeForEvents","events","startDate","endDate","visibleTimeRange","getTime","eventStart","eventEnd","lines","sortedEvents","sort","currentEvent","nextEvent","startEvent","endEvent","timelineMarkers","leftSliderTime","rightSliderTime","selectedTimeRange","dayInMs","monthInMs","yearInMs","interval","format","markers","currentTime","position","abs","label","getDate","getFullYear","isFixed","initializeDates","now","oneYearAgo","updateDates","initializePositions","date","slider","emitValue","leftTime","rightTime","adjustVisibleRange","newVisibleStart","newVisibleEnd","setTime","resetSliderPositions","extendVisibleRange","direction","distanceDragged","expansionFactor","startDrag","preventDefault","initialX","clientX","initialLeft","initialRight","timelineRect","getBoundingClientRect","move","deltaX","deltaPct","updateHoverPosition","emitEventHover","showEventTooltip","hideEventTooltip","handleLineHover","hideHoverEffect","lineStart","lineEnd","lineWidth","normalizedPosition","startTime","endTime","interpolatedTime","startLat","endLat","startLon","lon","endLon","interpolatedLon","time","showTooltip","hideTooltip","top","clientY","getEventBarStyle","getInterEventLineStyle","dataPoints","deep","interpolationInterval","vesselTrackingUrl","cableStore","layerGroup","mapReady","vesselPositions","localVesselPositions","vesselLayerReady","vesselPostResponse","vesselModifiedPostUrl","isVesselTrackingMode","vesselTrackingSelected","vesselEvents","hoveredMarker","currentTrackedVessel","vesselTrackLayer","interpolatedEvents","dateRange","formattedEndDate","formattedStartDate","vesselTrackingParams","limit","offset","newPositions","isReady","vesselTracking","onDatePickerChange","selectedDates","onDateChange","vesselTrack","d","join","vesselIdsArray","vesselIdsToArray","clearLayers","vesselId","loiteringParams","vessels","portVisitParams","loiteringResponse","portVisitResponse","latestEvent","eventType","speedValue","entries","undefined","vessel","speed","msToKnots","portVisitEvent","portVisitSpeed","lastSeen","ssvid","flag","aprsLastSeen","validCallsigns","batchSize","batches","slice","batch","batchCallsigns","what","found","v","mmsi","aprsTimestamp","lasttime","parseInt","currentLastSeen","toISOString","lastSeenSource","speedSource","beam","grossTonage","purpose","cableCapacity","notes","baseport","owner","replace","extendedStartDate","extendedEndDate","baseParams","portVisitsResponse","allEvents","formattedEvents","generateInterpolatedEvents","drawVesselTrack","trackData","mapInstanceToUse","filteredData","eventStartDate","eventEndDate","trackPoints","isInterpolated","color","weight","opacity","arrowheads","size","yawn","fill","fitBounds","interpolatePosition","isTimeInRange","timestamp","getVisibleInterpolationRange","duration","visibleRange","visibleDuration","floor","stepinterpolationInterval","interpolatedPos","timeA","timeB","onShipClick","lastSeenDate","formattedDate","hour","minute","second","hour12","aprsTimeInfo","aprsDate","formattedAprsDate","speedInfo","toFixed","popup","getFlagEmoji","grossTonnage","viewOn","viewVesselTrack","setAllCablesOpacity","exitVesselTrackingMode","marker","onEventHover","onMarkerHover","onInterEventHover","eventData","markerData","tooltip","permanent","html","vesselData","icon","createShipIcon","bindTooltip","openTooltip","vesselIds","metersPerSecond","stopEvent","stopPropagation","baseColor","countryCode","flagEmoji","lastDateSeen","currentDate","daysSinceLastSeen","getColorComponent","calculateColor","startColor","hexToRgb","endColor","g","rgbToHex","iconSize","iconAnchor","hex","exec","codePoints","char","charCodeAt","fromCodePoint","onMousedown","onTouchstart","exitVesselTracking","modelValue","placeholder","datePlaceholder","range","partialRange","dark","TimelineSlider","isVisible","zoneLabels","highlightedLayers","zoneColors","ACMA","NAZ","MECMA","SEAIOCMA","YZ","APMA","AAPMMSAA","SPZ","layers","translatedKey","defaultName","visible","geoJsonLayer","features","getZoneStyle","abbreviation","defaultStyle","fillOpacity","fillColor","createLabel","getCenter","labelColor","interactive","highlightZone","clearHighlightedZones","layerConfig","featureItem","highlightStyle","highlightedLayer","popupContent","toggleLayer","onEachFeature","labelKey","resetLayers","hide","oceanSelected","isDrawingModeActive","isEditModeActive","drawControlsInitialized","currentGeometry","drawnItemsLayer","drawnItems","drawControl","initializeDrawingControls","drawOptions","draw","polyline","shapeOptions","metric","nautic","feet","showArea","rectangle","showRadius","circlemarker","edit","featureGroup","Draw","Event","CREATED","handleDrawCreated","DELETED","handleDrawDeleted","DRAWSTART","handleDrawStart","DELETESTART","handleDeleteStart","DELETESTOP","handleDeleteStop","EDITSTART","handleEditStart","EDITSTOP","handleEditStop","toggleDrawingMode","fromWatcher","addControl","cleanupGeometries","removeMapEventListeners","createHighlightedLayer","highlightStyles","coords","smoothFactor","noClip","getLayerCoordinates","setupClickHandler","itemDetails","layerType","findIndex","splice","targetLayer","fire","newMap","newValue","drawingToggleTooltip","analysisDetail","quickScan","standardDetail","highDetail","veryHighDetail","ultraDetailed","isOceanSelected","depthTooltip","drawingLayerRef","oceanDepthWMSLayer","latitude","longitude","currentOceanDepth","lastDepthQuery","immediate","isLayerBeingRemoved","onOceanDepthActivated","onOceanDepthDeactivated","wms","transparent","attribution","maxZoom","minZoom","_tiles","invalidateSize","getOceanDepth","queryString","oceanDepth","updateDepthTooltip","containerPoint","latLngToContainerPoint","updateMousePosition","roundedLat","roundedLng","geojson","oceanMapLegend","DrawingLayer","apiUrl","internalDate","fishLayerReady","datePlaceholderFishing","formatDatePart","part","modifyApiUrl","originalUrl","initializeFishingWatch","post","headers","Error","modifiedUrl","updateFishingData","handleDatePicked","firstDay","firstMonth","secondDay","secondMonth","newDateRange","newVisible","gasPipelineData","highlightedPipelineId","formatCost","cost","initializeTooltip","getGasPipelinesOptionsStyle","isPipelineHighlighted","PipelineID","dashArray","onPipelineClick","toGeoJSON","pipelineId","previouslyHighlighted","isSamePipeline","wasPreviouslyHighlighted","borderStyle","fillStyle","currentStyle","setStyle","CostUSD","Cost","formattedCost","PipelineName","startCountry","StartCountry","endCountry","EndCountry","countries","Countries","Owner","startYear","StartYear1","capacityTooltip","capacity","LengthKnownKm","onPipelineHover","onPipelineDehover","clearHighlight","onMouseover","onMouseout","supercluster","polygonLayer","isLayerVisible","formatPropertyKey","keyMappings","lowerKey","toLowerCase","word","charAt","createTooltipContent","excludeKeys","formattedKey","formattedValue","startsWith","domain","URL","hostname","createDataCenterIcon","bindInteractiveTooltip","getTooltip","tooltipElement","getElement","pointerEvents","originalGeometry","accumulated","formattedFeatures","updateClusters","zoom","getZoom","bbox","clusters","getClusters","cluster","point_count","expansionZoom","getClusterExpansionZoom","cluster_id","setView","pane","tooltipContent","polygonErr","initializeLayer","controlInst","layerDefinitions","def","initializeLayers","groupedLayerObj","groupedLayer","allGroupLayers","getLayers","matchedLayer","anchorageData","anchorageLayer","sublabel","distance_from_shore_m","isDock","dock","res","fetch","json","err","geojsonData","anchorageOverlayLayer","createClusterMarker","createAnchorMarker","clusterMarker","anchorIcon","distanceFromShore","showSeismicOverlay","seismicData","selectedEarthquake","seismicDate","updateSeismicLayer","reactivePointToLayer","magnitude","mag","L","circleMarker","location","place","fetchSeismicData","seismicDatePicked","startMonth","endMonth","pointToLayer","datePlaceholderSeismic","selectedEarthquakeDetails","validator","riskLayersToggleRef","fishingDataEurope","terrainDataChoroplethEurope","setCombinedRiskDataEurope","isCombinedRiskEuropeGroupActive","activeRiskLayerEurope","isDredgingActiveChoroplethEurope","isTerrainActiveChoroplethEurope","combinedRiskEuropeLayer","fishingLayerEurope","anchorageLayerEurope","earthquakesLayerEurope","volcanoLayerChoroplethEurope","dredgingLayerChoroplethEurope","terrainLayerChoroplethEurope","zoomEventHandler","isZoomHandlerAttached","deactivateAllLayersEurope","detachZoomHandler","setActiveRiskEuropeLayer","onCombinedRiskEuropeLayerActivated","onFishingLayerActivatedEurope","onAnchorageLayerActivatedEurope","onEarthquakesLayerActivatedEurope","onVolcanoLayerChoroplethActivatedEurope","onDredgingLayerChoroplethActivatedEurope","onTerrainLayerChoroplethActivatedEurope","handleZoomChange","recreateCombinedRiskLayer","recreateFishingLayer","recreateDredgingLayer","recreateTerrainLayer","attachZoomHandler","newFeatures","createCombinedRiskFeatures","slicer","rendererFactory","tile","vectorTileLayerStyles","sliced","combinedRiskStyleFunctionEurope","buffer","updateWhenIdle","applyCombinedRiskInteractivity","createGeoJsonFeatures","styleFunctionEurope","applyInteractivityToLayer","createDredgingGeoJsonFeatures","dredgingStyleFunctionEurope","applyDredgingInteractivity","createTerrainGeoJsonFeatures","terrainStyleFunctionEurope","applyTerrainInteractivity","getColorEurope","rawRiskValue","risk","stroke","minRisk","cellSizeHalf","getCombinedRiskPercentileInfo","riskValue","combinedRiskTooltip","combinedRiskPopup","combinedRisk","closeTooltip","details","classification","currentZoom","tolerance","getColorFishingEurope","intensity","getPercentileInfo","minIntensity","avgIntensity","fishingTooltip","fishingPopup","formattedIntensity","percentileInfo","getColorAnchorageEurope","density","getAnchoragePercentileInfo","anchorageStyleFunctionEurope","applyAnchorageInteractivity","anchorageTooltip","anchoragePopup","getColorEarthquakesEurope","getEarthquakesPercentileInfo","earthquakesStyleFunctionEurope","createEarthquakesFeatures","applyEarthquakesInteractivity","earthquakesTooltip","earthquakesPopup","getColorVolcanoEurope","riskScore","getVolcanoRiskCategory","volcanoStyleFunctionEurope","createVolcanoFeatures","applyVolcanoInteractivity","volcanoTooltip","volcanoPopup","getColorDredgingEurope","getDredgingPercentileInfo","minDensity","dredgingTooltip","dredgingPopup","getColorTerrainEurope","triValue","getTerrainPercentileInfo","minValue","terrainTooltip","terrainPopup","onCombinedRiskEuropeLayerGroupActivated","isManualToggle","onCombinedRiskEuropeLayerGroupDeactivated","fakeStop","newData","riskEuropeTitle","onChange","fishingRisk","percent51","anchorageRisk","percent25","earthquakesRisk","percent10","volcanoesRisk","dredgingRisk","terrainRisk","percent3","low","high","setCombinedRiskData","isCombinedRiskGroupActive","activeRiskLayer","combinedRiskLayer","fishingLayer","earthquakesLayer","volcanoLayerChoropleth","terrainLayerChoropleth","deactivateAllLayers","onCombinedRiskLayerDeactivated","onFishingLayerDeactivated","onAnchorageLayerDeactivated","onEarthquakesLayerDeactivated","onVolcanoLayerChoroplethDeactivated","onTerrainLayerChoroplethDeactivated","setActiveRiskLayer","onCombinedRiskLayerActivated","onFishingLayerActivated","onAnchorageLayerActivated","onEarthquakesLayerActivated","onVolcanoLayerChoroplethActivated","onTerrainLayerChoroplethActivated","getColor","combinedRiskStyleFunction","getColorFishing","styleFunction","getColorAnchorage","anchorageStyleFunction","getColorEarthquakes","earthquakesStyleFunction","getColorVolcano","volcanoStyleFunction","getColorTerrain","terrainStyleFunction","onCombinedRiskLayerGroupActivated","requestAnimationFrame","onCombinedRiskLayerGroupDeactivated","riskGlobalTitle","percent50","percent30","riskLevel","volcanoLayer","isVolcanoActive","isRecentVolcanoesVisible","is1900sVolcanoesVisible","isAllVolcanoesVisible","getVolcanoStyle","lastEruption","isAllVisible","eruptionYear","parts","era","isRecent","is1900s","createVolcanoLayer","volcanoFeatures","last_eruption","baseSize","triangleSize","minSize","finalSize","triangleLatLngs","bindPopup","country","elevation","is_submarine","filterVolcanoesByYearRange","endYear","filterVolcanoesRecent","currentYear","filterVolcanoes1900s","showAllVolcanoes","updateVolcanoIconSizes","originalLatLngs","scale","exponent","scaledLatLngs","latOffset","lngOffset","setLatLngs","toggleVolcanoFilter","filteredFeatures","concat","onVolcanoLayerActivated","recentVolcanoes","f","onVolcanoLayerDeactivated","originalCableColors","storeOriginalCableColors","restoreOriginalCableColors","applyCableColorsByAge","rfsYear","cableAge","activateCableAgeLayer","deactivateCableAgeLayer","cableAgeTitle","cableAge20Plus","cableAge16to20","cableAge11to15","cableAge6to10","cableAge0to5","cableAgeFuture","GRID_SIZE","RENDER_BATCH_SIZE","RENDER_DELAY","MIN_ZOOM_LEVEL","MAX_DISTANCE","distanceGridPolygonLayer","distanceGridActive","isCalculating","calculationProgress","calculationWorker","renderQueue","isRendering","spatialIndex","processedOceanCells","processed","cell","centerLon","centerLat","cosLat","gridX","gridY","has","getDistanceCategory","category","score","createWorker","workerScript","blob","Blob","Worker","createObjectURL","calculateDistancesAsync","resolve","reject","validVessels","cellDistances","CHUNK_SIZE","chunks","completedChunks","onmessage","results","progress","cellId","terminate","onerror","chunk","postMessage","cells","chunkIndex","totalChunks","renderBatch","minLon","minLat","maxLon","maxLat","cell_id","distance_km","distance_category","batchLayer","colorMap","displayDistancePolygonGrid","bringToBack","onDistancePolygonGridActivated","onDistancePolygonGridDeactivated","activateDistancePolygonGridLayer","deactivateDistancePolygonGridLayer","cableRepairTimes","repairUnder100km","repair100to500km","repair500to1000km","repair1000to1500km","repair1500to2000km","repair2000to2500km","repair2500to3000km","repairOver3000km","dredgingData","aggregatedSeismicData","anchorageRiskData","aggregatedFishingData","riskEuropeLayerRef","globalRiskMapRef","volcanoLayerRef","cableAgeLayerRef","distanceToShipsRef","isSeabedActive","gmtdsLayerVisible","seismicRiskLayerVisible","anchorageLayerVisible","fishingLayerVisible","isShallowWatersLayerActive","gmtdsWMSLayer","seismicRiskHeatmap","anchorageHeatmapLayer","dredgingRiskHeatmap","seabedLayer","fishingRiskHeatmap","shallowWatersLayers","imageCache","heatmapCache","processHeatmapInChunks","layerKey","SAMPLE_RATE","processedData","currentIndex","processChunk","endIndex","heatmapLayer","heatLayer","blur","catch","heatmapData","IntersectionObserver","isIntersecting","preloadShallowWatersImages","querySelector","debouncedOperations","timeoutId","layerLoadingStates","fishing","seismic","anchorage","gmtds","onRiskLayersActivated","mapContainer","add","onRiskLayersDeactivated","onGMTDSLayerActivated","tileLayer","crs","CRS","EPSG3857","onGMTDSLayerDeactivated","onSeismicRiskLayerActivated","debounceLayerOperation","cachedLayer","requestIdleCallback","minOpacity","onSeismicRiskLayerDeactivated","createSeabedSubstrateLayer","version","onSeabedSubstrateLayerActivated","onSeabedSubstrateLayerDeactivated","onFishingRiskLayerActivated","onFishingRiskLayerDeactivated","operation","delay","delete","onAnchorageRiskLayerActivated","onAnchorageRiskLayerDeactivated","onDredgingRiskLayerActivated","heatData","extracted_amount_m3","onDredgingRiskLayerDeactivated","imageLoadPromises","shallowWatersImages","img","promise","imgObj","Image","onload","onShallowWatersLayerActivated","imageOverlay","onShallowWatersLayerDeactivated","GlobalRiskMap","VolcanoLayer","seabedSubstratesTitle","mudToMuddySand","sand","coarseSubstrate","mixedSediment","rockBoulders","CableAgeLayer","DistanceToShips","isExpanded","loadingLayers","expandedGroups","riskMaps","maritimeActivity","naturalFeatures","cableInfo","popupSelector","group","groupTranslations","translationKey","popupElement","layerGroups","getTranslatedName","translation","getGroupTitle","groupName","groupInfo","toggleGroup","toggleExpanded","_loaded","expand","collapse","showAbortModal","abortEvaluation","navigator","app","exitApp","opener","open","href","landingSiteStore","layerManagerRef","gasPipelineLayerRef","vesselTrackingRef","maintenanceLayerToggleRef","anchorageLayerToggleRef","oceanDepthRef","functionalityOverviewRef","polylineMeasure","selectedRadius","selectedColor","fishingSelected","modifiedPostUrl","eventMarkerLayer","viewingVesselTrack","cableShipsLayerGroup","infrastructurePositions","dataCache","dredging","gasPipelines","terrainEurope","fishingEurope","loaded","anchorageRiskHeatmapData","getTranslatedInfrastructureName","infrastructure","unknown","confidence","onMapReady","mapIns","setMapInstance","showUnitControl","unitControlUnits","unitControlTitle","text","metres","nauticalmiles","landmiles","unitControlLabel","kilometres","polylinesBounds","onCreateLine","polylineInstance","extend","bound","geo","cableName","caller","newMarker","resetMap","layerChanged","overlayAdded","overlayRemoved","onMapClick","targetElement","originalEvent","onCableClick","onLandingSiteClick","getTerritorialOptionsStyle","getEEZOptionsStyle","questionMarkClicked","processInfrastructureData","structure_end_date","detection_id","label_confidence","detection_date","loadCriticalData","loadBackgroundData","backgroundData","zoomControl","markerZoomAnimation","worldCopyJump","onBaselayerchange","onOverlayadd","onOverlayremove","onMousemove","section","isNoneSelected","tee","LayerManager","onResetMap","SeismicActivity","OceanDepth","val","RiskLayers","since","GasPipelines","VesselTracking","abortEvaluationText","cancel","confirm","FunctionalityOverview","FishingDatePicker","onFishingLayerReady","ready","CableSourceSelector","ClusteredAnchorage","ClusteredDataCenters","AnchorageLayerToggle","RiskLayersToggle","MaintenanceLayerToggle","loadLandingSite","setManySelectedCables","CableSystem","setLandingSite","currentId","getConnectedSitesCount","CableSystem_X_Landingsites_t","navigateToCable","navigateToLandingSite","siteId","initialId","newId","connectedSite","routes","main","LeafletMap","sidebar","CableViewer","router","history","firstLoad","combinedRiskData","combinedRiskDataEurope","getSelectedCable","fetchDataCables","cables","fetchCableDetails","cableIds","setViewingVesselTrack","countCablesByRFSYear","yearCounts","rfsDate","sortedYears","from","showSources","sources","description","sourceName","handleKeydown","xmlns","viewBox","sidebarMarkerLayerGroup","currentSidebarMarker","selectedCables","selectedLandingSite","landingSitesAndCables","inputArray","getShipColor","getLandingColor","updateHoveredMarker","updateVesselPositions","positions","updateViewingVesselTrack","isViewing","selectCableOrLandingSiteOrVessel","selection","handleVesselSearchSelect","clearSidebarVessel","updatedPositions","vesselInfo","getVesselLatestPosition","latestPosition","shipIcon","clickEvent","mockEvent","loiteringEvent","loiteringDate","portVisitDate","asyncFind","queryGiven","normalize","str","normalizedQuery","filteredArray","normalizedName","initializeSearchBar","vesselSearchOptions","values","shipname","cableOptions","landingSiteOptions","selectedCable","selectedLandingSites","setInterval","clearInterval","_component_router_view","searchable","loading","onSearchChange","onSelect","option","cx","cy","SourcesModal","sidebarWidth","isResizing","startResizing","resizeSidebar","stopResizing","HomeView","exchanges","fetchOptions","App","use","mount","webpackContext","req","webpackContextResolve","__webpack_require__","o","keys","module","exports","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","then","ns","create","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","u","miniCssF","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","head","Symbol","toStringTag","p","installedChunks","installedChunkData","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}