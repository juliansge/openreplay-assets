{"version":3,"file":"js/app.5f46ec1c.js","mappings":"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","sources":["webpack://sdcs-dashboard/./src/components/SideBarList.vue?7758","webpack://sdcs-dashboard/./src/components/SideBarList.vue","webpack://sdcs-dashboard/./src/components/SideBarList.vue?b7af","webpack://sdcs-dashboard/./src/service/hasura.ts","webpack://sdcs-dashboard/./src/store/landingSites.ts","webpack://sdcs-dashboard/./src/components/OceanDepthAnalyzer.vue?141a","webpack://sdcs-dashboard/./src/components/OceanDepthAnalyzer.vue","webpack://sdcs-dashboard/./src/components/OceanDepthAnalyzer.vue?6296","webpack://sdcs-dashboard/./src/components/ElevationProfile.vue?e093","webpack://sdcs-dashboard/./src/components/ElevationProfile.vue","webpack://sdcs-dashboard/./src/components/ElevationProfile.vue?d67e","webpack://sdcs-dashboard/./src/components/CableViewer.vue?ef87","webpack://sdcs-dashboard/./src/components/CableViewer.vue","webpack://sdcs-dashboard/./src/components/CableViewer.vue?a40d","webpack://sdcs-dashboard/./src/components/FunctionalityOverview.vue","webpack://sdcs-dashboard/./src/components/FunctionalityOverview.vue?213a","webpack://sdcs-dashboard/./src/components/CableSourceSelector.vue","webpack://sdcs-dashboard/./src/components/CableSourceSelector.vue?618a","webpack://sdcs-dashboard/./src/components/DrawingLayer.vue?578c","webpack://sdcs-dashboard/./src/components/DrawingLayer.vue","webpack://sdcs-dashboard/./src/components/DrawingLayer.vue?c6eb","webpack://sdcs-dashboard/./src/components/TimelineSlider.vue","webpack://sdcs-dashboard/./src/components/TimelineSlider.vue?b4fe","webpack://sdcs-dashboard/./src/components/VesselTracking.vue?5b05","webpack://sdcs-dashboard/./src/components/VesselTracking.vue","webpack://sdcs-dashboard/./src/components/VesselTracking.vue?6e7c","webpack://sdcs-dashboard/./src/components/MaintenanceLayerToggle.vue","webpack://sdcs-dashboard/./src/components/MaintenanceLayerToggle.vue?15b3","webpack://sdcs-dashboard/./src/components/ClusteredDataCenters.vue","webpack://sdcs-dashboard/./src/components/ClusteredDataCenters.vue?33f2","webpack://sdcs-dashboard/./src/components/AnchorageLayerToggle.vue","webpack://sdcs-dashboard/./src/components/AnchorageLayerToggle.vue?2efd","webpack://sdcs-dashboard/./src/components/ClusteredAnchorage.vue","webpack://sdcs-dashboard/./src/components/ClusteredAnchorage.vue?82e6","webpack://sdcs-dashboard/./src/components/LeafletMap.vue?786e","webpack://sdcs-dashboard/./src/components/LeafletMap.vue","webpack://sdcs-dashboard/./src/components/LeafletMap.vue?aa93","webpack://sdcs-dashboard/./src/components/LandingSiteViewer.vue?4def","webpack://sdcs-dashboard/./src/components/LandingSiteViewer.vue","webpack://sdcs-dashboard/./src/components/LandingSiteViewer.vue?a214","webpack://sdcs-dashboard/./src/router/index.ts","webpack://sdcs-dashboard/./src/store/datacables.ts","webpack://sdcs-dashboard/./src/components/SourcesModal.vue","webpack://sdcs-dashboard/./src/components/SourcesModal.vue?be58","webpack://sdcs-dashboard/./src/components/TheSidebar.vue?caed","webpack://sdcs-dashboard/./src/components/TheSidebar.vue","webpack://sdcs-dashboard/./src/components/TheSidebar.vue?ee61","webpack://sdcs-dashboard/./src/views/HomeView.vue?71c7","webpack://sdcs-dashboard/./src/views/HomeView.vue","webpack://sdcs-dashboard/./src/views/HomeView.vue?1da1","webpack://sdcs-dashboard/./src/App.vue?2a5e","webpack://sdcs-dashboard/./src/App.vue","webpack://sdcs-dashboard/./src/App.vue?7ccd","webpack://sdcs-dashboard/./src/main.ts","webpack://sdcs-dashboard/webpack/bootstrap","webpack://sdcs-dashboard/webpack/runtime/chunk loaded","webpack://sdcs-dashboard/webpack/runtime/compat get default export","webpack://sdcs-dashboard/webpack/runtime/create fake namespace object","webpack://sdcs-dashboard/webpack/runtime/define property getters","webpack://sdcs-dashboard/webpack/runtime/ensure chunk","webpack://sdcs-dashboard/webpack/runtime/get javascript chunk filename","webpack://sdcs-dashboard/webpack/runtime/get mini-css chunk filename","webpack://sdcs-dashboard/webpack/runtime/global","webpack://sdcs-dashboard/webpack/runtime/hasOwnProperty shorthand","webpack://sdcs-dashboard/webpack/runtime/load script","webpack://sdcs-dashboard/webpack/runtime/make namespace object","webpack://sdcs-dashboard/webpack/runtime/publicPath","webpack://sdcs-dashboard/webpack/runtime/jsonp chunk loading","webpack://sdcs-dashboard/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6edba7f6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"onClick\"]\nconst _hoisted_2 = { class: \"item-content\" }\nconst _hoisted_3 = { class: \"item-name\" }\n\nimport { useDataCablesStore } from \"@/store/datacables\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SideBarList',\n  setup(__props) {\n\nconst dataCableStore = useDataCablesStore();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(dataCableStore).getDataCables, (listItems) => {\n    return (_openBlock(), _createElementBlock(\"div\", {\n      class: \"item-container\",\n      key: listItems.id\n    }, [\n      _createElementVNode(\"a\", {\n        onClick: ($event: any) => (_unref(dataCableStore).setSelectCable(listItems.id, true)),\n        class: _normalizeClass([\"list-item\", { 'active': _unref(dataCableStore).selectedCableId === listItems.id }])\n      }, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"strong\", _hoisted_3, _toDisplayString(listItems.name), 1)\n        ])\n      ], 10, _hoisted_1)\n    ]))\n  }), 128))\n}\n}\n\n})","<template>\n  <div\n    class=\"item-container\"\n    v-for=\"listItems in dataCableStore.getDataCables\"\n    :key=\"listItems.id\"\n  >\n    <a\n      @click=\"dataCableStore.setSelectCable(listItems.id, true)\"\n      class=\"list-item\"\n      :class=\"{ 'active': dataCableStore.selectedCableId === listItems.id }\"\n    >\n      <div class=\"item-content\">\n        <strong class=\"item-name\">{{ listItems.name }}</strong>\n      </div>\n    </a>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useDataCablesStore } from \"@/store/datacables\";\n\nconst dataCableStore = useDataCablesStore();\n</script>\n\n<style scoped>\n.item-container {\n  margin-bottom: 0.25rem;\n}\n\n.list-item {\n  display: block;\n  padding: 0.75rem 1rem;\n  color: #e2e8f0;\n  background-color: rgba(255, 255, 255, 0.05);\n  border-radius: 0.375rem;\n  transition: all 0.2s ease;\n  text-decoration: none;\n  cursor: pointer;\n  border-left: 3px solid transparent;\n}\n\n.list-item:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n  color: #ffffff;\n}\n\n.list-item.active {\n  background-color: rgba(37, 99, 235, 0.2);\n  border-left-color: #2563eb;\n  color: #ffffff;\n}\n\n.item-content {\n  display: block;\n  width: 100%;\n  text-align: left;\n}\n\n.item-name {\n  font-size: 1rem;\n  font-weight: 500;\n  white-space: normal;\n  word-break: break-word;\n  line-height: 1.4;\n}\n</style>","import script from \"./SideBarList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SideBarList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SideBarList.vue?vue&type=style&index=0&id=6edba7f6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6edba7f6\"]])\n\nexport default __exports__","import { gql, useClientHandle } from \"@urql/vue\";\nexport async function loadCables() {\n  const handle = useClientHandle();\n  const result = await handle.useQuery({\n    query: gql`\n      query loadCables {\n        CableSystems {\n          id\n          abbreviation\n          name\n          geoData\n          outOfService\n          color\n        }\n      }\n    `,\n  });\n  return result;\n}\n\nexport async function loadLandingSites() {\n  const handle = useClientHandle();\n  const result = await handle.useQuery({\n    query: gql`\n      query loadLandingSites {\n        Landingsites {\n          country\n          id\n          name\n          geoData\n        }\n      }\n    `,\n  });\n  return result;\n}\nexport const queryCableById = `\n  query loadCableById ($id: String!) {\n    CableSystems(where: {id: {_eq: $id}}) {\n      id\n      eu_relations\n      endOfService\n      constructionCost\n      chineseInvolvement\n      abbreviation\n      length\n      name\n      outOfService\n      readyForService\n      seaRegion\n      stateOwnership\n      CableSystem_X_Landingsites {\n        Landingsite {\n          id\n          name\n        }\n      }\n      Ownerships {\n        companyId\n        Company {\n              id\n              name\n              nationality  \n        }\n      }\n    }\n  }`;\n\nexport const queryLandingSiteById = `\n  query loadLandingSiteById($id: String!) {\n    Landingsites(where: {id: {_eq: $id}}) {\n      country\n      id\n      name\n      CableSystem_X_Landingsites {\n        CableSystem {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n","import { defineStore } from \"pinia\"; \nimport router from \"@/router/index\"; \nimport { loadLandingSites } from \"@/service/hasura\"; \nimport { toRaw } from \"vue\"; \n\nexport const useLandingSitesStore = defineStore(\"landingSites\", { \n  state: () => ({ \n    landingSites: [] as any[], \n    selectLandingSites: [] as any[], \n    isLoading: true, \n    selectedFromSidebar: false, \n  }), \n  \n  getters: { \n    getLandingSites: (state) => { \n      return state.landingSites; \n    }, \n  }, \n  \n  actions: { \n    async fetchLandingSites() { \n      const landingSites = ((await loadLandingSites()) as any).data._rawValue.Landingsites; \n      landingSites.forEach((e: any) => (e.geoData = JSON.parse(e.geoData))); \n      this.landingSites = landingSites; \n    }, \n    \n    setSelectLandingSiteById(landingSiteId: string, fromSidebar = false) { \n      const landingSite = this.landingSites.find( \n        (site: any) => landingSiteId === site.id \n      ); \n      \n      if (landingSite) { \n        this.setSelectLandingSite(toRaw(landingSite), fromSidebar); \n      } else { \n        console.error(\"No landing site found!\"); \n      } \n    }, \n    \n    setSelectLandingSite(landingSite: any, fromSidebar = false) {\n      this.selectLandingSites = [landingSite]; \n      this.selectedFromSidebar = fromSidebar; \n      // you could set the selected cables here. You need to change the request loadLandingSites and copy the code from LandingViewer in this method! \n      router.push({ path: `/landingSites/${landingSite.id}` }); \n    }, \n    \n    deselectLandingSite() {\n      if (this.selectLandingSites.length) { \n        this.selectLandingSites = []; \n        this.selectedFromSidebar = false; \n        router.push({ path: \"/\" }); \n      } \n    }, \n    \n    isOneSelected() { \n      return !!this.landingSites.length; \n    }, \n    \n    isLandingSiteSelectedById(landingSiteId: string): boolean { \n      return this.selectLandingSites.some( \n        (site: any) => landingSiteId === site.id \n      ); \n    }, \n    \n    isLandingSiteSelected(landingSite: any): boolean { \n      return this.selectLandingSites.includes(landingSite); \n    }, \n  }, \n});","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-171dade4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"depth-analysis-popup\"\n}\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"🌊 Ocean Depth Analysis\")\n], -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, [\n    /*#__PURE__*/_createTextVNode(\"for \"),\n    /*#__PURE__*/_createElementVNode(\"span\", { class: \"highlight-green\" }, \"last geometry\"),\n    /*#__PURE__*/_createTextVNode(\" drawn\")\n  ])\n], -1))\nconst _hoisted_4 = { class: \"analysis-content\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Average Depth:\", -1))\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Deepest Point:\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Shallowest Point:\", -1))\nconst _hoisted_8 = {\n  key: 1,\n  class: \"loading-overlay\"\n}\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"spinner\" }, null, -1))\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Analyzing depth data...\", -1))\nconst _hoisted_11 = [\n  _hoisted_9,\n  _hoisted_10\n]\n\nimport { ref, watch, onMounted } from 'vue';\nimport axios from 'axios';\nimport L from 'leaflet';\n\ninterface PopupData {\n  popup: L.Popup;\n  analysis: {\n    averageDepth: number;\n    deepestPoint: number;\n    shallowestPoint: number;\n    samplePoints: L.LatLng[];\n  };\n}\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'OceanDepthAnalyzer',\n  props: {\n  mapInstance: { type: Object, required: true },\n  drawnGeometry: { type: Object, default: null },\n  samplePointCount: { type: Number, default: 200 },\n  showPopup: { type: Boolean, default: false }\n},\n  emits: ['depth-analysis-complete'],\n  setup(__props, { expose: __expose, emit: __emit }) {\n\nconst props = __props;\n\nconst emit = __emit;\n\nconst depthAnalysis = ref<{\n  averageDepth: number;\n  deepestPoint: number;\n  shallowestPoint: number;\n  samplePoints: L.LatLng[];\n} | null>(null);\n\nconst isAnalyzing = ref(false);\n\nconst analysisStore = ref(new Map<string, any>());\nlet geometryIdCounter = 0;\n\nconst geometryPopups = new Map<L.Layer, PopupData>();\nconst geometryAnalyses = new Map();\nconst analysisData = new WeakMap();\n\n// Calculate distance between two points in meters\nfunction calculateDistance(point1: L.LatLng, point2: L.LatLng): number {\n  const R = 6371000; // Earth's radius in meters\n  const lat1 = point1.lat * Math.PI / 180;\n  const lat2 = point2.lat * Math.PI / 180;\n  const deltaLat = (point2.lat - point1.lat) * Math.PI / 180;\n  const deltaLng = (point2.lng - point1.lng) * Math.PI / 180;\n\n  const a = Math.sin(deltaLat/2) * Math.sin(deltaLat/2) +\n           Math.cos(lat1) * Math.cos(lat2) *\n           Math.sin(deltaLng/2) * Math.sin(deltaLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\n// Interpolate points along a line with proportional distribution\nfunction interpolateLinePoints(segments: L.LatLng[], totalPoints: number): L.LatLng[] {\n  // Calculate total length and individual segment lengths\n  let totalLength = 0;\n  const segmentLengths: number[] = [];\n  \n  for (let i = 0; i < segments.length - 1; i++) {\n    const length = calculateDistance(segments[i], segments[i + 1]);\n    segmentLengths.push(length);\n    totalLength += length;\n  }\n\n  // Calculate points per segment based on segment length ratio\n  const pointsPerSegment = segmentLengths.map(length => \n    Math.max(2, Math.round((length / totalLength) * totalPoints))\n  );\n\n  // Generate points for each segment\n  const interpolatedPoints: L.LatLng[] = [];\n  for (let i = 0; i < segments.length - 1; i++) {\n    const start = segments[i];\n    const end = segments[i + 1];\n    const numPoints = pointsPerSegment[i];\n\n    for (let j = 0; j < numPoints; j++) {\n      const fraction = j / (numPoints - 1);\n      const interpolatedLat = start.lat + fraction * (end.lat - start.lat);\n      const interpolatedLng = start.lng + fraction * (end.lng - start.lng);\n      interpolatedPoints.push(L.latLng(interpolatedLat, interpolatedLng));\n    }\n  }\n\n  // Add the last point of the last segment\n  interpolatedPoints.push(segments[segments.length - 1]);\n  \n  return interpolatedPoints;\n}\n\nfunction isPointInPolygon(point: L.LatLng, polygon: L.LatLng[]): boolean {\n  let inside = false;\n  const x = point.lng, y = point.lat;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].lng, yi = polygon[i].lat;\n    const xj = polygon[j].lng, yj = polygon[j].lat;\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n  return inside;\n}\n\n// sampling for polygons\nfunction samplePolygonPoints(polygon: L.Polygon, numPoints = 500): L.LatLng[] {\n  const bounds = polygon.getBounds();\n  const polygonLatLngs = polygon.getLatLngs()[0] as L.LatLng[];\n  const points: L.LatLng[] = [];\n  \n  // Adjust numPoints based on polygon area\n  const area = L.GeometryUtil.geodesicArea(polygonLatLngs);\n  const adjustedPoints = Math.min(Math.max(numPoints, 100), props.samplePointCount);\n  \n  const maxAttempts = adjustedPoints * 10;\n  let attempts = 0;\n  \n  while (points.length < adjustedPoints && attempts < maxAttempts) {\n    const lat = bounds.getSouth() + Math.random() * (bounds.getNorth() - bounds.getSouth());\n    const lng = bounds.getWest() + Math.random() * (bounds.getEast() - bounds.getWest());\n    const point = L.latLng(lat, lng);\n    \n    if (bounds.contains(point) && isPointInPolygon(point, polygonLatLngs)) {\n      points.push(point);\n    }\n    attempts++;\n  }\n  \n  return points;\n}\n\n// sampling for circles\nfunction sampleCirclePoints(circle: L.Circle, numPoints = 250): L.LatLng[] {\n  const center = circle.getLatLng();\n  const radius = circle.getRadius();\n  const adjustedPoints = Math.min(Math.max(numPoints, 50), props.samplePointCount);\n  const points: L.LatLng[] = [center];\n  \n  for (let i = 0; i < adjustedPoints; i++) {\n    const angle = Math.random() * 2 * Math.PI;\n    const r = Math.sqrt(Math.random()) * radius;\n    const lat = center.lat + (r / 111000) * Math.sin(angle);\n    const lng = center.lng + (r / (111000 * Math.cos(center.lat * Math.PI / 180))) * Math.cos(angle);\n    points.push(L.latLng(lat, lng));\n  }\n  \n  return points;\n}\n\n// Extract coordinates based on geometry type\nfunction extractSamplePoints(geometry: any): L.LatLng[] {\n  if (geometry instanceof L.Marker) {\n    return [geometry.getLatLng()];\n  } else if (geometry instanceof L.Polygon || geometry instanceof L.Rectangle) {\n    return samplePolygonPoints(geometry as L.Polygon, props.samplePointCount);\n  } else if (geometry instanceof L.Polyline) {\n    const latlngs = geometry.getLatLngs() as L.LatLng[];\n    return interpolateLinePoints(latlngs, props.samplePointCount);\n  } else if (geometry instanceof L.Circle) {\n    return sampleCirclePoints(geometry, props.samplePointCount);\n  }\n  return [];\n}\n\n// Fetch ocean depth for a single coordinate\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    \n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    \n    return parseFloat(extractedText);\n  } catch (error) {\n    console.error('Error fetching ocean depth:', error);\n    return NaN;\n  }\n}\n\n// Analyze depths for entire geometry\nasync function analyzeGeometryDepths() {\n  if (!props.drawnGeometry || !(props.drawnGeometry instanceof L.Layer)) return;\n  \n  isAnalyzing.value = true;\n  const geometry = props.drawnGeometry;\n\n  try {\n    const samplePoints = extractSamplePoints(geometry);\n    if (samplePoints.length === 0) {\n      isAnalyzing.value = false;\n      return;\n    }\n\n    const depthPromises = samplePoints.map(coord => fetchOceanDepth(coord.lat, coord.lng));\n    const depths = await Promise.all(depthPromises);\n    const validDepths = depths.filter(depth => !isNaN(depth));\n\n    if (validDepths.length === 0) {\n      isAnalyzing.value = false;\n      return;\n    }\n\n    const fullDepthAnalysis = {\n      averageDepth: Math.round(validDepths.reduce((a, b) => a + b, 0) / validDepths.length),\n      deepestPoint: Math.round(Math.min(...validDepths)),\n      shallowestPoint: Math.round(Math.max(...validDepths)),\n      samplePoints\n    };\n\n    depthAnalysis.value = fullDepthAnalysis;\n    emit('depth-analysis-complete', fullDepthAnalysis);\n\n    if (props.showPopup && props.mapInstance && samplePoints.length > 0) {\n      // Generate a unique ID for this geometry if it doesn't have one\n      const geomId = `geometry_${geometryIdCounter++}`;\n\n      // Store the analysis data with the geometry's ID\n      analysisStore.value.set(geomId, fullDepthAnalysis);\n\n      // Also store the ID on the layer itself using Leaflet's feature data\n      if (geometry instanceof L.Path) {\n        geometry.feature = geometry.feature || {};\n        geometry.feature.properties = geometry.feature.properties || {};\n        geometry.feature.properties.analysisId = geomId;\n      }\n\n      // Create popup content function\n      const createPopupContent = (analysis: typeof fullDepthAnalysis) => `\n        <div style=\"padding: 10px;\">\n          <strong>Depth Analysis:</strong>\n          <ul style=\"padding-left: 20px; margin: 10px 0;\">\n            <li>Average Depth: ${analysis.averageDepth} meters</li>\n            <li>Deepest Point: ${analysis.deepestPoint} meters</li>\n            <li>Shallowest Point: ${analysis.shallowestPoint} meters</li>\n            <li>Total Sample Points: ${analysis.samplePoints.length}</li>\n          </ul>\n        </div>\n      `;\n\n      // Remove existing click handler\n      geometry.off('click');\n\n      // Add click handler\n      geometry.on('click', function(e: L.LeafletMouseEvent) {        \n        const layer = e.target;\n        \n        if (layer instanceof L.Path && layer.feature && layer.feature.properties) {\n          const analysisId = layer.feature.properties.analysisId;\n          const analysis = analysisStore.value.get(analysisId);\n          \n          if (analysis) {\n            L.popup()\n              .setLatLng(e.latlng)\n              .setContent(createPopupContent(analysis))\n              .openOn(props.mapInstance);\n          }\n        }\n      });\n\n      // Show initial popup\n      const initialPopup = L.popup()\n        .setLatLng(samplePoints[0])\n        .setContent(createPopupContent(fullDepthAnalysis))\n        .openOn(props.mapInstance);\n\n    }\n  } catch (error) {\n    console.error('Error analyzing geometry depths:', error);\n  } finally {\n    isAnalyzing.value = false;\n  }\n}\n\nwatch(() => props.drawnGeometry, (newGeometry, oldGeometry) => {\n  if (newGeometry) {\n    analyzeGeometryDepths();\n  }\n});\n\n\nonMounted(() => {\n  if (props.drawnGeometry) {\n    analyzeGeometryDepths();\n  }\n});\n\n__expose({\n  analyzeGeometryDepths,\n  depthAnalysis,\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (depthAnalysis.value && props.showPopup)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _hoisted_2,\n          _hoisted_3,\n          _createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"p\", null, [\n              _hoisted_5,\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.averageDepth) + \"m\", 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _hoisted_6,\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.deepestPoint) + \"m\", 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _hoisted_7,\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.shallowestPoint) + \"m\", 1)\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (isAnalyzing.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _hoisted_11))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { ref, watch, onMounted } from 'vue';\nimport axios from 'axios';\nimport L from 'leaflet';\n\nconst props = defineProps({\n  mapInstance: { type: Object, required: true },\n  drawnGeometry: { type: Object, default: null },\n  samplePointCount: { type: Number, default: 200 },\n  showPopup: { type: Boolean, default: false }\n});\n\nconst emit = defineEmits(['depth-analysis-complete']);\n\nconst depthAnalysis = ref<{\n  averageDepth: number;\n  deepestPoint: number;\n  shallowestPoint: number;\n  samplePoints: L.LatLng[];\n} | null>(null);\n\nconst isAnalyzing = ref(false);\n\nconst analysisStore = ref(new Map<string, any>());\nlet geometryIdCounter = 0;\n\ninterface PopupData {\n  popup: L.Popup;\n  analysis: {\n    averageDepth: number;\n    deepestPoint: number;\n    shallowestPoint: number;\n    samplePoints: L.LatLng[];\n  };\n}\nconst geometryPopups = new Map<L.Layer, PopupData>();\nconst geometryAnalyses = new Map();\nconst analysisData = new WeakMap();\n\n// Calculate distance between two points in meters\nfunction calculateDistance(point1: L.LatLng, point2: L.LatLng): number {\n  const R = 6371000; // Earth's radius in meters\n  const lat1 = point1.lat * Math.PI / 180;\n  const lat2 = point2.lat * Math.PI / 180;\n  const deltaLat = (point2.lat - point1.lat) * Math.PI / 180;\n  const deltaLng = (point2.lng - point1.lng) * Math.PI / 180;\n\n  const a = Math.sin(deltaLat/2) * Math.sin(deltaLat/2) +\n           Math.cos(lat1) * Math.cos(lat2) *\n           Math.sin(deltaLng/2) * Math.sin(deltaLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\n// Interpolate points along a line with proportional distribution\nfunction interpolateLinePoints(segments: L.LatLng[], totalPoints: number): L.LatLng[] {\n  // Calculate total length and individual segment lengths\n  let totalLength = 0;\n  const segmentLengths: number[] = [];\n  \n  for (let i = 0; i < segments.length - 1; i++) {\n    const length = calculateDistance(segments[i], segments[i + 1]);\n    segmentLengths.push(length);\n    totalLength += length;\n  }\n\n  // Calculate points per segment based on segment length ratio\n  const pointsPerSegment = segmentLengths.map(length => \n    Math.max(2, Math.round((length / totalLength) * totalPoints))\n  );\n\n  // Generate points for each segment\n  const interpolatedPoints: L.LatLng[] = [];\n  for (let i = 0; i < segments.length - 1; i++) {\n    const start = segments[i];\n    const end = segments[i + 1];\n    const numPoints = pointsPerSegment[i];\n\n    for (let j = 0; j < numPoints; j++) {\n      const fraction = j / (numPoints - 1);\n      const interpolatedLat = start.lat + fraction * (end.lat - start.lat);\n      const interpolatedLng = start.lng + fraction * (end.lng - start.lng);\n      interpolatedPoints.push(L.latLng(interpolatedLat, interpolatedLng));\n    }\n  }\n\n  // Add the last point of the last segment\n  interpolatedPoints.push(segments[segments.length - 1]);\n  \n  return interpolatedPoints;\n}\n\nfunction isPointInPolygon(point: L.LatLng, polygon: L.LatLng[]): boolean {\n  let inside = false;\n  const x = point.lng, y = point.lat;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].lng, yi = polygon[i].lat;\n    const xj = polygon[j].lng, yj = polygon[j].lat;\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n  return inside;\n}\n\n// sampling for polygons\nfunction samplePolygonPoints(polygon: L.Polygon, numPoints = 500): L.LatLng[] {\n  const bounds = polygon.getBounds();\n  const polygonLatLngs = polygon.getLatLngs()[0] as L.LatLng[];\n  const points: L.LatLng[] = [];\n  \n  // Adjust numPoints based on polygon area\n  const area = L.GeometryUtil.geodesicArea(polygonLatLngs);\n  const adjustedPoints = Math.min(Math.max(numPoints, 100), props.samplePointCount);\n  \n  const maxAttempts = adjustedPoints * 10;\n  let attempts = 0;\n  \n  while (points.length < adjustedPoints && attempts < maxAttempts) {\n    const lat = bounds.getSouth() + Math.random() * (bounds.getNorth() - bounds.getSouth());\n    const lng = bounds.getWest() + Math.random() * (bounds.getEast() - bounds.getWest());\n    const point = L.latLng(lat, lng);\n    \n    if (bounds.contains(point) && isPointInPolygon(point, polygonLatLngs)) {\n      points.push(point);\n    }\n    attempts++;\n  }\n  \n  return points;\n}\n\n// sampling for circles\nfunction sampleCirclePoints(circle: L.Circle, numPoints = 250): L.LatLng[] {\n  const center = circle.getLatLng();\n  const radius = circle.getRadius();\n  const adjustedPoints = Math.min(Math.max(numPoints, 50), props.samplePointCount);\n  const points: L.LatLng[] = [center];\n  \n  for (let i = 0; i < adjustedPoints; i++) {\n    const angle = Math.random() * 2 * Math.PI;\n    const r = Math.sqrt(Math.random()) * radius;\n    const lat = center.lat + (r / 111000) * Math.sin(angle);\n    const lng = center.lng + (r / (111000 * Math.cos(center.lat * Math.PI / 180))) * Math.cos(angle);\n    points.push(L.latLng(lat, lng));\n  }\n  \n  return points;\n}\n\n// Extract coordinates based on geometry type\nfunction extractSamplePoints(geometry: any): L.LatLng[] {\n  if (geometry instanceof L.Marker) {\n    return [geometry.getLatLng()];\n  } else if (geometry instanceof L.Polygon || geometry instanceof L.Rectangle) {\n    return samplePolygonPoints(geometry as L.Polygon, props.samplePointCount);\n  } else if (geometry instanceof L.Polyline) {\n    const latlngs = geometry.getLatLngs() as L.LatLng[];\n    return interpolateLinePoints(latlngs, props.samplePointCount);\n  } else if (geometry instanceof L.Circle) {\n    return sampleCirclePoints(geometry, props.samplePointCount);\n  }\n  return [];\n}\n\n// Fetch ocean depth for a single coordinate\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    \n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    \n    return parseFloat(extractedText);\n  } catch (error) {\n    console.error('Error fetching ocean depth:', error);\n    return NaN;\n  }\n}\n\n// Analyze depths for entire geometry\nasync function analyzeGeometryDepths() {\n  if (!props.drawnGeometry || !(props.drawnGeometry instanceof L.Layer)) return;\n  \n  isAnalyzing.value = true;\n  const geometry = props.drawnGeometry;\n\n  try {\n    const samplePoints = extractSamplePoints(geometry);\n    if (samplePoints.length === 0) {\n      isAnalyzing.value = false;\n      return;\n    }\n\n    const depthPromises = samplePoints.map(coord => fetchOceanDepth(coord.lat, coord.lng));\n    const depths = await Promise.all(depthPromises);\n    const validDepths = depths.filter(depth => !isNaN(depth));\n\n    if (validDepths.length === 0) {\n      isAnalyzing.value = false;\n      return;\n    }\n\n    const fullDepthAnalysis = {\n      averageDepth: Math.round(validDepths.reduce((a, b) => a + b, 0) / validDepths.length),\n      deepestPoint: Math.round(Math.min(...validDepths)),\n      shallowestPoint: Math.round(Math.max(...validDepths)),\n      samplePoints\n    };\n\n    depthAnalysis.value = fullDepthAnalysis;\n    emit('depth-analysis-complete', fullDepthAnalysis);\n\n    if (props.showPopup && props.mapInstance && samplePoints.length > 0) {\n      // Generate a unique ID for this geometry if it doesn't have one\n      const geomId = `geometry_${geometryIdCounter++}`;\n\n      // Store the analysis data with the geometry's ID\n      analysisStore.value.set(geomId, fullDepthAnalysis);\n\n      // Also store the ID on the layer itself using Leaflet's feature data\n      if (geometry instanceof L.Path) {\n        geometry.feature = geometry.feature || {};\n        geometry.feature.properties = geometry.feature.properties || {};\n        geometry.feature.properties.analysisId = geomId;\n      }\n\n      // Create popup content function\n      const createPopupContent = (analysis: typeof fullDepthAnalysis) => `\n        <div style=\"padding: 10px;\">\n          <strong>Depth Analysis:</strong>\n          <ul style=\"padding-left: 20px; margin: 10px 0;\">\n            <li>Average Depth: ${analysis.averageDepth} meters</li>\n            <li>Deepest Point: ${analysis.deepestPoint} meters</li>\n            <li>Shallowest Point: ${analysis.shallowestPoint} meters</li>\n            <li>Total Sample Points: ${analysis.samplePoints.length}</li>\n          </ul>\n        </div>\n      `;\n\n      // Remove existing click handler\n      geometry.off('click');\n\n      // Add click handler\n      geometry.on('click', function(e: L.LeafletMouseEvent) {        \n        const layer = e.target;\n        \n        if (layer instanceof L.Path && layer.feature && layer.feature.properties) {\n          const analysisId = layer.feature.properties.analysisId;\n          const analysis = analysisStore.value.get(analysisId);\n          \n          if (analysis) {\n            L.popup()\n              .setLatLng(e.latlng)\n              .setContent(createPopupContent(analysis))\n              .openOn(props.mapInstance);\n          }\n        }\n      });\n\n      // Show initial popup\n      const initialPopup = L.popup()\n        .setLatLng(samplePoints[0])\n        .setContent(createPopupContent(fullDepthAnalysis))\n        .openOn(props.mapInstance);\n\n    }\n  } catch (error) {\n    console.error('Error analyzing geometry depths:', error);\n  } finally {\n    isAnalyzing.value = false;\n  }\n}\n\nwatch(() => props.drawnGeometry, (newGeometry, oldGeometry) => {\n  if (newGeometry) {\n    analyzeGeometryDepths();\n  }\n});\n\n\nonMounted(() => {\n  if (props.drawnGeometry) {\n    analyzeGeometryDepths();\n  }\n});\n\ndefineExpose({\n  analyzeGeometryDepths,\n  depthAnalysis,\n});\n</script>\n\n<template>\n  <div v-if=\"depthAnalysis && props.showPopup\" class=\"depth-analysis-popup\">\n    <h3><strong>🌊 Ocean Depth Analysis</strong></h3>\n    <p><strong>for <span class=\"highlight-green\">last geometry</span> drawn</strong></p>\n    <div class=\"analysis-content\">\n      <p><strong>Average Depth:</strong> {{depthAnalysis.averageDepth}}m</p>\n      <p><strong>Deepest Point:</strong> {{depthAnalysis.deepestPoint}}m</p>\n      <p><strong>Shallowest Point:</strong> {{depthAnalysis.shallowestPoint}}m</p>\n    </div>\n  </div>\n  <!-- Loading overlay -->\n  <div v-if=\"isAnalyzing\" class=\"loading-overlay\">\n    <div class=\"spinner\"></div>\n    <p>Analyzing depth data...</p>\n  </div>\n</template>\n\n<style scoped>\n.depth-analysis-popup {\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #48506a;\n  color: #ecf0f1;\n  border: none;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  max-width: 300px;\n  width: auto;\n  max-height: 200px;\n  overflow-y: auto;\n  z-index: 3000;\n  font-size: 13px;\n  text-align: center;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.highlight-green {\n  color: #00ff00;\n}\n\n.depth-analysis-popup h3 {\n  margin: 0 0 8px;\n  font-size: 16px;\n  color: #ecf0f1;\n}\n\n.analysis-content {\n  font-size: 13px;\n  line-height: 1.4;\n}\n\n.analysis-content p {\n  margin: 4px 0;\n}\n\n.analysis-content strong {\n  color: #ecf0f1;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.7);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 2000;\n}\n\n.spinner {\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n  margin-bottom: 10px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style>","import script from \"./OceanDepthAnalyzer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./OceanDepthAnalyzer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./OceanDepthAnalyzer.vue?vue&type=style&index=0&id=171dade4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-171dade4\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-e0b5752a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"elevation-container\" }\nconst _hoisted_2 = [\"disabled\"]\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = { key: 2 }\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = { key: 1 }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"progress-bar-container\"\n}\n\nimport { ref, watch, onBeforeUnmount, computed, onMounted } from 'vue';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport '@raruto/leaflet-elevation';\nimport '@raruto/leaflet-elevation/dist/leaflet-elevation.css';\nimport 'leaflet/dist/leaflet.css';\n\ninterface Point {\n  lat: number;\n  lng: number;\n}\n\ninterface Segment {\n  points: Point[];\n  used?: boolean;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ElevationProfile',\n  props: {\n    mapInstance: {},\n    geoData: {}\n  },\n  setup(__props: any) {\n\nwindow.d3 = d3;\nconst props = __props;\n\nconst showProfile = ref(false);\nconst isLoading = ref(false);\nconst isFullscreen = ref(false);\nconst fetchingPoints = ref(false);\nconst fetchedPoints = ref(0);\nconst totalPoints = ref(0);\n\nconst resizeObserver = ref<ResizeObserver | null>(null);\n\nlet currentElevationControl: any = null;\nlet currentElevationLayer: any = null;\n\nconst isOceanDepthActive = ref(false);\nconst isCableShipsActive = ref(false);\nconst isAnchorageActive = ref(false);\n\nconst oceanDepthFullscreenClass = computed(() => {\n  const baseClasses = {\n    fullscreen: isFullscreen.value,\n    \"ocean-depth-fullscreen\": isFullscreen.value && isOceanDepthActive.value,\n    \"anchorage-fullscreen\": isFullscreen.value && isAnchorageActive.value,\n    \"cable-ships-fullscreen\": isFullscreen.value && isCableShipsActive.value,\n    \"elevation-detached\": true,\n  };\n  return baseClasses;\n});\n\nonMounted(() => {\n  if (props.mapInstance?._container) {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n          const classList = props.mapInstance._container.classList;\n          isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n          isAnchorageActive.value = classList.contains(\"anchorage-active\");\n          isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n        }\n      });\n    });\n\n    observer.observe(props.mapInstance._container, {\n      attributes: true,\n      attributeFilter: [\"class\"],\n    });\n\n    // Set initial values\n    const classList = props.mapInstance._container.classList;\n    isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n    isAnchorageActive.value = classList.contains(\"anchorage-active\");\n    isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n\n    isComponentMounted.value = true;\n\n    // Cleanup observer on component unmount\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n  }\n});\n\nconst isComponentMounted = ref(true);\nlet resizeTimeout: ReturnType<typeof setTimeout> | null = null;\n\nwatch(oceanDepthFullscreenClass, () => {\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    showElevationProfile();\n  }\n});\n\n\n//Workaround because clear method of elevation control does not work properly currently\nclass SafeElevationControl extends (L.Control as any).Elevation {\n  constructor(options: any) {\n    super(options);\n    this._originalResizeChart = this._resizeChart;\n    this._resizeChart = this._safeResizeChart.bind(this);\n  }\n\n  _safeResizeChart() {\n    try {\n      if (!this._container || !this._map || !this._data || !this._data.length) {\n        return;\n      }\n\n      const chart = this._chart;\n      const area = this._area;\n      \n      if (!chart || !area) {\n        return;\n      }\n\n      // Check if required d3 methods exist\n      if (typeof chart.select !== 'function' || typeof area.select !== 'function') {\n        return;\n      }\n\n      // Check if the container is still in the DOM\n      if (!document.body.contains(this._container)) {\n        return;\n      }\n\n      // Check if map is valid\n      if (!this._map._container || !document.body.contains(this._map._container)) {\n        return;\n      }\n\n      // Ensure required methods exist before calling\n      if (typeof this._originalResizeChart === 'function') {\n        this._originalResizeChart();\n      }\n    } catch (error) {\n      console.warn('Safe resize handling prevented error:', error);\n    }\n  }\n\n  onAdd(map: L.Map) {\n    try {\n      // Ensure map is valid\n      if (!map || !map._container) {\n        console.warn('Invalid map instance');\n        return this;\n      }\n\n      // Call parent onAdd with additional error handling\n      const result = super.onAdd(map);\n\n      // Add safety check for _container\n      if (!this._container) {\n        console.warn('Container not initialized');\n        return result;\n      }\n\n      // Initialize event handlers safely\n      if (typeof this._initEvents === 'function') {\n        try {\n          this._initEvents();\n        } catch (error) {\n          console.warn('Error initializing events:', error);\n        }\n      }\n\n      return result;\n    } catch (error) {\n      console.warn('Error during elevation control addition:', error);\n      return this;\n    }\n  }\n\n  onRemove(map: L.Map) {\n    try {\n      // Clear any pending resize operations\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = null;\n      }\n\n      // Safely remove event listeners\n      if (this._container) {\n        const listeners = ['mousemove', 'mouseout', 'mouseover', 'click'];\n        listeners.forEach(event => {\n          try {\n            this._container.removeEventListener(event, this._mousemoveHandler);\n          } catch (e) {\n            // Ignore errors during listener removal\n          }\n        });\n      }\n\n      // Clear references\n      this._chart = null;\n      this._area = null;\n      this._data = null;\n\n      // Call parent onRemove\n      super.onRemove(map);\n    } catch (error) {\n      console.warn('Error during elevation control removal:', error);\n    }\n  }\n}\nconst elevationOptions = {\n  theme: \"lightblue-theme\",\n  detached: true,\n  elevationDiv: \"#elevation-div\",\n  followMarker: false,\n  reverseCoords: false,\n  autofitBounds: false,\n  imperial: false,\n  altitude: false,\n  distance: false,\n  summary: false,\n  ruler: false,\n  legend: false,\n  edgeScale: true,\n  hotline: true,\n  preferCanvas: true,\n  waypoints: false,\n  onRemove: function(this: any) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n      resizeObserver.value = null;\n    }\n    // Call original onRemove if it exists\n    if (this._onRemove) {\n      this._onRemove();\n    }\n  }\n};\n\nconst setupResizeHandling = () => {\n  const elevationDiv = document.getElementById('elevation-div');\n  if (elevationDiv && isComponentMounted.value) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n    }\n\n    resizeObserver.value = new ResizeObserver(debounce(() => {\n      if (currentElevationControl && isComponentMounted.value) {\n        try {\n          // Check if control is still valid\n          if (currentElevationControl._container && \n              currentElevationControl._map && \n              document.body.contains(currentElevationControl._container) &&\n              typeof currentElevationControl._resizeChart === 'function') {\n            currentElevationControl._resizeChart();\n          }\n        } catch (error) {\n          console.warn('Safe resize handling:', error);\n        }\n      }\n    }, 250));\n\n    resizeObserver.value.observe(elevationDiv);\n  }\n};\n\nconst debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  \n  return function executedFunction(\n    this: any,\n    ...args: Parameters<T>\n  ) {\n    const later = () => {\n      clearTimeout(timeout);\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nconst toggleFullscreen = () => {\n  console.log(\"MAP INSTANCE: \", props.mapInstance);\n  isFullscreen.value = !isFullscreen.value;\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    elevationOptions.height = isFullscreen.value ? 400 : 300;\n    showElevationProfile();\n  }\n};\n\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lng - 0.0001;\n    const miny = lat - 0.0001;\n    const maxx = lng + 0.0001;\n    const maxy = lat + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    fetchedPoints.value++;\n    return parseFloat(extractedText);\n  } catch (error) {\n    console.error('Error fetching ocean depth:', error);\n    fetchedPoints.value++;\n    return 0;\n  }\n}\n\nfunction calculateDistance(p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.lat - p1.lat, 2) + Math.pow(p2.lng - p1.lng, 2)\n  );\n}\n\nfunction findClosestSegment(\n  currentEndPoint: Point,\n  segments: Segment[]\n): { segmentIndex: number; shouldReverse: boolean } | null {\n  let minDistance = Infinity;\n  let closestSegmentIndex = -1;\n  let shouldReverse = false;\n\n  segments.forEach((segment, index) => {\n    if (segment.used) return;\n\n    // Check distance to start of segment\n    const distanceToStart = calculateDistance(currentEndPoint, segment.points[0]);\n    if (distanceToStart < minDistance) {\n      minDistance = distanceToStart;\n      closestSegmentIndex = index;\n      shouldReverse = false;\n    }\n\n    // Check distance to end of segment\n    const distanceToEnd = calculateDistance(\n      currentEndPoint,\n      segment.points[segment.points.length - 1]\n    );\n    if (distanceToEnd < minDistance) {\n      minDistance = distanceToEnd;\n      closestSegmentIndex = index;\n      shouldReverse = true;\n    }\n  });\n\n  if (closestSegmentIndex === -1) return null;\n\n  return {\n    segmentIndex: closestSegmentIndex,\n    shouldReverse\n  };\n}\n\nfunction calculateTotalPoints(segments: number[][][], minPointDensity: number, maxDistanceThreshold: number): number {\n  let total = 0;\n  \n  for (const segment of segments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n      total += segmentToProcess.length;\n    }\n  }\n  \n  return total;\n}\n\nfunction sortCableSegments(rawSegments: number[][][]): number[][][] {\n  // Convert raw segments to our Segment interface\n  const segments: Segment[] = rawSegments.map(segment => ({\n    points: segment.map(([lat, lng]) => ({ lat, lng })),\n    used: false\n  }));\n\n  const sortedSegments: number[][][] = [];\n  \n  // Start with the first segment\n  if (segments.length === 0) return [];\n  \n  segments[0].used = true;\n  sortedSegments.push(rawSegments[0]);\n  \n  let currentEndPoint = segments[0].points[segments[0].points.length - 1];\n\n  // Keep finding the closest segment until all segments are used\n  const unusedSegmentsExist = () => segments.some(segment => !segment.used);\n  \n  while (unusedSegmentsExist()) {\n    const nextSegment = findClosestSegment(currentEndPoint, segments);\n    \n    if (!nextSegment) break;\n    \n    const { segmentIndex, shouldReverse } = nextSegment;\n    segments[segmentIndex].used = true;\n\n    // Add the segment to our sorted array, reversing if necessary\n    const segmentToAdd = shouldReverse \n      ? [...rawSegments[segmentIndex]].reverse()\n      : rawSegments[segmentIndex];\n    \n    sortedSegments.push(segmentToAdd);\n    \n    // Update the current end point for the next iteration\n    currentEndPoint = shouldReverse \n      ? segments[segmentIndex].points[0]\n      : segments[segmentIndex].points[segments[segmentIndex].points.length - 1];\n  }\n\n  return sortedSegments;\n}\n\nconst calculateSegmentLength = (segment: [number, number][]): number => {\n  let length = 0;\n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    length += Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n  }\n  return length;\n};\n\nconst shouldInterpolateSegment = (segment: [number, number][], minPointDensity: number): boolean => {\n  const segmentLength = calculateSegmentLength(segment);\n  \n  // Define thresholds for adaptive point density\n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_MIN_DENSITY = 20;\n  const NORMAL_SEGMENT_MIN_DENSITY = 10;\n  \n  const pointDensity = segment.length / segmentLength;\n  \n  // Use higher density requirement for shorter segments\n  const requiredDensity = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_MIN_DENSITY \n    : NORMAL_SEGMENT_MIN_DENSITY;\n    \n  return pointDensity < requiredDensity;\n};\n\nconst interpolateSegment = (segment: [number, number][], maxDistanceThreshold: number): [number, number][] => {\n  const interpolatedSegment: [number, number][] = [];\n  const segmentLength = calculateSegmentLength(segment);\n  \n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_DISTANCE = 0.25; // Smaller distance threshold for short segments\n  const NORMAL_SEGMENT_DISTANCE = 0.50; // Original distance threshold\n  \n  const actualThreshold = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_DISTANCE \n    : NORMAL_SEGMENT_DISTANCE;\n  \n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    interpolatedSegment.push([lat1, lng1]); // Include the start point\n    \n    const distance = Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n    \n    if (distance > actualThreshold) {\n      const numExtraPoints = Math.ceil(distance / actualThreshold) - 1;\n      for (let j = 1; j <= numExtraPoints; j++) {\n        const fraction = j / (numExtraPoints + 1);\n        interpolatedSegment.push([\n          lat1 + fraction * (lat2 - lat1),\n          lng1 + fraction * (lng2 - lng1),\n        ]);\n      }\n    }\n  }\n  \n  interpolatedSegment.push(segment[segment.length - 1]); // Include the end point\n  return interpolatedSegment;\n};\n\nconst convertToGeoJSON = async (coordinates: any) => {\n  const rawCoordinates = JSON.parse(JSON.stringify(coordinates));\n  const unsortedSegments = [...rawCoordinates[0]].filter(Array.isArray);\n  \n  const sortedSegments = sortCableSegments(unsortedSegments);\n\n  const maxDistanceThreshold = 0.50;\n  const minPointDensity = 10;\n\n  totalPoints.value = calculateTotalPoints(sortedSegments, minPointDensity, maxDistanceThreshold);\n  fetchedPoints.value = 0;\n  fetchingPoints.value = true;\n\n  const processedCoordinates: ([number, number, number] | null)[] = [];\n\n  for (const segment of sortedSegments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      // Add null to separate segments\n      if (processedCoordinates.length > 0) {\n        processedCoordinates.push(null);\n      }\n\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n\n      for (const [lat, lng] of segmentToProcess) {\n        const depth = await fetchOceanDepth(lng, lat);\n        processedCoordinates.push([lng, lat, depth]);\n      }\n    }\n  }\n\n  fetchingPoints.value = false;\n\n  // Convert processed coordinates to MultiLineString format\n  const multiLineString = processedCoordinates.reduce((acc: number[][][], coord: [number, number, number] | null) => {\n    if (coord === null) {\n      acc.push([]);\n    } else {\n      if (acc.length === 0) {\n        acc.push([]);\n      }\n      acc[acc.length - 1].push(coord);\n    }\n    return acc;\n  }, []);\n\n  return {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"MultiLineString\",\n      coordinates: multiLineString,\n    },\n  };\n};\n\nconst removeCurrentElevationControl = () => {\n  if (currentElevationControl && props.mapInstance) {\n    props.mapInstance.removeControl(currentElevationControl);\n    currentElevationControl = null;\n  }\n  if (currentElevationLayer && props.mapInstance) {\n    props.mapInstance.removeLayer(currentElevationLayer);\n    currentElevationLayer = null;\n  }\n  \n  props.mapInstance.eachLayer((layer: any) => {\n    if (layer.options && (\n      layer.options.className === 'elevation-profile' ||\n      (layer.options.style && layer.options.style.className === 'elevation-profile')\n    )) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n};\n\nconst showElevationProfile = async () => {\n  if (!props.geoData || !isComponentMounted.value) return;\n  isLoading.value = true;\n  showProfile.value = true;\n\n  try {\n    removeCurrentElevationControl();\n    const geoJson = await convertToGeoJSON(props.geoData);\n    \n    if (!isComponentMounted.value) return;\n\n    elevationOptions.height = isFullscreen.value ? 600 : 300;\n    \n    if (!window.d3) {\n      window.d3 = d3;\n    }\n\n    // Use our SafeElevationControl instead of L.control.elevation\n    currentElevationControl = new SafeElevationControl(elevationOptions).addTo(props.mapInstance);\n\n    if (currentElevationControl) {\n      currentElevationControl.load(geoJson);\n      setupResizeHandling();\n    }\n  } catch (error) {\n    console.error('Error loading elevation profile:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst safeRemoveClasses = (element: HTMLElement, classNames: string) => {\n  if (!element) return;\n  const classes = classNames.split(' ').filter(className => className.trim());\n  classes.forEach(className => {\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.warn(`Failed to remove class: ${className}`, error);\n    }\n  });\n};\n\n\nconst cleanupElevationProfile = () => {\n  if (resizeObserver.value) {\n    resizeObserver.value.disconnect();\n    resizeObserver.value = null;\n  }\n  if (currentElevationControl) {\n    try {\n      if (typeof currentElevationControl.clear === 'function') {\n        const originalRemoveClass = L.DomUtil.removeClass;\n        L.DomUtil.removeClass = function(el: HTMLElement, name: string) {\n          safeRemoveClasses(el, name);\n        };\n        \n        currentElevationControl.clear();\n        \n        L.DomUtil.removeClass = originalRemoveClass;\n      }\n      \n      const elevationDiv = document.getElementById('elevation-div');\n      if (elevationDiv) {\n        elevationDiv.innerHTML = '';\n      }\n      \n      if (props.mapInstance) {\n        props.mapInstance.removeControl(currentElevationControl);\n      }\n    } catch (error) {\n      console.error('Error during elevation control cleanup:', error);\n    }\n    currentElevationControl = null;\n  }\n\n  const selectors = [\n    '.elevation-polyline',\n    '.elevation-profile',\n    '.elevation-line',\n    '.elevation-point',\n    '.elevation-marker',\n    '.elevation-summary',\n    '.elevation-tooltip',\n    '.leaflet-elevation'\n  ];\n\n  selectors.forEach(selector => {\n    document.querySelectorAll(selector).forEach(element => {\n      if (element instanceof HTMLElement) {\n        try {\n          if (element.className) {\n            safeRemoveClasses(element, element.className);\n          }\n          element.remove();\n        } catch (error) {\n          console.error(`Error removing element with selector ${selector}:`, error);\n        }\n      }\n    });\n  });\n\n  if (props.mapInstance) {\n    props.mapInstance.eachLayer((layer: any) => {\n      try {\n        if (layer.options && (\n          layer.options.className === 'elevation-profile' ||\n          (layer.options.style && layer.options.style.className === 'elevation-profile') ||\n          layer._path?.classList?.contains('elevation-polyline') ||\n          layer.options.className?.includes('elevation-') ||\n          layer._container?.classList?.contains('leaflet-elevation')\n        )) {\n          props.mapInstance.removeLayer(layer);\n        }\n      } catch (error) {\n        console.error('Error removing map layer:', error);\n      }\n    });\n  }\n\n  if (currentElevationLayer && props.mapInstance) {\n    try {\n      props.mapInstance.removeLayer(currentElevationLayer);\n    } catch (error) {\n      console.error('Error removing current elevation layer:', error);\n    }\n    currentElevationLayer = null;\n  }\n\n  showProfile.value = false;\n};\n\nwatch(() => props.geoData, () => {\n  if (showProfile.value) {\n    cleanupElevationProfile();\n  }\n});\n\nonBeforeUnmount(() => {\n  isComponentMounted.value = false;\n  cleanupElevationProfile();\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"button-group\", {'has-two-buttons': showProfile.value}])\n    }, [\n      _createElementVNode(\"button\", {\n        onClick: showElevationProfile,\n        class: \"btn-elevation\",\n        disabled: isLoading.value\n      }, [\n        (!isLoading.value && !fetchingPoints.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"Elevation Profile\"))\n          : (fetchingPoints.value)\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"Fetching points: \" + _toDisplayString(fetchedPoints.value) + \"/\" + _toDisplayString(totalPoints.value), 1))\n            : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"Loading...\"))\n      ], 8, _hoisted_2),\n      (showProfile.value)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: toggleFullscreen,\n            class: _normalizeClass([\"btn-elevation\", {'active': isFullscreen.value}])\n          }, [\n            (!isFullscreen.value)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"Expand View\"))\n              : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Minimize View\"))\n          ], 2))\n        : _createCommentVNode(\"\", true)\n    ], 2),\n    (fetchingPoints.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"div\", {\n            class: \"progress-bar\",\n            style: _normalizeStyle({width: `${(fetchedPoints.value/totalPoints.value)*100}%`})\n          }, null, 4)\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      id: \"elevation-div\",\n      class: _normalizeClass([\"elevation-div\", oceanDepthFullscreenClass.value])\n    }, null, 2)\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"elevation-container\">\n    <div class=\"button-group\" :class=\"{'has-two-buttons': showProfile}\">\n      <button @click=\"showElevationProfile\" class=\"btn-elevation\" :disabled=\"isLoading\">\n        <span v-if=\"!isLoading && !fetchingPoints\">Elevation Profile</span>\n        <span v-else-if=\"fetchingPoints\">Fetching points: {{fetchedPoints}}/{{totalPoints}}</span>\n        <span v-else>Loading...</span>\n      </button>\n      <button v-if=\"showProfile\" @click=\"toggleFullscreen\" class=\"btn-elevation\" :class=\"{'active': isFullscreen}\">\n        <span v-if=\"!isFullscreen\">Expand View</span>\n        <span v-else>Minimize View</span>\n      </button>\n    </div>\n    <div v-if=\"fetchingPoints\" class=\"progress-bar-container\">\n      <div class=\"progress-bar\" :style=\"{width: `${(fetchedPoints/totalPoints)*100}%`}\"></div>\n    </div>\n    <div id=\"elevation-div\" class=\"elevation-div\" :class=\"oceanDepthFullscreenClass\"></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onBeforeUnmount, computed, onMounted } from 'vue';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nwindow.d3 = d3;\nimport '@raruto/leaflet-elevation';\nimport '@raruto/leaflet-elevation/dist/leaflet-elevation.css';\nimport 'leaflet/dist/leaflet.css';\n\nconst props = defineProps<{\n  mapInstance: any;\n  geoData: any;\n}>();\n\nconst showProfile = ref(false);\nconst isLoading = ref(false);\nconst isFullscreen = ref(false);\nconst fetchingPoints = ref(false);\nconst fetchedPoints = ref(0);\nconst totalPoints = ref(0);\n\nconst resizeObserver = ref<ResizeObserver | null>(null);\n\nlet currentElevationControl: any = null;\nlet currentElevationLayer: any = null;\n\nconst isOceanDepthActive = ref(false);\nconst isCableShipsActive = ref(false);\nconst isAnchorageActive = ref(false);\n\nconst oceanDepthFullscreenClass = computed(() => {\n  const baseClasses = {\n    fullscreen: isFullscreen.value,\n    \"ocean-depth-fullscreen\": isFullscreen.value && isOceanDepthActive.value,\n    \"anchorage-fullscreen\": isFullscreen.value && isAnchorageActive.value,\n    \"cable-ships-fullscreen\": isFullscreen.value && isCableShipsActive.value,\n    \"elevation-detached\": true,\n  };\n  return baseClasses;\n});\n\nonMounted(() => {\n  if (props.mapInstance?._container) {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n          const classList = props.mapInstance._container.classList;\n          isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n          isAnchorageActive.value = classList.contains(\"anchorage-active\");\n          isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n        }\n      });\n    });\n\n    observer.observe(props.mapInstance._container, {\n      attributes: true,\n      attributeFilter: [\"class\"],\n    });\n\n    // Set initial values\n    const classList = props.mapInstance._container.classList;\n    isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n    isAnchorageActive.value = classList.contains(\"anchorage-active\");\n    isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n\n    isComponentMounted.value = true;\n\n    // Cleanup observer on component unmount\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n  }\n});\n\nconst isComponentMounted = ref(true);\nlet resizeTimeout: ReturnType<typeof setTimeout> | null = null;\n\nwatch(oceanDepthFullscreenClass, () => {\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    showElevationProfile();\n  }\n});\n\n\n//Workaround because clear method of elevation control does not work properly currently\nclass SafeElevationControl extends (L.Control as any).Elevation {\n  constructor(options: any) {\n    super(options);\n    this._originalResizeChart = this._resizeChart;\n    this._resizeChart = this._safeResizeChart.bind(this);\n  }\n\n  _safeResizeChart() {\n    try {\n      if (!this._container || !this._map || !this._data || !this._data.length) {\n        return;\n      }\n\n      const chart = this._chart;\n      const area = this._area;\n      \n      if (!chart || !area) {\n        return;\n      }\n\n      // Check if required d3 methods exist\n      if (typeof chart.select !== 'function' || typeof area.select !== 'function') {\n        return;\n      }\n\n      // Check if the container is still in the DOM\n      if (!document.body.contains(this._container)) {\n        return;\n      }\n\n      // Check if map is valid\n      if (!this._map._container || !document.body.contains(this._map._container)) {\n        return;\n      }\n\n      // Ensure required methods exist before calling\n      if (typeof this._originalResizeChart === 'function') {\n        this._originalResizeChart();\n      }\n    } catch (error) {\n      console.warn('Safe resize handling prevented error:', error);\n    }\n  }\n\n  onAdd(map: L.Map) {\n    try {\n      // Ensure map is valid\n      if (!map || !map._container) {\n        console.warn('Invalid map instance');\n        return this;\n      }\n\n      // Call parent onAdd with additional error handling\n      const result = super.onAdd(map);\n\n      // Add safety check for _container\n      if (!this._container) {\n        console.warn('Container not initialized');\n        return result;\n      }\n\n      // Initialize event handlers safely\n      if (typeof this._initEvents === 'function') {\n        try {\n          this._initEvents();\n        } catch (error) {\n          console.warn('Error initializing events:', error);\n        }\n      }\n\n      return result;\n    } catch (error) {\n      console.warn('Error during elevation control addition:', error);\n      return this;\n    }\n  }\n\n  onRemove(map: L.Map) {\n    try {\n      // Clear any pending resize operations\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = null;\n      }\n\n      // Safely remove event listeners\n      if (this._container) {\n        const listeners = ['mousemove', 'mouseout', 'mouseover', 'click'];\n        listeners.forEach(event => {\n          try {\n            this._container.removeEventListener(event, this._mousemoveHandler);\n          } catch (e) {\n            // Ignore errors during listener removal\n          }\n        });\n      }\n\n      // Clear references\n      this._chart = null;\n      this._area = null;\n      this._data = null;\n\n      // Call parent onRemove\n      super.onRemove(map);\n    } catch (error) {\n      console.warn('Error during elevation control removal:', error);\n    }\n  }\n}\nconst elevationOptions = {\n  theme: \"lightblue-theme\",\n  detached: true,\n  elevationDiv: \"#elevation-div\",\n  followMarker: false,\n  reverseCoords: false,\n  autofitBounds: false,\n  imperial: false,\n  altitude: false,\n  distance: false,\n  summary: false,\n  ruler: false,\n  legend: false,\n  edgeScale: true,\n  hotline: true,\n  preferCanvas: true,\n  waypoints: false,\n  onRemove: function(this: any) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n      resizeObserver.value = null;\n    }\n    // Call original onRemove if it exists\n    if (this._onRemove) {\n      this._onRemove();\n    }\n  }\n};\n\nconst setupResizeHandling = () => {\n  const elevationDiv = document.getElementById('elevation-div');\n  if (elevationDiv && isComponentMounted.value) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n    }\n\n    resizeObserver.value = new ResizeObserver(debounce(() => {\n      if (currentElevationControl && isComponentMounted.value) {\n        try {\n          // Check if control is still valid\n          if (currentElevationControl._container && \n              currentElevationControl._map && \n              document.body.contains(currentElevationControl._container) &&\n              typeof currentElevationControl._resizeChart === 'function') {\n            currentElevationControl._resizeChart();\n          }\n        } catch (error) {\n          console.warn('Safe resize handling:', error);\n        }\n      }\n    }, 250));\n\n    resizeObserver.value.observe(elevationDiv);\n  }\n};\n\nconst debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  \n  return function executedFunction(\n    this: any,\n    ...args: Parameters<T>\n  ) {\n    const later = () => {\n      clearTimeout(timeout);\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\ninterface Point {\n  lat: number;\n  lng: number;\n}\n\ninterface Segment {\n  points: Point[];\n  used?: boolean;\n}\n\nconst toggleFullscreen = () => {\n  console.log(\"MAP INSTANCE: \", props.mapInstance);\n  isFullscreen.value = !isFullscreen.value;\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    elevationOptions.height = isFullscreen.value ? 400 : 300;\n    showElevationProfile();\n  }\n};\n\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lng - 0.0001;\n    const miny = lat - 0.0001;\n    const maxx = lng + 0.0001;\n    const maxy = lat + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    fetchedPoints.value++;\n    return parseFloat(extractedText);\n  } catch (error) {\n    console.error('Error fetching ocean depth:', error);\n    fetchedPoints.value++;\n    return 0;\n  }\n}\n\nfunction calculateDistance(p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.lat - p1.lat, 2) + Math.pow(p2.lng - p1.lng, 2)\n  );\n}\n\nfunction findClosestSegment(\n  currentEndPoint: Point,\n  segments: Segment[]\n): { segmentIndex: number; shouldReverse: boolean } | null {\n  let minDistance = Infinity;\n  let closestSegmentIndex = -1;\n  let shouldReverse = false;\n\n  segments.forEach((segment, index) => {\n    if (segment.used) return;\n\n    // Check distance to start of segment\n    const distanceToStart = calculateDistance(currentEndPoint, segment.points[0]);\n    if (distanceToStart < minDistance) {\n      minDistance = distanceToStart;\n      closestSegmentIndex = index;\n      shouldReverse = false;\n    }\n\n    // Check distance to end of segment\n    const distanceToEnd = calculateDistance(\n      currentEndPoint,\n      segment.points[segment.points.length - 1]\n    );\n    if (distanceToEnd < minDistance) {\n      minDistance = distanceToEnd;\n      closestSegmentIndex = index;\n      shouldReverse = true;\n    }\n  });\n\n  if (closestSegmentIndex === -1) return null;\n\n  return {\n    segmentIndex: closestSegmentIndex,\n    shouldReverse\n  };\n}\n\nfunction calculateTotalPoints(segments: number[][][], minPointDensity: number, maxDistanceThreshold: number): number {\n  let total = 0;\n  \n  for (const segment of segments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n      total += segmentToProcess.length;\n    }\n  }\n  \n  return total;\n}\n\nfunction sortCableSegments(rawSegments: number[][][]): number[][][] {\n  // Convert raw segments to our Segment interface\n  const segments: Segment[] = rawSegments.map(segment => ({\n    points: segment.map(([lat, lng]) => ({ lat, lng })),\n    used: false\n  }));\n\n  const sortedSegments: number[][][] = [];\n  \n  // Start with the first segment\n  if (segments.length === 0) return [];\n  \n  segments[0].used = true;\n  sortedSegments.push(rawSegments[0]);\n  \n  let currentEndPoint = segments[0].points[segments[0].points.length - 1];\n\n  // Keep finding the closest segment until all segments are used\n  const unusedSegmentsExist = () => segments.some(segment => !segment.used);\n  \n  while (unusedSegmentsExist()) {\n    const nextSegment = findClosestSegment(currentEndPoint, segments);\n    \n    if (!nextSegment) break;\n    \n    const { segmentIndex, shouldReverse } = nextSegment;\n    segments[segmentIndex].used = true;\n\n    // Add the segment to our sorted array, reversing if necessary\n    const segmentToAdd = shouldReverse \n      ? [...rawSegments[segmentIndex]].reverse()\n      : rawSegments[segmentIndex];\n    \n    sortedSegments.push(segmentToAdd);\n    \n    // Update the current end point for the next iteration\n    currentEndPoint = shouldReverse \n      ? segments[segmentIndex].points[0]\n      : segments[segmentIndex].points[segments[segmentIndex].points.length - 1];\n  }\n\n  return sortedSegments;\n}\n\nconst calculateSegmentLength = (segment: [number, number][]): number => {\n  let length = 0;\n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    length += Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n  }\n  return length;\n};\n\nconst shouldInterpolateSegment = (segment: [number, number][], minPointDensity: number): boolean => {\n  const segmentLength = calculateSegmentLength(segment);\n  \n  // Define thresholds for adaptive point density\n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_MIN_DENSITY = 20;\n  const NORMAL_SEGMENT_MIN_DENSITY = 10;\n  \n  const pointDensity = segment.length / segmentLength;\n  \n  // Use higher density requirement for shorter segments\n  const requiredDensity = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_MIN_DENSITY \n    : NORMAL_SEGMENT_MIN_DENSITY;\n    \n  return pointDensity < requiredDensity;\n};\n\nconst interpolateSegment = (segment: [number, number][], maxDistanceThreshold: number): [number, number][] => {\n  const interpolatedSegment: [number, number][] = [];\n  const segmentLength = calculateSegmentLength(segment);\n  \n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_DISTANCE = 0.25; // Smaller distance threshold for short segments\n  const NORMAL_SEGMENT_DISTANCE = 0.50; // Original distance threshold\n  \n  const actualThreshold = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_DISTANCE \n    : NORMAL_SEGMENT_DISTANCE;\n  \n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    interpolatedSegment.push([lat1, lng1]); // Include the start point\n    \n    const distance = Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n    \n    if (distance > actualThreshold) {\n      const numExtraPoints = Math.ceil(distance / actualThreshold) - 1;\n      for (let j = 1; j <= numExtraPoints; j++) {\n        const fraction = j / (numExtraPoints + 1);\n        interpolatedSegment.push([\n          lat1 + fraction * (lat2 - lat1),\n          lng1 + fraction * (lng2 - lng1),\n        ]);\n      }\n    }\n  }\n  \n  interpolatedSegment.push(segment[segment.length - 1]); // Include the end point\n  return interpolatedSegment;\n};\n\nconst convertToGeoJSON = async (coordinates: any) => {\n  const rawCoordinates = JSON.parse(JSON.stringify(coordinates));\n  const unsortedSegments = [...rawCoordinates[0]].filter(Array.isArray);\n  \n  const sortedSegments = sortCableSegments(unsortedSegments);\n\n  const maxDistanceThreshold = 0.50;\n  const minPointDensity = 10;\n\n  totalPoints.value = calculateTotalPoints(sortedSegments, minPointDensity, maxDistanceThreshold);\n  fetchedPoints.value = 0;\n  fetchingPoints.value = true;\n\n  const processedCoordinates: ([number, number, number] | null)[] = [];\n\n  for (const segment of sortedSegments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      // Add null to separate segments\n      if (processedCoordinates.length > 0) {\n        processedCoordinates.push(null);\n      }\n\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n\n      for (const [lat, lng] of segmentToProcess) {\n        const depth = await fetchOceanDepth(lng, lat);\n        processedCoordinates.push([lng, lat, depth]);\n      }\n    }\n  }\n\n  fetchingPoints.value = false;\n\n  // Convert processed coordinates to MultiLineString format\n  const multiLineString = processedCoordinates.reduce((acc: number[][][], coord: [number, number, number] | null) => {\n    if (coord === null) {\n      acc.push([]);\n    } else {\n      if (acc.length === 0) {\n        acc.push([]);\n      }\n      acc[acc.length - 1].push(coord);\n    }\n    return acc;\n  }, []);\n\n  return {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"MultiLineString\",\n      coordinates: multiLineString,\n    },\n  };\n};\n\nconst removeCurrentElevationControl = () => {\n  if (currentElevationControl && props.mapInstance) {\n    props.mapInstance.removeControl(currentElevationControl);\n    currentElevationControl = null;\n  }\n  if (currentElevationLayer && props.mapInstance) {\n    props.mapInstance.removeLayer(currentElevationLayer);\n    currentElevationLayer = null;\n  }\n  \n  props.mapInstance.eachLayer((layer: any) => {\n    if (layer.options && (\n      layer.options.className === 'elevation-profile' ||\n      (layer.options.style && layer.options.style.className === 'elevation-profile')\n    )) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n};\n\nconst showElevationProfile = async () => {\n  if (!props.geoData || !isComponentMounted.value) return;\n  isLoading.value = true;\n  showProfile.value = true;\n\n  try {\n    removeCurrentElevationControl();\n    const geoJson = await convertToGeoJSON(props.geoData);\n    \n    if (!isComponentMounted.value) return;\n\n    elevationOptions.height = isFullscreen.value ? 600 : 300;\n    \n    if (!window.d3) {\n      window.d3 = d3;\n    }\n\n    // Use our SafeElevationControl instead of L.control.elevation\n    currentElevationControl = new SafeElevationControl(elevationOptions).addTo(props.mapInstance);\n\n    if (currentElevationControl) {\n      currentElevationControl.load(geoJson);\n      setupResizeHandling();\n    }\n  } catch (error) {\n    console.error('Error loading elevation profile:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst safeRemoveClasses = (element: HTMLElement, classNames: string) => {\n  if (!element) return;\n  const classes = classNames.split(' ').filter(className => className.trim());\n  classes.forEach(className => {\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.warn(`Failed to remove class: ${className}`, error);\n    }\n  });\n};\n\n\nconst cleanupElevationProfile = () => {\n  if (resizeObserver.value) {\n    resizeObserver.value.disconnect();\n    resizeObserver.value = null;\n  }\n  if (currentElevationControl) {\n    try {\n      if (typeof currentElevationControl.clear === 'function') {\n        const originalRemoveClass = L.DomUtil.removeClass;\n        L.DomUtil.removeClass = function(el: HTMLElement, name: string) {\n          safeRemoveClasses(el, name);\n        };\n        \n        currentElevationControl.clear();\n        \n        L.DomUtil.removeClass = originalRemoveClass;\n      }\n      \n      const elevationDiv = document.getElementById('elevation-div');\n      if (elevationDiv) {\n        elevationDiv.innerHTML = '';\n      }\n      \n      if (props.mapInstance) {\n        props.mapInstance.removeControl(currentElevationControl);\n      }\n    } catch (error) {\n      console.error('Error during elevation control cleanup:', error);\n    }\n    currentElevationControl = null;\n  }\n\n  const selectors = [\n    '.elevation-polyline',\n    '.elevation-profile',\n    '.elevation-line',\n    '.elevation-point',\n    '.elevation-marker',\n    '.elevation-summary',\n    '.elevation-tooltip',\n    '.leaflet-elevation'\n  ];\n\n  selectors.forEach(selector => {\n    document.querySelectorAll(selector).forEach(element => {\n      if (element instanceof HTMLElement) {\n        try {\n          if (element.className) {\n            safeRemoveClasses(element, element.className);\n          }\n          element.remove();\n        } catch (error) {\n          console.error(`Error removing element with selector ${selector}:`, error);\n        }\n      }\n    });\n  });\n\n  if (props.mapInstance) {\n    props.mapInstance.eachLayer((layer: any) => {\n      try {\n        if (layer.options && (\n          layer.options.className === 'elevation-profile' ||\n          (layer.options.style && layer.options.style.className === 'elevation-profile') ||\n          layer._path?.classList?.contains('elevation-polyline') ||\n          layer.options.className?.includes('elevation-') ||\n          layer._container?.classList?.contains('leaflet-elevation')\n        )) {\n          props.mapInstance.removeLayer(layer);\n        }\n      } catch (error) {\n        console.error('Error removing map layer:', error);\n      }\n    });\n  }\n\n  if (currentElevationLayer && props.mapInstance) {\n    try {\n      props.mapInstance.removeLayer(currentElevationLayer);\n    } catch (error) {\n      console.error('Error removing current elevation layer:', error);\n    }\n    currentElevationLayer = null;\n  }\n\n  showProfile.value = false;\n};\n\nwatch(() => props.geoData, () => {\n  if (showProfile.value) {\n    cleanupElevationProfile();\n  }\n});\n\nonBeforeUnmount(() => {\n  isComponentMounted.value = false;\n  cleanupElevationProfile();\n});\n</script>\n\n<style scoped>\n.elevation-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  position: relative;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  justify-content: center;\n}\n\n.button-group.has-two-buttons {\n  justify-content: flex-start; \n}\n\n.btn-elevation {\n  background-color: #4b5673;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  transition: background-color 0.2s ease;\n  width: auto;\n  min-width: 130px;\n  height: 36px; \n  font-size: 0.9rem; \n}\n\n.progress-bar-container {\n  width: 100%;\n  height: 4px;\n  background-color: rgba(75, 86, 115, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n  margin-top: -0.5rem;\n}\n\n.progress-bar {\n  height: 100%;\n  background-color: #697fc7;\n}\n\n.btn-elevation:hover {\n  background-color: #5c6b8a;\n}\n\n.btn-elevation:disabled {\n  background-color: #3a4255;\n  cursor: not-allowed;\n}\n\n.btn-elevation.active {\n  background-color: #2c3e50;\n}\n\n.elevation-div {\n  height: 300px;\n  width: 100%;\n  font: 12px/1.5 \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n  background-color: rgba(75, 86, 115, 0.5);\n  border-radius: 4px;\n  padding: 0.75rem;\n  transition: all 0.3s ease;\n}\n\n.elevation-div.fullscreen {\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  width: 83vw;\n  height: 300px;\n  z-index: 1000;\n  background-color: rgba(46, 53, 71, 0.95);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n  margin-left: auto;\n}\n\n.elevation-div.fullscreen.ocean-depth-fullscreen {\n  width: 60vw !important;\n  right: 11vw !important;\n}\n\n.elevation-div.fullscreen.anchorage-fullscreen {\n  width: 72vw !important;\n  right: 11vw !important;\n}\n\n.elevation-div.fullscreen.cable-ships-fullscreen {\n  width: 70vw !important;\n  right: 13vw !important;\n}\n</style>","import script from \"./ElevationProfile.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ElevationProfile.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ElevationProfile.vue?vue&type=style&index=0&id=e0b5752a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e0b5752a\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-27b65a78\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"cable-details-container\" }\nconst _hoisted_2 = { class: \"header-section\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-arrow-left\" }, null, -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Back to Cables\", -1))\nconst _hoisted_5 = { class: \"cable-title\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"content-grid\"\n}\nconst _hoisted_7 = { class: \"info-card\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"card-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-info-circle\" }),\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Cable Information\")\n], -1))\nconst _hoisted_9 = { class: \"card-content\" }\nconst _hoisted_10 = { class: \"info-row\" }\nconst _hoisted_11 = { class: \"info-item\" }\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"label\" }, \"Total Length\", -1))\nconst _hoisted_13 = { class: \"value\" }\nconst _hoisted_14 = { class: \"info-item\" }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"label\" }, \"Service Date\", -1))\nconst _hoisted_16 = { class: \"value\" }\nconst _hoisted_17 = {\n  key: 0,\n  class: \"info-card\"\n}\nconst _hoisted_18 = { class: \"card-header\" }\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-geo-alt\" }, null, -1))\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Landing Sites\", -1))\nconst _hoisted_21 = { class: \"count-badge\" }\nconst _hoisted_22 = { class: \"card-content\" }\nconst _hoisted_23 = { class: \"landing-sites-grid\" }\nconst _hoisted_24 = [\"onClick\"]\nconst _hoisted_25 = {\n  key: 1,\n  class: \"info-card\"\n}\nconst _hoisted_26 = { class: \"card-header\" }\nconst _hoisted_27 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-building\" }, null, -1))\nconst _hoisted_28 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Ownership\", -1))\nconst _hoisted_29 = { class: \"count-badge\" }\nconst _hoisted_30 = { class: \"card-content\" }\nconst _hoisted_31 = { class: \"ownership-list\" }\nconst _hoisted_32 = { class: \"company-info\" }\nconst _hoisted_33 = { class: \"company-name\" }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"nationality\"\n}\nconst _hoisted_35 = { class: \"info-card analysis-card\" }\nconst _hoisted_36 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"card-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-water\" }),\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Ocean Depth Analysis\")\n], -1))\nconst _hoisted_37 = { class: \"card-content\" }\nconst _hoisted_38 = { class: \"analysis-controls\" }\nconst _hoisted_39 = { class: \"control-group\" }\nconst _hoisted_40 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"samplePointCount\" }, \"Sample Points\", -1))\nconst _hoisted_41 = [\"value\"]\nconst _hoisted_42 = [\"disabled\"]\nconst _hoisted_43 = {\n  key: 0,\n  class: \"bi bi-search\"\n}\nconst _hoisted_44 = {\n  key: 1,\n  class: \"bi bi-arrow-clockwise spin\"\n}\nconst _hoisted_45 = {\n  key: 0,\n  class: \"depth-results\"\n}\nconst _hoisted_46 = { class: \"result-item\" }\nconst _hoisted_47 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"result-label\" }, \"Average Depth\", -1))\nconst _hoisted_48 = { class: \"result-value\" }\nconst _hoisted_49 = { class: \"result-item\" }\nconst _hoisted_50 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"result-label\" }, \"Maximum Depth\", -1))\nconst _hoisted_51 = { class: \"result-value\" }\nconst _hoisted_52 = { class: \"info-card analysis-card\" }\nconst _hoisted_53 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"card-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-graph-up\" }),\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Cable Analysis\")\n], -1))\nconst _hoisted_54 = { class: \"card-content\" }\nconst _hoisted_55 = { class: \"analysis-buttons\" }\nconst _hoisted_56 = [\"disabled\"]\nconst _hoisted_57 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-bar-chart\" }, null, -1))\nconst _hoisted_58 = [\"disabled\"]\nconst _hoisted_59 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-exclamation-triangle\" }, null, -1))\nconst _hoisted_60 = {\n  key: 1,\n  class: \"analysis-container\"\n}\n\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { queryCableById } from \"@/service/hasura\";\nimport { ref, watch} from \"vue\";\nimport OceanDepthAnalyzer from \"./OceanDepthAnalyzer.vue\";\nimport ElevationProfile from './ElevationProfile.vue';\nimport L from 'leaflet';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CableViewer',\n  setup(__props) {\n\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\nconst route = useRoute();\n\nconst geoData = ref(null);\nconst cable = ref();\nconst handle = useClientHandle();\nconst drawnGeometry = ref(null);\nconst mapInstance = dataCableStore.getMapInstance;\nconst isAnalyzing = ref(false);\nconst oceanDepthAnalyzerRef = ref(null);\nconst filteredDepthAnalysis = ref(null);\nconst samplePointCount = ref(100);\n\nconst loadCable = async (id: string) => {\n  const result = await handle.client.query(queryCableById, { id: id }).toPromise();\n  if (result.error) {\n    console.error(result.error);\n    return;\n  }\n  cable.value = result.data.CableSystems[0];\n};\n\nfunction formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric', \n    month: 'long', \n    day: 'numeric'\n  });\n}\n\nwatch(() => dataCableStore.selectCable, () => {\n  geoData.value = dataCableStore.cableDetails.geoData;\n})\n// Reset depth analysis when cable changes\nwatch(() => cable.value, () => {\n  drawnGeometry.value = null;\n  filteredDepthAnalysis.value = null;\n  isAnalyzing.value = false;\n  geoData.value = dataCableStore.cableDetails.geoData;\n});\n\nconst extractDepthInfo = async () => {\n  let cableGeo = dataCableStore.cableDetails;\n  if (!cableGeo || !cableGeo.geoData) return;\n  \n  isAnalyzing.value = true;\n  try {\n    const flattenedCoordinates = cableGeo.geoData.flatMap(segment => \n      segment[0].map(coord => [coord[1], coord[0]])\n    );\n\n    const geoData = {\n      type: 'LineString',\n      coordinates: flattenedCoordinates\n    };\n\n     const latlngs = geoData.coordinates.map((coord: number[]) => \n      L.latLng(coord[1], coord[0])\n    );\n    const geometry = L.polyline(latlngs);\n\n    drawnGeometry.value = geometry;\n  } catch (error) {\n    console.error('Error extracting depth info:', error);\n  } finally {\n    isAnalyzing.value = false;\n  }\n};\n\nconst filterDepthAnalysis = (fullAnalysis) => {\n  const filteredAnalysis = {\n    averageDepth: fullAnalysis.averageDepth,\n    deepestPoint: fullAnalysis.deepestPoint,\n    samplePoints: fullAnalysis.samplePoints\n  };\n\n  filteredDepthAnalysis.value = filteredAnalysis;\n  console.log('Filtered depth analysis:', filteredAnalysis);\n};\n\nlet id = route.params.cableId.toString();\n\nif (!dataCableStore.isCableSelected(id)) {\n  dataCableStore.setSelectCable(id, true);\n}\n\nloadCable(id);\n\nonBeforeRouteUpdate((to) => {\n  loadCable(to.params.cableId.toString());\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n  const _component_CableRiskAnalysis = _resolveComponent(\"CableRiskAnalysis\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(dataCableStore).deselectCables())),\n        class: \"back-button\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_3,\n          _hoisted_4\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"h1\", null, _toDisplayString(cable.value?.name || 'Loading...'), 1),\n        (cable.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: _normalizeClass([\"status-badge\", cable.value.outOfService ? 'status-offline' : 'status-online'])\n            }, [\n              _createElementVNode(\"i\", {\n                class: _normalizeClass(['bi', !cable.value.outOfService ? 'bi-check-circle-fill' : 'bi-x-circle-fill'])\n              }, null, 2),\n              _createElementVNode(\"span\", null, _toDisplayString(cable.value.outOfService ? 'Out of Service' : 'Operational'), 1)\n            ], 2))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (cable.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _hoisted_8,\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _hoisted_12,\n                  _createElementVNode(\"span\", _hoisted_13, _toDisplayString(cable.value.length.toLocaleString()) + \" km\", 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_14, [\n                  _hoisted_15,\n                  _createElementVNode(\"span\", _hoisted_16, _toDisplayString(formatDate(cable.value.readyForService)), 1)\n                ])\n              ])\n            ])\n          ]),\n          (cable.value.CableSystem_X_Landingsites?.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n                _createElementVNode(\"div\", _hoisted_18, [\n                  _hoisted_19,\n                  _hoisted_20,\n                  _createElementVNode(\"span\", _hoisted_21, _toDisplayString(cable.value.CableSystem_X_Landingsites.length), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_22, [\n                  _createElementVNode(\"div\", _hoisted_23, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.value.CableSystem_X_Landingsites, (point) => {\n                      return (_openBlock(), _createElementBlock(\"div\", {\n                        key: point.Landingsite.id,\n                        class: \"landing-site-chip\",\n                        onClick: ($event: any) => (_unref(landingSitesStore).setSelectLandingSiteById(point.Landingsite.id))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(point.Landingsite.name), 1)\n                      ], 8, _hoisted_24))\n                    }), 128))\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (cable.value.Ownerships?.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [\n                _createElementVNode(\"div\", _hoisted_26, [\n                  _hoisted_27,\n                  _hoisted_28,\n                  _createElementVNode(\"span\", _hoisted_29, _toDisplayString(cable.value.Ownerships.length), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_30, [\n                  _createElementVNode(\"div\", _hoisted_31, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.value.Ownerships, (entry) => {\n                      return (_openBlock(), _createElementBlock(\"div\", {\n                        key: entry.Company.id,\n                        class: \"ownership-item\"\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_32, [\n                          _createElementVNode(\"span\", _hoisted_33, _toDisplayString(entry.Company.name), 1),\n                          (entry.Company.nationality)\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_34, _toDisplayString(entry.Company.nationality), 1))\n                            : _createCommentVNode(\"\", true)\n                        ])\n                      ]))\n                    }), 128))\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_35, [\n            _hoisted_36,\n            _createElementVNode(\"div\", _hoisted_37, [\n              _createElementVNode(\"div\", _hoisted_38, [\n                _createElementVNode(\"div\", _hoisted_39, [\n                  _hoisted_40,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    id: \"samplePointCount\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((samplePointCount).value = $event)),\n                    class: \"select-input\"\n                  }, [\n                    (_openBlock(), _createElementBlock(_Fragment, null, _renderList([100, 200, 500, 1000, 2000, 5000], (count) => {\n                      return _createElementVNode(\"option\", {\n                        key: count,\n                        value: count\n                      }, _toDisplayString(count.toLocaleString()) + \" points \", 9, _hoisted_41)\n                    }), 64))\n                  ], 512), [\n                    [_vModelSelect, samplePointCount.value]\n                  ])\n                ]),\n                _createElementVNode(\"button\", {\n                  onClick: extractDepthInfo,\n                  class: \"primary-button\",\n                  disabled: isAnalyzing.value\n                }, [\n                  (!isAnalyzing.value)\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_43))\n                    : (_openBlock(), _createElementBlock(\"i\", _hoisted_44)),\n                  _createElementVNode(\"span\", null, _toDisplayString(isAnalyzing.value ? 'Analyzing...' : 'Analyze Depth'), 1)\n                ], 8, _hoisted_42)\n              ]),\n              (filteredDepthAnalysis.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, [\n                    _createElementVNode(\"div\", _hoisted_46, [\n                      _hoisted_47,\n                      _createElementVNode(\"span\", _hoisted_48, _toDisplayString(Math.round(filteredDepthAnalysis.value.averageDepth).toLocaleString()) + \"m\", 1)\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_49, [\n                      _hoisted_50,\n                      _createElementVNode(\"span\", _hoisted_51, _toDisplayString(Math.round(filteredDepthAnalysis.value.deepestPoint).toLocaleString()) + \"m\", 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_52, [\n            _hoisted_53,\n            _createElementVNode(\"div\", _hoisted_54, [\n              _createElementVNode(\"div\", _hoisted_55, [\n                _createElementVNode(\"button\", {\n                  onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.toggleElevationProfile && _ctx.toggleElevationProfile(...args))),\n                  class: _normalizeClass([\"analysis-button\", { active: _ctx.activeAnalysis === 'elevation' }]),\n                  disabled: isAnalyzing.value\n                }, [\n                  _hoisted_57,\n                  _createElementVNode(\"span\", null, _toDisplayString(_ctx.activeAnalysis === 'elevation' ? 'Hide' : 'Show') + \" Elevation Profile\", 1)\n                ], 10, _hoisted_56),\n                _createElementVNode(\"button\", {\n                  onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.toggleRiskAnalysis && _ctx.toggleRiskAnalysis(...args))),\n                  class: _normalizeClass([\"analysis-button\", { active: _ctx.activeAnalysis === 'risk' }]),\n                  disabled: isAnalyzing.value\n                }, [\n                  _hoisted_59,\n                  _createElementVNode(\"span\", null, _toDisplayString(_ctx.activeAnalysis === 'risk' ? 'Hide' : 'Show') + \" Risk Analysis\", 1)\n                ], 10, _hoisted_58)\n              ])\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.activeAnalysis)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_60, [\n          (_ctx.activeAnalysis === 'elevation')\n            ? (_openBlock(), _createBlock(ElevationProfile, {\n                key: 0,\n                ref: \"elevationProfileRef\",\n                mapInstance: _unref(mapInstance),\n                geoData: geoData.value,\n                autoStart: true\n              }, null, 8, [\"mapInstance\", \"geoData\"]))\n            : _createCommentVNode(\"\", true),\n          (_ctx.activeAnalysis === 'risk')\n            ? (_openBlock(), _createBlock(_component_CableRiskAnalysis, {\n                key: 1,\n                ref: \"cableRiskAnalysisRef\",\n                mapInstance: _unref(mapInstance),\n                geoData: geoData.value,\n                autoStart: true\n              }, null, 8, [\"mapInstance\", \"geoData\"]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (drawnGeometry.value)\n      ? (_openBlock(), _createBlock(OceanDepthAnalyzer, {\n          key: 2,\n          ref_key: \"oceanDepthAnalyzerRef\",\n          ref: oceanDepthAnalyzerRef,\n          mapInstance: _unref(mapInstance),\n          drawnGeometry: drawnGeometry.value,\n          samplePointCount: samplePointCount.value,\n          onDepthAnalysisComplete: filterDepthAnalysis,\n          style: {\"display\":\"none\"}\n        }, null, 8, [\"mapInstance\", \"drawnGeometry\", \"samplePointCount\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"cable-details-container\">\n    <!-- Header Section -->\n    <div class=\"header-section\">\n      <router-link to=\"/\" @click=\"dataCableStore.deselectCables()\" class=\"back-button\">\n        <i class=\"bi bi-arrow-left\"></i>\n        <span>Back to Cables</span>\n      </router-link>\n      \n      <div class=\"cable-title\">\n        <h1>{{ cable?.name || 'Loading...' }}</h1>\n        <div v-if=\"cable\" class=\"status-badge\" :class=\"cable.outOfService ? 'status-offline' : 'status-online'\">\n          <i :class=\"['bi', !cable.outOfService ? 'bi-check-circle-fill' : 'bi-x-circle-fill']\"></i>\n          <span>{{ cable.outOfService ? 'Out of Service' : 'Operational' }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"cable\" class=\"content-grid\">\n      <!-- Basic Information Card -->\n      <div class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-info-circle\"></i>\n          <h3>Cable Information</h3>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"info-row\">\n            <div class=\"info-item\">\n              <span class=\"label\">Total Length</span>\n              <span class=\"value\">{{ cable.length.toLocaleString() }} km</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">Service Date</span>\n              <span class=\"value\">{{ formatDate(cable.readyForService) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Landing Sites Card -->\n      <div v-if=\"cable.CableSystem_X_Landingsites?.length\" class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-geo-alt\"></i>\n          <h3>Landing Sites</h3>\n          <span class=\"count-badge\">{{ cable.CableSystem_X_Landingsites.length }}</span>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"landing-sites-grid\">\n            <div \n              v-for=\"point in cable.CableSystem_X_Landingsites\" \n              :key=\"point.Landingsite.id\" \n              class=\"landing-site-chip\"\n              @click=\"landingSitesStore.setSelectLandingSiteById(point.Landingsite.id)\"\n            >\n              <span>{{ point.Landingsite.name }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Ownership Card -->\n      <div v-if=\"cable.Ownerships?.length\" class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-building\"></i>\n          <h3>Ownership</h3>\n          <span class=\"count-badge\">{{ cable.Ownerships.length }}</span>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"ownership-list\">\n            <div v-for=\"entry in cable.Ownerships\" :key=\"entry.Company.id\" class=\"ownership-item\">\n              <div class=\"company-info\">\n                <span class=\"company-name\">{{ entry.Company.name }}</span>\n                <span v-if=\"entry.Company.nationality\" class=\"nationality\">{{ entry.Company.nationality }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Ocean Depth Analysis Card -->\n      <div class=\"info-card analysis-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-water\"></i>\n          <h3>Ocean Depth Analysis</h3>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"analysis-controls\">\n            <div class=\"control-group\">\n              <label for=\"samplePointCount\">Sample Points</label>\n              <select id=\"samplePointCount\" v-model=\"samplePointCount\" class=\"select-input\">\n                <option v-for=\"count in [100, 200, 500, 1000, 2000, 5000]\" :key=\"count\" :value=\"count\">\n                  {{ count.toLocaleString() }} points\n                </option>\n              </select>\n            </div>\n            \n            <button @click=\"extractDepthInfo\" class=\"primary-button\" :disabled=\"isAnalyzing\">\n              <i v-if=\"!isAnalyzing\" class=\"bi bi-search\"></i>\n              <i v-else class=\"bi bi-arrow-clockwise spin\"></i>\n              <span>{{ isAnalyzing ? 'Analyzing...' : 'Analyze Depth' }}</span>\n            </button>\n          </div>\n\n          <div v-if=\"filteredDepthAnalysis\" class=\"depth-results\">\n            <div class=\"result-item\">\n              <span class=\"result-label\">Average Depth</span>\n              <span class=\"result-value\">{{ Math.round(filteredDepthAnalysis.averageDepth).toLocaleString() }}m</span>\n            </div>\n            <div class=\"result-item\">\n              <span class=\"result-label\">Maximum Depth</span>\n              <span class=\"result-value\">{{ Math.round(filteredDepthAnalysis.deepestPoint).toLocaleString() }}m</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Cable Analysis Card -->\n      <div class=\"info-card analysis-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-graph-up\"></i>\n          <h3>Cable Analysis</h3>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"analysis-buttons\">\n            <button \n              @click=\"toggleElevationProfile\" \n              class=\"analysis-button\" \n              :class=\"{ active: activeAnalysis === 'elevation' }\"\n              :disabled=\"isAnalyzing\"\n            >\n              <i class=\"bi bi-bar-chart\"></i>\n              <span>{{ activeAnalysis === 'elevation' ? 'Hide' : 'Show' }} Elevation Profile</span>\n            </button>\n            \n            <button \n              @click=\"toggleRiskAnalysis\" \n              class=\"analysis-button\"\n              :class=\"{ active: activeAnalysis === 'risk' }\"\n              :disabled=\"isAnalyzing\"\n            >\n              <i class=\"bi bi-exclamation-triangle\"></i>\n              <span>{{ activeAnalysis === 'risk' ? 'Hide' : 'Show' }} Risk Analysis</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Analysis Components -->\n    <div v-if=\"activeAnalysis\" class=\"analysis-container\">\n      <ElevationProfile \n        v-if=\"activeAnalysis === 'elevation'\"\n        ref=\"elevationProfileRef\"\n        :mapInstance=\"mapInstance\" \n        :geoData=\"geoData\"\n        :autoStart=\"true\"\n      />\n      \n      <CableRiskAnalysis \n        v-if=\"activeAnalysis === 'risk'\"\n        ref=\"cableRiskAnalysisRef\"\n        :mapInstance=\"mapInstance\" \n        :geoData=\"geoData\"\n        :autoStart=\"true\"\n      />\n    </div>\n\n    <!-- Hidden Components -->\n    <OceanDepthAnalyzer \n      v-if=\"drawnGeometry\"\n      ref=\"oceanDepthAnalyzerRef\"\n      :mapInstance=\"mapInstance\"\n      :drawnGeometry=\"drawnGeometry\"\n      :samplePointCount=\"samplePointCount\"\n      @depth-analysis-complete=\"filterDepthAnalysis\"\n      style=\"display: none;\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { queryCableById } from \"@/service/hasura\";\nimport { ref, watch} from \"vue\";\nimport OceanDepthAnalyzer from \"./OceanDepthAnalyzer.vue\";\nimport ElevationProfile from './ElevationProfile.vue';\nimport L from 'leaflet';\n\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\nconst route = useRoute();\n\nconst geoData = ref(null);\nconst cable = ref();\nconst handle = useClientHandle();\nconst drawnGeometry = ref(null);\nconst mapInstance = dataCableStore.getMapInstance;\nconst isAnalyzing = ref(false);\nconst oceanDepthAnalyzerRef = ref(null);\nconst filteredDepthAnalysis = ref(null);\nconst samplePointCount = ref(100);\n\nconst loadCable = async (id: string) => {\n  const result = await handle.client.query(queryCableById, { id: id }).toPromise();\n  if (result.error) {\n    console.error(result.error);\n    return;\n  }\n  cable.value = result.data.CableSystems[0];\n};\n\nfunction formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric', \n    month: 'long', \n    day: 'numeric'\n  });\n}\n\nwatch(() => dataCableStore.selectCable, () => {\n  geoData.value = dataCableStore.cableDetails.geoData;\n})\n// Reset depth analysis when cable changes\nwatch(() => cable.value, () => {\n  drawnGeometry.value = null;\n  filteredDepthAnalysis.value = null;\n  isAnalyzing.value = false;\n  geoData.value = dataCableStore.cableDetails.geoData;\n});\n\nconst extractDepthInfo = async () => {\n  let cableGeo = dataCableStore.cableDetails;\n  if (!cableGeo || !cableGeo.geoData) return;\n  \n  isAnalyzing.value = true;\n  try {\n    const flattenedCoordinates = cableGeo.geoData.flatMap(segment => \n      segment[0].map(coord => [coord[1], coord[0]])\n    );\n\n    const geoData = {\n      type: 'LineString',\n      coordinates: flattenedCoordinates\n    };\n\n     const latlngs = geoData.coordinates.map((coord: number[]) => \n      L.latLng(coord[1], coord[0])\n    );\n    const geometry = L.polyline(latlngs);\n\n    drawnGeometry.value = geometry;\n  } catch (error) {\n    console.error('Error extracting depth info:', error);\n  } finally {\n    isAnalyzing.value = false;\n  }\n};\n\nconst filterDepthAnalysis = (fullAnalysis) => {\n  const filteredAnalysis = {\n    averageDepth: fullAnalysis.averageDepth,\n    deepestPoint: fullAnalysis.deepestPoint,\n    samplePoints: fullAnalysis.samplePoints\n  };\n\n  filteredDepthAnalysis.value = filteredAnalysis;\n  console.log('Filtered depth analysis:', filteredAnalysis);\n};\n\nlet id = route.params.cableId.toString();\n\nif (!dataCableStore.isCableSelected(id)) {\n  dataCableStore.setSelectCable(id, true);\n}\n\nloadCable(id);\n\nonBeforeRouteUpdate((to) => {\n  loadCable(to.params.cableId.toString());\n});\n</script>\n\n<style scoped>\n.cable-details-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  color: white;\n  padding: 0.5rem;\n  max-width: 100%;\n}\n\n/* Header Section */\n.header-section {\n  margin-bottom: 0.75rem;\n}\n\n.back-button {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #cbd5e0;\n  text-decoration: none;\n  font-size: 0.95rem;\n  padding: 0.5rem 0.75rem;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 0.8rem;\n  width: fit-content;\n}\n\n.back-button:hover {\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  text-decoration: none;\n  transform: translateX(-2px);\n}\n\n.cable-title {\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n}\n\n.cable-title h1 {\n  font-size: 1.3rem; /* Increased from 1.25rem */\n  font-weight: 700;\n  margin: 0;\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  line-height: 1.2;\n}\n\n.status-badge {\n  display: flex;\n  align-items: center;\n  justify-content: center; /* Added centering */\n  gap: 0.5rem;\n  padding: 0.5rem 0.75rem;\n  border-radius: 16px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  width: fit-content;\n  margin: 0 auto; /* Center horizontally */\n}\n\n.status-online {\n  background: rgba(72, 187, 120, 0.2);\n  color: #68d391;\n  border: 1px solid rgba(72, 187, 120, 0.3);\n}\n\n.status-offline {\n  background: rgba(245, 101, 101, 0.2);\n  color: #fc8181;\n  border: 1px solid rgba(245, 101, 101, 0.3);\n}\n\n/* Content Grid */\n.content-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  flex: 1;\n}\n\n/* Info Cards */\n.info-card {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n  transition: all 0.2s ease;\n}\n\n.info-card:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  border-color: rgba(255, 255, 255, 0.15);\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.6rem 0.8rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.card-header i {\n  font-size: 1rem;\n  color: #63b3ed;\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 1rem; /* Increased from 0.9rem */\n  font-weight: 600;\n  flex: 1;\n}\n\n.count-badge {\n  background: rgba(99, 179, 237, 0.2);\n  color: #63b3ed;\n  padding: 0.2rem 0.5rem;\n  border-radius: 10px;\n  font-size: 0.75rem;\n  font-weight: 700;\n  min-width: 1.5rem;\n  text-align: center;\n}\n\n.card-content {\n  padding: 0.75rem;\n}\n\n/* Info Items */\n.info-row {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  padding: 0.75rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 6px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.info-item .label {\n  font-size: 0.75rem;\n  color: #a0aec0;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  font-weight: 500;\n}\n\n.info-item .value {\n  font-size: 1rem;\n  font-weight: 600;\n  color: white;\n}\n\n/* Landing Sites */\n.landing-sites-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.5rem;\n}\n\n.landing-site-chip {\n  align-items: center;\n  text-align: center;\n  gap: 0.5rem;\n  padding: 0.4rem 0.6rem;\n  background: rgba(99, 179, 237, 0.1);\n  border: 1px solid rgba(99, 179, 237, 0.2);\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.85rem; /* Increased from 0.8rem */\n  width: 100%;\n}\n\n.landing-site-chip:hover {\n  background: rgba(99, 179, 237, 0.25); /* Darker hover */\n  transform: translateY(-2px); /* Lift effect */\n  box-shadow: 0 2px 8px rgba(99, 179, 237, 0.2); /* Subtle shadow */\n}\n\n/* Ownership */\n.ownership-list {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.ownership-item {\n  padding: 0.75rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 6px;\n  border-left: 3px solid #63b3ed;\n}\n\n.company-info {\n  display: flex;  \n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.company-name {\n  font-weight: 600;\n  color: white;\n  font-size: 0.9rem;\n}\n\n.nationality {\n  background: rgba(99, 179, 237, 0.2);\n  color: #63b3ed;\n  padding: 0.2rem 0.5rem;\n  border-radius: 10px;\n  font-size: 0.75rem;\n  width: fit-content;\n}\n\n/* Analysis Controls */\n.analysis-controls {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.control-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.control-group label {\n  font-size: 0.8rem;\n  color: #a0aec0;\n  font-weight: 500;\n}\n\n.select-input {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  padding: 0.4rem 0.6rem;\n  color: white;\n  font-size: 0.8rem;\n}\n\n.select-input option {\n  background: #2d3748;\n  color: white;\n}\n\n.select-input:focus {\n  outline: none;\n  border-color: #63b3ed;\n  box-shadow: 0 0 0 3px rgba(99, 179, 237, 0.1);\n}\n\n/* Buttons */\n.primary-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  background: linear-gradient(135deg, #4299e1, #3182ce);\n  border: none;\n  border-radius: 6px;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.8rem;\n  width: 100%;\n}\n\n.primary-button:hover:not(:disabled) {\n  background: linear-gradient(135deg, #3182ce, #2c5282);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);\n}\n\n.primary-button:disabled {\n  background: rgba(74, 85, 104, 0.5);\n  cursor: not-allowed;\n  transform: none;\n}\n\n.analysis-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  align-items: center; /* Center buttons */\n}\n\n.analysis-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  background: linear-gradient(135deg, #4299e1, #3182ce); /* Matching primary button */\n  border: none;\n  border-radius: 6px;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.8rem;\n  width: 100%;\n  max-width: 280px; /* Reasonable max width */\n}\n\n.analysis-button:hover:not(:disabled) {\n  background: linear-gradient(135deg, #3182ce, #2c5282);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);\n}\n\n.analysis-button.active {\n  background: linear-gradient(135deg, #805ad5, #6b46c1);\n  border-color: #805ad5;\n}\n\n.analysis-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Depth Results */\n.depth-results {\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.result-item {\n  padding: 0.75rem;\n  background: rgba(72, 187, 120, 0.1);\n  border: 1px solid rgba(72, 187, 120, 0.2);\n  border-radius: 6px;\n  text-align: center;\n}\n\n.result-label {\n  display: block;\n  font-size: 0.75rem;\n  color: #a0aec0;\n  margin-bottom: 0.25rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.result-value {\n  display: block;\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #68d391;\n}\n\n/* Analysis Container */\n.analysis-container {\n  margin-top: 1rem;\n  padding: 1rem 0.5rem; /* Reduced side padding */\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n/* Animations */\n.spin {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .cable-details-container {\n    padding: 0.75rem;\n  }\n  \n  .cable-title h1 {\n    font-size: 1.1rem;\n  }\n  \n  .card-header {\n    padding: 0.5rem 0.75rem;\n  }\n  \n  .card-content {\n    padding: 0.75rem;\n  }\n}\n</style>","import script from \"./CableViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CableViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./CableViewer.vue?vue&type=style&index=0&id=27b65a78&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-27b65a78\"]])\n\nexport default __exports__","<template>\n  <!-- Consent modal -->\n  <VueFinalModal v-model=\"showConsent\" :clickToClose=\"false\" :styles=\"modalStyles\">\n    <div class=\"modal-overlay\"></div>\n    <div class=\"modal-content\">\n      <!-- Show both languages -->\n      <div class=\"language-section\">\n        <h2>Einverständniserklärung zur Aufzeichnung</h2>\n        <p>\n          Im Rahmen einer Studie der TU Darmstadt wird dieses Dashboard evaluiert.\n          Dabei werden Ihre anonymisierten Interaktionen auf der Webseite mit dem Open-Source-Tool „OpenReplay\" aufgezeichnet, \n          um die Benutzbarkeit zu verbessern. Es werden keine IP-Adressen, Zeitstempel oder persönliche Daten gespeichert.\n          Sie können die Teilnahme jederzeit abbrechen. In diesem Fall werden alle erhobenen Daten (auch LimeSurvey und OpenReplay) gelöscht.\n          Ihre Einwilligung ist freiwillig und Sie können selbst entscheiden, ob Sie teilnehmen möchten.\n        </p>\n      </div>\n\n      <div class=\"language-section\">\n        <h2>Consent for Session Recording</h2>\n        <p>\n          As part of a study conducted by TU Darmstadt, this dashboard is being evaluated.\n          Your anonymized interactions on the site may be recorded using the open-source tool \"OpenReplay\" to help improve usability.\n          No IP addresses, timestamps, or personal data are stored. You may withdraw at any time and all collected data \n          (including LimeSurvey and OpenReplay) will be deleted. Your participation is voluntary and you decide whether to consent.\n        </p>\n      </div>\n\n      <div class=\"button-container\">\n        <button class=\"consent-button\" @click=\"acceptTracking\">\n          Einverstanden & Fortfahren / Accept & Continue\n        </button>\n        <button class=\"consent-button\" @click=\"declineTracking\">\n          Ablehnen / Decline\n        </button>\n      </div>\n    </div>\n  </VueFinalModal>\n\n  <!-- Existing functionality overview modal -->\n  <VueFinalModal v-model=\"show\" :clickToClose=\"false\" :styles=\"modalStyles\">\n    <div class=\"modal-overlay\" @click=\"closeModal\"></div>\n    <div class=\"modal-content\">\n      <h2>Welcome to an overview on the SDCS Dashboard!</h2>\n      <p>Below is a short summary of its core functionalities:</p>\n      <img src=\"../assets/functionality-overview.jpg\" class=\"screenshot\">\n      <ul class=\"functionality-list\">\n        <li><span class=\"step-number\">1</span> Click on <strong>Cable</strong> to view details…</li>\n        <li><span class=\"step-number\">2</span> Click on <strong>Landing Site</strong>…</li>\n        <li><span class=\"step-number\">3</span> Switch <strong>Layer / Overlay</strong>…</li>\n        <li><span class=\"step-number\">4</span> Use the <strong>Distance Measuring Tool</strong></li>\n        <li><span class=\"step-number\">5</span> Change language, source, or reopen overview</li>\n      </ul>\n      <button @click=\"closeModal\" class=\"close-button\">Close</button>\n    </div>\n  </VueFinalModal>\n</template>\n\n<script>\nimport { ref, onMounted, provide } from 'vue';\nimport { VueFinalModal } from 'vue-final-modal';\nimport Tracker from '@openreplay/tracker';\n\nexport default {\n  components: { VueFinalModal },\n  setup() {\n    const show = ref(false);\n    const showConsent = ref(false);\n    const hasConsented = ref(false);\n    const tracker = ref(null);\n\n    const initializeTracker = () => {\n tracker.value = new Tracker({\n  projectKey: 'ult5CxDyaNR1wM3DV71C',\n  privateMode: false,\n  canvas: { disableCanvas: false, useAnimationFrame: true, fileExt: 'webp' },\n  resourceBaseHref: 'https://ubiquitous-hummingbird-229317.netlify.app',\n});\n\n      \n      // Make it available to child components\n      provide('openreplay-tracker', tracker.value);\n      // Also keep it globally available for simplicity\n      window._trackerInstance = tracker.value;\n    };\n\n\n    const startTracker = () => {\n      if (tracker.value && !tracker.value.isActive()) {\n        try {\n          tracker.value.start();\n          console.log('[OpenReplay] Tracker started after consent');\n        } catch (error) {\n          console.error('[OpenReplay] Failed to start tracker:', error);\n        }\n      }\n    };\n\n    onMounted(() => {\n      initializeTracker();\n      \n      // Check for existing consent\n      const consent = localStorage.getItem('openreplay-consent');\n      if (consent === 'true') {\n        hasConsented.value = true;\n        startTracker();\n        show.value = true;\n      } else {\n        // Always show consent modal if not previously accepted\n        showConsent.value = true;\n      }\n    });\n\n    const acceptTracking = () => {\n      localStorage.setItem('openreplay-consent', 'true');\n      hasConsented.value = true;\n      showConsent.value = false;\n      startTracker();\n      show.value = true;\n    };\n\n    const declineTracking = () => {\n      localStorage.setItem('openreplay-consent', 'false');\n      hasConsented.value = false;\n      showConsent.value = false;\n      show.value = true;\n    };\n\n    const closeModal = () => {\n      show.value = false;\n    };\n\n    // Method to reset consent (useful for testing)\n    const resetConsent = () => {\n      localStorage.removeItem('openreplay-consent');\n      hasConsented.value = false;\n      showConsent.value = true;\n      show.value = false;\n      if (tracker.value && tracker.value.isActive()) {\n        tracker.value.stop();\n      }\n    };\n\n    const modalStyles = {\n      overlay: {\n        zIndex: 1000,\n      },\n      content: {\n        zIndex: 1001,\n      },\n    };\n\n    return {\n      show,\n      showConsent,\n      hasConsented,\n      acceptTracking,\n      declineTracking,\n      closeModal,\n      resetConsent,\n      modalStyles\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Your existing styles remain unchanged */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n}\n\n.modal-content {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 20px;\n  background: white;\n  border-radius: 5px;\n  z-index: 1001;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  border: 6px solid #48506a;\n  width: 65%;\n  justify-content: center;\n  align-items: center; \n}\n\n.language-section {\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.language-section:last-of-type {\n  border-bottom: none;\n}\n\n.screenshot{\n  top: 60%;\n  left: 60%;\n  width: 90%;\n  height: 'auto';\n}\n\n.functionality-list {\n  list-style: none;\n  padding: 0;\n  font-size: 14px;\n  line-height: 1.3;\n  padding-top: 20px;\n}\n\n.functionality-list li {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 6px;\n  word-break: break-word;\n}\n\n.step-number {\n  background-color: #697fc7;\n  color: white;\n  border-radius: 50%;\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  line-height: 24px;\n  text-align: center;\n  font-size: 12px;\n  margin-right: 10px;\n}\n\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  gap: 16px;\n  flex-wrap: wrap;\n}\n\n.consent-button {\n  flex: 1;\n  min-width: 200px;\n  padding: 12px 20px;\n  background-color: #697fc7;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  white-space: normal;\n  text-align: center;\n}\n\n.consent-button:hover {\n  background-color: #48506a;\n}\n\n.close-button {\n  width: 20%;\n  padding: 10px 25px;\n  background-color: #697fc7;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.close-button:hover {\n  background-color: #48506a;\n}\n\n.filler{\n  width: 400px\n}\n</style>","import { render } from \"./FunctionalityOverview.vue?vue&type=template&id=36006825&scoped=true\"\nimport script from \"./FunctionalityOverview.vue?vue&type=script&lang=js\"\nexport * from \"./FunctionalityOverview.vue?vue&type=script&lang=js\"\n\nimport \"./FunctionalityOverview.vue?vue&type=style&index=0&id=36006825&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-36006825\"]])\n\nexport default __exports__","<template>\n  <div class=\"cable-source-selector\">\n    <button @click=\"toggleDropdown\" class=\"select-button\">\n      Cable Source\n      <i :class=\"['arrow', isOpen ? 'up' : 'down']\"></i>\n    </button>\n    <div v-if=\"isOpen\" class=\"dropdown\">\n      <div \n        class=\"dropdown-item\" \n        @mouseenter=\"currentHoveredItem = 'Telegeography'\"\n        @mouseleave=\"currentHoveredItem = ''\"\n      >\n        <div class=\"source-container\">\n          <button \n            @click=\"selectSource('Telegeography')\"\n            :class=\"{active: selectedSource === 'Telegeography'}\"\n            class=\"dropdown-button\"\n          >\n            Telegeography\n          </button>\n          <div \n            class=\"info-icon-wrapper\"\n            :class=\"{\n              'hovered': currentHoveredItem === 'Telegeography',\n              'selected': selectedSource === 'Telegeography'\n            }\"\n          >\n            <span class=\"info-icon\">ℹ️\n              <span class=\"tooltip\">\n                Telegeography is a trusted dataset offering detailed information on global submarine cables, including routes, landing points, and technical specifications. It provides a comprehensive overview of the global connectivity infrastructure but may generalize details in certain regions, focusing more on a broad, worldwide perspective than localized precision.\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div \n        class=\"dropdown-item\"\n        @mouseenter=\"currentHoveredItem = 'Mixed Sources'\"\n        @mouseleave=\"currentHoveredItem = ''\"\n      >\n        <div class=\"source-container\">\n          <button \n            @click=\"selectSource('MixedSources')\"\n            :class=\"{active: selectedSource === 'MixedSources'}\"\n            class=\"dropdown-button\"\n          >\n            Mixed Sources\n          </button>\n          <div \n            class=\"info-icon-wrapper\"\n            :class=\"{\n              'hovered': currentHoveredItem === 'MixedSources',\n              'selected': selectedSource === 'MixedSources'\n            }\"\n          >\n            <span class=\"info-icon\">ℹ️\n              <span class=\"tooltip\">\n                Mixed Cable Source integrates cable data from OpenStreetMap, which sources much of its information from KIS-ORCA, which offers more accurate geodata for submarine cables, particularly around the British Isles and other European regions.\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport groupedCables from \"@/assets/groupedCables.json\";\n\nconst dataCablesStore = useDataCablesStore();\nconst selectedSource = ref(\"Telegeography\");\nconst isOpen = ref(false);\nconst originalCableData = ref([]);\nconst currentHoveredItem = ref(\"\");\n\nconst toggleDropdown = () => {\n  isOpen.value = !isOpen.value;\n};\n\nconst selectSource = (source) => {\n  selectedSource.value = source;\n  isOpen.value = false;\n  updateCableSource(source);\n};\n\nconst updateCableSource = async (source) => {\n  if (source === \"MixedSources\") {\n    if (originalCableData.value.length === 0) {\n      originalCableData.value = dataCablesStore.dataCables.map((cable) => ({\n        name: cable.name,\n        geoData: JSON.parse(JSON.stringify(cable.geoData)),\n      }));\n    }\n    updateMixedSourceCables();\n  } else {\n    if (originalCableData.value.length > 0) {\n      dataCablesStore.dataCables.forEach((cable) => {\n        const originalCable = originalCableData.value.find(\n          (orig) => orig.name === cable.name\n        );\n        if (originalCable) {\n          cable.geoData = originalCable.geoData;\n        }\n      });\n      originalCableData.value = [];\n    }\n    await dataCablesStore.initialize();\n  }\n};\n\nconst updateMixedSourceCables = () => {\n  dataCablesStore.dataCables.forEach((cable) => {\n    const mixedSourceCable = groupedCables.features.find(\n      (item) => item.properties.name === cable.name\n    );\n    if (mixedSourceCable) {\n      const geoData = [\n        mixedSourceCable.geometry.coordinates.map((segment) =>\n          segment.map((coord) => [coord[0], coord[1]])\n        ),\n      ];\n      cable.geoData = geoData;\n    }\n  });\n};\n</script>\n\n<style>\n.cable-source-selector {\n  background-color: #48506a;\n  position: absolute;\n  top: -80px;\n  left: 0px;\n  z-index: 1000;\n  color: #ffffff;\n}\n\n.arrow {\n  border: solid #ffffff;\n  color: #ffffff;\n  border-width: 0 2px 2px 0;\n  display: inline-block;\n  padding: 3px;\n  margin-left: 8px;\n}\n\n.down {\n  transform: rotate(45deg);\n  -webkit-transform: rotate(45deg);\n}\n\n.up {\n  transform: rotate(-135deg);\n  -webkit-transform: rotate(-135deg);\n}\n\n.dropdown {\n  position: absolute;\n  background-color: #48506a;\n  color: #ffffff;\n  border: none;\n  padding: 6px 0;\n  width: 100%;\n  z-index: 1;\n}\n\n.dropdown-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 3px 0;\n}\n\n.source-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.dropdown button {\n  width: 0px;\n  padding: 6px 6px;\n  text-align: left;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  color: #ffffff;\n  flex-grow: 1;\n}\n\n.dropdown button:hover,\n.dropdown button.active {\n  background-color: #697fc7;\n  color: #ffffff;\n}\n\n.info-icon-wrapper {\n  display: flex;\n  align-items: center;\n  padding: 4.5px;\n  height: 120%;\n  border-radius: 0px;\n}\n\n.info-icon-wrapper.hovered {\n  background-color: #697fc7;\n  height: 120%;\n}\n\n.info-icon-wrapper.selected {\n  background-color: #697fc7;\n  height: 120%;\n}\n\n.info-icon {\n  position: relative;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.info-icon .tooltip {\n  position: absolute;\n  top: 100%; /* Position below the icon */\n  left: 20px; /* Move tooltip to the left */\n  width: 300px; /* Fixed width for multi-line tooltip */\n  background-color: #333;\n  color: #ffffff;\n  border: none;\n  font-size: 12px;\n  padding: 10px;\n  border-radius: 4px;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.2s, opacity 0.2s;\n  z-index: 10;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n  white-space: normal; /* Allow text to wrap */\n  line-height: 1.4;\n}\n\n.info-icon:hover .tooltip {\n  visibility: visible;\n  opacity: 1;\n}\n</style>","import script from \"./CableSourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CableSourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CableSourceSelector.vue?vue&type=style&index=0&id=3a8800dc&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-add0aa80\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"drawing-controls\"\n}\nconst _hoisted_2 = { class: \"button-container\" }\nconst _hoisted_3 = [\"data-drawing-active\"]\nconst _hoisted_4 = [\"src\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"sample-points-control\"\n}\nconst _hoisted_6 = { class: \"dropdown-wrapper\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-label\" }, \"Analysis Detail\", -1))\nconst _hoisted_8 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"100\\\" data-v-add0aa80>Quick Scan</option><option value=\\\"500\\\" data-v-add0aa80>Standard Detail</option><option value=\\\"1000\\\" data-v-add0aa80>High Detail</option><option value=\\\"2000\\\" data-v-add0aa80>Very High Detail</option><option value=\\\"5000\\\" data-v-add0aa80>Ultra Detailed</option>\", 5)\nconst _hoisted_13 = [\n  _hoisted_8\n]\n\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport \"leaflet-draw/dist/leaflet.draw-src.css\";\nimport OceanDepthAnalyzer from './OceanDepthAnalyzer.vue';\n\n// Props for receiving map instance\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DrawingLayer',\n  props: {\n  mapInstance: {\n    type: Object,\n    required: true\n  },\n  oceanSelected: {\n    type: Boolean,\n    required: true\n  }\n},\n  setup(__props, { expose: __expose }) {\n\n  const props = __props;\n\nconst currentGeometry = ref<L.Layer | null>(null);\nconst drawControl = ref(null);\nconst drawnItemsLayer = ref(null);\nconst lastGeometry = ref<L.Layer | null>(null);\nconst drawnItems = ref([]);\nconst isDrawingModeActive = ref(false);\nconst isEditModeActive = ref(false);\nconst drawControlsInitialized = ref(false);\nconst samplePointCount = ref(100);\n\n// Initialize drawing layer\nonMounted(() => {\n  if (props.mapInstance) {\n    initializeDrawingControls();\n  }\n});\n\n// Cleanup when component is unmounted\nonUnmounted(() => {\n  if (props.mapInstance) {\n    removeMapEventListeners();\n    if (drawnItemsLayer.value) {\n      props.mapInstance.removeLayer(drawnItemsLayer.value);\n    }\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n  }\n});\n\nfunction removeMapEventListeners() {\n  props.mapInstance.off(L.Draw.Event.CREATED);\n  props.mapInstance.off(L.Draw.Event.DELETED);\n  props.mapInstance.off(L.Draw.Event.DRAWSTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTOP);\n  props.mapInstance.off(L.Draw.Event.EDITSTART);\n  props.mapInstance.off(L.Draw.Event.EDITSTOP);\n}\n\nwatch(() => props.mapInstance, (newMap) => {\n  if (newMap) {\n    initializeDrawingControls();\n  }\n});\n\nwatch(() => props.oceanSelected, (newValue) => {\n  if (!newValue) {\n    toggleDrawingMode(true);\n  }\n});\n\nfunction initializeDrawingControls() {\n  // Create a layer group for drawn items\n  drawnItemsLayer.value = new L.FeatureGroup();\n  props.mapInstance.addLayer(drawnItemsLayer.value);\n\n  // Configure drawing options\n  const drawOptions = {\n    draw: {\n      polyline: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false\n      },\n      polygon: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false,\n        showArea: true\n      },\n      rectangle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showArea: true\n      },\n      circle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showRadius: true\n      },\n      marker: {},\n      circlemarker: false,\n    },\n    edit: {\n      featureGroup: drawnItemsLayer.value,\n      remove: true\n    },\n    position: 'topleft',\n    className: 'custom-draw-toolbar'\n  };\n\n  // Create drawing control\n  drawControl.value = new L.Control.Draw(drawOptions);\n\n  // Event handlers for drawing\n  props.mapInstance.on(L.Draw.Event.CREATED, handleDrawCreated);\n  props.mapInstance.on(L.Draw.Event.DELETED, handleDrawDeleted);\n  props.mapInstance.on(L.Draw.Event.DRAWSTART, handleDrawStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTART, handleDeleteStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTOP, handleDeleteStop);\n  props.mapInstance.on(L.Draw.Event.EDITSTART, handleEditStart);\n  props.mapInstance.on(L.Draw.Event.EDITSTOP, handleEditStop);\n  \n  drawControlsInitialized.value = true;\n}\n\nfunction handleDeleteStart() {\n  isEditModeActive.value = true;\n  // Remove click handlers during delete mode\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      layer.off('click');\n    });\n  }\n  if (lastGeometry.value) {\n    lastGeometry.value.off('click');\n  }\n}\n\nfunction handleDeleteStop() {\n  isEditModeActive.value = false;\n  // Restore click handlers\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      setupClickHandler(layer);\n    });\n  }\n  if (lastGeometry.value && currentGeometry.value) {\n    setupClickHandler(lastGeometry.value, currentGeometry.value);\n  }\n}\n\nfunction handleEditStart() {\n  isEditModeActive.value = true;\n  // Remove last geometry highlight during edit mode\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleEditStop() {\n  isEditModeActive.value = false;\n  // Restore highlight if needed\n  if (currentGeometry.value) {\n    const highlightedLayer = createHighlightedLayer(currentGeometry.value);\n    if (highlightedLayer) {\n      lastGeometry.value = highlightedLayer;\n      props.mapInstance.addLayer(highlightedLayer);\n      setupClickHandler(highlightedLayer, currentGeometry.value);\n    }\n  }\n}\n\nfunction setupClickHandler(layer: L.Layer, targetLayer: L.Layer | null = null) {\n  if (!isEditModeActive.value) {\n    layer.on('click', (event) => {\n      if (!isEditModeActive.value) {\n        L.DomEvent.stopPropagation(event);\n        (targetLayer || layer).fire('click', event);\n      }\n    });\n  }\n}\n\nfunction toggleDrawingMode(fromWatcher) {\n  if (!fromWatcher) isDrawingModeActive.value = !isDrawingModeActive.value;\n  \n  if (isDrawingModeActive.value && !fromWatcher) {\n    props.mapInstance.addControl(drawControl.value);\n  } else if (!props.oceanSelected && isDrawingModeActive.value) {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n    isDrawingModeActive.value = !isDrawingModeActive.value;\n  } else {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n  }\n}\n\nfunction cleanupGeometries() {\n  currentGeometry.value = null;\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.clearLayers();\n  }\n  drawnItems.value = [];\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawStart() {\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawCreated(e) {\n  const layer = e.layer;\n  \n  setupClickHandler(layer);\n  drawnItemsLayer.value.addLayer(layer);\n  currentGeometry.value = layer;\n  \n  const highlightedLayer = createHighlightedLayer(layer);\n  if (highlightedLayer) {\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n    \n    lastGeometry.value = highlightedLayer;\n    setupClickHandler(highlightedLayer, layer);\n    drawnItemsLayer.value.addLayer(highlightedLayer);\n  }\n\n  const itemDetails = {\n    type: e.layerType,\n    coordinates: getLayerCoordinates(layer)\n  };\n  drawnItems.value.push(itemDetails);\n}\n\nfunction createHighlightedLayer(layer: L.Layer): L.Layer | null {\n  const highlightStyles = {\n    color: '#00ff00',\n    weight: 3,\n    opacity: 1,\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  };\n\n  if (layer instanceof L.Marker) {\n    return L.marker(layer.getLatLng(), {\n      icon: L.divIcon({\n        className: 'last-geometry-marker',\n        html: '<div style=\"background-color:#00ff00;width:20px;height:20px;border-radius:50%;border:2px solid #00ff00;\"></div>',\n        iconSize: [20, 20]\n      })\n    });\n  } else if (layer instanceof L.Polygon || layer instanceof L.Rectangle) {\n    const coords = layer.getLatLngs();\n    return L.polygon(coords, { ...highlightStyles, smoothFactor: 1, noClip: true });\n  } else if (layer instanceof L.Polyline) {\n    return L.polyline(layer.getLatLngs(), highlightStyles);\n  } else if (layer instanceof L.Circle) {\n    return L.circle(layer.getLatLng(), {\n      ...highlightStyles,\n      radius: layer.getRadius()\n    });\n  }\n  return null;\n}\n\nfunction handleDrawDeleted(e) {\n  const layers = e.layers;\n  \n  layers.eachLayer((layer) => {\n    const index = drawnItems.value.findIndex(item => \n      JSON.stringify(getLayerCoordinates(layer)) === JSON.stringify(item.coordinates)\n    );\n    if (index !== -1) {\n      drawnItems.value.splice(index, 1);\n    }\n    \n    if (currentGeometry.value === layer) {\n      currentGeometry.value = null;\n      if (lastGeometry.value) {\n        drawnItemsLayer.value.removeLayer(lastGeometry.value);\n        lastGeometry.value = null;\n      }\n    }\n  });\n}\n\nfunction getLayerCoordinates(layer: L.Layer | any) {\n  try {\n    if (layer instanceof L.Marker) {\n      return layer.getLatLng();\n    } else if (layer instanceof L.Polyline) {\n      return layer.getLatLngs();\n    } else if (layer instanceof L.Rectangle || layer instanceof L.Polygon) {\n      return layer.getBounds();\n    } else if (layer instanceof L.Circle) {\n      return {\n        center: layer.getLatLng(),\n        radius: layer.getRadius()\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error('Error getting layer coordinates:', error);\n    return null;\n  }\n}\n\n__expose({\n  isDrawingModeActive,\n  samplePointCount\n});\n  \nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (drawControlsInitialized.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (toggleDrawingMode(false))),\n              class: \"toggle-drawing-btn\",\n              \"data-drawing-active\": isDrawingModeActive.value\n            }, [\n              _createElementVNode(\"img\", {\n                src: require('@/assets/graphics/seadepth.png'),\n                alt: \"Drawing Toggle\",\n                class: \"drawing-icon\"\n              }, null, 8, _hoisted_4)\n            ], 8, _hoisted_3)\n          ]),\n          (isDrawingModeActive.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    id: \"samplePointCount\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((samplePointCount).value = $event)),\n                    class: \"dropdown\"\n                  }, _hoisted_13, 512), [\n                    [_vModelSelect, samplePointCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (currentGeometry.value)\n      ? (_openBlock(), _createBlock(OceanDepthAnalyzer, {\n          key: 1,\n          \"map-instance\": props.mapInstance,\n          \"drawn-geometry\": currentGeometry.value,\n          \"sample-point-count\": samplePointCount.value,\n          showPopup: true\n        }, null, 8, [\"map-instance\", \"drawn-geometry\", \"sample-point-count\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <div v-if=\"drawControlsInitialized\" class=\"drawing-controls\">\n      <div class=\"button-container\">\n        <button \n          @click=\"toggleDrawingMode(false)\" \n          class=\"toggle-drawing-btn\" \n          :data-drawing-active=\"isDrawingModeActive\"\n        >\n          <img :src=\"require('@/assets/graphics/seadepth.png')\" alt=\"Drawing Toggle\" class=\"drawing-icon\"/>\n        </button>\n      </div>\n      \n      <!-- Updated Sample Points Dropdown -->\n      <div v-if=\"isDrawingModeActive\" class=\"sample-points-control\">\n        <div class=\"dropdown-wrapper\">\n          <div class=\"dropdown-label\">Analysis Detail</div>\n          <select \n            id=\"samplePointCount\" \n            v-model=\"samplePointCount\" \n            class=\"dropdown\"\n          >\n            <option value=\"100\">Quick Scan</option>\n            <option value=\"500\">Standard Detail</option>\n            <option value=\"1000\">High Detail</option>\n            <option value=\"2000\">Very High Detail</option>\n            <option value=\"5000\">Ultra Detailed</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    \n    <OceanDepthAnalyzer \n      v-if=\"currentGeometry\"\n      :map-instance=\"props.mapInstance\"\n      :drawn-geometry=\"currentGeometry\"\n      :sample-point-count=\"samplePointCount\"\n      :showPopup=\"true\"\n    />\n  </div>\n</template>\n  \n  <script setup lang=\"ts\">\n  import { ref, onMounted, onUnmounted, watch } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport \"leaflet-draw/dist/leaflet.draw-src.css\";\nimport OceanDepthAnalyzer from './OceanDepthAnalyzer.vue';\n\n// Props for receiving map instance\nconst props = defineProps({\n  mapInstance: {\n    type: Object,\n    required: true\n  },\n  oceanSelected: {\n    type: Boolean,\n    required: true\n  }\n});\n\nconst currentGeometry = ref<L.Layer | null>(null);\nconst drawControl = ref(null);\nconst drawnItemsLayer = ref(null);\nconst lastGeometry = ref<L.Layer | null>(null);\nconst drawnItems = ref([]);\nconst isDrawingModeActive = ref(false);\nconst isEditModeActive = ref(false);\nconst drawControlsInitialized = ref(false);\nconst samplePointCount = ref(100);\n\n// Initialize drawing layer\nonMounted(() => {\n  if (props.mapInstance) {\n    initializeDrawingControls();\n  }\n});\n\n// Cleanup when component is unmounted\nonUnmounted(() => {\n  if (props.mapInstance) {\n    removeMapEventListeners();\n    if (drawnItemsLayer.value) {\n      props.mapInstance.removeLayer(drawnItemsLayer.value);\n    }\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n  }\n});\n\nfunction removeMapEventListeners() {\n  props.mapInstance.off(L.Draw.Event.CREATED);\n  props.mapInstance.off(L.Draw.Event.DELETED);\n  props.mapInstance.off(L.Draw.Event.DRAWSTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTOP);\n  props.mapInstance.off(L.Draw.Event.EDITSTART);\n  props.mapInstance.off(L.Draw.Event.EDITSTOP);\n}\n\nwatch(() => props.mapInstance, (newMap) => {\n  if (newMap) {\n    initializeDrawingControls();\n  }\n});\n\nwatch(() => props.oceanSelected, (newValue) => {\n  if (!newValue) {\n    toggleDrawingMode(true);\n  }\n});\n\nfunction initializeDrawingControls() {\n  // Create a layer group for drawn items\n  drawnItemsLayer.value = new L.FeatureGroup();\n  props.mapInstance.addLayer(drawnItemsLayer.value);\n\n  // Configure drawing options\n  const drawOptions = {\n    draw: {\n      polyline: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false\n      },\n      polygon: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false,\n        showArea: true\n      },\n      rectangle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showArea: true\n      },\n      circle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showRadius: true\n      },\n      marker: {},\n      circlemarker: false,\n    },\n    edit: {\n      featureGroup: drawnItemsLayer.value,\n      remove: true\n    },\n    position: 'topleft',\n    className: 'custom-draw-toolbar'\n  };\n\n  // Create drawing control\n  drawControl.value = new L.Control.Draw(drawOptions);\n\n  // Event handlers for drawing\n  props.mapInstance.on(L.Draw.Event.CREATED, handleDrawCreated);\n  props.mapInstance.on(L.Draw.Event.DELETED, handleDrawDeleted);\n  props.mapInstance.on(L.Draw.Event.DRAWSTART, handleDrawStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTART, handleDeleteStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTOP, handleDeleteStop);\n  props.mapInstance.on(L.Draw.Event.EDITSTART, handleEditStart);\n  props.mapInstance.on(L.Draw.Event.EDITSTOP, handleEditStop);\n  \n  drawControlsInitialized.value = true;\n}\n\nfunction handleDeleteStart() {\n  isEditModeActive.value = true;\n  // Remove click handlers during delete mode\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      layer.off('click');\n    });\n  }\n  if (lastGeometry.value) {\n    lastGeometry.value.off('click');\n  }\n}\n\nfunction handleDeleteStop() {\n  isEditModeActive.value = false;\n  // Restore click handlers\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      setupClickHandler(layer);\n    });\n  }\n  if (lastGeometry.value && currentGeometry.value) {\n    setupClickHandler(lastGeometry.value, currentGeometry.value);\n  }\n}\n\nfunction handleEditStart() {\n  isEditModeActive.value = true;\n  // Remove last geometry highlight during edit mode\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleEditStop() {\n  isEditModeActive.value = false;\n  // Restore highlight if needed\n  if (currentGeometry.value) {\n    const highlightedLayer = createHighlightedLayer(currentGeometry.value);\n    if (highlightedLayer) {\n      lastGeometry.value = highlightedLayer;\n      props.mapInstance.addLayer(highlightedLayer);\n      setupClickHandler(highlightedLayer, currentGeometry.value);\n    }\n  }\n}\n\nfunction setupClickHandler(layer: L.Layer, targetLayer: L.Layer | null = null) {\n  if (!isEditModeActive.value) {\n    layer.on('click', (event) => {\n      if (!isEditModeActive.value) {\n        L.DomEvent.stopPropagation(event);\n        (targetLayer || layer).fire('click', event);\n      }\n    });\n  }\n}\n\nfunction toggleDrawingMode(fromWatcher) {\n  if (!fromWatcher) isDrawingModeActive.value = !isDrawingModeActive.value;\n  \n  if (isDrawingModeActive.value && !fromWatcher) {\n    props.mapInstance.addControl(drawControl.value);\n  } else if (!props.oceanSelected && isDrawingModeActive.value) {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n    isDrawingModeActive.value = !isDrawingModeActive.value;\n  } else {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n  }\n}\n\nfunction cleanupGeometries() {\n  currentGeometry.value = null;\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.clearLayers();\n  }\n  drawnItems.value = [];\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawStart() {\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawCreated(e) {\n  const layer = e.layer;\n  \n  setupClickHandler(layer);\n  drawnItemsLayer.value.addLayer(layer);\n  currentGeometry.value = layer;\n  \n  const highlightedLayer = createHighlightedLayer(layer);\n  if (highlightedLayer) {\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n    \n    lastGeometry.value = highlightedLayer;\n    setupClickHandler(highlightedLayer, layer);\n    drawnItemsLayer.value.addLayer(highlightedLayer);\n  }\n\n  const itemDetails = {\n    type: e.layerType,\n    coordinates: getLayerCoordinates(layer)\n  };\n  drawnItems.value.push(itemDetails);\n}\n\nfunction createHighlightedLayer(layer: L.Layer): L.Layer | null {\n  const highlightStyles = {\n    color: '#00ff00',\n    weight: 3,\n    opacity: 1,\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  };\n\n  if (layer instanceof L.Marker) {\n    return L.marker(layer.getLatLng(), {\n      icon: L.divIcon({\n        className: 'last-geometry-marker',\n        html: '<div style=\"background-color:#00ff00;width:20px;height:20px;border-radius:50%;border:2px solid #00ff00;\"></div>',\n        iconSize: [20, 20]\n      })\n    });\n  } else if (layer instanceof L.Polygon || layer instanceof L.Rectangle) {\n    const coords = layer.getLatLngs();\n    return L.polygon(coords, { ...highlightStyles, smoothFactor: 1, noClip: true });\n  } else if (layer instanceof L.Polyline) {\n    return L.polyline(layer.getLatLngs(), highlightStyles);\n  } else if (layer instanceof L.Circle) {\n    return L.circle(layer.getLatLng(), {\n      ...highlightStyles,\n      radius: layer.getRadius()\n    });\n  }\n  return null;\n}\n\nfunction handleDrawDeleted(e) {\n  const layers = e.layers;\n  \n  layers.eachLayer((layer) => {\n    const index = drawnItems.value.findIndex(item => \n      JSON.stringify(getLayerCoordinates(layer)) === JSON.stringify(item.coordinates)\n    );\n    if (index !== -1) {\n      drawnItems.value.splice(index, 1);\n    }\n    \n    if (currentGeometry.value === layer) {\n      currentGeometry.value = null;\n      if (lastGeometry.value) {\n        drawnItemsLayer.value.removeLayer(lastGeometry.value);\n        lastGeometry.value = null;\n      }\n    }\n  });\n}\n\nfunction getLayerCoordinates(layer: L.Layer | any) {\n  try {\n    if (layer instanceof L.Marker) {\n      return layer.getLatLng();\n    } else if (layer instanceof L.Polyline) {\n      return layer.getLatLngs();\n    } else if (layer instanceof L.Rectangle || layer instanceof L.Polygon) {\n      return layer.getBounds();\n    } else if (layer instanceof L.Circle) {\n      return {\n        center: layer.getLatLng(),\n        radius: layer.getRadius()\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error('Error getting layer coordinates:', error);\n    return null;\n  }\n}\n\ndefineExpose({\n  isDrawingModeActive,\n  samplePointCount\n});\n  </script>\n  \n  <style scoped>\n.drawing-controls {\n  position: absolute;\n  bottom: 130px;\n  left: 0px;\n  z-index: 1000;\n  display: flex;\n  gap: 0.5rem;\n  height: 48px;\n}\n\n.button-container {\n  height: 48px;\n  flex-shrink: 0;\n  margin-top: 12px;\n  margin-left: 10px;\n}\n\n.toggle-drawing-btn {\n  background: #48506a;\n  padding: 0;\n  cursor: pointer;\n  border: 1px solid #ccc;\n  border-radius: 12px;\n  height: 48px;\n  width: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.toggle-drawing-btn:hover {\n  background: #697fc7;\n}\n\n.toggle-drawing-btn[data-drawing-active=\"true\"] {\n  background: #697fc7;\n}\n\n.drawing-icon {\n  width: 48px;\n  height: 48px;\n  padding: 4px;\n}\n\n.sample-points-control {\n  align-self: center;\n}\n\n.dropdown-wrapper {\n  background: #48506a;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  width: 155px; /* Adjust width as needed */\n}\n\n.dropdown-label {\n  color: white;\n  font-size: 0.9rem;\n  padding: 0.5rem;\n  background: #2e3547;\n  border-bottom: 1px solid #ccc;\n  text-align: center;\n}\n\n.dropdown {\n  background-color: #48506a;\n  color: white;\n  border: none;\n  padding: 0.5rem;\n  cursor: pointer;\n  width: 100%;\n  text-align: center;\n}\n\n.dropdown:hover {\n  background-color: #697fc7;\n}\n\n.custom-draw-toolbar {\n  margin-top: 50px;\n  left: 200px;\n}\n\n.leaflet-draw-toolbar {\n  background-color: #48506a !important;\n}\n\n.leaflet-top.leaflet-draw-toolbar {\n  left: 200px !important;\n}\n</style>","import script from \"./DrawingLayer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DrawingLayer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./DrawingLayer.vue?vue&type=style&index=0&id=add0aa80&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-add0aa80\"]])\n\nexport default __exports__","<template>\n  <div class=\"timeline-slider\">\n    <div class=\"timeline\" ref=\"timeline\" @mousemove=\"updateHoverPosition\" @mouseleave=\"hideHoverEffect\">\n      <div class=\"hover-effect\" :style=\"hoverEffectStyle\">\n        <div class=\"hover-line\"></div>\n      </div>\n      <div class=\"slider left\" :style=\"{ left: leftPosition + '%' }\" @mousedown=\"startDrag('left', $event)\" @mouseover=\"showTooltip('left')\" @mouseout=\"hideTooltip('left')\">\n        <div v-if=\"showLeftTooltip\" class=\"slider-tooltip\">{{ formatDate(currentStartDate) }}</div>\n      </div>\n      <div class=\"slider right\" :style=\"{ left: rightPosition + '%' }\" @mousedown=\"startDrag('right', $event)\" @mouseover=\"showTooltip('right')\" @mouseout=\"hideTooltip('right')\">\n        <div v-if=\"showRightTooltip\" class=\"slider-tooltip\">{{ formatDate(currentEndDate) }}</div>\n      </div>\n      <div class=\"selected-range\" :style=\"{ left: leftPosition + '%', width: (rightPosition - leftPosition) + '%' }\"></div>\n      <div v-for=\"(marker, index) in timelineMarkers\" :key=\"index\" class=\"timeline-marker\" :style=\"{ left: marker.position + '%' }\">{{ marker.label }}</div>\n      <div v-for=\"(event, index) in visibleEvents\" :key=\"'event-' + index\" class=\"event-bar\" :style=\"getEventBarStyle(event)\" @mouseover=\"showEventTooltip(event, $event)\" @mouseout=\"hideEventTooltip\" @mouseenter=\"emitEventHover(event)\"></div>\n      <div v-for=\"(line, index) in interEventLines\" :key=\"'line-' + index\" class=\"inter-event-line\" :style=\"getInterEventLineStyle(line)\" @mousemove=\"handleLineHover(line, $event)\"></div>\n    </div>\n    <div v-if=\"isEventTooltipVisible\" class=\"event-tooltip\" :style=\"eventTooltipStyle\">{{ eventTooltipContent }}</div>\n    <div class=\"date-range-display\">Selected Range: {{ formatDate(currentStartDate) }} - {{ formatDate(currentEndDate) }}</div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue';\n\nconst props = defineProps({\n  events: { type: Array, default: () => [] },\n  startDate: Date,\n  endDate: Date,\n});\n\nconst emit = defineEmits(['update:startDate', 'update:endDate', 'eventHover', 'eventLeave', 'interEventHover']);\n\nconst timeline = ref(null);\nconst leftPosition = ref(10);\nconst rightPosition = ref(90);\nconst hoverPosition = ref(null);\nconst currentStartDate = ref(new Date());\nconst currentEndDate = ref(new Date());\nconst minDate = ref(new Date('2000-01-01'));\nconst maxDate = ref(new Date(new Date().setMonth(new Date().getMonth() + 6)));\nconst visibleRangeStart = ref(new Date());\nconst visibleRangeEnd = ref(new Date());\nconst showLeftTooltip = ref(false);\nconst showRightTooltip = ref(false);\nconst eventTooltipContent = ref('');\nconst eventTooltipStyle = ref({});\n\nconst initializeDates = () => {\n  const now = new Date();\n  const oneYearAgo = new Date(now.getFullYear() - 1, now.getMonth(), now.getDate());\n  visibleRangeEnd.value = new Date(now.getFullYear(), now.getMonth() + 2, now.getDate());\n  visibleRangeStart.value = new Date(oneYearAgo.getFullYear(), oneYearAgo.getMonth() - 2, oneYearAgo.getDate());\n\n  // Set initial slider positions\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n\n  // Calculate initial dates based on slider positions\n  updateDates('left', true);\n  updateDates('right', true);\n};\n\nwatch(() => props.startDate, (startDate) => {\n  currentStartDate.value = startDate;\n  adjustVisibleRange();\n  emit('update:startDate', currentStartDate.value);\n});\n\nwatch(() => props.endDate, (endDate) => {\n  currentEndDate.value = endDate;\n  adjustVisibleRange();\n  emit('update:endDate', currentEndDate.value);\n});\n\nconst updateHoverPosition = (event) => {\n  const timelineRect = timeline.value.getBoundingClientRect();\n  hoverPosition.value = ((event.clientX - timelineRect.left) / timelineRect.width) * 100;\n  \n  // Find any event at this hover position\n  const hoveredEvent = visibleEvents.value.find(event => {\n    return hoverPosition.value >= event.startPosition && hoverPosition.value <= event.endPosition;\n  });\n  \n  if (hoveredEvent) {\n    // Use the existing emitEventHover function\n    emitEventHover(hoveredEvent);\n    showEventTooltip(hoveredEvent, event);\n  } else {\n    hideEventTooltip();\n  }\n  \n  // Find any inter-event line at this hover position\n  const hoveredLine = interEventLines.value.find(line => {\n    return hoverPosition.value >= line.start && hoverPosition.value <= line.end;\n  });\n  \n  if (hoveredLine) {\n    handleLineHover(hoveredLine, event);\n  }\n};\n\nconst hideHoverEffect = () => {\n  hoverPosition.value = null;\n  hideEventTooltip();\n};\n\nconst hoverEffectStyle = computed(() => {\n  if (hoverPosition.value === null) {\n    return { display: 'none' };\n  }\n  \n  // Check if hover position overlaps with any event or inter-event line\n  const hoveredEvent = visibleEvents.value.find(event => {\n    return hoverPosition.value >= event.startPosition && hoverPosition.value <= event.endPosition;\n  });\n  \n  const hoveredLine = interEventLines.value.find(line => {\n    return hoverPosition.value >= line.start && hoverPosition.value <= line.end;\n  });\n  \n  return {\n    left: `${hoverPosition.value}%`,\n    display: 'block',\n    backgroundColor: (hoveredEvent || hoveredLine) ? 'rgba(255, 255, 255, 0.5)' : 'rgba(255, 255, 255, 0.2)'\n  };\n});\n\nconst visibleEvents = computed(() => {\n  const { start, end, timeRange } = extendedVisibleRangeForEvents.value;\n  return props.events.map(event => {\n    const startDate = new Date(event.start);\n    const endDate = new Date(event.end);\n    const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n    let startPosition = ((startDate.getTime() - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    let endPosition = ((endDate.getTime() - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    startPosition = Math.max(0, Math.min(startPosition, 100));\n    endPosition = Math.max(0, Math.min(endPosition, 100));\n    return { ...event, startPosition, endPosition };\n  }).filter(event => {\n    const eventStart = new Date(event.start);\n    const eventEnd = new Date(event.end);\n    return eventStart <= end && eventEnd >= start;\n  });\n});\n\nconst emitEventHover = (event) => {\n  emit('eventHover', event);\n};\n\nconst timelineMarkers = computed(() => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  const leftSliderTime = currentStartDate.value.getTime();\n  const rightSliderTime = currentEndDate.value.getTime();\n  const selectedTimeRange = rightSliderTime - leftSliderTime;\n  const dayInMs = 24 * 60 * 60 * 1000;\n  const monthInMs = 30 * dayInMs;\n  const yearInMs = 365 * dayInMs;\n\n  let interval, format;\n  if (selectedTimeRange <= 30 * dayInMs) {\n    interval = dayInMs;\n    format = 'day';\n  } else if (selectedTimeRange <= 1.5 * yearInMs) {\n    interval = monthInMs;\n    format = 'month';\n  } else {\n    interval = yearInMs;\n    format = 'year';\n  }\n\n  const markers = [];\n  // Subtract 10 days from the visible range start\n  let current = new Date(visibleRangeStart.value.getTime() - 10 * dayInMs);\n\n  while (current.getTime() <= visibleRangeEnd.value.getTime()) {\n    const currentTime = current.getTime();\n    const position = ((currentTime - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    const closeToSlider = Math.abs(position - leftPosition.value) < 5 || Math.abs(position - rightPosition.value) < 5;\n    if (position >= 0 && position <= 100) {\n      let label;\n      switch (format) {\n        case 'day':\n          label = current.getDate().toString();\n          break;\n        case 'month':\n          label = current.toLocaleString('default', { month: 'short' });\n          if (current.getMonth() === 0) {\n            label = `${label}\\n${current.getFullYear()}`;\n          }\n          break;\n        case 'year':\n          label = current.getFullYear().toString();\n          break;\n      }\n      markers.push({ position, label, isFixed: false });\n    }\n    current = new Date(current.getTime() + interval);\n  }\n\n  //markers.push({ position: leftPosition.value, label: formatDate(currentStartDate.value), isFixed: true });\n  //markers.push({ position: rightPosition.value, label: formatDate(currentEndDate.value), isFixed: true });\n\n  return markers.sort((a, b) => a.position - b.position);\n});\n\nconst formatDate = (date) => {\n  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\n};\n\nconst getEventBarStyle = (event) => {\n  return { left: `${event.startPosition}%`, width: `${event.endPosition - event.startPosition}%`, backgroundColor: '#007bff' };\n};\n\nconst isEventTooltipVisible = ref(false);\nconst showEventTooltip = (event, e) => {\n  const startDate = new Date(event.start);\n  const endDate = new Date(event.end);\n  eventTooltipContent.value = `${formatDate(startDate)} - ${formatDate(endDate)}`;\n  \n  if (e) {\n    eventTooltipStyle.value = {\n      left: `${e.clientX}px`,\n      top: `${e.clientY - 30}px`\n    };\n  }\n  \n  isEventTooltipVisible.value = true;\n};\n\nconst hideEventTooltip = () => {\n  isEventTooltipVisible.value = false;\n};\n\nconst interEventLines = computed(() => {\n  const lines = [];\n  const sortedEvents = [...visibleEvents.value].sort((a, b) => new Date(a.start) - new Date(b.start));\n  for (let i = 0; i < sortedEvents.length - 1; i++) {\n    const currentEvent = sortedEvents[i];\n    const nextEvent = sortedEvents[i + 1];\n    if (new Date(nextEvent.start) > new Date(currentEvent.end)) {\n      lines.push({ start: currentEvent.endPosition, end: nextEvent.startPosition, startEvent: currentEvent, endEvent: nextEvent });\n    }\n  }\n  return lines;\n});\n\nconst getInterEventLineStyle = (line) => {\n  const start = Math.min(line.start, line.end);\n  const end = Math.max(line.start, line.end);\n  return { left: `${start}%`, width: `${end - start}%`, backgroundColor: '#48506a', height: '8px', top: 'calc(50% - 4px)' };\n};\n\nconst handleLineHover = (line, event) => {\n  try {\n    const timelineRect = timeline.value.getBoundingClientRect();\n    \n    // Calculate position along the line\n    const lineStart = line.start;\n    const lineEnd = line.end;\n    const lineWidth = lineEnd - lineStart;\n    const position = (hoverPosition.value - lineStart) / lineWidth;\n    const normalizedPosition = Math.max(0, Math.min(1, position));\n    \n    const startTime = new Date(line.startEvent.end).getTime();\n    const endTime = new Date(line.endEvent.start).getTime();\n    const interpolatedTime = startTime + (endTime - startTime) * normalizedPosition;\n    \n    const startLat = line.startEvent.position?.lat ?? 0;\n    const endLat = line.endEvent.position?.lat ?? 0;\n    const interpolatedLat = startLat + (endLat - startLat) * normalizedPosition;\n    \n    const startLon = line.startEvent.position?.lon ?? 0;\n    const endLon = line.endEvent.position?.lon ?? 0;\n    const interpolatedLon = startLon + (endLon - startLon) * normalizedPosition;\n    \n    emit('interEventHover', {\n      time: new Date(interpolatedTime),\n      position: {\n        lat: interpolatedLat,\n        lon: interpolatedLon\n      },\n      startEvent: line.startEvent,\n      endEvent: line.endEvent\n    });\n  } catch (error) {\n    console.error('Error in handleLineHover:', error);\n  }\n};\nconst startDrag = (slider, event) => {\n  event.preventDefault();\n  const initialX = event.clientX;\n  const initialLeft = leftPosition.value;\n  const initialRight = rightPosition.value;\n  const timelineRect = timeline.value.getBoundingClientRect();\n\n  const move = (e) => {\n    const deltaX = e.clientX - initialX;\n    const deltaPct = (deltaX / timelineRect.width) * 100;\n    if (slider === 'left') {\n      if (leftPosition.value <= 10) {\n        extendVisibleRange('left', deltaX);\n      }\n      leftPosition.value = Math.max(0, Math.min(initialLeft + deltaPct, rightPosition.value - 1));\n    } else {\n      if (rightPosition.value >= 90) {\n        extendVisibleRange('right', deltaX);\n      }\n      rightPosition.value = Math.max(leftPosition.value + 1, Math.min(initialRight + deltaPct, 100));\n    }\n  };\n\n  const stop = () => {\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', stop);\n    updateDates(slider, true);\n    adjustVisibleRange();\n    resetSliderPositions();\n  };\n\n  window.addEventListener('mousemove', move);\n  window.addEventListener('mouseup', stop);\n};\n\nconst extendedVisibleRangeForEvents = computed(() => {\n  const start = new Date(visibleRangeStart.value);\n  const end = new Date(visibleRangeEnd.value);\n  start.setMonth(start.getMonth() - 4);\n  end.setMonth(end.getMonth() + 4);\n  return { start, end, timeRange: end.getTime() - start.getTime() };\n});\n\nconst extendVisibleRange = (direction, distanceDragged) => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  const expansionFactor = 0.0001;\n  if (direction === 'left') {\n    const newVisibleStart = new Date(visibleRangeStart.value.getTime() - visibleTimeRange * Math.abs(distanceDragged) * expansionFactor);\n    visibleRangeStart.value = new Date(Math.max(newVisibleStart, minDate.value));\n    leftPosition.value = 10;\n    const leftTime = visibleRangeStart.value.getTime() + (leftPosition.value / 100) * visibleTimeRange;\n    currentStartDate.value = new Date(Math.max(leftTime, minDate.value.getTime()));\n  } else {\n    const newVisibleEnd = new Date(visibleRangeEnd.value.getTime() + visibleTimeRange * Math.abs(distanceDragged) * expansionFactor);\n    visibleRangeEnd.value = new Date(Math.min(newVisibleEnd, maxDate.value));\n    rightPosition.value = 90;\n    const rightTime = visibleRangeEnd.value.getTime() + (rightPosition.value / 100) * visibleTimeRange;\n    currentEndDate.value = new Date(Math.min(rightTime, maxDate.value.getTime()));\n  }\n  updateDates(direction, false);\n};\n\nconst updateDates = (slider, emitValue) => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  if (slider === 'left') {\n    const leftTime = visibleRangeStart.value.getTime() + (leftPosition.value / 100) * visibleTimeRange *0.835;\n    currentStartDate.value = new Date(Math.max(leftTime, minDate.value.getTime()));\n    if (emitValue) emit('update:startDate', currentStartDate.value);\n  } else {\n    const rightTime = visibleRangeStart.value.getTime() + (rightPosition.value / 100) * visibleTimeRange * 1.019;\n    currentEndDate.value = new Date(Math.min(rightTime, maxDate.value.getTime()));\n    if (emitValue) emit('update:endDate', currentEndDate.value);\n  }\n};\n\nconst adjustVisibleRange = () => {\n  const newVisibleStart = new Date(currentStartDate.value);\n  const newVisibleEnd = new Date(currentEndDate.value);\n  const visibleTimeRange = newVisibleEnd.getTime() - newVisibleStart.getTime();\n  newVisibleStart.setTime(newVisibleStart.getTime() - visibleTimeRange * 0.1);\n  newVisibleEnd.setTime(newVisibleEnd.getTime() + visibleTimeRange * 0.1);\n  visibleRangeStart.value = new Date(Math.max(newVisibleStart, minDate.value));\n  visibleRangeEnd.value = new Date(Math.min(newVisibleEnd, maxDate.value));\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n};\n\nconst resetSliderPositions = () => {\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n};\n\nconst showTooltip = (slider) => {\n  if (slider === 'left') {\n    showLeftTooltip.value = true;\n  } else {\n    showRightTooltip.value = true;\n  }\n};\n\nconst hideTooltip = (slider) => {\n  if (slider === 'left') {\n    showLeftTooltip.value = false;\n  } else {\n    showRightTooltip.value = false;\n  }\n};\n\nconst initializePositions = () => {\n  leftPosition.value = 0;\n  rightPosition.value = 100;\n};\n\nonMounted(() => {\n  initializeDates();\n  initializePositions();\n  adjustVisibleRange();\n});\n\nwatch(() => props.dataPoints, () => {\n  initializeDates();\n}, { deep: true });\n</script>\n\n<style scoped>\n.timeline-slider {\n  width: 100%;\n  padding: 20px;\n  user-select: none;\n  touch-action: none;\n}\n\n.timeline {\n  position: relative;\n  height: 30px;\n  width: 100%;\n  background-color: #ddd;\n  margin-bottom: 20px;\n  border-radius: 20px;\n}\n\n.inter-event-line {\n  position: absolute;\n  height: 8px;\n  background-color: red;\n  top: calc(50% - 4px);\n  z-index: 10;\n}\n\n.event-bar {\n  position: absolute;\n  height: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: #007bff;\n  opacity: 0.7;\n  border-radius: 10px;\n  z-index: 2;\n}\n\n.slider {\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  background-color: #48506a;\n  border: 3px solid #007bff;\n  border-radius: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.selected-range {\n  position: absolute;\n  height: 100%;\n  background-color: #007bff;\n  opacity: 0.5;\n  border-radius: 20px;\n  z-index: 1;\n}\n\n.timeline-marker {\n  position: absolute;\n  top: 100%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  color: #ffff;\n  text-align: center;\n  white-space: pre-line;\n}\n\n.timeline-marker::before {\n  content: '';\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 2px;\n  height: 20px;\n  background-color: #48506a;\n}\n\n.slider-tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 10px;\n}\n\n.debug-info {\n  position: absolute;\n  bottom: -30px;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px;\n  font-size: 12px;\n  z-index: 1002;\n}\n\n.tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 10px;\n}\n\n.event-tooltip {\n  position: fixed;\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1000;\n  pointer-events: none;\n}\n\n.hover-effect {\n  position: absolute;\n  top: 0;\n  width: 20px;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  transform: translateX(-50%);\n  pointer-events: none;\n  z-index: 10;\n}\n\n.hover-line {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 1px;\n  height: 100%;\n  background-color: white;\n  transform: translateX(-50%);\n}\n\n.date-range-display {\n  text-align: center;\n  margin-top: 35px;\n  font-size: 14px;\n  color: #fff;\n}\n</style>\n\n<style scoped>\n.timeline-slider {\n  width: 100%;\n  padding: 20px;\n  user-select: none;\n  touch-action: none;\n}\n\n.timeline {\n  position: relative;\n  height: 30px;\n  width: 100%;\n  background-color: #ddd;\n  margin-bottom: 20px;\n  border-radius: 20px;\n}\n\n.inter-event-line {\n  position: absolute;\n  height: 8px;\n  background-color: red;\n  top: calc(50% - 4px);\n  z-index: 10;\n}\n\n.event-bar {\n  position: absolute;\n  height: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: #007bff;\n  opacity: 0.7;\n  border-radius: 10px;\n  z-index: 2;\n}\n\n.slider {\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  background-color: #48506a;\n  border: 3px solid #007bff;\n  border-radius: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.selected-range {\n  position: absolute;\n  height: 100%;\n  background-color: #007bff;\n  opacity: 0.5;\n  border-radius: 20px;\n  z-index: 1;\n}\n\n.timeline-marker {\n  position: absolute;\n  top: 100%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  color: #ffff;\n  text-align: center;\n  white-space: pre-line;\n}\n\n.timeline-marker::before {\n  content: '';\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 2px;\n  height: 20px;\n  background-color: #48506a;\n}\n\n.slider-tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 10px;\n}\n\n.debug-info {\n  position: absolute;\n  bottom: -30px;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px;\n  font-size: 12px;\n  z-index: 1002;\n}\n\n.tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 10px;\n}\n\n.event-tooltip {\n  position: fixed;\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1000;\n  pointer-events: none;\n}\n\n.hover-effect {\n  position: absolute;\n  top: 0;\n  width: 20px;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  transform: translateX(-50%);\n  pointer-events: none;\n  z-index: 10;\n}\n\n.hover-line {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 1px;\n  height: 100%;\n  background-color: white;\n  transform: translateX(-50%);\n}\n\n.date-range-display {\n  text-align: center;\n  margin-top: 35px;\n  font-size: 14px;\n  color: #fff;\n}\n</style>","import script from \"./TimelineSlider.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimelineSlider.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TimelineSlider.vue?vue&type=style&index=0&id=0763002f&scoped=true&lang=css\"\nimport \"./TimelineSlider.vue?vue&type=style&index=1&id=0763002f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0763002f\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, createBlock as _createBlock, withModifiers as _withModifiers, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e3bbcfc\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"tracking-controls\" }\nconst _hoisted_2 = { class: \"date-picker-container\" }\n\nimport { ref, watch, computed, nextTick, PropType, onMounted, onUnmounted } from 'vue';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport TimelineSlider from './TimelineSlider.vue';\nimport vesselIds from \"@/assets/vesselIds.json\";\nimport translations from \"@/assets/translations/translations.json\";\nimport { useDataCablesStore } from '@/store/datacables';\n\nconst interpolationInterval = 3600000;\n\nconst format = 'dd/MM/yyyy';\n\nconst vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'VesselTracking',\n  props: {\n  mapInstance: { type: Object as PropType<L.Map>, required: true },\n  currentLanguage: { type: String, required: true },\n  cableStore: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  layerGroup: { type: Object, required: true },\n  mapReady: { type: Boolean, required: true },\n  vesselPositions: { type: Array as PropType<any[]>, default: () => [] },\n},\n  emits: [\n  'update:vesselPositions',\n  'update:hoveredMarker',\n  'update:viewingVesselTrack'\n],\n  setup(__props, { expose: __expose, emit: __emit }) {\n\nconst cableStore = useDataCablesStore();\n\nconst props = __props;\n\nconst emit = __emit;\n\nconst isSearchSelected = ref(false);\nconst timelineContainerStyle = computed(() => {\n  if (!props.mapInstance) return {};\n  \n  const mapBounds = props.mapInstance.getContainer().getBoundingClientRect();\n  return {\n    width: `${mapBounds.width}px`,\n    left: isSearchSelected.value ? `${mapBounds.left}px` : '0'\n  };\n});\n\nconst localVesselPositions = ref(props.vesselPositions ? [...props.vesselPositions] : []);\nconst vesselLayerReady = ref(false);\nconst vesselPostResponse = ref(null);\nconst vesselModifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{y}/{x}.png');\nconst isVesselTrackingMode = ref(false);\nconst vesselTrackingSelected = ref(false);\nconst vesselEvents = ref([]);\nconst hoveredMarker = ref();\nconst currentTrackedVessel = ref(null);\nconst vesselTrackLayer = ref(null);\n\nconst interpolatedEvents = ref([]);\nconst currentTranslations = computed(() => translations[props.currentLanguage]);\n\nwatch(() => props.vesselPositions, (newPositions) => {\n  if (newPositions) {\n    localVesselPositions.value = [...newPositions];\n  }\n}, { deep: true });\n\nwatch(() => props.mapReady, (newValue) => {\n  vesselTracking();\n})\n\nconst isValidCoordinate = (lat, lon) => {\n  return lat !== undefined && lon !== undefined && \n         !isNaN(lat) && !isNaN(lon) &&\n         lat >= -90 && lat <= 90 && lon >= -180 && lon <= 180;\n};\n\nconst dateRange = ref<[Date, Date]>([\n  new Date(new Date().setMonth(new Date().getMonth() - 1)), \n  new Date()\n]);\n\nconst onDatePickerChange = (selectedDates: [Date, Date]) => {\n  if (selectedDates && selectedDates.length === 2) {\n    startDate.value = selectedDates[0];\n    endDate.value = selectedDates[1];\n  }\n};\nwatch([startDate, endDate], () => {\n  dateRange.value = [startDate.value, endDate.value];\n});\n\nconst interpolatePosition = (start, end, fraction) => {\n  if (!start?.lat || !start?.lon || !end?.lat || !end?.lon) {\n    console.warn(\"Invalid start or end positions for interpolation\", { start, end });\n    return null;\n  }\n  \n  const lat = start.lat + (end.lat - start.lat) * fraction;\n  const lon = start.lon + (end.lon - start.lon) * fraction;\n  \n  if (!isValidCoordinate(lat, lon)) {\n    console.warn(\"Interpolation resulted in invalid coordinates\", { lat, lon, start, end, fraction });\n    return null;\n  }\n  \n  return { lat, lon };\n};\n\nconst generateInterpolatedEvents = (events) => {\n  if (!events || events.length < 2) return events;\n  \n  const allEvents = [];\n  const visibleTimeRange = {\n    start: startDate.value.getTime(),\n    end: endDate.value.getTime()\n  };\n\n  // Helper function to check if a time falls within the visible range\n  const isTimeInRange = (time) => {\n    const timestamp = new Date(time).getTime();\n    return timestamp >= visibleTimeRange.start && timestamp <= visibleTimeRange.end;\n  };\n\n  // Helper function to get the visible portion of an interpolation range\n  const getVisibleInterpolationRange = (startTime, endTime) => {\n    return {\n      start: Math.max(startTime, visibleTimeRange.start),\n      end: Math.min(endTime, visibleTimeRange.end)\n    };\n  };\n\n  for (let i = 0; i < events.length - 1; i++) {\n    const startEvent = events[i];\n    const endEvent = events[i + 1];\n    const startTime = new Date(startEvent.end).getTime();\n    const endTime = new Date(endEvent.start).getTime();\n\n    // Add the start event if it's in range\n    if (isTimeInRange(startEvent.start) || isTimeInRange(startEvent.end)) {\n      allEvents.push(startEvent);\n    }\n\n    // Handle interpolation between events\n    const duration = endTime - startTime;\n    if (duration > interpolationInterval &&\n        (isTimeInRange(startTime) || isTimeInRange(endTime) || \n         (startTime < visibleTimeRange.end && endTime > visibleTimeRange.start))) {\n      \n      const visibleRange = getVisibleInterpolationRange(startTime, endTime);\n      const visibleDuration = visibleRange.end - visibleRange.start;\n\n      if (visibleDuration > 0) {\n        // Calculate number of interpolation steps based on the visible duration\n        const steps = Math.floor(visibleDuration / interpolationInterval);\n\n        for (let step = 0; step <= steps; step++) {\n          const currentTime = visibleRange.start + step * interpolationInterval;\n          const fraction = (currentTime - startTime) / duration;\n          \n          if (currentTime <= visibleRange.end) {\n            // Inside the generateInterpolatedEvents function where interpolation happens:\nconst interpolatedPos = interpolatePosition(startEvent.position, endEvent.position, fraction);\nif (interpolatedPos) {\n  allEvents.push({\n    isInterpolated: true,\n    time: new Date(currentTime).toISOString(),\n    position: interpolatedPos,\n    startEvent: startEvent,\n    endEvent: endEvent\n  });\n}\n          }\n        }\n      }\n    }\n  }\n\n  // Add the last event if it's in range\n  if (events.length > 0 && isTimeInRange(events[events.length - 1].start)) {\n    allEvents.push(events[events.length - 1]);\n  }\n\n  return allEvents.sort((a, b) => {\n    const timeA = a.isInterpolated ? new Date(a.time).getTime() : new Date(a.start).getTime();\n    const timeB = b.isInterpolated ? new Date(b.time).getTime() : new Date(b.start).getTime();\n    return timeA - timeB;\n  });};\n\nconst onEventHover = (event) => onMarkerHover(event, false);\nconst onInterEventHover = (data) => onMarkerHover(data, true);\n\n//function handles hovers on events or interEvents, and passes correct Marker to parent component\n// In VesselTracking.vue\nconst onMarkerHover = (eventData, isInterpolated = false) => {\n  if (!eventData?.position) return;\n\n  const lat = eventData.position.lat;\n  const lon = eventData.position.lon;\n  \n  if (!isValidCoordinate(lat, lon)) {\n    console.warn(\"Invalid coordinates in event data\", eventData);\n    return;\n  }\n\n  if (!hoveredMarker.value) {\n    const markerData = {\n      id: eventData.mmsi || 'Unknown',\n      position: [lat, lon],\n      flag: isInterpolated ? eventData.startEvent.flag || 'Unknown' : eventData.flag || 'Unknown',\n      tooltip: L.tooltip({\n        permanent: false,\n        direction: 'top',\n        className: 'custom-tooltip',\n        offset: [0, -10],\n        html: true\n      }).setContent(\n        isInterpolated\n          ? `${eventData.startEvent.name || 'Unknown Vessel'}<br>Interpolated Time: ${formatDate(eventData.time)}<br>Between events:<br>Start: ${formatDate(eventData.startEvent.end)}<br>End: ${formatDate(eventData.endEvent.start)}`\n          : `${eventData.name || 'Unknown Vessel'}<br>Event: ${eventData.type}<br>Start: ${formatDate(eventData.start)}<br>End: ${formatDate(eventData.end)}`\n      )\n    };\n    \n    // Check if vesselPositions has at least one element\n    const vesselData = props.vesselPositions.length > 0 \n      ? props.vesselPositions[0]\n      : {\n          id: eventData.mmsi || 'Unknown',\n          name: eventData.name || 'Unknown Vessel',\n          position: {\n            lat: eventData.position.lat,\n            lon: eventData.position.lon\n          },\n          lastSeen: eventData.end || new Date().toISOString(),\n          eventType: eventData.type || 'Unknown'\n        };\n    \n    const marker = L.marker(markerData.position, {\n      icon: createShipIcon('#636363', markerData.flag, vesselData),\n    }).bindTooltip(markerData.tooltip).on('click', () => {\n      marker.openTooltip();\n    });\n    \n    hoveredMarker.value = marker;\n  } else {\n    hoveredMarker.value.setLatLng([lat, lon]);\n  }\n  \n  emit('update:hoveredMarker', hoveredMarker.value);\n};\n\nconst startDate = ref(new Date(new Date().setMonth(new Date().getMonth() - 1)));\nconst endDate = ref(new Date());\n\nconst createShipIcon = (baseColor = '#ff7800', countryCode = 'Unknown', vessel) => {\n  const flagEmoji = countryCode !== 'Unknown' ? getFlagEmoji(countryCode) : '🏴‍☠️';\n  \n  const lastDateSeen = new Date(vessel.lastSeen);\n  const currentDate = new Date();\n  const daysSinceLastSeen = (currentDate - lastDateSeen) / (1000 * 60 * 60 * 24);\n  const getColorComponent = (start, end, fraction) => {\n    return Math.round(start + fraction * (end - start));\n  };\n\n  const calculateColor = (daysSinceLastSeen) => {\n    // Use a non-linear function to make color change faster initially\n    const fraction = Math.min(Math.pow(daysSinceLastSeen / 60, 1.5), 1);\n    const startColor = hexToRgb(baseColor);\n    const endColor = hexToRgb('#8B4513'); // Brown\n\n    const r = getColorComponent(startColor.r, endColor.r, fraction);\n    const g = getColorComponent(startColor.g, endColor.g, fraction);\n    const b = getColorComponent(startColor.b, endColor.b, fraction);\n\n    return rgbToHex(r, g, b);\n  };\n\n  const color = calculateColor(daysSinceLastSeen);\n\n  const icon = L.divIcon({\n    html: `\n      <div class=\"ship-icon-container\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n          <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\" fill=\"${color}\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n        <span class=\"ship-flag\">${flagEmoji}</span>\n      </div>\n    `,\n    className: 'ship-icon',\n    iconSize: [24, 24],\n    iconAnchor: [12, 12],\n  });\n  return icon;\n};\n\n// Helper function to convert hex to RGB\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n// Helper function to convert RGB to hex\nfunction rgbToHex(r, g, b) {\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n}\n\n// Function to convert country code to flag emoji\nconst getFlagEmoji = (countryCode) => {\n  // Handle specific cases for country codes\n  if (countryCode === 'KOR') { // South Korea\n    countryCode = 'KR';\n  } else if (countryCode === 'SWE') { // Sweden\n    countryCode = 'SE';\n  } else if (countryCode === 'ARE') { // United Arab Emirates\n    countryCode = 'AE';\n  } else if (countryCode === 'ATG') { // Antigua and Barbuda\n    countryCode = 'AG';\n  } else if (countryCode === 'BRB') { // Barbados\n    countryCode = 'BB';\n  }\n\n  const codePoints = countryCode\n    .toUpperCase()\n    .slice(0, 2)\n    .split('')\n    .map(char => 127397 + char.charCodeAt());\n\n  return String.fromCodePoint(...codePoints);\n};\n\nfunction vesselIdsToArray(vessels){\n  let vesselIds = [];\n  for (let key in vessels) {\n    vesselIds.push(vessels[key].vesselId);\n  }\n  return vesselIds;\n}\n\nconst vesselTrackingParams = {\n  limit: 1,\n  offset: 0,\n  sort: '-start',\n};\n\n//API Call to find all latest positions of Cable Vessels\nasync function vesselTracking() {\n  try {\n    \n    const vesselIdsArray = vesselIdsToArray(vesselIds);\n    const allVesselPositions = [];\n    props.layerGroup.clearLayers();\n\n/*     const vesselTest = ['52ba19e87-7314-096f-8d50-0793badbc25a'];\n\n    const testParams = {\n      ...vesselTrackingParams,\n      vessels: vesselTest, \n      'datasets[0]': 'public-global-port-visits-c2-events:latest',\n    }\n    const testResponse = await axios.get(vesselTrackingUrl, { params: testParams });\n    console.log(\"TESTRESPONSE: \", testResponse); */\n\n    for (const vesselId of vesselIdsArray) {\n      const loiteringParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-loitering-events:latest',\n      };\n\n      const portVisitParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-port-visits-c2-events:latest',\n      };\n\n      const [loiteringResponse, portVisitResponse] = await Promise.all([\n        axios.get(vesselTrackingUrl, { params: loiteringParams }),\n        axios.get(vesselTrackingUrl, { params: portVisitParams })\n      ]);\n      let latestEvent = null;\n      let eventType = '';\n\n      if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n        latestEvent = loiteringResponse.data.entries[0];\n        eventType = 'Loitering';\n      }\n\n      if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n        const portVisitEvent = portVisitResponse.data.entries[0];\n        if (!latestEvent || new Date(portVisitEvent.end) > new Date(latestEvent.end)) {\n          latestEvent = portVisitEvent;\n          eventType = 'Port Visit';\n        }\n      }\n\n      if (latestEvent) {\n        allVesselPositions.push({\n          id: vesselId,\n          name: latestEvent.vessel?.name || 'Unknown Vessel',\n          position: latestEvent.position,\n          lastSeen: latestEvent.end,\n          eventType: eventType,\n          ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n          flag: latestEvent.vessel?.flag || 'ARE'\n        });\n      }\n    }\n    allVesselPositions.forEach(vessel => {\n      const ssvid = vessel.ssvid;\n      \n      if (vesselIds[ssvid]) {\n      // Zusätzliche Attribute aus der vesselData zuweisen\n        vessel.length = vesselIds[ssvid].length || 'Unknown';\n        vessel.beam = vesselIds[ssvid].beam || 'Unknown';\n        vessel.grossTonage = vesselIds[ssvid].grossTonage || 'Unknown';\n        vessel.purpose = vesselIds[ssvid].purpose || 'Unknown';\n        vessel.cableCapacity = vesselIds[ssvid].cableCapacity || 'Unknown';\n        vessel.notes = vesselIds[ssvid].notes || 'Unknown';\n        vessel.baseport = vesselIds[ssvid].baseport || 'Unknown';\n        vessel.owner = vesselIds[ssvid].owner || 'Unknown';\n      } else {\n        vessel.length = 'Unknown';\n        vessel.beam = 'Unknown';\n        vessel.grossTonage = 'Unknown';\n      }\n    });\n    localVesselPositions.value = allVesselPositions;\n    emit('update:vesselPositions', localVesselPositions.value);\n    vesselPostResponse.value = { data: { entries: allVesselPositions } };\n    vesselModifiedPostUrl.value = vesselTrackingUrl.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n\n  } catch (error) {\n    console.error(\"Error fetching vessel tracking data:\", error);\n  }\n  vesselLayerReady.value = true;\n}\n\nconst formattedEndDate = ref(new Date());\nconst formattedStartDate = ref(new Date(formattedEndDate.value.getFullYear() - 1, formattedEndDate.value.getMonth(), formattedEndDate.value.getDate()));\n\n//When date changes by TimelineSlider\nconst onDateChange = () => {\n  if (vesselTrackingSelected.value) {\n    formattedStartDate.value = formatDate(startDate.value);\n    formattedEndDate.value = formatDate(endDate.value);\n\n    const start = new Date(startDate.value);\n    const end = new Date(endDate.value);\n    const timeDiff = end - start;\n    \n    if (timeDiff < 3600000) {\n      console.warn(\"Selected time range is very short, which may result in insufficient data\");\n    }\n  \n    vesselTrack(formattedStartDate.value, formattedEndDate.value);\n  }\n};\n\n//Helper function to format Date into API Call correct data\nconst formatDate = (date) => {\n  const d = new Date(date);\n  let month = '' + (d.getMonth() + 1);\n  let day = '' + d.getDate();\n  const year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\n//API Call for specific vesselTrack of one currentTrackedVessel\nasync function vesselTrack(startDate, endDate) {\n  if (!currentTrackedVessel.value) return;\n  \n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const extendedStartDate = new Date(startDate);\n  const extendedEndDate = new Date(endDate);\n  extendedStartDate.setMonth(extendedStartDate.getMonth() - 5);\n  extendedEndDate.setMonth(extendedEndDate.getMonth() + 5);\n  \n  const baseParams = {\n    limit: 1000,\n    offset: 0,\n    sort: '-start',\n    vessels: [currentTrackedVessel.value],\n    'start-date': formatDate(extendedStartDate),\n    'end-date': formatDate(extendedEndDate),\n  };\n  \n  try {\n    const [portVisitsResponse, loiteringResponse] = await Promise.all([\n      axios.get(vesselTrackingUrl, {\n        params: {...baseParams, 'datasets[0]': 'public-global-port-visits-c2-events:latest'}\n      }),\n      axios.get(vesselTrackingUrl, {\n        params: {...baseParams, 'datasets[0]': 'public-global-loitering-events:latest'}\n      })\n    ]);\n    \n    // Check if the responses have the expected structure\n    const portVisits = portVisitsResponse?.data?.entries || [];\n    const loiteringEvents = loiteringResponse?.data?.entries || [];\n    \n    // Combine and sort the events from both responses\n    const allEvents = [\n      ...portVisits.map(entry => ({...entry, type: 'PortVisit'})),\n      ...loiteringEvents.map(entry => ({...entry, type: 'Loitering'}))\n    ].sort((a, b) => new Date(b.start) - new Date(a.start));\n    \n    // Check if we have any events\n    if (allEvents.length === 0) {\n      console.warn(\"No vessel events found for the selected time period\");\n      interpolatedEvents.value = [];\n      return;\n    }\n    \n    // Process the events\n    const formattedEvents = allEvents.map(entry => {\n      // Validate each entry has the required fields\n      if (!entry.position || !entry.vessel) {\n        console.warn(\"Invalid event entry:\", entry);\n        return null;\n      }\n      \n      return {\n        start: entry.start,\n        end: entry.end,\n        position: entry.position,\n        flag: entry.vessel?.flag || 'Unknown',\n        name: entry.vessel?.name || 'Unknown Vessel',\n        mmsi: entry.vessel?.ssvid || 'Unknown',\n        type: entry.type\n      };\n    }).filter(event => event !== null); // Remove any null entries\n    \n    interpolatedEvents.value = formattedEvents;\n    \n    if (formattedEvents.length > 0) {\n      drawVesselTrack(interpolatedEvents.value);\n    } else {\n      console.warn(\"No valid vessel events found after filtering\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching vessel track data:\", error);\n    interpolatedEvents.value = [];\n  }\n}\n//Function to draw the vessel Track on the mapInstance\nconst drawVesselTrack = (trackData) => {\n\n  \n  // Get map instance, with fallback options\n  let mapInstanceToUse = props.mapInstance;\n  \n  if (!mapInstanceToUse && props.cableStore) {\n    mapInstanceToUse = props.cableStore.getMapInstance;\n  }\n  \n  if (!trackData || trackData.length === 0) {\n    console.warn(\"No track data available\");\n    return;\n  }\n  \n  const startDate = new Date(formattedStartDate.value);\n  const endDate = new Date(formattedEndDate.value);\n  \n\n  const timeDiff = endDate - startDate;\n  if (timeDiff < 3600000) { // Less than 1 hour\n    console.warn(\"Time range is too short, which may result in insufficient data\");\n  }\n\n  if (isNaN(startDate) || isNaN(endDate)) {\n    console.error(\"Invalid date range provided:\", formattedStartDate.value, formattedEndDate.value);\n    return;\n  }\n  \n  // Filter the track data within the date range\n  const filteredData = trackData.filter(event => {\n    const eventStartDate = new Date(event.start);\n    const eventEndDate = new Date(event.end);\n    return (\n      (eventStartDate >= startDate && eventStartDate <= endDate) ||\n      (eventEndDate >= startDate && eventEndDate <= endDate)\n    );\n  });\n    \n  if (filteredData.length === 0) {\n    console.warn(\"No track data within the specified date range.\");\n    return;\n  }\n  \n  // Remove existing vessel track layer if it exists\n  if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n    mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n  }\n  \n  // Get the track points\n  const trackPoints = filteredData\n    .map(event => {\n      const lat = event.position?.lat;\n      const lon = event.position?.lon;\n      \n      if (!isValidCoordinate(lat, lon)) {\n        console.warn(\"Invalid coordinates in track data\", event);\n        return null;\n      }\n      \n      return [lat, lon];\n    })\n    .filter(point => point !== null)\n    .reverse();\n\n  if (trackPoints.length < 2) {\n    console.warn(\"Not enough valid track points to draw polyline\");\n    return;\n  }\n\n  try {\n    if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n      mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n    }\n    vesselTrackLayer.value = L.polyline(trackPoints, {\n      color: '#ad7dad',\n      weight: 3,\n      opacity: 0.7\n    }).arrowheads({\n      size: '20px',\n      yawn: 30,\n      fill: true\n    }).addTo(mapInstanceToUse);\n    \n    // Fit the map to the bounds of the track\n    if (vesselTrackLayer.value) {\n      vesselTrackLayer.value.addTo(mapInstanceToUse);\n      \n      // Only fit bounds if there are valid points\n      if (vesselTrackLayer.value.getBounds && !vesselTrackLayer.value.getBounds().isValid()) {\n        console.warn(\"Invalid bounds for vessel track layer\");\n      } else if (vesselTrackLayer.value.getBounds) {\n        mapInstanceToUse.fitBounds(vesselTrackLayer.value.getBounds());\n      }\n    }\n      } catch (error) {\n    console.error(\"Error creating polyline:\", error);\n  }\n};\n\n/*\n  Handles the click on viewVesselTrack on the Vessel Popup\n  Deselects Cables on Map, so that track is better distinguishable\n  filters vesselPositions after the one tracked Vessel\n*/\nconst viewVesselTrack = async (vessel) => {\n  try {\n    if (!vessel || !vessel.ssvid) {\n      console.error('Invalid vessel data provided to viewVesselTrack');\n      return;\n    }\n    vesselTrackingSelected.value = true;\n    isVesselTrackingMode.value = true;\n    isSearchSelected.value = vessel.fromSidebar || false;\n\n    // Initialize the cable store\n    const cableStore = useDataCablesStore();\n\n    if (vesselIds[vessel.ssvid]) {\n      currentTrackedVessel.value = vesselIds[vessel.ssvid].vesselId;\n    } else {\n      console.error('Vessel ID not found for ssvid:', vessel.ssvid);\n      return;\n    }\n\n    // Ensure we're using the cable store instance correctly\n    if (cableStore && cableStore.dataCables) {\n      // Deselect cables first\n      cableStore.deselectCables();\n      await nextTick();\n\n      // Update vessel positions if needed\n      if (!vessel.fromSidebar && Array.isArray(localVesselPositions.value)) {\n        localVesselPositions.value = localVesselPositions.value.filter(v => v.id === vessel.id);\n        emit('update:vesselPositions', localVesselPositions.value);\n      }\n\n      // Fetch vessel track data\n      await vesselTrack(formattedStartDate.value, formattedEndDate.value);\n      toggleVesselTracking();\n      //emit('update:viewingVesselTrack', true);\n\n      // Explicitly update cable opacity using the store\n      cableStore.setAllCablesOpacity(0.15); // Ensure this is called\n\n      // Force a reactivity update\n      await nextTick();\n    } else {\n      console.error('Cable store or dataCables not properly initialized');\n    }\n  } catch (error) {\n    console.error('Error in viewVesselTrack:', error);\n    isVesselTrackingMode.value = false;\n    vesselTrackingSelected.value = false;\n    isSearchSelected.value = false;\n  }\n};\n\nconst exitVesselTrackingMode = () => {\n  isVesselTrackingMode.value = false;\n  vesselTrackingSelected.value = false;\n  isSearchSelected.value = false;\n  currentTrackedVessel.value = null;\n  hoveredMarker.value = null;\n  emit( 'update:hoveredMarker', null);\n  \n  // Clear the cable ships layer group\n  const updatedPositions = props.vesselPositions.filter(vessel => {\n    if (vessel.fromSidebar) {\n      // Remove sidebar-created markers\n      if (vessel.marker && props.mapInstance.hasLayer(vessel.marker)) {\n        props.mapInstance.removeLayer(vessel.marker);\n       }\n      if (vessel.popup && props.mapInstance.hasLayer(vessel.popup)) {\n        props.mapInstance.removeLayer(vessel.popup);        \n      }        \n    }\n    props.layerGroup.clearLayers();\n  });\n\n  toggleVesselTracking();\n  //emit('update:viewingVesselTrack', false);\n  \n  vesselTracking();\n  props.cableStore.dataCables.forEach(cable => {\n    cable.opacity = 1;\n  });\n  \n  if (vesselTrackLayer.value) {\n    props.mapInstance.removeLayer(vesselTrackLayer.value);\n    vesselTrackLayer.value = null;\n  }\n};\n\nconst viewingVesselTrack = ref(false);\n\nconst toggleVesselTracking = () => {\n  const newValue = !viewingVesselTrack.value;\n  viewingVesselTrack.value = newValue;\n  cableStore.setViewingVesselTrack(newValue);\n};\n\n//Handle Ship Clicks\nconst onShipClick = (e, vessel) => {\n  try {    \n    if (!vessel || !vessel.lastSeen) {\n      console.error('Invalid vessel data provided to onShipClick');\n      return;\n    }\n\n    // Get map instance from the cable store\n    const mapInstance = props.cableStore.getMapInstance;\n    if (!mapInstance) {\n      console.error('Map instance is not available from cableStore');\n      return;\n    }\n\n    const lastSeenDate = new Date(vessel.lastSeen);\n    const formattedDate = lastSeenDate.toLocaleString('en-GB', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      hour12: false\n    });\n\n    // Create popup content\n    const popupContent = `\n      <div>\n        <strong>${vessel.name || 'Unknown Vessel'}</strong><br/>\n        <strong>${currentTranslations.value?.lastSeen || 'Last Seen'}:</strong> ${formattedDate}<br/>\n        <strong>${currentTranslations.value?.event || 'Event'}:</strong> ${vessel.eventType || 'Unknown'}<br/>\n        <strong>MMSI:</strong> ${vessel.ssvid || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.flag || 'Flag'}:</strong> ${getFlagEmoji(vessel.flag)}${vessel.flag}<br/>\n        <strong>${currentTranslations.value?.length || 'Length'}:</strong> ${vessel.length || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.beam || 'Beam'}:</strong> ${vessel.beam || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.grossTonnage || 'Gross Tonnage'}:</strong> ${vessel.grossTonage || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.purpose || 'Purpose'}:</strong> ${vessel.purpose || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.cableCapacity || 'Cable Capacity'}:</strong> ${vessel.cableCapacity || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.notes || 'Notes'}:</strong> ${vessel.notes || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.baseport || 'Base Port'}:</strong> ${vessel.baseport || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.owner || 'Owner'}:</strong> ${vessel.owner || 'Unknown'}<br/>\n        <a href=\"#\" id=\"getVesselTrack\">${currentTranslations.value?.viewVesselTrack || 'View Vessel Track'}</a><br/>\n        <a href=\"https://www.vesselfinder.com/vessels/details/${vessel.ssvid}\" target=\"_blank\">\n          ${currentTranslations.value?.viewOn || 'View on VesselFinder'}\n        </a>\n      </div>\n    `;\n\n    // Create and configure the popup\n    const popup = L.popup({\n      maxWidth: 300,\n      className: 'vessel-popup'\n    });\n\n    // Set popup location and content\n    popup.setLatLng([\n      e.latlng.lat || vessel.position.lat,\n      e.latlng.lng || vessel.position.lon\n    ]);\n    popup.setContent(popupContent);\n\n    // Remove existing popup if any\n    if (vessel.popup && mapInstance.hasLayer(vessel.popup)) {\n      mapInstance.removeLayer(vessel.popup);\n    }\n\n    // Add the new popup to the map\n    popup.addTo(mapInstance);\n\n    // Store the popup reference\n    vessel.popup = popup;\n\n    // Add event listener after popup is added to DOM\n    nextTick(() => {\n      const trackLink = document.getElementById(\"getVesselTrack\");\n      if (trackLink) {\n        trackLink.addEventListener(\"click\", function(event) {\n          event.preventDefault();\n          viewVesselTrack(vessel);\n        });\n      }\n    });\n\n  } catch (error) {\n    console.error('Error in onShipClick:', error);\n    // Try to provide more specific error information\n    if (error instanceof Error) {\n      console.error('Error details:', error.message);\n    }\n  }\n};\n\n// Add resize observer to update timeline width when map size changes\nonMounted(() => {\n  if (props.mapInstance) {\n    const resizeObserver = new ResizeObserver(() => {\n      // Force reactive update of computed style\n      nextTick(() => {\n        const mapBounds = props.mapInstance.getContainer().getBoundingClientRect();\n        if (vesselTrackingSelected.value) {\n          const container = document.querySelector('.date-popup-vesselTrack');\n          if (container) {\n            container.style.width = `${mapBounds.width}px`;\n            if (isSearchSelected.value) {\n              container.style.left = `${mapBounds.left}px`;\n            }\n          }\n        }\n      });\n    });\n    \n    resizeObserver.observe(props.mapInstance.getContainer());\n    \n    // Cleanup observer on component unmount\n    onUnmounted(() => {\n      resizeObserver.disconnect();\n      exitVesselTrackingMode();\n    });\n  }\n});\n\n// Expose necessary methods and reactive variables\n__expose({\n  isSearchSelected,\n  vesselLayerReady,\n  isVesselTrackingMode,\n  vesselTrackingSelected,\n  vesselEvents,\n  hoveredMarker,\n  startDate,\n  endDate,\n  localVesselPositions,\n  onShipClick,\n  createShipIcon,\n  exitVesselTrackingMode,\n  vesselTracking,\n  viewVesselTrack\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (vesselTrackingSelected.value)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"date-popup-vesselTrack\", {\n      'search-selected': isSearchSelected.value,\n      'map-selected': !isSearchSelected.value\n    }]),\n        style: _normalizeStyle(timelineContainerStyle.value),\n        onMousedown: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"])),\n        onTouchstart: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.stopEvent && _ctx.stopEvent(...args)))\n      }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          (isVesselTrackingMode.value)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: exitVesselTrackingMode,\n                class: \"deselect-vessel-tracking-btn\"\n              }, _toDisplayString(currentTranslations.value?.exitVesselTracking || 'Exit Vessel Tracking'), 1))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createVNode(_unref(VueDatePicker), {\n              modelValue: dateRange.value,\n              \"onUpdate:modelValue\": [\n                _cache[0] || (_cache[0] = ($event: any) => ((dateRange).value = $event)),\n                onDatePickerChange\n              ],\n              placeholder: currentTranslations.value?.datePlaceholder || 'Select date range',\n              \"preview-format\": format,\n              format: format,\n              \"enable-time-picker\": false,\n              range: { partialRange: false },\n              dark: \"\",\n              class: \"custom-datepicker\",\n              \"no-today\": \"\",\n              \"max-date\": new Date()\n            }, null, 8, [\"modelValue\", \"placeholder\", \"max-date\"])\n          ])\n        ]),\n        (vesselTrackingSelected.value)\n          ? (_openBlock(), _createBlock(TimelineSlider, {\n              key: 0,\n              startDate: startDate.value,\n              \"onUpdate:startDate\": [\n                _cache[1] || (_cache[1] = ($event: any) => ((startDate).value = $event)),\n                onDateChange\n              ],\n              endDate: endDate.value,\n              \"onUpdate:endDate\": [\n                _cache[2] || (_cache[2] = ($event: any) => ((endDate).value = $event)),\n                onDateChange\n              ],\n              events: interpolatedEvents.value,\n              onEventHover: onEventHover,\n              onInterEventHover: onInterEventHover,\n              class: \"timeline-slider\"\n            }, null, 8, [\"startDate\", \"endDate\", \"events\"]))\n          : _createCommentVNode(\"\", true)\n      ], 38))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\n  <div \n    v-if=\"vesselTrackingSelected\" \n    class=\"date-popup-vesselTrack\"\n    :class=\"{\n      'search-selected': isSearchSelected,\n      'map-selected': !isSearchSelected\n    }\"\n    :style=\"timelineContainerStyle\"\n    @mousedown.stop\n    @touchstart=\"stopEvent\"\n  >\n    <div class=\"tracking-controls\">\n      <button \n        v-if=\"isVesselTrackingMode\" \n        @click=\"exitVesselTrackingMode\"\n        class=\"deselect-vessel-tracking-btn\"\n      >\n        {{currentTranslations?.exitVesselTracking || 'Exit Vessel Tracking'}}\n      </button>\n      <div class=\"date-picker-container\">\n        <VueDatePicker\n          v-model=\"dateRange\"\n          @update:model-value=\"onDatePickerChange\"\n          :placeholder=\"currentTranslations?.datePlaceholder || 'Select date range'\"\n          :preview-format=\"format\"\n          :format=\"format\"\n          :enable-time-picker=\"false\"\n          :range=\"{ partialRange: false }\"\n          dark\n          class=\"custom-datepicker\"\n          no-today\n          :max-date=\"new Date()\"\n        />\n      </div>\n    </div>\n    <TimelineSlider\n      v-if=\"vesselTrackingSelected\"\n      v-model:startDate=\"startDate\"\n      v-model:endDate=\"endDate\"\n      :events=\"interpolatedEvents\"\n      @update:startDate=\"onDateChange\"\n      @update:endDate=\"onDateChange\"\n      @eventHover=\"onEventHover\"\n      @interEventHover=\"onInterEventHover\"\n      class=\"timeline-slider\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, computed, defineEmits, defineExpose, nextTick, PropType, onMounted, onUnmounted } from 'vue';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport TimelineSlider from './TimelineSlider.vue';\nimport vesselIds from \"@/assets/vesselIds.json\";\nimport translations from \"@/assets/translations/translations.json\";\nimport { useDataCablesStore } from '@/store/datacables';\n\nconst cableStore = useDataCablesStore();\n\nconst props = defineProps({\n  mapInstance: { type: Object as PropType<L.Map>, required: true },\n  currentLanguage: { type: String, required: true },\n  cableStore: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  layerGroup: { type: Object, required: true },\n  mapReady: { type: Boolean, required: true },\n  vesselPositions: { type: Array as PropType<any[]>, default: () => [] },\n});\n\nconst emit = defineEmits([\n  'update:vesselPositions',\n  'update:hoveredMarker',\n  'update:viewingVesselTrack'\n]);\n\nconst isSearchSelected = ref(false);\nconst timelineContainerStyle = computed(() => {\n  if (!props.mapInstance) return {};\n  \n  const mapBounds = props.mapInstance.getContainer().getBoundingClientRect();\n  return {\n    width: `${mapBounds.width}px`,\n    left: isSearchSelected.value ? `${mapBounds.left}px` : '0'\n  };\n});\n\nconst localVesselPositions = ref(props.vesselPositions ? [...props.vesselPositions] : []);\nconst vesselLayerReady = ref(false);\nconst vesselPostResponse = ref(null);\nconst vesselModifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{y}/{x}.png');\nconst isVesselTrackingMode = ref(false);\nconst vesselTrackingSelected = ref(false);\nconst vesselEvents = ref([]);\nconst hoveredMarker = ref();\nconst currentTrackedVessel = ref(null);\nconst vesselTrackLayer = ref(null);\n\nconst interpolatedEvents = ref([]);\nconst interpolationInterval = 3600000;\n\nconst currentTranslations = computed(() => translations[props.currentLanguage]);\n\nwatch(() => props.vesselPositions, (newPositions) => {\n  if (newPositions) {\n    localVesselPositions.value = [...newPositions];\n  }\n}, { deep: true });\n\nwatch(() => props.mapReady, (newValue) => {\n  vesselTracking();\n})\n\nconst isValidCoordinate = (lat, lon) => {\n  return lat !== undefined && lon !== undefined && \n         !isNaN(lat) && !isNaN(lon) &&\n         lat >= -90 && lat <= 90 && lon >= -180 && lon <= 180;\n};\n\nconst dateRange = ref<[Date, Date]>([\n  new Date(new Date().setMonth(new Date().getMonth() - 1)), \n  new Date()\n]);\n\nconst format = 'dd/MM/yyyy';\n\nconst onDatePickerChange = (selectedDates: [Date, Date]) => {\n  if (selectedDates && selectedDates.length === 2) {\n    startDate.value = selectedDates[0];\n    endDate.value = selectedDates[1];\n  }\n};\nwatch([startDate, endDate], () => {\n  dateRange.value = [startDate.value, endDate.value];\n});\n\nconst interpolatePosition = (start, end, fraction) => {\n  if (!start?.lat || !start?.lon || !end?.lat || !end?.lon) {\n    console.warn(\"Invalid start or end positions for interpolation\", { start, end });\n    return null;\n  }\n  \n  const lat = start.lat + (end.lat - start.lat) * fraction;\n  const lon = start.lon + (end.lon - start.lon) * fraction;\n  \n  if (!isValidCoordinate(lat, lon)) {\n    console.warn(\"Interpolation resulted in invalid coordinates\", { lat, lon, start, end, fraction });\n    return null;\n  }\n  \n  return { lat, lon };\n};\n\nconst generateInterpolatedEvents = (events) => {\n  if (!events || events.length < 2) return events;\n  \n  const allEvents = [];\n  const visibleTimeRange = {\n    start: startDate.value.getTime(),\n    end: endDate.value.getTime()\n  };\n\n  // Helper function to check if a time falls within the visible range\n  const isTimeInRange = (time) => {\n    const timestamp = new Date(time).getTime();\n    return timestamp >= visibleTimeRange.start && timestamp <= visibleTimeRange.end;\n  };\n\n  // Helper function to get the visible portion of an interpolation range\n  const getVisibleInterpolationRange = (startTime, endTime) => {\n    return {\n      start: Math.max(startTime, visibleTimeRange.start),\n      end: Math.min(endTime, visibleTimeRange.end)\n    };\n  };\n\n  for (let i = 0; i < events.length - 1; i++) {\n    const startEvent = events[i];\n    const endEvent = events[i + 1];\n    const startTime = new Date(startEvent.end).getTime();\n    const endTime = new Date(endEvent.start).getTime();\n\n    // Add the start event if it's in range\n    if (isTimeInRange(startEvent.start) || isTimeInRange(startEvent.end)) {\n      allEvents.push(startEvent);\n    }\n\n    // Handle interpolation between events\n    const duration = endTime - startTime;\n    if (duration > interpolationInterval &&\n        (isTimeInRange(startTime) || isTimeInRange(endTime) || \n         (startTime < visibleTimeRange.end && endTime > visibleTimeRange.start))) {\n      \n      const visibleRange = getVisibleInterpolationRange(startTime, endTime);\n      const visibleDuration = visibleRange.end - visibleRange.start;\n\n      if (visibleDuration > 0) {\n        // Calculate number of interpolation steps based on the visible duration\n        const steps = Math.floor(visibleDuration / interpolationInterval);\n\n        for (let step = 0; step <= steps; step++) {\n          const currentTime = visibleRange.start + step * interpolationInterval;\n          const fraction = (currentTime - startTime) / duration;\n          \n          if (currentTime <= visibleRange.end) {\n            // Inside the generateInterpolatedEvents function where interpolation happens:\nconst interpolatedPos = interpolatePosition(startEvent.position, endEvent.position, fraction);\nif (interpolatedPos) {\n  allEvents.push({\n    isInterpolated: true,\n    time: new Date(currentTime).toISOString(),\n    position: interpolatedPos,\n    startEvent: startEvent,\n    endEvent: endEvent\n  });\n}\n          }\n        }\n      }\n    }\n  }\n\n  // Add the last event if it's in range\n  if (events.length > 0 && isTimeInRange(events[events.length - 1].start)) {\n    allEvents.push(events[events.length - 1]);\n  }\n\n  return allEvents.sort((a, b) => {\n    const timeA = a.isInterpolated ? new Date(a.time).getTime() : new Date(a.start).getTime();\n    const timeB = b.isInterpolated ? new Date(b.time).getTime() : new Date(b.start).getTime();\n    return timeA - timeB;\n  });};\n\nconst onEventHover = (event) => onMarkerHover(event, false);\nconst onInterEventHover = (data) => onMarkerHover(data, true);\n\n//function handles hovers on events or interEvents, and passes correct Marker to parent component\n// In VesselTracking.vue\nconst onMarkerHover = (eventData, isInterpolated = false) => {\n  if (!eventData?.position) return;\n\n  const lat = eventData.position.lat;\n  const lon = eventData.position.lon;\n  \n  if (!isValidCoordinate(lat, lon)) {\n    console.warn(\"Invalid coordinates in event data\", eventData);\n    return;\n  }\n\n  if (!hoveredMarker.value) {\n    const markerData = {\n      id: eventData.mmsi || 'Unknown',\n      position: [lat, lon],\n      flag: isInterpolated ? eventData.startEvent.flag || 'Unknown' : eventData.flag || 'Unknown',\n      tooltip: L.tooltip({\n        permanent: false,\n        direction: 'top',\n        className: 'custom-tooltip',\n        offset: [0, -10],\n        html: true\n      }).setContent(\n        isInterpolated\n          ? `${eventData.startEvent.name || 'Unknown Vessel'}<br>Interpolated Time: ${formatDate(eventData.time)}<br>Between events:<br>Start: ${formatDate(eventData.startEvent.end)}<br>End: ${formatDate(eventData.endEvent.start)}`\n          : `${eventData.name || 'Unknown Vessel'}<br>Event: ${eventData.type}<br>Start: ${formatDate(eventData.start)}<br>End: ${formatDate(eventData.end)}`\n      )\n    };\n    \n    // Check if vesselPositions has at least one element\n    const vesselData = props.vesselPositions.length > 0 \n      ? props.vesselPositions[0]\n      : {\n          id: eventData.mmsi || 'Unknown',\n          name: eventData.name || 'Unknown Vessel',\n          position: {\n            lat: eventData.position.lat,\n            lon: eventData.position.lon\n          },\n          lastSeen: eventData.end || new Date().toISOString(),\n          eventType: eventData.type || 'Unknown'\n        };\n    \n    const marker = L.marker(markerData.position, {\n      icon: createShipIcon('#636363', markerData.flag, vesselData),\n    }).bindTooltip(markerData.tooltip).on('click', () => {\n      marker.openTooltip();\n    });\n    \n    hoveredMarker.value = marker;\n  } else {\n    hoveredMarker.value.setLatLng([lat, lon]);\n  }\n  \n  emit('update:hoveredMarker', hoveredMarker.value);\n};\n\nconst startDate = ref(new Date(new Date().setMonth(new Date().getMonth() - 1)));\nconst endDate = ref(new Date());\n\nconst createShipIcon = (baseColor = '#ff7800', countryCode = 'Unknown', vessel) => {\n  const flagEmoji = countryCode !== 'Unknown' ? getFlagEmoji(countryCode) : '🏴‍☠️';\n  \n  const lastDateSeen = new Date(vessel.lastSeen);\n  const currentDate = new Date();\n  const daysSinceLastSeen = (currentDate - lastDateSeen) / (1000 * 60 * 60 * 24);\n  const getColorComponent = (start, end, fraction) => {\n    return Math.round(start + fraction * (end - start));\n  };\n\n  const calculateColor = (daysSinceLastSeen) => {\n    // Use a non-linear function to make color change faster initially\n    const fraction = Math.min(Math.pow(daysSinceLastSeen / 60, 1.5), 1);\n    const startColor = hexToRgb(baseColor);\n    const endColor = hexToRgb('#8B4513'); // Brown\n\n    const r = getColorComponent(startColor.r, endColor.r, fraction);\n    const g = getColorComponent(startColor.g, endColor.g, fraction);\n    const b = getColorComponent(startColor.b, endColor.b, fraction);\n\n    return rgbToHex(r, g, b);\n  };\n\n  const color = calculateColor(daysSinceLastSeen);\n\n  const icon = L.divIcon({\n    html: `\n      <div class=\"ship-icon-container\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n          <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\" fill=\"${color}\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n        <span class=\"ship-flag\">${flagEmoji}</span>\n      </div>\n    `,\n    className: 'ship-icon',\n    iconSize: [24, 24],\n    iconAnchor: [12, 12],\n  });\n  return icon;\n};\n\n// Helper function to convert hex to RGB\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n// Helper function to convert RGB to hex\nfunction rgbToHex(r, g, b) {\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n}\n\n// Function to convert country code to flag emoji\nconst getFlagEmoji = (countryCode) => {\n  // Handle specific cases for country codes\n  if (countryCode === 'KOR') { // South Korea\n    countryCode = 'KR';\n  } else if (countryCode === 'SWE') { // Sweden\n    countryCode = 'SE';\n  } else if (countryCode === 'ARE') { // United Arab Emirates\n    countryCode = 'AE';\n  } else if (countryCode === 'ATG') { // Antigua and Barbuda\n    countryCode = 'AG';\n  } else if (countryCode === 'BRB') { // Barbados\n    countryCode = 'BB';\n  }\n\n  const codePoints = countryCode\n    .toUpperCase()\n    .slice(0, 2)\n    .split('')\n    .map(char => 127397 + char.charCodeAt());\n\n  return String.fromCodePoint(...codePoints);\n};\n\nfunction vesselIdsToArray(vessels){\n  let vesselIds = [];\n  for (let key in vessels) {\n    vesselIds.push(vessels[key].vesselId);\n  }\n  return vesselIds;\n}\n\nconst vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\nconst vesselTrackingParams = {\n  limit: 1,\n  offset: 0,\n  sort: '-start',\n};\n\n//API Call to find all latest positions of Cable Vessels\nasync function vesselTracking() {\n  try {\n    \n    const vesselIdsArray = vesselIdsToArray(vesselIds);\n    const allVesselPositions = [];\n    props.layerGroup.clearLayers();\n\n/*     const vesselTest = ['52ba19e87-7314-096f-8d50-0793badbc25a'];\n\n    const testParams = {\n      ...vesselTrackingParams,\n      vessels: vesselTest, \n      'datasets[0]': 'public-global-port-visits-c2-events:latest',\n    }\n    const testResponse = await axios.get(vesselTrackingUrl, { params: testParams });\n    console.log(\"TESTRESPONSE: \", testResponse); */\n\n    for (const vesselId of vesselIdsArray) {\n      const loiteringParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-loitering-events:latest',\n      };\n\n      const portVisitParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-port-visits-c2-events:latest',\n      };\n\n      const [loiteringResponse, portVisitResponse] = await Promise.all([\n        axios.get(vesselTrackingUrl, { params: loiteringParams }),\n        axios.get(vesselTrackingUrl, { params: portVisitParams })\n      ]);\n      let latestEvent = null;\n      let eventType = '';\n\n      if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n        latestEvent = loiteringResponse.data.entries[0];\n        eventType = 'Loitering';\n      }\n\n      if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n        const portVisitEvent = portVisitResponse.data.entries[0];\n        if (!latestEvent || new Date(portVisitEvent.end) > new Date(latestEvent.end)) {\n          latestEvent = portVisitEvent;\n          eventType = 'Port Visit';\n        }\n      }\n\n      if (latestEvent) {\n        allVesselPositions.push({\n          id: vesselId,\n          name: latestEvent.vessel?.name || 'Unknown Vessel',\n          position: latestEvent.position,\n          lastSeen: latestEvent.end,\n          eventType: eventType,\n          ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n          flag: latestEvent.vessel?.flag || 'ARE'\n        });\n      }\n    }\n    allVesselPositions.forEach(vessel => {\n      const ssvid = vessel.ssvid;\n      \n      if (vesselIds[ssvid]) {\n      // Zusätzliche Attribute aus der vesselData zuweisen\n        vessel.length = vesselIds[ssvid].length || 'Unknown';\n        vessel.beam = vesselIds[ssvid].beam || 'Unknown';\n        vessel.grossTonage = vesselIds[ssvid].grossTonage || 'Unknown';\n        vessel.purpose = vesselIds[ssvid].purpose || 'Unknown';\n        vessel.cableCapacity = vesselIds[ssvid].cableCapacity || 'Unknown';\n        vessel.notes = vesselIds[ssvid].notes || 'Unknown';\n        vessel.baseport = vesselIds[ssvid].baseport || 'Unknown';\n        vessel.owner = vesselIds[ssvid].owner || 'Unknown';\n      } else {\n        vessel.length = 'Unknown';\n        vessel.beam = 'Unknown';\n        vessel.grossTonage = 'Unknown';\n      }\n    });\n    localVesselPositions.value = allVesselPositions;\n    emit('update:vesselPositions', localVesselPositions.value);\n    vesselPostResponse.value = { data: { entries: allVesselPositions } };\n    vesselModifiedPostUrl.value = vesselTrackingUrl.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n\n  } catch (error) {\n    console.error(\"Error fetching vessel tracking data:\", error);\n  }\n  vesselLayerReady.value = true;\n}\n\nconst formattedEndDate = ref(new Date());\nconst formattedStartDate = ref(new Date(formattedEndDate.value.getFullYear() - 1, formattedEndDate.value.getMonth(), formattedEndDate.value.getDate()));\n\n//When date changes by TimelineSlider\nconst onDateChange = () => {\n  if (vesselTrackingSelected.value) {\n    formattedStartDate.value = formatDate(startDate.value);\n    formattedEndDate.value = formatDate(endDate.value);\n\n    const start = new Date(startDate.value);\n    const end = new Date(endDate.value);\n    const timeDiff = end - start;\n    \n    if (timeDiff < 3600000) {\n      console.warn(\"Selected time range is very short, which may result in insufficient data\");\n    }\n  \n    vesselTrack(formattedStartDate.value, formattedEndDate.value);\n  }\n};\n\n//Helper function to format Date into API Call correct data\nconst formatDate = (date) => {\n  const d = new Date(date);\n  let month = '' + (d.getMonth() + 1);\n  let day = '' + d.getDate();\n  const year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\n//API Call for specific vesselTrack of one currentTrackedVessel\nasync function vesselTrack(startDate, endDate) {\n  if (!currentTrackedVessel.value) return;\n  \n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const extendedStartDate = new Date(startDate);\n  const extendedEndDate = new Date(endDate);\n  extendedStartDate.setMonth(extendedStartDate.getMonth() - 5);\n  extendedEndDate.setMonth(extendedEndDate.getMonth() + 5);\n  \n  const baseParams = {\n    limit: 1000,\n    offset: 0,\n    sort: '-start',\n    vessels: [currentTrackedVessel.value],\n    'start-date': formatDate(extendedStartDate),\n    'end-date': formatDate(extendedEndDate),\n  };\n  \n  try {\n    const [portVisitsResponse, loiteringResponse] = await Promise.all([\n      axios.get(vesselTrackingUrl, {\n        params: {...baseParams, 'datasets[0]': 'public-global-port-visits-c2-events:latest'}\n      }),\n      axios.get(vesselTrackingUrl, {\n        params: {...baseParams, 'datasets[0]': 'public-global-loitering-events:latest'}\n      })\n    ]);\n    \n    // Check if the responses have the expected structure\n    const portVisits = portVisitsResponse?.data?.entries || [];\n    const loiteringEvents = loiteringResponse?.data?.entries || [];\n    \n    // Combine and sort the events from both responses\n    const allEvents = [\n      ...portVisits.map(entry => ({...entry, type: 'PortVisit'})),\n      ...loiteringEvents.map(entry => ({...entry, type: 'Loitering'}))\n    ].sort((a, b) => new Date(b.start) - new Date(a.start));\n    \n    // Check if we have any events\n    if (allEvents.length === 0) {\n      console.warn(\"No vessel events found for the selected time period\");\n      interpolatedEvents.value = [];\n      return;\n    }\n    \n    // Process the events\n    const formattedEvents = allEvents.map(entry => {\n      // Validate each entry has the required fields\n      if (!entry.position || !entry.vessel) {\n        console.warn(\"Invalid event entry:\", entry);\n        return null;\n      }\n      \n      return {\n        start: entry.start,\n        end: entry.end,\n        position: entry.position,\n        flag: entry.vessel?.flag || 'Unknown',\n        name: entry.vessel?.name || 'Unknown Vessel',\n        mmsi: entry.vessel?.ssvid || 'Unknown',\n        type: entry.type\n      };\n    }).filter(event => event !== null); // Remove any null entries\n    \n    interpolatedEvents.value = formattedEvents;\n    \n    if (formattedEvents.length > 0) {\n      drawVesselTrack(interpolatedEvents.value);\n    } else {\n      console.warn(\"No valid vessel events found after filtering\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching vessel track data:\", error);\n    interpolatedEvents.value = [];\n  }\n}\n//Function to draw the vessel Track on the mapInstance\nconst drawVesselTrack = (trackData) => {\n\n  \n  // Get map instance, with fallback options\n  let mapInstanceToUse = props.mapInstance;\n  \n  if (!mapInstanceToUse && props.cableStore) {\n    mapInstanceToUse = props.cableStore.getMapInstance;\n  }\n  \n  if (!trackData || trackData.length === 0) {\n    console.warn(\"No track data available\");\n    return;\n  }\n  \n  const startDate = new Date(formattedStartDate.value);\n  const endDate = new Date(formattedEndDate.value);\n  \n\n  const timeDiff = endDate - startDate;\n  if (timeDiff < 3600000) { // Less than 1 hour\n    console.warn(\"Time range is too short, which may result in insufficient data\");\n  }\n\n  if (isNaN(startDate) || isNaN(endDate)) {\n    console.error(\"Invalid date range provided:\", formattedStartDate.value, formattedEndDate.value);\n    return;\n  }\n  \n  // Filter the track data within the date range\n  const filteredData = trackData.filter(event => {\n    const eventStartDate = new Date(event.start);\n    const eventEndDate = new Date(event.end);\n    return (\n      (eventStartDate >= startDate && eventStartDate <= endDate) ||\n      (eventEndDate >= startDate && eventEndDate <= endDate)\n    );\n  });\n    \n  if (filteredData.length === 0) {\n    console.warn(\"No track data within the specified date range.\");\n    return;\n  }\n  \n  // Remove existing vessel track layer if it exists\n  if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n    mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n  }\n  \n  // Get the track points\n  const trackPoints = filteredData\n    .map(event => {\n      const lat = event.position?.lat;\n      const lon = event.position?.lon;\n      \n      if (!isValidCoordinate(lat, lon)) {\n        console.warn(\"Invalid coordinates in track data\", event);\n        return null;\n      }\n      \n      return [lat, lon];\n    })\n    .filter(point => point !== null)\n    .reverse();\n\n  if (trackPoints.length < 2) {\n    console.warn(\"Not enough valid track points to draw polyline\");\n    return;\n  }\n\n  try {\n    if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n      mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n    }\n    vesselTrackLayer.value = L.polyline(trackPoints, {\n      color: '#ad7dad',\n      weight: 3,\n      opacity: 0.7\n    }).arrowheads({\n      size: '20px',\n      yawn: 30,\n      fill: true\n    }).addTo(mapInstanceToUse);\n    \n    // Fit the map to the bounds of the track\n    if (vesselTrackLayer.value) {\n      vesselTrackLayer.value.addTo(mapInstanceToUse);\n      \n      // Only fit bounds if there are valid points\n      if (vesselTrackLayer.value.getBounds && !vesselTrackLayer.value.getBounds().isValid()) {\n        console.warn(\"Invalid bounds for vessel track layer\");\n      } else if (vesselTrackLayer.value.getBounds) {\n        mapInstanceToUse.fitBounds(vesselTrackLayer.value.getBounds());\n      }\n    }\n      } catch (error) {\n    console.error(\"Error creating polyline:\", error);\n  }\n};\n\n/*\n  Handles the click on viewVesselTrack on the Vessel Popup\n  Deselects Cables on Map, so that track is better distinguishable\n  filters vesselPositions after the one tracked Vessel\n*/\nconst viewVesselTrack = async (vessel) => {\n  try {\n    if (!vessel || !vessel.ssvid) {\n      console.error('Invalid vessel data provided to viewVesselTrack');\n      return;\n    }\n    vesselTrackingSelected.value = true;\n    isVesselTrackingMode.value = true;\n    isSearchSelected.value = vessel.fromSidebar || false;\n\n    // Initialize the cable store\n    const cableStore = useDataCablesStore();\n\n    if (vesselIds[vessel.ssvid]) {\n      currentTrackedVessel.value = vesselIds[vessel.ssvid].vesselId;\n    } else {\n      console.error('Vessel ID not found for ssvid:', vessel.ssvid);\n      return;\n    }\n\n    // Ensure we're using the cable store instance correctly\n    if (cableStore && cableStore.dataCables) {\n      // Deselect cables first\n      cableStore.deselectCables();\n      await nextTick();\n\n      // Update vessel positions if needed\n      if (!vessel.fromSidebar && Array.isArray(localVesselPositions.value)) {\n        localVesselPositions.value = localVesselPositions.value.filter(v => v.id === vessel.id);\n        emit('update:vesselPositions', localVesselPositions.value);\n      }\n\n      // Fetch vessel track data\n      await vesselTrack(formattedStartDate.value, formattedEndDate.value);\n      toggleVesselTracking();\n      //emit('update:viewingVesselTrack', true);\n\n      // Explicitly update cable opacity using the store\n      cableStore.setAllCablesOpacity(0.15); // Ensure this is called\n\n      // Force a reactivity update\n      await nextTick();\n    } else {\n      console.error('Cable store or dataCables not properly initialized');\n    }\n  } catch (error) {\n    console.error('Error in viewVesselTrack:', error);\n    isVesselTrackingMode.value = false;\n    vesselTrackingSelected.value = false;\n    isSearchSelected.value = false;\n  }\n};\n\nconst exitVesselTrackingMode = () => {\n  isVesselTrackingMode.value = false;\n  vesselTrackingSelected.value = false;\n  isSearchSelected.value = false;\n  currentTrackedVessel.value = null;\n  hoveredMarker.value = null;\n  emit( 'update:hoveredMarker', null);\n  \n  // Clear the cable ships layer group\n  const updatedPositions = props.vesselPositions.filter(vessel => {\n    if (vessel.fromSidebar) {\n      // Remove sidebar-created markers\n      if (vessel.marker && props.mapInstance.hasLayer(vessel.marker)) {\n        props.mapInstance.removeLayer(vessel.marker);\n       }\n      if (vessel.popup && props.mapInstance.hasLayer(vessel.popup)) {\n        props.mapInstance.removeLayer(vessel.popup);        \n      }        \n    }\n    props.layerGroup.clearLayers();\n  });\n\n  toggleVesselTracking();\n  //emit('update:viewingVesselTrack', false);\n  \n  vesselTracking();\n  props.cableStore.dataCables.forEach(cable => {\n    cable.opacity = 1;\n  });\n  \n  if (vesselTrackLayer.value) {\n    props.mapInstance.removeLayer(vesselTrackLayer.value);\n    vesselTrackLayer.value = null;\n  }\n};\n\nconst viewingVesselTrack = ref(false);\n\nconst toggleVesselTracking = () => {\n  const newValue = !viewingVesselTrack.value;\n  viewingVesselTrack.value = newValue;\n  cableStore.setViewingVesselTrack(newValue);\n};\n\n//Handle Ship Clicks\nconst onShipClick = (e, vessel) => {\n  try {    \n    if (!vessel || !vessel.lastSeen) {\n      console.error('Invalid vessel data provided to onShipClick');\n      return;\n    }\n\n    // Get map instance from the cable store\n    const mapInstance = props.cableStore.getMapInstance;\n    if (!mapInstance) {\n      console.error('Map instance is not available from cableStore');\n      return;\n    }\n\n    const lastSeenDate = new Date(vessel.lastSeen);\n    const formattedDate = lastSeenDate.toLocaleString('en-GB', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      hour12: false\n    });\n\n    // Create popup content\n    const popupContent = `\n      <div>\n        <strong>${vessel.name || 'Unknown Vessel'}</strong><br/>\n        <strong>${currentTranslations.value?.lastSeen || 'Last Seen'}:</strong> ${formattedDate}<br/>\n        <strong>${currentTranslations.value?.event || 'Event'}:</strong> ${vessel.eventType || 'Unknown'}<br/>\n        <strong>MMSI:</strong> ${vessel.ssvid || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.flag || 'Flag'}:</strong> ${getFlagEmoji(vessel.flag)}${vessel.flag}<br/>\n        <strong>${currentTranslations.value?.length || 'Length'}:</strong> ${vessel.length || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.beam || 'Beam'}:</strong> ${vessel.beam || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.grossTonnage || 'Gross Tonnage'}:</strong> ${vessel.grossTonage || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.purpose || 'Purpose'}:</strong> ${vessel.purpose || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.cableCapacity || 'Cable Capacity'}:</strong> ${vessel.cableCapacity || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.notes || 'Notes'}:</strong> ${vessel.notes || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.baseport || 'Base Port'}:</strong> ${vessel.baseport || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.owner || 'Owner'}:</strong> ${vessel.owner || 'Unknown'}<br/>\n        <a href=\"#\" id=\"getVesselTrack\">${currentTranslations.value?.viewVesselTrack || 'View Vessel Track'}</a><br/>\n        <a href=\"https://www.vesselfinder.com/vessels/details/${vessel.ssvid}\" target=\"_blank\">\n          ${currentTranslations.value?.viewOn || 'View on VesselFinder'}\n        </a>\n      </div>\n    `;\n\n    // Create and configure the popup\n    const popup = L.popup({\n      maxWidth: 300,\n      className: 'vessel-popup'\n    });\n\n    // Set popup location and content\n    popup.setLatLng([\n      e.latlng.lat || vessel.position.lat,\n      e.latlng.lng || vessel.position.lon\n    ]);\n    popup.setContent(popupContent);\n\n    // Remove existing popup if any\n    if (vessel.popup && mapInstance.hasLayer(vessel.popup)) {\n      mapInstance.removeLayer(vessel.popup);\n    }\n\n    // Add the new popup to the map\n    popup.addTo(mapInstance);\n\n    // Store the popup reference\n    vessel.popup = popup;\n\n    // Add event listener after popup is added to DOM\n    nextTick(() => {\n      const trackLink = document.getElementById(\"getVesselTrack\");\n      if (trackLink) {\n        trackLink.addEventListener(\"click\", function(event) {\n          event.preventDefault();\n          viewVesselTrack(vessel);\n        });\n      }\n    });\n\n  } catch (error) {\n    console.error('Error in onShipClick:', error);\n    // Try to provide more specific error information\n    if (error instanceof Error) {\n      console.error('Error details:', error.message);\n    }\n  }\n};\n\n// Add resize observer to update timeline width when map size changes\nonMounted(() => {\n  if (props.mapInstance) {\n    const resizeObserver = new ResizeObserver(() => {\n      // Force reactive update of computed style\n      nextTick(() => {\n        const mapBounds = props.mapInstance.getContainer().getBoundingClientRect();\n        if (vesselTrackingSelected.value) {\n          const container = document.querySelector('.date-popup-vesselTrack');\n          if (container) {\n            container.style.width = `${mapBounds.width}px`;\n            if (isSearchSelected.value) {\n              container.style.left = `${mapBounds.left}px`;\n            }\n          }\n        }\n      });\n    });\n    \n    resizeObserver.observe(props.mapInstance.getContainer());\n    \n    // Cleanup observer on component unmount\n    onUnmounted(() => {\n      resizeObserver.disconnect();\n      exitVesselTrackingMode();\n    });\n  }\n});\n\n// Expose necessary methods and reactive variables\ndefineExpose({\n  isSearchSelected,\n  vesselLayerReady,\n  isVesselTrackingMode,\n  vesselTrackingSelected,\n  vesselEvents,\n  hoveredMarker,\n  startDate,\n  endDate,\n  localVesselPositions,\n  onShipClick,\n  createShipIcon,\n  exitVesselTrackingMode,\n  vesselTracking,\n  viewVesselTrack\n});\n</script>\n\n<style scoped>\n.tracking-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 8px;\n}\n\n.date-picker-container {\n  flex-grow: 1;\n  max-width: 300px;\n}\n\n.custom-datepicker {\n  left: 20px;\n  width: 2%;\n  position: relative;\n}\n\n:deep(.custom-datepicker) .dp__input{\n  height: 36px !important;\n  width: 36px !important;\n  border: 3px solid #007bff !important;\n}\n:deep(.custom-datepicker) .dp__input:hover{\n  border: 3px solid #bababa !important;\n}\n:deep(.custom-datepicker) .dp__icon{\n  pointer-events: none;\n  font-weight: bold !important;\n  height: 22px !important; \n  width: 22px !important; \n  left: 8.5px !important;\n}\n:deep(.custom-datepicker) .dp__input{\n  height: 100%;\n  cursor: pointer;\n}\n:deep(.custom-datepicker) .dp__clear_icon {\n  visibility: hidden;\n}\n:deep(.custom-datepicker) .dp__input_icon_wrapper {\n  pointer-events: auto;\n  cursor: pointer;\n}\n:deep(.custom-datepicker) .dp--menu-wrapper {\n  left: -3px !important;\n}\n:deep(.custom-datepicker) .dp__arrow_bottom {\n  left: 20px !important;\n}\n.date-popup-vesselTrack {\n  position: absolute;\n  z-index: 1000;\n  background: #48506a;\n  padding: 0.875rem;\n  border-radius: 4px;\n}\n\n.date-popup-vesselTrack.map-selected {\n  bottom: 20px;\n  left: 0;\n}\n\n.date-popup-vesselTrack.search-selected {\n  bottom: 20px;\n}\n.timeline-slider {\n  width: 90%;\n  height: auto;\n  margin: 0 auto;\n}\n</style>","import script from \"./VesselTracking.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./VesselTracking.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./VesselTracking.vue?vue&type=style&index=0&id=5e3bbcfc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e3bbcfc\"]])\n\nexport default __exports__","<template>\n  <div \n    v-if=\"isVisible\" \n    class=\"maintenance-layer-toggle-popup\"\n    :class=\"{ 'viewing-vessel-track': props.viewingVesselTrack }\"\n  >\n    <h3 class=\"maintenance-layer-title\">\n      {{props.currentTranslations.maintenanceZonesLayer}}\n    </h3>\n    <div class=\"layers-container\">\n      <div \n        v-for=\"layer in layers\" \n        :key=\"layer.name\" \n        class=\"layer-toggle\"\n      >\n        <input \n          :id=\"layer.name\" \n          type=\"checkbox\" \n          v-model=\"layer.visible\" \n          @change=\"toggleLayer(layer)\" \n          class=\"layer-checkbox\"\n        />\n        <label \n          :for=\"layer.name\" \n          class=\"layer-label\"\n        >\n          {{props.currentTranslations[layer.translatedKey]}}\n        </label>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script setup>\nimport { ref } from 'vue';\nimport L from 'leaflet';\nimport maintenanceZonesJson from '@/assets/cableMaintenanceZones.json';\nimport privateMaintenanceZonesJson from '@/assets/privateMaintenanceAgreementZones.json';\n\nconst props = defineProps({\n  mapInstance: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  currentTranslations: { type: Object, required: true },\n  viewingVesselTrack: { type: Object, required: true },\n});\n\nconst isVisible = ref(false);\nconst zoneLabels = new Map();\nconst highlightedLayers = [];\n\nconst zoneColors = {\n  ACMA: '#FF6B6B',\n  NAZ: '#19422a',\n  MECMA: '#2cd42c',\n  '20CMA': '#FDCB6E',\n  SEAIOCMA: '#6C5CE7',\n  YZ: '#FF8A5B',\n  APMA: '#FFB900',\n  AAPMMSAA: '#FF6D9A',\n  SPZ: '#A569BD',\n  'E-MARINE': '#34D399',\n};\n\nconst layers = ref([\n  {\n    name: 'PublicMaintenanceZones',\n    translatedKey: 'publicMaintenanceZonesLayer',\n    defaultName: 'PublicMaintenanceZones',\n    visible: false,\n    geoJsonLayer: null,\n    features: maintenanceZonesJson.features,\n  },\n  {\n    name: 'PrivateMaintenanceZones',\n    translatedKey: 'privateMaintenanceZonesLayer',\n    defaultName: 'PrivateMaintenanceZones',\n    visible: false,\n    geoJsonLayer: null,\n    features: privateMaintenanceZonesJson.features,\n  },\n]);\n\nconst getZoneStyle = (feature) => {\n  const abbreviation = feature.properties.abbreviation;\n  const defaultStyle = { color: '#000000', weight: 2, opacity: 0.7, fillOpacity: 0.3 };\n  if (zoneColors[abbreviation]) {\n    return {\n      ...defaultStyle,\n      color: zoneColors[abbreviation],\n      fillColor: zoneColors[abbreviation],\n    };\n  }\n  return defaultStyle;\n};\n\nconst createLabel = (feature) => {\n  const geoJson = L.geoJSON(feature);\n  const bounds = geoJson.getBounds();\n  const center = bounds.getCenter();\n  const abbreviation = feature.properties.abbreviation;\n  const labelColor = zoneColors[abbreviation] || '#000000';\n  return L.marker(center, {\n    icon: L.divIcon({\n      className: 'maintenance-zone-label',\n      html: `<div style=\"color:${labelColor};\">${feature.properties.abbreviation}</div>`,\n      iconSize: null,\n    }),\n    interactive: false,\n  });\n};\n\nconst highlightZone = (feature, event) => {\n    if (!props.mapInstance) return;\n\n    // Clear previously highlighted layers\n    highlightedLayers.forEach((layer) => {\n        props.mapInstance.removeLayer(layer);\n    });\n    highlightedLayers.length = 0;\n\n    const abbreviation = feature.properties.abbreviation;\n\n    // Highlight all features with the same abbreviation\n    layers.value.forEach((layerConfig) => {\n        layerConfig.features.forEach((featureItem) => {\n            if (featureItem.properties.abbreviation === abbreviation) {\n                const highlightStyle = {\n                    color: zoneColors[abbreviation] || '#FFD700',\n                    weight: 4,\n                    opacity: 1,\n                    fillOpacity: 0.6,\n                };\n                const highlightedLayer = L.geoJSON(featureItem, { style: highlightStyle }).addTo(props.mapInstance);\n                highlightedLayers.push(highlightedLayer);\n            }\n        });\n    });\n\n    // Create a popup for the selected feature\n    const popupContent = `\n        <strong>${props.currentTranslations.abbreviation}:</strong>${feature.properties.abbreviation}<br/>\n        <strong>${props.currentTranslations.name}:</strong>${feature.properties.name}<br/>\n    `;\n    const popup = L.popup()\n        .setLatLng(L.geoJSON(feature).getBounds().getCenter())\n        .setContent(popupContent)\n        .openOn(props.mapInstance);\n\n    // Prevent the click event from propagating to the map\n    event.stopPropagation();\n};\n\n\nconst clearHighlightedZones = () => {\n  highlightedLayers.forEach((layer) => {\n    props.mapInstance.removeLayer(layer);\n  });\n  highlightedLayers.length = 0;\n};\n\nconst toggleLayer = (layerConfig) => {\n  if (!props.mapInstance) return;\n\n  if (layerConfig.visible) {\n    if (!layerConfig.geoJsonLayer) {\n      layerConfig.geoJsonLayer = L.geoJSON(layerConfig.features, {\n        style: getZoneStyle,\n        onEachFeature: (feature, layer) => {\n          layer.on({ click: () => highlightZone(feature, event) });\n        },\n      }).addTo(props.mapInstance);\n    } else {\n      props.mapInstance.addLayer(layerConfig.geoJsonLayer);\n    }\n\n    layerConfig.features.forEach((feature) => {\n      const labelKey = `${layerConfig.name}-${feature.properties.abbreviation}`;\n      let label = zoneLabels.get(labelKey);\n      if (!label) {\n        label = createLabel(feature);\n        zoneLabels.set(labelKey, label);\n      }\n      label.addTo(props.mapInstance);\n    });\n  } else {\n    if (layerConfig.geoJsonLayer) {\n      props.mapInstance.removeLayer(layerConfig.geoJsonLayer);\n    }\n    layerConfig.features.forEach((feature) => {\n      const labelKey = `${layerConfig.name}-${feature.properties.abbreviation}`;\n      const label = zoneLabels.get(labelKey);\n      if (label) {\n        props.mapInstance.removeLayer(label);\n      }\n    });\n  }\n};\n\nconst resetLayers = () => {\n  layers.value.forEach((layer) => {\n    layer.visible = false;\n    if (layer.geoJsonLayer) {\n      props.mapInstance.removeLayer(layer.geoJsonLayer);\n    }\n    layer.features.forEach((feature) => {\n      const labelKey = `${layer.name}-${feature.properties.abbreviation}`;\n      const label = zoneLabels.get(labelKey);\n      if (label) {\n        props.mapInstance.removeLayer(label);\n      }\n    });\n  });\n  clearHighlightedZones();\n};\n\ndefineExpose({\n  show: () => {\n    isVisible.value = true;\n  },\n  hide: () => {\n    isVisible.value = false;\n    resetLayers();\n  },\n  clearHighlightedZones,\n});\n</script>\n\n\n<style>\n.maintenance-layer-toggle-popup {\n  font-size: 13px;\n  font-weight: bold;\n  text-align: left;\n  position: absolute;\n  bottom: 20px;\n  right: 12px;\n  width: 230px;\n  max-height: 150px;\n  z-index: 500;\n  background-color: #48506a;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  overflow: hidden;\n}\n\n/* Add new class for vessel track view positioning */\n.maintenance-layer-toggle-popup.viewing-vessel-track {\n  bottom: 220px;\n  left: 20px;\n}\n\n/* Adjust other positioning classes to work with vessel track */\n.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 200px;\n}\n\n.anchorage-active:not(.ocean-depth-active) .maintenance-layer-toggle-popup {\n  right: 210px;\n}\n\n.cable-ships-active.anchorage-active.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 400px;\n}\n\n/* Add combined classes for when both vessel track and other states are active */\n.viewing-vessel-track.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 400px;\n}\n\n.viewing-vessel-track.anchorage-active:not(.ocean-depth-active) .maintenance-layer-toggle-popup {\n  right: 410px;\n}\n\n.viewing-vessel-track.cable-ships-active.anchorage-active.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 600px;\n}\n\n/* Rest of the styles remain the same */\n.maintenance-layer-title {\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: white;\n  text-align: center;\n}\n\n.layers-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 100px;\n  overflow-y: auto;\n}\n\n.layer-toggle {\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.layer-checkbox {\n  margin-right: 8px;\n  width: 16px;\n  height: 16px;\n}\n\n.layer-label {\n  color: white;\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.maintenance-zone-label {\n  background-color: white;\n  border: 1px solid #333;\n  border-radius: 4px;\n  padding: 2px 6px;\n  font-size: 12px;\n  font-weight: bold;\n  white-space: nowrap;\n}\n</style>","import script from \"./MaintenanceLayerToggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MaintenanceLayerToggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MaintenanceLayerToggle.vue?vue&type=style&index=0&id=1b6975df&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\n  import { ref, onUnmounted, watch } from 'vue'\n  import L from 'leaflet'\n  import Supercluster from 'supercluster'\n  import datacenters from '@/assets/datacenters.json'\n  \n  const props = defineProps({\n    mapInstance: {\n      type: Object,\n      required: true\n    },\n    controlInstance: {\n      type: Object,\n      required: true\n    },\n    mapReady: {\n      type: Boolean,\n      required: true\n    },\n    currentTranslations: {\n      type: Object,\n      required: true\n    },\n  })\n  \n  // Helper function to format property keys for display\n  const formatPropertyKey = (key) => {\n    return key.replace('@', '')\n      .split(':')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join('')\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join('')\n  }\n  \n  // Create tooltip content from properties\n  const createTooltipContent = (properties) => {\n    const excludeKeys = ['originalGeometry', 'cluster', 'cluster_id', 'point_count', 'point_count_abbreviated', 'id']\n    const content = Object.entries(properties)\n      .filter(([key, value]) => \n        !excludeKeys.includes(key) && \n        value !== null && \n        value !== undefined && \n        value !== '' && \n        !key.toLowerCase().includes('id')\n      )\n      .map(([key, value]) => \n        `<div class=\"tooltip-row\"><strong>${formatPropertyKey(key)}:</strong> ${\n          value.toString().startsWith('http') ? \n          `<a href=\"${value}\" target=\"_blank\" rel=\"noopener noreferrer\">${value}</a>` : \n          value\n        }</div>`\n      )\n      .join('')\n    return `<div class=\"datacenter-tooltip\">${content}</div>`\n  }\n  \n  const supercluster = ref(null)\n  try {\n    supercluster.value = new Supercluster({\n      radius: 40,\n      maxZoom: 16,\n      map: (props) => ({\n        ...props.properties,\n        count: 1,\n        originalGeometry: props.originalGeometry\n      }),\n      reduce: (accumulated, props) => {\n        accumulated.count += props.count\n      }\n    })\n  \n    const formattedFeatures = datacenters.features.map(feature => ({\n      type: 'Feature',\n      properties: {\n        ...feature.properties, \n        originalGeometry: feature.geometry.type === 'Polygon' ? feature.geometry : null\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: feature.geometry.type === 'Polygon' ? \n          [feature.geometry.coordinates[0][0][0], feature.geometry.coordinates[0][0][1]] : \n          feature.geometry.coordinates\n      }\n    }))\n    \n    supercluster.value.load(formattedFeatures)\n  } catch (error) {\n    console.error('Failed to initialize Supercluster:', error)\n  }\n  \n  const dataCenterLayer = ref(null)\n  const polygonLayer = ref(null) // Separate layer for polygons\n  const isLayerVisible = ref(false)\n  \n  const createDataCenterIcon = () => {\n    return L.divIcon({\n      html: `<div class=\"data-center-marker\"><svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" fill=\"#4a90e2\" rx=\"2\"/><rect x=\"6\" y=\"4\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"8\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"12\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"16\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><circle cx=\"7\" cy=\"5.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"9.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"13.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"17.5\" r=\"0.5\" fill=\"#00ff00\"/></svg></div>`,\n      className: 'data-center-icon',\n      iconSize: [24, 24],\n      iconAnchor: [12, 12]\n    })\n  }\n  \n  // Helper function to bind interactive tooltip\n  const bindInteractiveTooltip = (layer, content) => {\n    const tooltip = layer.bindTooltip(content, {\n      permanent: false,\n      direction: 'top',\n      className: 'datacenter-tooltip interactive',\n      opacity: 1\n    }).getTooltip()\n    \n    // Make tooltip interactive\n    if (tooltip) {\n      const tooltipElement = tooltip.getElement()\n      if (tooltipElement) {\n        tooltipElement.style.pointerEvents = 'auto'\n      }\n    }\n  }\n  \n  const updateClusters = () => {\n    if (!props.mapInstance || !dataCenterLayer.value || !isLayerVisible.value) {\n      return\n    }\n    \n    try {\n      const bounds = props.mapInstance.getBounds()\n      const zoom = Math.floor(props.mapInstance.getZoom())\n      const bbox = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()]\n      const clusters = supercluster.value.getClusters(bbox, zoom)\n      \n      dataCenterLayer.value.clearLayers()\n      \n      // Clear polygon layer if it exists\n      if (polygonLayer.value) {\n        polygonLayer.value.clearLayers()\n      }\n      \n      clusters.forEach((cluster) => {\n        const [lng, lat] = cluster.geometry.coordinates\n        const latlng = L.latLng(lat, lng)\n        \n        if (cluster.properties.cluster) {\n          const count = cluster.properties.point_count\n          const size = count < 10 ? 'small' : count < 50 ? 'medium' : 'large'\n          const marker = L.marker(latlng, {\n            icon: L.divIcon({\n              html: `<div class=\"cluster-marker ${size}\"><div class=\"cluster-count\">${count}</div></div>`,\n              className: 'custom-cluster-icon',\n              iconSize: [40, 40],\n              iconAnchor: [20, 20]\n            })\n          })\n          \n          marker.on('click', () => {\n            const expansionZoom = supercluster.value.getClusterExpansionZoom(cluster.properties.cluster_id)\n            props.mapInstance.setView(latlng, expansionZoom)\n          })\n          \n          dataCenterLayer.value.addLayer(marker)\n        } else {\n          // Handle polygons separately to avoid animation issues\n          if (cluster.properties.originalGeometry && polygonLayer.value) {\n            try {\n              const polygon = L.polygon(\n                cluster.properties.originalGeometry.coordinates[0].map(coord => [coord[1], coord[0]]),\n                {\n                  color: '#4a90e2',\n                  weight: 2,\n                  fillColor: '#4a90e2',\n                  fillOpacity: 0.2,\n                  // Disable animation for polygons to prevent the error\n                  pane: 'overlayPane'\n                }\n              )\n              const tooltipContent = createTooltipContent(cluster.properties)\n              bindInteractiveTooltip(polygon, tooltipContent)\n              polygonLayer.value.addLayer(polygon)\n            } catch (polygonErr) {\n              console.error('Error creating polygon:', polygonErr)\n            }\n          }\n          \n          // Still add the marker\n          const marker = L.marker(latlng, {\n            icon: createDataCenterIcon()\n          })\n          \n          const tooltipContent = createTooltipContent(cluster.properties)\n          bindInteractiveTooltip(marker, tooltipContent)\n          dataCenterLayer.value.addLayer(marker)\n        }\n      })\n    } catch (error) {\n      console.error('Error in updateClusters:', error)\n    }\n  }\n  \n  const initializeLayer = () => {\n    if (!props.mapInstance || !props.controlInstance) {\n      return\n    }\n    \n    try {\n      // Create separate layer for polygons to manage their animation separately\n      polygonLayer.value = L.layerGroup()\n      dataCenterLayer.value = L.layerGroup()\n      \n      // Add both layers to the map\n      props.mapInstance.addLayer(polygonLayer.value)\n      props.controlInstance.addOverlay(dataCenterLayer.value, 'Data Centers', false)\n      \n      // This is critical: disable animations for the polygon layer\n      if (props.mapInstance.options) {\n        // Preserve existing options\n        const currentZoomAnimation = props.mapInstance.options.zoomAnimation\n        \n        // Add zoomend event listener that runs before animation starts\n        props.mapInstance.on('zoomanim', (e) => {\n          if (isLayerVisible.value && polygonLayer.value) {\n            // Hide polygons during zoom animation\n            polygonLayer.value.eachLayer((layer) => {\n              if (layer._path) {\n                layer._path.style.display = 'none'\n              }\n            })\n          }\n        })\n        \n        // Add zoomend event listener\n        props.mapInstance.on('zoomend', () => {\n          updateClusters()\n          \n          // Show polygons after zoom animation completes\n          if (isLayerVisible.value && polygonLayer.value) {\n            polygonLayer.value.eachLayer((layer) => {\n              if (layer._path) {\n                layer._path.style.display = ''\n              }\n            })\n          }\n        })\n      }\n      \n      props.mapInstance.on('moveend', updateClusters)\n      \n      props.mapInstance.on('overlayadd', (e) => {\n        if (e.name === 'Data Centers') {\n          isLayerVisible.value = true\n          if (!props.mapInstance.hasLayer(polygonLayer.value)) {\n            props.mapInstance.addLayer(polygonLayer.value)\n          }\n          updateClusters()\n        }\n      })\n      \n      props.mapInstance.on('overlayremove', (e) => {\n        if (e.name === 'Data Centers') {\n          isLayerVisible.value = false\n          if (props.mapInstance.hasLayer(polygonLayer.value)) {\n            props.mapInstance.removeLayer(polygonLayer.value)\n          }\n        }\n      })\n      \n      isLayerVisible.value = false\n    } catch (error) {\n      console.error('Error in initializeLayer:', error)\n    }\n  }\n  \n  watch(\n    [() => props.mapReady, () => props.controlInstance],\n    ([mapReady, controlInst]) => {\n      if (mapReady && controlInst) {\n        initializeLayer()\n      }\n    },\n    { immediate: true }\n  )\n  \n  onUnmounted(() => {\n    if (props.mapInstance) {\n      props.mapInstance.off('moveend', updateClusters)\n      props.mapInstance.off('zoomend', updateClusters)\n      props.mapInstance.off('zoomanim')\n      \n      if (dataCenterLayer.value) {\n        props.mapInstance.removeLayer(dataCenterLayer.value)\n      }\n      \n      if (polygonLayer.value) {\n        props.mapInstance.removeLayer(polygonLayer.value)\n      }\n    }\n  })\n  \n  defineExpose({\n    dataCenterLayer,\n  })\n  </script>\n  \n  <style>\n  .custom-cluster-icon {\n    background: none;\n    border: none;\n  }\n  \n  .cluster-marker {\n    background-color: #4a90e2;\n    border: 2px solid #214d7c;\n    border-radius: 50%;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n  }\n  \n  .cluster-marker.small {\n    width: 30px;\n    height: 30px;\n    font-size: 12px;\n  }\n  \n  .cluster-marker.medium {\n    width: 35px;\n    height: 35px;\n    font-size: 14px;\n  }\n  \n  .cluster-marker.large {\n    width: 40px;\n    height: 40px;\n    font-size: 16px;\n  }\n  \n  .cluster-count {\n    width: 100%;\n    text-align: center;\n  }\n  \n  .data-center-marker {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .data-center-icon {\n    background: none;\n    border: none;\n  }\n  \n  .datacenter-tooltip.interactive {\n    pointer-events: auto !important;\n  }\n  \n  .leaflet-tooltip.interactive {\n    pointer-events: auto !important;\n  }\n  \n  .datacenter-tooltip {\n    padding: 8px;\n    background-color: white;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    /* Ensure tooltip is above other elements */\n    z-index: 1000;\n  }\n  \n  .tooltip-row {\n    margin: 4px 0;\n    line-height: 1.4;\n    white-space: nowrap;\n  }\n  \n  .tooltip-row a {\n    color: #4a90e2;\n    text-decoration: none;\n    cursor: pointer;\n  }\n  \n  .tooltip-row a:hover {\n    text-decoration: underline;\n  }\n  \n  /* Ensure the tooltip stays visible when hovering */\n  .leaflet-tooltip-pane {\n    z-index: 1000;\n  }\n  \n  .leaflet-tooltip {\n    pointer-events: auto !important;\n  }\n  </style>","import script from \"./ClusteredDataCenters.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClusteredDataCenters.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClusteredDataCenters.vue?vue&type=style&index=0&id=0d8ce9ef&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"isVisible\" class=\"anchorage-layer-toggle-popup\">\n    <h3 class=\"anchorage-layer-title\">{{ currentTranslations.anchorageLayerToggles }}</h3>\n    <div class=\"layers-container\">\n      <div v-for=\"layer in layers\" :key=\"layer.name\" class=\"layer-toggle\">\n        <input \n          :id=\"layer.name\" \n          type=\"checkbox\" \n          :checked=\"layer.visible\" \n          @change=\"toggleLayer(layer)\" \n          class=\"layer-checkbox\"\n        />\n        <label :for=\"layer.name\" class=\"layer-label\">\n          {{ layer.translatedName }}\n        </label>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script setup>\nimport { ref, watch, onMounted } from 'vue';\n\nconst props = defineProps({\n  mapInstance: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  currentTranslations: { type: Object, required: true }\n});\n\nconst isVisible = ref(false);\n\n// Define the layers with predefined names to match\nconst layerDefinitions = [\n  { name: 'Seamarks', translatedKey: 'seamarksLayer', defaultName: 'Seamarks' },\n  { name: 'FixedInfrastructure', translatedKey: 'fixedInfrastructureLayer', defaultName: 'Fixed Infrastructure' },\n  { name: 'Anchorage', translatedKey: 'anchorageLayer', defaultName: 'Anchorage' }\n];\n\n// Reactive layers array\nconst layers = ref(layerDefinitions.map(def => ({\n  name: def.name,\n  translatedName: props.currentTranslations[def.translatedKey] || def.defaultName,\n  layer: null,\n  visible: false\n})));\n\n// Initialize layers when map is ready\nconst initializeLayers = () => {\n  if (!props.controlInstance) return;\n\n  // Find the grouped layer\n  const groupedLayerObj = props.controlInstance._layers.find(\n    layerObj => layerObj.originalName === \"Anchorage and seabed use\"\n  );\n\n  if (!groupedLayerObj) {\n    console.warn(\"Grouped layer 'Anchorage and seabed use' not found\");\n    return;\n  }\n\n  const groupedLayer = groupedLayerObj.layer;\n\n  // Get all layers in the group\n  const allGroupLayers = groupedLayer.getLayers();\n\n  // Match layers dynamically\n  layers.value.forEach((layerConfig, index) => {\n    // Try to match layer by name similarity or use the layer by index\n    const matchedLayer = allGroupLayers.find(layer => \n      layer.options?.name?.toLowerCase().includes(layerConfig.name.toLowerCase())\n    ) || allGroupLayers[index];\n\n    if (matchedLayer) {\n      layerConfig.layer = matchedLayer;\n      \n      // Check if the layer is currently on the map\n      layerConfig.visible = props.mapInstance.hasLayer(matchedLayer);\n      \n      // If layer should be visible but isn't, add it\n      if (layerConfig.visible) {\n        props.mapInstance.addLayer(matchedLayer);\n      }\n    }\n  });\n};\n\n// Toggle individual layer visibility\nconst toggleLayer = (layerConfig) => {\n  if (!layerConfig.layer) return;\n\n  layerConfig.visible = !layerConfig.visible;\n  \n  if (layerConfig.visible) {\n    props.mapInstance.addLayer(layerConfig.layer);\n  } else {\n    props.mapInstance.removeLayer(layerConfig.layer);\n  }\n};\n\n// Watch for changes in control instance\nwatch(() => props.controlInstance, () => {\n  initializeLayers();\n}, { immediate: true });\n\ndefineExpose({\n  show: () => {\n    isVisible.value = true;\n    initializeLayers();\n  },\n  hide: () => {\n    isVisible.value = false;\n  }\n});\n</script>\n\n<style scoped>\n.anchorage-layer-toggle-popup {\n  font-size: 13px;\n  font-weight: bold;\n  text-align: left;\n  position: absolute;\n  bottom: 20px;\n  right: 12px;\n  width: 180px;\n  max-height: 150px;\n  z-index: 1000;\n  background-color: #48506a;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: right 0.3s ease;\n  overflow: hidden;\n}\n.anchorage-layer-title{\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: white;\n  text-align: center;\n}\n\n.layers-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 100px;\n  overflow-y: auto;\n}\n\n.layer-toggle {\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.layer-checkbox {\n  margin-right: 8px;\n  width: 16px;\n  height: 16px;\n}\n\n.layer-label {\n  color: white;\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.ocean-depth-active .anchorage-layer-toggle-popup {\n  right: 200px;\n}\n\n</style>\n","import script from \"./AnchorageLayerToggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AnchorageLayerToggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AnchorageLayerToggle.vue?vue&type=style&index=0&id=66af2f0a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-66af2f0a\"]])\n\nexport default __exports__","<script setup>\nimport { ref, onUnmounted, watch } from 'vue';\nimport L from 'leaflet';\nimport Supercluster from 'supercluster';\nimport anchorageData from '@/assets/anchorage.json';\nimport anchorSVG from '@/assets/graphics/anchor.svg';\n\n\nconst props = defineProps({\n  mapInstance: {\n    type: Object,\n    required: true\n  },\n  controlInstance: {\n    type: Object,\n    required: true\n  },\n  mapReady: {\n    type: Boolean,\n    required: true\n  },\n  currentTranslations: {\n    type: Object,\n    required: true\n  }\n});\n\nconst supercluster = ref(new Supercluster({\n  radius: 40,\n  maxZoom: 16,\n  map: props => ({\n    label: props.label,\n    sublabel: props.sublabel,\n    distance: props.distance_from_shore_m,\n    isDock: props.dock === 'true',\n    count: 1\n  }),\n  reduce: (accumulated, props) => {\n    accumulated.count += props.count;\n    accumulated.isDock = accumulated.isDock || props.isDock;\n    return accumulated;\n  }\n}));\n\nconst anchorageLayer = ref(null);\nconst isLayerVisible = ref(false);\n\nconst updateClusters = () => {\n  if (!props.mapInstance || !anchorageLayer.value || !isLayerVisible.value) return;\n  \n  const bounds = props.mapInstance.getBounds();\n  const bbox = [\n    bounds.getWest(),\n    bounds.getSouth(),\n    bounds.getEast(),\n    bounds.getNorth()\n  ];\n  \n  const zoom = props.mapInstance.getZoom();\n  const clusters = supercluster.value.getClusters(bbox, Math.floor(zoom));\n  \n  // Clear existing layers\n  anchorageLayer.value.clearLayers();\n  \n  clusters.forEach(cluster => {\n    const coordinates = cluster.geometry.coordinates;\n    const latlng = L.latLng(coordinates[1], coordinates[0]);\n    \n    if (cluster.properties.cluster) {\n      // Create cluster marker\n      const count = cluster.properties.point_count;\n      const size = count < 100 ? 'small' : count < 1000 ? 'medium' : 'large';\n      \n      const clusterMarker = L.divIcon({\n        html: `\n          <div class=\"cluster-marker ${size}\">\n            ${count}\n          </div>\n        `,\n        className: 'custom-cluster-icon',\n        iconSize: L.point(40, 40)\n      });\n      \n      const marker = L.marker(latlng, {\n        icon: clusterMarker\n      });\n      \n      // Add click handler to zoom into cluster\n      marker.on('click', () => {\n        const expansionZoom = supercluster.value.getClusterExpansionZoom(cluster.properties.cluster_id);\n        props.mapInstance.setView(latlng, expansionZoom);\n      });\n      \n      anchorageLayer.value.addLayer(marker);\n    } else {\n      // Create individual point marker\n      const anchorIcon = L.divIcon({\n        html: `\n          <div class=\"anchor-icon\">\n            <img src=\"${anchorSVG}\" alt=\"Anchor\" width=\"24\" height=\"24\" />\n          </div>\n        `,\n        className: 'anchor-icon',\n        iconSize: L.point(24, 24)\n      });\n      const marker = L.marker(latlng, { icon: anchorIcon });\n      // Add tooltip\n      marker.bindTooltip(`\n        <strong>${cluster.properties.label}</strong><br>\n        ${cluster.properties.sublabel}<br>\n        ${props.currentTranslations.distanceFromShore}: ${cluster.properties.distance_from_shore_m} m<br>\n        ${props.currentTranslations.isDock}: <strong>${cluster.properties.dock === 'true' ? '<span class=\"text-green-500\">✓</span>' : '<span class=\"text-red-500\">✕</span>'}</strong>\n        <br>\n      `);\n      \n      anchorageLayer.value.addLayer(marker);\n    }\n  });\n};\n\nconst initializeLayer = () => {\n  if (!props.mapInstance || !props.mapReady) return;\n  \n  // Load GeoJSON features directly into supercluster\n  supercluster.value.load(anchorageData.features);\n  \n  // Initialize layer group if not exists\n  if (!anchorageLayer.value) {\n    anchorageLayer.value = L.layerGroup();\n    \n    // Add to map control layers\n    const anchorageOverlayLayer = props.controlInstance._layers.find(\n      layerObj => layerObj.originalName === \"Anchorage and seabed use\"\n    );\n    if (anchorageOverlayLayer) {\n      anchorageOverlayLayer.layer.addLayer(anchorageLayer.value);\n    } else {\n      console.warn(\"Could not find Anchorage and seabed use layer group\");\n      // Fallback: add directly to map if layer group not found\n      props.mapInstance.addLayer(anchorageLayer.value);\n    }\n    \n    // Add event listeners for map movements\n    props.mapInstance.on('moveend', updateClusters);\n    props.mapInstance.on('zoomend', updateClusters);\n    \n    // Listen for layer add/remove events\n    props.mapInstance.on('overlayadd', (e) => {\n      if (e.name === 'Anchorage and seabed use') {\n        isLayerVisible.value = true;\n        updateClusters();\n      }\n    });\n    \n    props.mapInstance.on('overlayremove', (e) => {\n      if (e.name === 'Anchorage and seabed use') {\n        isLayerVisible.value = false;\n      }\n    });\n  }\n};\n\n// Watch for map ready state\nwatch(() => props.mapReady, (newValue) => {\n  if (newValue) {\n    initializeLayer();\n  }\n});\n\n// Clean up on component unmount\nonUnmounted(() => {\n  if (props.mapInstance && anchorageLayer.value) {\n    props.mapInstance.off('moveend', updateClusters);\n    props.mapInstance.off('zoomend', updateClusters);\n    props.mapInstance.removeLayer(anchorageLayer.value);\n  }\n});\n</script>\n\n<style>\n.custom-cluster-icon {\n  background: none;\n  border: none;\n}\n\n.cluster-marker {\n  background-color: #48506a;\n  border-radius: 50%;\n  border: 2px solid #666;\n  color: #ffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n}\n\n.cluster-marker.small {\n  width: 30px;\n  height: 30px;\n  font-size: 12px;\n}\n\n.cluster-marker.medium {\n  width: 35px;\n  height: 35px;\n  font-size: 14px;\n}\n\n.cluster-marker.large {\n  width: 40px;\n  height: 40px;\n  font-size: 16px;\n}\n\n.text-green-500 {\n  color: green;\n}\n\n.text-red-500 {\n  color: red;\n}\n</style>","import script from \"./ClusteredAnchorage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClusteredAnchorage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClusteredAnchorage.vue?vue&type=style&index=0&id=426f31e1&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vShow as _vShow } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"?\", -1)\nconst _hoisted_2 = [\n  _hoisted_1\n]\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"×\", -1)\nconst _hoisted_4 = [\n  _hoisted_3\n]\nconst _hoisted_5 = { class: \"modal-buttons\" }\nconst _hoisted_6 = {\n  key: 2,\n  class: \"custom-popup\"\n}\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#a2c3e2\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\" : > -200m \")\n], -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#6d9cc8\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\" : > -1000m \")\n], -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#426e9d\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\" : > -6000m \")\n], -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#214d7c\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\" : > -11000m \")\n], -1)\nconst _hoisted_11 = {\n  key: 3,\n  class: \"custom-popup3\"\n}\nconst _hoisted_12 = {\n  key: 4,\n  class: \"date-popup\"\n}\nconst _hoisted_13 = {\n  key: 5,\n  class: \"date-popup\"\n}\nconst _hoisted_14 = { class: \"language-selector\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"language-icon\" }, null, -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"ENGLISH\" }, \"English\", -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"GERMAN\" }, \"Deutsch\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"SPANISH\" }, \"Español\", -1)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"FRENCH\" }, \"Français\", -1)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"ITALIAN\" }, \"Italiano\", -1)\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"CHINESE\" }, \"中国\", -1)\nconst _hoisted_22 = [\n  _hoisted_16,\n  _hoisted_17,\n  _hoisted_18,\n  _hoisted_19,\n  _hoisted_20,\n  _hoisted_21\n]\nconst _hoisted_23 = { class: \"cable-source-selector\" }\nconst _hoisted_24 = {\n  key: 0,\n  class: \"earthquake-details\"\n}\n\nimport FunctionalityOverview from './FunctionalityOverview.vue';\n\nimport { ref, onMounted, watch, toRaw, computed, onBeforeUnmount } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet.wms';\n//import tracker from '@/openreplay';\nimport { tracker } from '@openreplay/tracker';\n\nimport 'leaflet/dist/leaflet.css';\n// Import the PolylineMeasure plugin\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure.css';\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure';\n\nimport axios from 'axios';\nimport {\n  LMap,\n  LTileLayer,\n  LControlLayers,\n  LTooltip,\n  LPolyline,\n  LMarker,\n  LCircleMarker,\n  LGeoJson,\n  LLayerGroup,\n} from '@vue-leaflet/vue-leaflet';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\n\n\n//Cable Selection\nimport CableSourceSelector from './CableSourceSelector.vue';\n\nimport DrawingLayer from './DrawingLayer.vue'\n//Translation\nimport translations from \"@/assets/translations/translations.json\";\nimport layerTranslations from \"@/assets/translations/layerTranslations.json\";\n\n//Cable Ships\nimport VesselTracking from './VesselTracking.vue';\nimport MaintenanceLayerToggle from './MaintenanceLayerToggle.vue';\n\n//MaritimeZone Imports\nimport eezBoundariesJson from \"@/assets/eez_boundaries_v12.json\";\nimport eez12nmJson from \"@/assets/eez_12nm_v4.json\";\n\nimport countries from \"@/assets/countries.json\";\n\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport '@vuepic/vue-datepicker/dist/main.css'\n//GasPipelines\nimport gasPipelinesJson from \"@/assets/GEM-GGIT-Gas-Pipelines-2023-12.json\";\n//Infrastructures\nimport fixedInfrastructure from \"@/assets/fixedInfrastructure.json\";\nimport ClusteredDataCenters from './ClusteredDataCenters.vue';\n\n//Anchorage\nimport AnchorageLayerToggle from './AnchorageLayerToggle.vue';\nimport ClusteredAnchorage from './ClusteredAnchorage.vue';\n\nimport debounce from \"lodash.debounce\";\n\nimport \"@maptiler/leaflet-maptilersdk\";\nimport 'leaflet-arrowheads';\n\n// Add this near your other ref declarations\nconst format = \"dd/MM/yyyy\";\ninterface Vessel {\n  id: string;\n  position: [number, number];\n  flag: string;\n}\n\nconst apiUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/4wings/generate-png';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LeafletMap',\n  setup(__props) {\n\nconst showAbortModal = ref(false);\n\n// Add this function\nconst abortEvaluation = () => {\n  try {\n    // Access the global tracker instance\n    const tracker = (window as any)._trackerInstance;\n    \n    if (tracker) {\n      // Stop the current session\n      tracker.stop();\n      console.log('Session replay aborted');\n    }\n    \n    // Close the modal\n    showAbortModal.value = false;\n    \n    // Optional: Show a confirmation message\n    // You could add a toast notification here if you have one\n    \n  } catch (error) {\n    console.error('Error aborting evaluation:', error);\n    showAbortModal.value = false;\n  }\n};\n\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\n\n// Define reactive data\nconst zoom = ref(2.5);\nconst center = ref([47.41322, -1.219482]);\nconst circle = {\n  radius: 3,\n  selectedRadius: 6,\n  color: 'grey',\n  selectedColor: 'red',\n};\nconst modifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png');\nconst date =  ref();\nconst map = ref(null);\nconst mapReady = ref(false);\n\nfunction getTerritorialOptionsStyle(){\n  return {\n    color: '#4a2727',\n    dashArray: '8',\n    fillColor: '#4a2727',\n    fillOpacity: '0.2',\n  };\n}\n\nfunction getGasPipelinesOptionsStyle() {\n  return [\n    // Border style\n    (feature: any) => {\n      const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n      return {\n        color: isPipelineHighlighted ? '#FF5733' : '#333333',\n        weight: isPipelineHighlighted ? 6 : 4,\n        opacity: isPipelineHighlighted ? 0.9 : 0.5,\n        dashArray: '5',\n      };\n    },\n    // Fill style\n    (feature: any) => {\n      const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n      return {\n        color: isPipelineHighlighted ? '#FFAA33' : '#3dff98',\n        weight: isPipelineHighlighted ? 1.2 : 0.7,\n        opacity: isPipelineHighlighted ? 0.8 : 0.5,\n      };\n    }\n  ];\n}\n\nconst highlightedPipelineId = ref<string | null>(null);\n\nconst clusteredDataCentersRef = ref(null);\n\nfunction getEEZOptionsStyle(){\n  return{\n    color: '#8a3030', \n    dashArray: '8'\n  }\n}\n\n// Translation\nconst currentLanguage = ref('ENGLISH');\nconst changeLanguage = (language) => {\n  currentLanguage.value = language;\n  if (mapInstance.value) {\n    mtLayer.setLanguage(L.MaptilerLanguage[language]);\n    updateLayerControlNames();\n  }\n};\nfunction getLayerTranslation(layerName) {\n  if (layerTranslations[currentLanguage.value] && layerTranslations[currentLanguage.value][layerName]) {\n    return layerTranslations[currentLanguage.value][layerName];\n  }\n  return layerName;\n}\nconst currentTranslations = computed(() => translations[currentLanguage.value]);\nconst getTranslatedInfrastructureName = (infrastructure) => {\n  const name = currentTranslations.value[infrastructure.name] || currentTranslations.value.unknown;\n  const confidence = currentTranslations.value[infrastructure.confidence];\n  return `${name} (${currentTranslations.value.confidence} ${confidence})`;\n};\n//Reset Map Layer\nconst resetMapLayer = ref(null);\n\nlet resetMapCallCount = 0;\n\nconst resetMap = () => {\n  if (!mapInstance.value || !controlInstance) {\n    console.warn('Map instance or control instance not available');\n    return;\n  }\n\n  // Remove all overlay layers from the map\n  controlInstance._layers.forEach(layerObj => {\n    if (layerObj.overlay && mapInstance.value.hasLayer(layerObj.layer)) {\n      mapInstance.value.removeLayer(layerObj.layer);\n    }\n  });\n\n  // Uncheck all overlay layers in the layer control\n  if (controlInstance._layerControlInputs) {\n    controlInstance._layerControlInputs.forEach(input => {\n      if (input.overlay) {\n        input.checked = false;\n      }\n    });\n  }\n\n  // Force control to update its display\n  controlInstance._update();\n\n  // Remove class modifiers from map container\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active',\n    'fishing-active',\n    'seismic-active',\n    'anchorage-active',\n    'cable-ships-active'\n  );\n\n  // Reset state variables\n  oceanSelected.value = false;\n  fishingSelected.value = false;\n  showSeismicOverlay.value = false;\n\n  // Exit vessel tracking mode if active\n  if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  }\n\n  // Clear any selections\n  cableStore.deselectCables();\n  landingSiteStore.deselectLandingSite();\n\n  // Hide any open toggles\n  if (anchorageLayerToggleRef.value) {\n    anchorageLayerToggleRef.value.hide();\n  }\n  if (maintenanceLayerToggleRef.value) {\n    maintenanceLayerToggleRef.value.hide();\n  }\n\n  // Switch to the default base layer\n  const baseLayer = controlInstance._layers.find(layer => \n    !layer.overlay && layer.originalName === \"Base Layer\"\n  );\n  \n  if (baseLayer && baseLayer.layer) {\n    // Remove current base layer if any\n    controlInstance._layers\n      .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n      .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n    \n    // Add Base Layer\n    mapInstance.value.addLayer(baseLayer.layer);\n    \n    // Update layer control\n    controlInstance._update();\n  }\n};\n//Fishing\nconst fishLayerReady = ref(false);\nconst postResponse = ref(null);\nconst fishingSelected = ref(false);\n\n//Vessel Tracking\nconst hoveredMarker = ref(null);\nconst eventMarkerLayer = ref(null);\nconst viewingVesselTrack = ref(false);\n\nconst vesselTrackingRef = ref<any>(null);\nconst vesselLayerReady = ref(false);\nconst vesselPositions = ref([]);\nwatch(() => vesselTrackingRef.value?.vesselLayerReady, (newValue) => {\n  vesselLayerReady.value = newValue;  \n}, { immediate: true });\n\n // Watch for vesselPositions from VesselTracking\nwatch(\n  () => vesselPositions,\n  (newPositions) => {\n    if (newPositions && Array.isArray(newPositions) && newPositions.length > 0) {\n      vesselPositions.value = newPositions;\n    }\n  },\n  { deep: true }\n);\n\n//Watch for hoveredMarker changes and either add Marker or clear Marker\nwatch(\n  () => hoveredMarker.value,\n  (newMarker) => {\n    if (newMarker && eventMarkerLayer.value) {\n      eventMarkerLayer.value.addLayer(newMarker);\n    } else if (eventMarkerLayer.value && newMarker === null) {\n      eventMarkerLayer.value.clearLayers();\n    }\n  },\n  { deep: true }\n);\nconst exitVesselTrackingMode = () => {\n  vesselTrackingRef.value.exitVesselTrackingMode();\n}\n\nconst createShipIcon = (vessel: Vessel, caller : string) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return null;\n  }\n  return vesselTrackingRef.value.createShipIcon('#ff7800', vessel.flag, vessel);\n};\n\n// Wrapper function to call onShipClick from VesselTracking\nconst onShipClick = (e: Event, vessel: Vessel) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return;\n  }\n  vesselTrackingRef.value.onShipClick(e, vessel);\n};\n\nconst maintenanceLayerToggleRef = ref(null);\n//Fixed Infrastructure\nconst anchorageLayerToggleRef = ref(null);\nconst clusteredAnchorageRef = ref(null);\n\nconst infrastructurePositions = ref([]);\nconst processInfrastructureData = () => {\n  infrastructurePositions.value = fixedInfrastructure.results\n    .filter(item => !(item.label === \"noise\") && item.structure_end_date === \"\")\n    .map(item => ({\n      id: item.detection_id,\n      position: [item.lat, item.lon],\n      name: item.label,\n      confidence: item.label_confidence,\n      lastSeen: item.detection_date\n    }));\n};\n\nconst onPipelineClick = (e) => {\n  L.DomEvent.stopPropagation(e);\n  const feature = e.layer.toGeoJSON();\n  const properties = feature.properties;\n  const pipelineId = properties.PipelineID;\n\n  // Store the previously highlighted pipeline ID before updating\n  const previouslyHighlighted = highlightedPipelineId.value;\n  \n  // Toggle highlighting - if clicking same pipeline, deselect it\n  if (highlightedPipelineId.value === pipelineId) {\n    highlightedPipelineId.value = null;\n  } else {\n    highlightedPipelineId.value = pipelineId;\n  }\n\n  // Force redraw of all pipeline segments\n  if (mapInstance.value) {\n    mapInstance.value.eachLayer((layer) => {\n      if (layer.feature && layer.feature.properties) {\n        const isSamePipeline = layer.feature.properties.PipelineID === pipelineId;\n        const wasPreviouslyHighlighted = layer.feature.properties.PipelineID === previouslyHighlighted;\n        \n        // Only update layers that are either newly selected or previously selected\n        if (isSamePipeline || wasPreviouslyHighlighted) {\n          const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n          \n          // Check if this is a border layer or a fill layer\n          const currentStyle = layer.options;\n          \n          if (currentStyle.dashArray) {\n            layer.setStyle(borderStyle(layer.feature));\n          } else {\n            layer.setStyle(fillStyle(layer.feature));\n          }\n        }\n      }\n    });\n  }\n\n  // Show popup with pipeline info if a new pipeline was selected\n  if (highlightedPipelineId.value === pipelineId) {\n    const cost = properties.CostUSD ?? properties.Cost;\n    const formattedCost = cost ? formatCost(cost) : 'N/A';\n    const popupContent = `<strong>${properties.PipelineName}</strong><br/>\n      <strong>${currentTranslations.value.startCountry}:</strong> ${properties.StartCountry}<br/>\n      <strong>${currentTranslations.value.endCountry}:</strong> ${properties.EndCountry}<br/>\n      <strong>${currentTranslations.value.countries}:</strong> ${properties.Countries}<br/>\n      <strong>${currentTranslations.value.owner}:</strong> ${properties.Owner}<br/>\n      <strong>${currentTranslations.value.startYear}:</strong> ${properties.StartYear1}<br/>\n      <strong>${currentTranslations.value.capacity}:</strong> <span title=\"${currentTranslations.value.capacityTooltip}\">${properties[\"CapacityBcm/y\"]} Bcm/y</span><br/>\n      <strong>${currentTranslations.value.cost}:</strong> ${formattedCost}$<br/>\n      <strong>${currentTranslations.value.length}:</strong> ${properties.LengthKnownKm} km<br/>`;\n    \n    const popup = L.popup()\n      .setLatLng(e.latlng)\n      .setContent(popupContent)\n      .openOn(mapInstance.value);\n  }\n};\n\n// Utility function to format large numbers into billions or millions\nconst formatCost = (cost) => {\n  if (cost >= 1e9) {\n    return `${(cost / 1e9).toFixed(2)} B`;\n  } else if (cost >= 1e6) {\n    return `${(cost / 1e6).toFixed(2)} M`;\n  } else {\n    return cost.toString();\n  }\n};\n\nconst onPipelineHover = (e: Event) => {\n  const feature = e.layer.toGeoJSON();\n\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(feature.properties.PipelineName)\n      .addTo(mapInstance.value);\n  }\n}\n\nconst onPipelineDehover = (e: Event) => {\n  mapInstance.value.removeLayer(tooltip);\n}\n\n//Ocean depth\nconst drawingLayerRef = ref<any>(null);\nconst isDrawingModeActive = ref(false);\n\nconst oceanSelected = ref(false);\nconst currentOceanDepth = ref(\"Ocean Depth at this point: -5000m\");\nconst depthTooltip = ref(null);\n\nwatch(() => drawingLayerRef.value?.isDrawingModeActive, (newValue) => {\n  isDrawingModeActive.value = newValue;  \n}, { immediate: true });\n\nconst updateDepthTooltip = (e) => {\n  if (oceanSelected.value && depthTooltip.value) {\n    const containerPoint = mapInstance.value.latLngToContainerPoint(e.latlng);\n    depthTooltip.value.style.left = `${containerPoint.x + 15}px`;\n    depthTooltip.value.style.top = `${containerPoint.y + 15}px`;\n    depthTooltip.value.style.display = 'block';\n  } else if (depthTooltip.value) {\n    depthTooltip.value.style.display = 'none';\n  }\n};\nconst lattitude = ref(15);\nconst longitude = ref(15);\nconst functionalityOverviewRef = ref(null);\n\nconst seismicData = ref(null);\nconst showSeismicOverlay = ref(false); \nconst selectedEarthquake = ref(null);\nconst seismicLayer = ref(null);\nwatch(currentLanguage, () => {\n  if (showSeismicOverlay.value) {\n    updateSeismicLayer();\n  }\n});\nwatch(showSeismicOverlay, (newValue) => {\n  if (newValue) {\n    updateSeismicLayer();\n  } else if (seismicLayer.value) {\n    mapInstance.value.removeLayer(seismicLayer.value);\n    seismicLayer.value = null;\n  }\n});\nconst updateSeismicLayer = () => {\n  if (mapInstance.value && showSeismicOverlay.value && seismicData.value) {\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n    }\n\n    seismicLayer.value = L.geoJSON(seismicData.value, {\n      pointToLayer: reactivePointToLayer.value\n    }).addTo(mapInstance.value);\n  }\n};\n\n//Tile Provider for Ocean Layer\nconst tileProviders2 = [\n      {\n        url:\"https://server.arcgisonline.com/ArcGIS/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}\",\n        attribution:\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n        name:\"Ocean Depth\",\n        maxZoom: 10,\n        visible: false,\n      },\n      {\n        url:\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_only_labels/{z}/{x}/{y}{r}.png\",\n        attribution:\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n        name:\"Ocean Depth\",\n        maxZoom: 10,\n        visible: false,\n      },\n    ]\n//Polyline Measurement Tool\nlet tooltip = null;\nlet mtLayer = null;\n//Instanz von Map um auf Funktionen zugreifen zu können\nconst mapInstance = ref(null);\nconst polylineMeasure = ref(null);\nconst onMapReady = (mapIns) => {\n  mapInstance.value = mapIns;\n  cableStore.setMapInstance(mapIns);\n\n  // Create Reset Map layer\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n\n  initializePolylineMeasure();\n\n  tooltip = L.tooltip({\n    permanent: false,\n    direction: 'top',\n    offset: L.point(0, -10),\n    className: 'custom-tooltip'\n  });\n\n  mtLayer = new L.MaptilerLayer({\n    apiKey: \"fpBo6pC8RABDYTlWtD7U\",\n    language: L.MaptilerLanguage[\"ENGLISH\"],\n    style: L.MaptilerStyle.DATAVIZ,\n    name: \"OceanDepth\",\n    layertype: \"base\",\n  });\n\n  mtLayer.addTo(mapInstance.value);\n  eventMarkerLayer.value = L.layerGroup().addTo(mapInstance.value);\n  \n  mapReady.value = true;\n  \n};\n\nconst initializePolylineMeasure = () => {\n  polylineMeasure.value = L.control.polylineMeasure({\n    position: 'topleft',\n    showUnitControl: true,\n    unitControlUnits: [\"kilometres\", \"nauticalmiles\", \"landmiles\"],\n    unitControlTitle: {\n      text: 'Change Units',\n      metres: 'metres',\n      nauticalmiles: 'nautical miles',\n      landmiles: 'land miles'\n    },\n    unitControlLabel: {\n      metres: 'm',\n      kilometres: 'km',\n      feet: 'ft',\n      landmiles: 'mi',\n      nauticalmiles: 'nm'\n    },\n    useMapZoomAnimation: false\n  });\n\n  polylineMeasure.value.addTo(mapInstance.value);\n\n  // Handle zoom events\n  mapInstance.value.on('zoomstart', () => {\n    const tempLines = document.querySelectorAll('.leaflet-polylinemeasure-temporary-layer');\n    const measureLines = document.querySelectorAll('.leaflet-polylinemeasure-permanent-layer');\n    \n    // Temporarily hide measurement lines during zoom\n    tempLines.forEach(line => { line.style.display = 'none'; });\n    measureLines.forEach(line => { line.style.display = 'none'; });\n  });\n\n  mapInstance.value.on('zoomend', () => {\n    const tempLines = document.querySelectorAll('.leaflet-polylinemeasure-temporary-layer');\n    const measureLines = document.querySelectorAll('.leaflet-polylinemeasure-permanent-layer');\n    \n    // Show them again after zoom is complete\n    tempLines.forEach(line => { line.style.display = ''; });\n    measureLines.forEach(line => { line.style.display = ''; });\n  });\n};\n//Instanz von controlInstance um auf Funktionen zugreifen zu können\nlet controlInstance = null;\nconst onLayerControlReady = (controlIns) => {\n    controlInstance = controlIns;\n\n    // Rest of the existing layer control setup...\n    if (resetMapLayer.value) {\n        const resetMapContainer = document.createElement('div');\n        resetMapContainer.className = 'reset-map-container hidden';\n        \n        const resetMapButton = document.createElement('div');\n        resetMapButton.className = 'reset-map-button';\n        resetMapButton.textContent = getLayerTranslation(\"ResetMap\");\n        \n        resetMapContainer.appendChild(resetMapButton);\n        \n        const layerControlContainer = controlInstance.getContainer();\n        layerControlContainer.appendChild(resetMapContainer);\n        \n        resetMapButton.addEventListener('click', resetMap);\n    }\n    \n    // Add Data Centers layer to control\n    if (clusteredDataCentersRef.value && clusteredDataCentersRef.value.dataCenterLayer) {\n    controlInstance.addOverlay(clusteredDataCentersRef.value.dataCenterLayer, 'Data Centers');\n  }\n    updateLayerControlNames();\n};\n\nonBeforeUnmount(() => {\n  if (polylineMeasure.value && mapInstance.value) {\n    mapInstance.value.removeControl(polylineMeasure.value);\n  }\n});\n\nconst polylinesBounds = {};\n//set polyline to store\nconst onCreateLine = (polylineInstance, cableId) => {\n  // this overrides the line if a cable has more then one section. It will be better to set new bounds to whole system size\n  // TODO look for something like compine bounds\n  const bounds = polylineInstance.getBounds();\n  polylinesBounds[cableId] = polylinesBounds[cableId] ? polylinesBounds[cableId].extend(bounds) : bounds;\n\n  polylineInstance.on('mouseover', () => {\n    polylineInstance.openTooltip();\n  });\n  polylineInstance.on('mouseout', () => {\n    polylineInstance.closeTooltip();\n  });\n};\n\n//Bei Kabelwechsel Karte dort hin pannen und zoomen lassen\nwatch(() => cableStore.selectCable, (state) => {\n  if (cableStore.selectedFromSidebar) {\n    let bounds;\n    for(const cable of state) {\n      const bound = polylinesBounds[cable]\n      bounds = bounds ? bounds.extend(bound) : bound\n    }\n    if(bounds){\n      mapInstance.value.fitBounds(bounds)\n    }\n    cableStore.selectedFromSidebar = false;\n  }\n})\n\nwatch(\n  () => cableStore.viewingVesselTrack,\n  (newValue) => {\n    if (newValue) {\n      viewingVesselTrack.value = true;\n    } else {\n      viewingVesselTrack.value = false;\n    }\n  }\n);\n\nwatch(() => landingSiteStore.selectLandingSites, (state) => {\n  if (landingSiteStore.selectedFromSidebar) {\n    var latlng = L.latLng(state[0].geoData);\n    mapInstance.value.setView(latlng);\n    landingSiteStore.selectedFromSidebar = false;\n  }\n})\n\n//Function to update the Layer Names on the Layer Control which is called after the language has been changed\nfunction updateLayerControlNames() {\n  if (controlInstance) {\n    controlInstance._layers.forEach(layerObj => {\n      if(layerObj.originalName == null) layerObj.originalName = layerObj.name;\n      const translatedName = getLayerTranslation(layerObj.originalName);\n      layerObj.name = translatedName;\n    });\n    controlInstance._update();\n  }\n}\n\n//Tooltip for cable hover gets shown\nconst showTooltip = (e, cableName) => {\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(cableName)\n      .addTo(mapInstance.value);\n  }\n};\n\n//Tooltip for cable hover gets removed\nconst hideTooltip = () => {\n  if (mapInstance.value && tooltip) {\n    mapInstance.value.removeLayer(tooltip);\n  }\n};\n\nconst params = {\n  color: '#48ba0f',\n  interval: 'DAY',\n  'datasets[0]': 'public-global-fishing-effort:latest',\n  'date-range': '2023-11-01,2023-12-24' //Eventuell immer Standard Datum (bspw. vor einem Monat) nehmen\n};\n\nfishingWatch();\n\nasync function fishingWatch(){\n  try {\n    const response = await axios.post(apiUrl, null, {params: params})\n      postResponse.value = response; //TODO: evtl. ColorRamp rausschmeißen und nur URL speichern\n      modifiedPostUrl.value = response.data.url.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n      fishLayerReady.value = true;\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nconst cableShipsLayerGroup = ref(L.layerGroup());\n\nonMounted(() => {\n  processInfrastructureData();\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n});\n\n//Extracts Ocean Depth for current mouse position from GEBCO Web Map Service\nlet lastDepthQuery = '';\n\nasync function getOceanDepth(lat, lng) {\n  const queryString = `${lat.toFixed(4)},${lng.toFixed(4)}`;\n  if (queryString === lastDepthQuery) return;\n  lastDepthQuery = queryString;\n  try{\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n\n    let searchString = \"value_list\";\n    let searchIndex = response.data.indexOf(searchString);\n    let extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    currentOceanDepth.value = `${currentTranslations.value.oceanDepth}: ${extractedText}m`;\n  } catch(error) {\n    console.error(error);\n    currentOceanDepth.value = \"Ocean Depth: Unknown\";\n  }\n}\n\n//Translates picked Date from Datepicker to API Call to GlobalFishingWatch\nfunction datePicked(e){\n  if(e != null) {\n    let firstDay = formatDatePart(e[0].getDate());\n    let firstMonth = formatDatePart(e[0].getMonth() + 1);\n    let secondDay = formatDatePart(e[1].getDate());\n    let secondMonth = formatDatePart(e[1].getMonth() + 1);\n    params['date-range'] = e[0].getFullYear() + '-' + firstMonth + '-' +  firstDay + ',' + e[1].getFullYear() + '-' + secondMonth + '-' + secondDay;\n    fishingWatch();\n  }\n}\n\n//Helper Function to formate Dates\nfunction formatDatePart(part){\n  return part < 10 ? '0' + part : part;\n}\n\n// Funktion für Layerwechsel (@baselayerchanged Listener), um Popup bei Aktivierung/Deaktivierung des Ocean Layers zu öffnen/schließen\nfunction layerChanged(e) {\n  if (!mapInstance.value || !mapInstance.value._container) {\n    console.warn('Map instance not ready during layer change');\n    return;\n  }\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active', \n    'fishing-active', \n    'seismic-active'\n  );\n\n  /* if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  } */\n\n  if (e.originalName === \"Reset Map\") {\n    resetMap();\n    \n    // Find and switch to Base Layer\n    const baseLayer = controlInstance._layers.find(layer => \n      !layer.overlay && layer.originalName === \"Base Layer\"\n    );\n    \n    if (baseLayer && baseLayer.layer) {\n      // Remove current base layer if any\n      controlInstance._layers\n        .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n        .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n      \n      // Add Base Layer\n      mapInstance.value.addLayer(baseLayer.layer);\n      \n      // Update layer control\n      controlInstance._update();\n    }\n    return;\n  }\n  if(e.originalName === \"Base Layer\"){\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if(e.originalName === \"Seismic Activity\"){\n    mapContainer.classList.add('seismic-active');\n    fetchSeismicData();\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = true;\n  }\n  else if (e.originalName === \"Fishing Activity\"){\n    mapContainer.classList.add('fishing-active');\n    fishingSelected.value = true;\n    oceanSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if (e.originalName === \"Ocean Depth\") {\n    mapContainer.classList.add('ocean-depth-active');\n    oceanSelected.value = true;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  } else {\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n}\n\nfunction overlayAdded(e) {\n  const mapContainer = mapInstance.value._container;\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.add('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.show();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.add('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.show();\n    }\n  }\n}\n\nfunction overlayRemoved(e) {\n  const mapContainer = mapInstance.value._container;\n\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.remove('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.hide();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.remove('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.hide();\n    }\n  }\n}\n\nconst questionMarkClicked = () => {\n  if(functionalityOverviewRef.value){\n    functionalityOverviewRef.value.openModal();\n  }\n}\n\nlet set = false;\nconst onMapClick = ( event ) => { // onMapClick = (e: event) => { ... }\n  // TODO This is a workaround because the event is propagation to alls listeners\n  // Tested: mapInstance._container.stopPropgating(e)\n  // Tested: e.selected = true -> and then read in next handler\n  // Tested: @click.stop didn't work(see issue https://github.com/vue-leaflet/vue-leaflet/issues/362)\n  const previouslyHighlighted = highlightedPipelineId.value;\n  highlightedPipelineId.value = null;\n  \n  // Force redraw of previously highlighted pipeline if there was one\n  if (previouslyHighlighted && mapInstance.value) {\n    mapInstance.value.eachLayer((layer) => {\n      if (layer.feature && \n          layer.feature.properties && \n          layer.feature.properties.PipelineID === previouslyHighlighted) {\n        \n        const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n        \n        // Check if this is a border layer or a fill layer\n        const currentStyle = layer.options;\n        \n        // Apply appropriate style based on layer type\n        if (currentStyle.dashArray) {\n          layer.setStyle(borderStyle(layer.feature));\n        } else {\n          layer.setStyle(fillStyle(layer.feature));\n        }\n      }\n    });\n  }\n  if (maintenanceLayerToggleRef.value) {\n    const targetElement = event.originalEvent.target;\n    if (targetElement && !targetElement.classList.contains('leaflet-interactive')) {\n      maintenanceLayerToggleRef.value.clearHighlightedZones();\n    }\n  }  \n\n  if(!set) {\n    cableStore.deselectCables();\n    landingSiteStore.deselectLandingSite();\n  }\n  set = false\n}\n\nconst onCableClick = (e, cable) => {\n  set = true\n  if(!landingSiteStore.isOneSelected() && cableStore.isCableSelected(cable.id)) {\n    cableStore.deselectCables();\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(cable.id, false) // Set fromSidebar to false\n  }\n  \n  // Display cable name at click position\n  L.popup()\n    .setLatLng(e.latlng)\n    .setContent(cable.name)\n    .openOn(mapInstance.value);\n}\nconst onLandingSiteClick = (e, landingSite) => {\n  set = true\n  cableStore.deselectCables();\n  if(landingSiteStore.isLandingSiteSelected(toRaw(landingSite))) {\n    landingSiteStore.deselectLandingSite();\n  } else {\n    landingSiteStore.setSelectLandingSite(toRaw(landingSite))\n  }\n}\n\nconst updateMousePosition = debounce((e) => {\n  if(oceanSelected.value){\n    const latlng = e.latlng;\n    lattitude.value = latlng.lat;\n    longitude.value = latlng.lng;\n    if(!isDrawingModeActive.value){\n      getOceanDepth(latlng.lat, latlng.lng);\n      updateDepthTooltip(e);\n    }\n  }\n}, 100);\n\n//SEISMIC LAYER\nconst seismicDatePicked = (e) => {\n  if (e != null) {\n    let startDate = formatDatePart(e[0].getDate());\n    let startMonth = formatDatePart(e[0].getMonth() + 1);\n    let endDate = formatDatePart(e[1].getDate());\n    let endMonth = formatDatePart(e[1].getMonth() + 1);\n    const startTime = `${e[0].getFullYear()}-${startMonth}-${startDate}`;\n    const endTime = `${e[1].getFullYear()}-${endMonth}-${endDate}`;\n    // Clear existing seismic layer\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n      seismicLayer.value = null;\n    }\n    \n    fetchSeismicData(startTime, endTime);\n  } else {\n    // Clear existing seismic layer\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n      seismicLayer.value = null;\n    }\n    \n    fetchSeismicData();\n  }\n};\n\nconst fetchSeismicData = async (startTime = null, endTime = null) => {\n  try {\n    let url;\n    if (startTime && endTime) {\n      // Fetch data for the specified date range\n      url = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${startTime}&endtime=${endTime}`;\n    } else {\n      // Default to the last week's data\n      url = 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson';\n    }\n    const response = await axios.get(url);\n    seismicData.value = response.data;\n\n        // Add new seismic layer to the map\n        if (mapInstance.value && seismicData.value) {\n      seismicLayer.value = L.geoJSON(seismicData.value, {\n        pointToLayer: reactivePointToLayer.value\n      }).addTo(mapInstance.value);\n    }\n  } catch (error) {\n    console.error('Error fetching seismic data:', error);\n  }\n};\n\n// Fetch initial seismic data (last week's data) on component mount\n//fetchSeismicData();\n\nconst reactivePointToLayer = computed(() => (feature, latlng) => {\n  const magnitude = feature.properties.mag;\n  const radius = magnitude * 3;\n  const fillColor = magnitude > 5 ? 'red' : magnitude > 3 ? 'orange' : 'yellow';\n  return L.circleMarker(latlng, {\n    radius: radius,\n    fillColor: fillColor,\n    color: 'black',\n    weight: 1,\n    opacity: 1,\n    fillOpacity: 0.8\n  }).bindTooltip(`\n    <strong>${currentTranslations.value.magnitude}:</strong> ${magnitude}<br>\n    <strong>${currentTranslations.value.location}:</strong> ${feature.properties.place}<br>\n    <strong>${currentTranslations.value.time}:</strong> ${new Date(feature.properties.time).toLocaleString()}\n  `);\n});\n\n// Fetch seismic data on component mount\n//fetchSeismicData();\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(LMap), {\n      ref: map.value,\n      zoom: zoom.value,\n      center: center.value,\n      minZoom: 1.5,\n      options: { zoomControl: true, markerZoomAnimation: false, worldCopyJump: true },\n      onBaselayerchange: layerChanged,\n      onOverlayadd: overlayAdded,\n      onOverlayremove: overlayRemoved,\n      onClick: _cache[18] || (_cache[18] = (e) => onMapClick(e)),\n      onReady: onMapReady,\n      onMousemove: _cache[19] || (_cache[19] = (e) => _unref(updateMousePosition)(e))\n    }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(cableStore).dataCables, (cable) => {\n          return (_openBlock(), _createElementBlock(_Fragment, null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.geoData, (section) => {\n              return (_openBlock(), _createBlock(_unref(LPolyline), {\n                \"lat-lngs\": section,\n                key: section,\n                color: cable.color,\n                opacity: \n          !viewingVesselTrack.value && (_unref(cableStore).isNoneSelected ||_unref(cableStore).isCableSelected(cable.id))\n            ? 1\n            : 0.15\n        ,\n                dashArray: cable.outOfService ? '5 5' : null,\n                onClick: (e) => onCableClick(e, cable),\n                onReady: (e) => onCreateLine(e, cable.id),\n                onMouseover: (e) => showTooltip(e, cable.name),\n                onMouseout: _cache[0] || (_cache[0] = (e) => hideTooltip(e))\n              }, null, 8, [\"lat-lngs\", \"color\", \"opacity\", \"dashArray\", \"onClick\", \"onReady\", \"onMouseover\"]))\n            }), 128))\n          ], 64))\n        }), 256)),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(landingSiteStore).getLandingSites, (tee) => {\n          return (_openBlock(), _createBlock(_unref(LCircleMarker), {\n            \"lat-lng\": tee.geoData,\n            key: tee,\n            radius: \n        _unref(landingSiteStore).isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedRadius\n          : circle.radius\n      ,\n            color: \n        _unref(landingSiteStore).isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedColor\n          : circle.color\n      ,\n            onClick: (e) => onLandingSiteClick(e, tee)\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_unref(LTooltip), null, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(tee.name) + \", \" + _toDisplayString(tee.country), 1)\n                ]),\n                _: 2\n              }, 1024)\n            ]),\n            _: 2\n          }, 1032, [\"lat-lng\", \"radius\", \"color\", \"onClick\"]))\n        }), 128)),\n        _createVNode(_unref(LControlLayers), {\n          ref: \"layerControl\",\n          onReady: onLayerControlReady\n        }, null, 512),\n        _createVNode(_unref(LLayerGroup), {\n          visible: false,\n          name: \"Seismic Activity\",\n          \"layer-type\": \"base\"\n        }, {\n          default: _withCtx(() => [\n            (seismicData.value)\n              ? (_openBlock(), _createBlock(_unref(LGeoJson), {\n                  key: 0,\n                  geojson: seismicData.value,\n                  options: { pointToLayer: reactivePointToLayer.value }\n                }, null, 8, [\"geojson\", \"options\"]))\n              : _createCommentVNode(\"\", true),\n            (showSeismicOverlay.value)\n              ? (_openBlock(), _createBlock(_unref(LCircleMarker), {\n                  key: 1,\n                  \"lat-lng\": [5.7, 97.4],\n                  radius: 15,\n                  fillColor: \"red\",\n                  color: \"black\",\n                  weight: 1,\n                  opacity: 1,\n                  fillOpacity: 0.8\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(LTooltip), null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Dummy Earthquake\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LTileLayer), {\n          name: \"Fishing Activity\",\n          url: modifiedPostUrl.value,\n          visible: false,\n          attribution: \"<a href=\\\" https://globalfishingwatch.org\\\">Powered by Global Fishing Watch</a>\",\n          \"layer-type\": \"base\"\n        }, null, 8, [\"url\"]),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Ocean Depth\",\n          \"layer-type\": \"base\",\n          visible: false\n        }, {\n          default: _withCtx(() => [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tileProviders2, (tileProvider) => {\n              return _createVNode(_unref(LTileLayer), {\n                key: tileProvider.name,\n                name: tileProvider.name,\n                visible: tileProvider.visible,\n                url: tileProvider.url,\n                attribution: tileProvider.attribution,\n                maxZoom: tileProvider.maxZoom\n              }, null, 8, [\"name\", \"visible\", \"url\", \"attribution\", \"maxZoom\"])\n            }), 64))\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LGeoJson), {\n          geojson: _unref(eez12nmJson),\n          \"layer-type\": \"overlay\",\n          name: \"Territorial Waters (12nm)\",\n          visible: false,\n          \"options-style\": getTerritorialOptionsStyle\n        }, null, 8, [\"geojson\"]),\n        _createVNode(_unref(LGeoJson), {\n          geojson: _unref(eezBoundariesJson),\n          \"layer-type\": \"overlay\",\n          name: \"Exclusive Economic Zone (200nm)\",\n          visible: false,\n          \"options-style\": getEEZOptionsStyle\n        }, null, 8, [\"geojson\"]),\n        _createVNode(VesselTracking, {\n          mapReady: mapReady.value,\n          mapInstance: mapInstance.value,\n          controlInstance: _unref(controlInstance),\n          currentLanguage: currentLanguage.value,\n          cableStore: _unref(cableStore),\n          \"layer-group\": cableShipsLayerGroup.value,\n          vesselPositions: vesselPositions.value,\n          \"onUpdate:vesselPositions\": _cache[1] || (_cache[1] = ($event: any) => ((vesselPositions).value = $event)),\n          hoveredMarker: hoveredMarker.value,\n          \"onUpdate:hoveredMarker\": _cache[2] || (_cache[2] = ($event: any) => ((hoveredMarker).value = $event)),\n          viewingVesselTrack: viewingVesselTrack.value,\n          \"onUpdate:viewingVesselTrack\": _cache[3] || (_cache[3] = ($event: any) => ((viewingVesselTrack).value = $event)),\n          ref_key: \"vesselTrackingRef\",\n          ref: vesselTrackingRef\n        }, null, 8, [\"mapReady\", \"mapInstance\", \"controlInstance\", \"currentLanguage\", \"cableStore\", \"layer-group\", \"vesselPositions\", \"hoveredMarker\", \"viewingVesselTrack\"]),\n        _createVNode(_unref(LLayerGroup), {\n          visible: false,\n          name: \"Cable Ships\",\n          \"layer-type\": \"overlay\"\n        }, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(vesselPositions.value, (vessel) => {\n              return (_openBlock(), _createBlock(_unref(LMarker), {\n                key: vessel.id,\n                \"lat-lng\": vessel.position,\n                icon: createShipIcon(vessel, 'OVERLAY'),\n                onClick: (e) => onShipClick(e, vessel)\n              }, null, 8, [\"lat-lng\", \"icon\", \"onClick\"]))\n            }), 128))\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Anchorage and seabed use\",\n          \"layer-type\": \"overlay\",\n          visible: false\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              name: \"Seamarks\",\n              url: \"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\",\n              attribution: \"Map data: © <a href=\\\"http://www.openseamap.org\\\">OpenSeaMap</a> contributors\",\n              visible: false\n            }),\n            _createVNode(_unref(LLayerGroup), {\n              name: \"Fixed Infrastructure\",\n              \"layer-type\": \"overlay\"\n            }, {\n              default: _withCtx(() => [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(infrastructurePositions.value, (infrastructure) => {\n                  return (_openBlock(), _createBlock(_unref(LCircleMarker), {\n                    key: infrastructure.id,\n                    \"lat-lng\": infrastructure.position,\n                    radius: 5,\n                    color: \"#FFFFFF\",\n                    \"fill-color\": \"#1d8f82\",\n                    opacity: 1,\n                    \"fill-opacity\": 1,\n                    weight: 1\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_unref(LTooltip), null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(getTranslatedInfrastructureName(infrastructure)) + \", \" + _toDisplayString(currentTranslations.value.since) + \": \" + _toDisplayString(infrastructure.lastSeen), 1)\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"lat-lng\"]))\n                }), 128))\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Base Layer\",\n          \"layer-type\": \"base\",\n          visible: true\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          visible: false,\n          name: \"Gas Pipelines\",\n          \"layer-type\": \"overlay\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LGeoJson), {\n              geojson: _unref(gasPipelinesJson),\n              \"options-style\": getGasPipelinesOptionsStyle()[0],\n              onClick: _cache[4] || (_cache[4] = (e) => onPipelineClick(e)),\n              onMouseover: _cache[5] || (_cache[5] = (e) => onPipelineHover(e)),\n              onMouseout: _cache[6] || (_cache[6] = (e) => onPipelineDehover(e))\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" >\")\n              ]),\n              _: 1\n            }, 8, [\"geojson\", \"options-style\"]),\n            _createVNode(_unref(LGeoJson), {\n              geojson: _unref(gasPipelinesJson),\n              \"options-style\": getGasPipelinesOptionsStyle()[1],\n              onClick: _cache[7] || (_cache[7] = (e) => onPipelineClick(e)),\n              onMouseover: _cache[8] || (_cache[8] = (e) => onPipelineHover(e)),\n              onMouseout: _cache[9] || (_cache[9] = (e) => onPipelineDehover(e))\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" >\")\n              ]),\n              _: 1\n            }, 8, [\"geojson\", \"options-style\"])\n          ]),\n          _: 1\n        }),\n        (oceanSelected.value)\n          ? (_openBlock(), _createBlock(_unref(LGeoJson), {\n              key: 0,\n              geojson: _unref(countries),\n              name: \"countries\",\n              visible: true,\n              \"options-style\": { color: '#000000', weight: '0.75' }\n            }, null, 8, [\"geojson\"]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          onClick: questionMarkClicked,\n          class: \"question-mark\"\n        }, _hoisted_2),\n        _createElementVNode(\"div\", {\n          onClick: _cache[10] || (_cache[10] = ($event: any) => (showAbortModal.value = true)),\n          class: \"abort-evaluation-button\"\n        }, _hoisted_4),\n        (showAbortModal.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 1,\n              class: \"abort-modal-overlay\",\n              onClick: _cache[13] || (_cache[13] = ($event: any) => (showAbortModal.value = false))\n            }, [\n              _createElementVNode(\"div\", {\n                class: \"abort-modal\",\n                onClick: _cache[12] || (_cache[12] = _withModifiers(() => {}, [\"stop\"]))\n              }, [\n                _createElementVNode(\"h3\", null, _toDisplayString(currentTranslations.value.abortEvaluation || 'Abort Evaluation'), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(currentTranslations.value.abortEvaluationText || 'Are you sure you want to abort the evaluation? This will remove your current session replay.'), 1),\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _createElementVNode(\"button\", {\n                    onClick: _cache[11] || (_cache[11] = ($event: any) => (showAbortModal.value = false)),\n                    class: \"cancel-button\"\n                  }, _toDisplayString(currentTranslations.value.cancel || 'Cancel'), 1),\n                  _createElementVNode(\"button\", {\n                    onClick: abortEvaluation,\n                    class: \"confirm-button\"\n                  }, _toDisplayString(currentTranslations.value.confirm || 'Confirm'), 1)\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createVNode(FunctionalityOverview, {\n          ref_key: \"functionalityOverviewRef\",\n          ref: functionalityOverviewRef\n        }, null, 512),\n        (oceanSelected.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n              _createElementVNode(\"h2\", null, _toDisplayString(currentTranslations.value.oceanMapLegend), 1),\n              _hoisted_7,\n              _hoisted_8,\n              _hoisted_9,\n              _hoisted_10\n            ]))\n          : _createCommentVNode(\"\", true),\n        (oceanSelected.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n              _createElementVNode(\"p\", null, _toDisplayString(currentTranslations.value.latitude) + \": \" + _toDisplayString(lattitude.value), 1),\n              _createElementVNode(\"p\", null, _toDisplayString(currentTranslations.value.longitude) + \": \" + _toDisplayString(longitude.value), 1)\n            ]))\n          : _createCommentVNode(\"\", true),\n        (fishingSelected.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n              _createVNode(_unref(VueDatePicker), {\n                modelValue: date.value,\n                \"onUpdate:modelValue\": [\n                  _cache[14] || (_cache[14] = ($event: any) => ((date).value = $event)),\n                  datePicked\n                ],\n                \"model-value\": date.value,\n                placeholder: currentTranslations.value.datePlaceholderFishing,\n                \"preview-format\": format,\n                format: format,\n                \"enable-time-picker\": false,\n                range: { partialRange: false },\n                dark: \"true\",\n                class: \"custom-datepicker\",\n                \"no-today\": \"\",\n                \"max-date\": new Date()\n              }, null, 8, [\"modelValue\", \"model-value\", \"placeholder\", \"max-date\"])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (showSeismicOverlay.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n              _createVNode(_unref(VueDatePicker), {\n                modelValue: _ctx.seismicDate,\n                \"onUpdate:modelValue\": [\n                  _cache[15] || (_cache[15] = ($event: any) => ((_ctx.seismicDate) = $event)),\n                  seismicDatePicked\n                ],\n                \"model-value\": _ctx.seismicDate,\n                placeholder: currentTranslations.value.datePlaceholderSeismic,\n                \"preview-format\": format,\n                format: format,\n                \"enable-time-picker\": false,\n                range: { partialRange: false },\n                dark: \"true\",\n                class: \"custom-datepicker\",\n                \"no-today\": \"\",\n                \"max-date\": new Date()\n              }, null, 8, [\"modelValue\", \"model-value\", \"placeholder\", \"max-date\"])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_14, [\n          _hoisted_15,\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((currentLanguage).value = $event)),\n            onChange: _cache[17] || (_cache[17] = ($event: any) => (changeLanguage(currentLanguage.value)))\n          }, _hoisted_22, 544), [\n            [_vModelSelect, currentLanguage.value]\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_23, [\n          _createVNode(CableSourceSelector)\n        ]),\n        _createVNode(ClusteredAnchorage, {\n          mapInstance: mapInstance.value,\n          controlInstance: _unref(controlInstance),\n          \"map-ready\": mapReady.value,\n          \"current-translations\": currentTranslations.value\n        }, null, 8, [\"mapInstance\", \"controlInstance\", \"map-ready\", \"current-translations\"]),\n        _createVNode(ClusteredDataCenters, {\n          ref_key: \"clusteredDataCentersRef\",\n          ref: clusteredDataCentersRef,\n          mapInstance: mapInstance.value,\n          controlInstance: _unref(controlInstance),\n          mapReady: mapReady.value,\n          currentTranslations: currentTranslations.value\n        }, null, 8, [\"mapInstance\", \"controlInstance\", \"mapReady\", \"currentTranslations\"]),\n        _createVNode(AnchorageLayerToggle, {\n          ref_key: \"anchorageLayerToggleRef\",\n          ref: anchorageLayerToggleRef,\n          \"map-instance\": mapInstance.value,\n          \"control-instance\": _unref(controlInstance),\n          \"current-translations\": currentTranslations.value\n        }, null, 8, [\"map-instance\", \"control-instance\", \"current-translations\"]),\n        _createVNode(MaintenanceLayerToggle, {\n          ref_key: \"maintenanceLayerToggleRef\",\n          ref: maintenanceLayerToggleRef,\n          \"map-instance\": mapInstance.value,\n          \"control-instance\": _unref(controlInstance),\n          \"current-translations\": currentTranslations.value,\n          viewingVesselTrack: viewingVesselTrack.value\n        }, null, 8, [\"map-instance\", \"control-instance\", \"current-translations\", \"viewingVesselTrack\"]),\n        _withDirectives(_createElementVNode(\"div\", null, [\n          _createVNode(DrawingLayer, {\n            \"map-instance\": mapInstance.value,\n            oceanSelected: oceanSelected.value,\n            ref_key: \"drawingLayerRef\",\n            ref: drawingLayerRef\n          }, null, 8, [\"map-instance\", \"oceanSelected\"])\n        ], 512), [\n          [_vShow, oceanSelected.value]\n        ])\n      ]),\n      _: 1\n    }, 8, [\"zoom\", \"center\"]),\n    (selectedEarthquake.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [\n          _createElementVNode(\"h2\", null, _toDisplayString(currentTranslations.value.selectedEarthquakeDetails) + \":\", 1),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.magnitude) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(selectedEarthquake.value.mag), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.location) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(selectedEarthquake.value.place), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.time) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(new Date(selectedEarthquake.value.time).toLocaleString()), 1)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (oceanSelected.value && !isDrawingModeActive.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          ref_key: \"depthTooltip\",\n          ref: depthTooltip,\n          class: \"depth-tooltip\"\n        }, _toDisplayString(currentOceanDepth.value), 513))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\n  <l-map\n    :ref=\"map\"\n    :zoom=\"zoom\"\n    :center=\"center\"\n    :minZoom=\"1.5\"\n    :options=\"{ zoomControl: true, markerZoomAnimation: false, worldCopyJump: true }\"\n    @baselayerchange=\"layerChanged\"\n    @overlayadd=\"overlayAdded\"\n    @overlayremove=\"overlayRemoved\"\n    @click=\"(e) => onMapClick(e)\"\n    @ready=\"onMapReady\"\n    @mousemove=\"(e) => updateMousePosition(e)\"\n  >\n\n    <template v-for=\"cable in cableStore.dataCables\">\n      <l-polyline\n        v-for=\"section in cable.geoData\"\n        :lat-lngs=\"section\"\n        :key=\"section\"\n        :color=\"cable.color\"\n        :opacity=\"\n          !viewingVesselTrack && (cableStore.isNoneSelected ||cableStore.isCableSelected(cable.id))\n            ? 1\n            : 0.15\n        \"\n        :dashArray=\"cable.outOfService ? '5 5' : null\"\n        @click=\"(e) => onCableClick(e, cable)\"\n        @ready=\"(e) => onCreateLine(e, cable.id)\"\n        @mouseover=\"(e) => showTooltip(e, cable.name)\"\n        @mouseout=\"(e) => hideTooltip(e)\"\n      >\n      </l-polyline>\n    </template>\n    <l-circle-marker\n      v-for=\"tee in landingSiteStore.getLandingSites\"\n      :lat-lng=\"tee.geoData\"\n      :key=\"tee\"\n      :radius=\"\n        landingSiteStore.isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedRadius\n          : circle.radius\n      \"\n      :color=\"\n        landingSiteStore.isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedColor\n          : circle.color\n      \"\n      @click=\"(e) => onLandingSiteClick(e, tee)\"\n    >\n      <l-tooltip>{{ tee.name }}, {{ tee.country }}</l-tooltip>\n    </l-circle-marker>\n\n    <!-- layer control-->\n    <l-control-layers ref=\"layerControl\" @ready=\"onLayerControlReady\"> </l-control-layers>\n\n    <!-- Seismic Layer -->\n    <l-layer-group :visible=\"false\" name=\"Seismic Activity\" layer-type=\"base\">\n        <l-geo-json\n          v-if=\"seismicData\"\n          :geojson=\"seismicData\"\n          :options=\"{ pointToLayer: reactivePointToLayer }\"\n        ></l-geo-json>\n        <!-- Dummy Earthquake for Usage Study -->\n        <l-circle-marker\n          v-if=\"showSeismicOverlay\"\n          :lat-lng=\"[5.7, 97.4]\"\n          :radius=\"15\"\n          fillColor=\"red\"\n          color=\"black\"\n          :weight=\"1\"\n          :opacity=\"1\"\n          :fillOpacity=\"0.8\"\n        >\n          <l-tooltip>Dummy Earthquake</l-tooltip>\n        </l-circle-marker>\n    </l-layer-group>\n\n    <!-- Fishing Layer -->\n    <l-tile-layer\n      name=\"Fishing Activity\"\n      :url=\"modifiedPostUrl\"\n      :visible=\"false\"\n      attribution='<a href=\" https://globalfishingwatch.org\">Powered by Global Fishing Watch</a>'\n      layer-type=\"base\"\n    ></l-tile-layer>\n\n    <!-- Ocean Layer -->\n    <l-layer-group name=\"Ocean Depth\" layer-type=\"base\" :visible=\"false\">\n      <l-tile-layer\n        v-for=\"tileProvider in tileProviders2\"\n        :key=\"tileProvider.name\"\n        :name=\"tileProvider.name\"\n        :visible=\"tileProvider.visible\"\n        :url=\"tileProvider.url\"\n        :attribution=\"tileProvider.attribution\"\n        :maxZoom=\"tileProvider.maxZoom\"\n      ></l-tile-layer>\n    </l-layer-group>\n\n    <l-geo-json\n      :geojson=\"eez12nmJson\"\n      layer-type=\"overlay\"\n      name=\"Territorial Waters (12nm)\"\n      :visible=\"false\"\n      :options-style=\"getTerritorialOptionsStyle\"\n    ></l-geo-json>\n\n    <l-geo-json\n      :geojson=\"eezBoundariesJson\"\n      layer-type=\"overlay\"\n      name=\"Exclusive Economic Zone (200nm)\"\n      :visible=\"false\"\n      :options-style=\"getEEZOptionsStyle\"\n    ></l-geo-json>\n\n    <!-- Layer für Schiffe -->\n    <VesselTracking\n      :mapReady=\"mapReady\"\n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :currentLanguage=\"currentLanguage\"\n      :cableStore=\"cableStore\"\n      :layer-group=\"cableShipsLayerGroup\"\n      v-model:vesselPositions=\"vesselPositions\"\n      v-model:hoveredMarker=\"hoveredMarker\"\n      v-model:viewingVesselTrack=\"viewingVesselTrack\"\n      ref=\"vesselTrackingRef\"\n    />\n\n    <l-layer-group\n      :visible=\"false\"\n      name=\"Cable Ships\"\n      layer-type=\"overlay\"\n    >\n      <l-marker \n        v-for=\"vessel in vesselPositions\" \n        :key=\"vessel.id\" \n        :lat-lng=\"vessel.position\" \n        :icon=\"createShipIcon(vessel, 'OVERLAY')\"\n        @click=\"(e) => onShipClick(e, vessel)\">\n      </l-marker>\n\n<!--       <l-geo-json \n        :geojson=\"maintenanceZonesJson\"\n        :options-style=\"getMaintenanceZonesStyle(feature)\"\n        @click=\"(e) => onMaintenanceZoneClick(e)\"\n        @mouseover=\"(e) => onMaintenanceZoneHover(e)\"\n        @mouseout=\"(e) => onMaintenanceZoneDehover(e)\"\n      ></l-geo-json>\n      <l-geo-json\n        :geojson=\"privateMaintenanceZonesJson\"\n        :options-style=\"getMaintenanceZonesStyle(feature)\"\n        @click=\"(e) => onMaintenanceZoneClick(e)\"\n        @mouseover=\"(e) => onMaintenanceZoneHover(e)\"\n        @mouseout=\"(e) => onMaintenanceZoneDehover(e)\"\n      ></l-geo-json> -->\n\n    </l-layer-group>\n\n    <!--Combined Anchorage and Seabed Use Layer-->\n    <l-layer-group \n      name=\"Anchorage and seabed use\" \n      layer-type=\"overlay\" \n      :visible=\"false\"\n    >\n      <!-- Seamarks Layer -->\n      <l-tile-layer\n        name=\"Seamarks\"\n        url=\"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\"\n        attribution='Map data: &copy; <a href=\"http://www.openseamap.org\">OpenSeaMap</a> contributors'\n        :visible=\"false\"\n      />\n\n      <!-- Fixed Infrastructure Layer -->\n      <l-layer-group name=\"Fixed Infrastructure\" layer-type=\"overlay\">\n        <l-circle-marker\n          v-for=\"infrastructure in infrastructurePositions\"\n          :key=\"infrastructure.id\"\n          :lat-lng=\"infrastructure.position\"\n          :radius=\"5\"\n          color=\"#FFFFFF\"\n          fill-color=\"#1d8f82\"\n          :opacity=\"1\"\n          :fill-opacity=\"1\"\n          :weight=\"1\"\n        >\n          <l-tooltip>\n            {{ getTranslatedInfrastructureName(infrastructure) }}, \n            {{ currentTranslations.since }}: {{ infrastructure.lastSeen }}\n          </l-tooltip>\n        </l-circle-marker>\n      </l-layer-group>\n    </l-layer-group>\n\n    <!-- sonstige Layer -->\n    <l-layer-group name=\"Base Layer\" layer-type=\"base\" :visible=\"true\">\n    </l-layer-group>\n    \n    <!-- individual geoJSONs -->\n    <l-layer-group\n      :visible=\"false\"\n      name=\"Gas Pipelines\"\n      layer-type=\"overlay\"\n    >\n      <l-geo-json\n        :geojson=\"gasPipelinesJson\"\n        :options-style=\"getGasPipelinesOptionsStyle()[0]\"\n        @click=\"(e) => onPipelineClick(e)\"\n        @mouseover=\"(e) => onPipelineHover(e)\"\n        @mouseout=\"(e) => onPipelineDehover(e)\"\n        >\n      ></l-geo-json>\n      <l-geo-json\n        :geojson=\"gasPipelinesJson\"\n        :options-style=\"getGasPipelinesOptionsStyle()[1]\"\n        @click=\"(e) => onPipelineClick(e)\"\n        @mouseover=\"(e) => onPipelineHover(e)\"\n        @mouseout=\"(e) => onPipelineDehover(e)\"\n        >\n      ></l-geo-json>\n    </l-layer-group>\n\n    <l-geo-json\n      v-if=\"oceanSelected\"\n      :geojson=\"countries\"\n      name=\"countries\"\n      :visible=\"true\"\n      :options-style=\"{ color: '#000000', weight: '0.75' }\"\n    ></l-geo-json>\n\n\n    <div @click=\"questionMarkClicked\" class=\"question-mark\">\n      <h2>?</h2>\n    </div>\n\n    <div @click=\"showAbortModal = true\" class=\"abort-evaluation-button\">\n  <h2>×</h2>\n</div>\n\n<!-- Abort Evaluation Modal -->\n<div v-if=\"showAbortModal\" class=\"abort-modal-overlay\" @click=\"showAbortModal = false\">\n  <div class=\"abort-modal\" @click.stop>\n    <h3>{{ currentTranslations.abortEvaluation || 'Abort Evaluation' }}</h3>\n    <p>{{ currentTranslations.abortEvaluationText || 'Are you sure you want to abort the evaluation? This will remove your current session replay.' }}</p>\n    <div class=\"modal-buttons\">\n      <button @click=\"showAbortModal = false\" class=\"cancel-button\">\n        {{ currentTranslations.cancel || 'Cancel' }}\n      </button>\n      <button @click=\"abortEvaluation\" class=\"confirm-button\">\n        {{ currentTranslations.confirm || 'Confirm' }}\n      </button>\n    </div>\n  </div>\n</div>\n\n    <FunctionalityOverview ref=\"functionalityOverviewRef\"/>\n\n    <!-- Ocean Legende Popup -->\n    <div v-if=\"oceanSelected\" class=\"custom-popup\">\n      <h2>{{ currentTranslations.oceanMapLegend }}</h2>\n      <p>\n        <span style=\"color: #a2c3e2\">&#9632;</span>\n        : > -200m\n      </p>\n      <p>\n        <span style=\"color: #6d9cc8\">&#9632;</span>\n        : > -1000m\n      </p>\n      <p>\n        <span style=\"color: #426e9d\">&#9632;</span>\n        : > -6000m\n      </p>\n      <p>\n        <span style=\"color: #214d7c\">&#9632;</span>\n        : > -11000m\n      </p>\n    </div>\n\n    <div v-if=\"oceanSelected\" class=\"custom-popup3\">\n      <p>{{ currentTranslations.latitude }}: {{ lattitude }}</p>\n      <p>{{ currentTranslations.longitude }}: {{ longitude }}</p>\n    </div>\n\n    <div v-if=\"fishingSelected\" class=\"date-popup\">\n      <VueDatePicker\n        v-model=\"date\"\n        :model-value=\"date\"\n        @update:model-value=\"datePicked\"\n        :placeholder=\"currentTranslations.datePlaceholderFishing\"\n        :preview-format=\"format\"\n        :format=\"format\"\n        :enable-time-picker=\"false\"\n        :range=\"{ partialRange: false }\"\n        dark=true\n        class=\"custom-datepicker\"\n        no-today\n        :max-date=\"new Date()\"\n      />\n    </div>\n\n    <div v-if=\"showSeismicOverlay\" class=\"date-popup\">\n  <VueDatePicker\n    v-model=\"seismicDate\"\n    :model-value=\"seismicDate\"\n    @update:model-value=\"seismicDatePicked\"\n    :placeholder=\"currentTranslations.datePlaceholderSeismic\"\n    :preview-format=\"format\"\n    :format=\"format\"\n    :enable-time-picker=\"false\"\n    :range=\"{ partialRange: false }\"\n    dark=true\n    class=\"custom-datepicker\"\n    no-today\n    :max-date=\"new Date()\"\n    />\n  </div>\n\n    <div class=\"language-selector\">\n      <div class=\"language-icon\"></div>\n      <select v-model=\"currentLanguage\" @change=\"changeLanguage(currentLanguage)\">\n        <option value=\"ENGLISH\">English</option>\n        <option value=\"GERMAN\">Deutsch</option>\n        <option value=\"SPANISH\">Español</option>\n        <option value=\"FRENCH\">Français</option>\n        <option value=\"ITALIAN\">Italiano</option>\n        <option value=\"CHINESE\">中国</option>\n      </select>\n    </div>\n\n    <div class=\"cable-source-selector\">\n      <CableSourceSelector />\n    </div>\n\n      <!-- Clustered Anchorage -->\n    <ClusteredAnchorage \n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :map-ready=\"mapReady\"\n      :current-translations=\"currentTranslations\"\n    />\n\n    <!-- Clustered Data Centers -->\n    <ClusteredDataCenters\n      ref=\"clusteredDataCentersRef\"\n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :mapReady=\"mapReady\"\n      :currentTranslations=\"currentTranslations\"\n    />\n\n    <!-- Toggle component for Anchorage and seabed use bundled layer -->\n    <AnchorageLayerToggle \n      ref=\"anchorageLayerToggleRef\"\n      :map-instance=\"mapInstance\"\n      :control-instance=\"controlInstance\"\n      :current-translations=\"currentTranslations\"\n    />\n\n    <MaintenanceLayerToggle \n      ref=\"maintenanceLayerToggleRef\"\n      :map-instance=\"mapInstance\"\n      :control-instance=\"controlInstance\"\n      :current-translations=\"currentTranslations\"\n      :viewingVesselTrack=\"viewingVesselTrack\"\n    />\n\n    <!-- Draw Function for Depth Measurement Tool -->\n    <div v-show=\"oceanSelected\">\n      <DrawingLayer \n        :map-instance=\"mapInstance\"\n        :oceanSelected=\"oceanSelected\"\n        ref=\"drawingLayerRef\" \n      />\n    </div>\n\n  </l-map>\n\n  <div v-if=\"selectedEarthquake\" class=\"earthquake-details\">\n    <h2>{{ currentTranslations.selectedEarthquakeDetails }}:</h2>\n    <p><strong>{{ currentTranslations.value.magnitude }}:</strong> {{ selectedEarthquake.mag }}</p>\n    <p><strong>{{ currentTranslations.value.location }}:</strong> {{ selectedEarthquake.place }}</p>\n    <p><strong>{{ currentTranslations.value.time }}:</strong> {{ new Date(selectedEarthquake.time).toLocaleString() }}</p>\n  </div>\n\n  <div v-if=\"oceanSelected && !isDrawingModeActive\" ref=\"depthTooltip\" class=\"depth-tooltip\">\n    {{ currentOceanDepth }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport FunctionalityOverview from './FunctionalityOverview.vue';\n\nimport { ref, onMounted, watch, toRaw, computed, onBeforeUnmount } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet.wms';\n//import tracker from '@/openreplay';\nimport { tracker } from '@openreplay/tracker';\n\nimport 'leaflet/dist/leaflet.css';\n// Import the PolylineMeasure plugin\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure.css';\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure';\n\nimport axios from 'axios';\nimport {\n  LMap,\n  LTileLayer,\n  LControlLayers,\n  LTooltip,\n  LPolyline,\n  LMarker,\n  LCircleMarker,\n  LGeoJson,\n  LLayerGroup,\n} from '@vue-leaflet/vue-leaflet';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\n\n\n//Cable Selection\nimport CableSourceSelector from './CableSourceSelector.vue';\n\nimport DrawingLayer from './DrawingLayer.vue'\n//Translation\nimport translations from \"@/assets/translations/translations.json\";\nimport layerTranslations from \"@/assets/translations/layerTranslations.json\";\n\n//Cable Ships\nimport VesselTracking from './VesselTracking.vue';\nimport MaintenanceLayerToggle from './MaintenanceLayerToggle.vue';\n\n//MaritimeZone Imports\nimport eezBoundariesJson from \"@/assets/eez_boundaries_v12.json\";\nimport eez12nmJson from \"@/assets/eez_12nm_v4.json\";\n\nimport countries from \"@/assets/countries.json\";\n\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport '@vuepic/vue-datepicker/dist/main.css'\n//GasPipelines\nimport gasPipelinesJson from \"@/assets/GEM-GGIT-Gas-Pipelines-2023-12.json\";\n//Infrastructures\nimport fixedInfrastructure from \"@/assets/fixedInfrastructure.json\";\nimport ClusteredDataCenters from './ClusteredDataCenters.vue';\n\n//Anchorage\nimport AnchorageLayerToggle from './AnchorageLayerToggle.vue';\nimport ClusteredAnchorage from './ClusteredAnchorage.vue';\n\nimport debounce from \"lodash.debounce\";\n\nimport \"@maptiler/leaflet-maptilersdk\";\nimport 'leaflet-arrowheads';\n\n// Add this near your other ref declarations\nconst showAbortModal = ref(false);\n\n// Add this function\nconst abortEvaluation = () => {\n  try {\n    // Access the global tracker instance\n    const tracker = (window as any)._trackerInstance;\n    \n    if (tracker) {\n      // Stop the current session\n      tracker.stop();\n      console.log('Session replay aborted');\n    }\n    \n    // Close the modal\n    showAbortModal.value = false;\n    \n    // Optional: Show a confirmation message\n    // You could add a toast notification here if you have one\n    \n  } catch (error) {\n    console.error('Error aborting evaluation:', error);\n    showAbortModal.value = false;\n  }\n};\n\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\n\n// Define reactive data\nconst zoom = ref(2.5);\nconst center = ref([47.41322, -1.219482]);\nconst circle = {\n  radius: 3,\n  selectedRadius: 6,\n  color: 'grey',\n  selectedColor: 'red',\n};\nconst modifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png');\nconst date =  ref();\nconst map = ref(null);\nconst mapReady = ref(false);\n\nfunction getTerritorialOptionsStyle(){\n  return {\n    color: '#4a2727',\n    dashArray: '8',\n    fillColor: '#4a2727',\n    fillOpacity: '0.2',\n  };\n}\n\nfunction getGasPipelinesOptionsStyle() {\n  return [\n    // Border style\n    (feature: any) => {\n      const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n      return {\n        color: isPipelineHighlighted ? '#FF5733' : '#333333',\n        weight: isPipelineHighlighted ? 6 : 4,\n        opacity: isPipelineHighlighted ? 0.9 : 0.5,\n        dashArray: '5',\n      };\n    },\n    // Fill style\n    (feature: any) => {\n      const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n      return {\n        color: isPipelineHighlighted ? '#FFAA33' : '#3dff98',\n        weight: isPipelineHighlighted ? 1.2 : 0.7,\n        opacity: isPipelineHighlighted ? 0.8 : 0.5,\n      };\n    }\n  ];\n}\n\nconst highlightedPipelineId = ref<string | null>(null);\n\nconst clusteredDataCentersRef = ref(null);\n\nfunction getEEZOptionsStyle(){\n  return{\n    color: '#8a3030', \n    dashArray: '8'\n  }\n}\n\n// Translation\nconst currentLanguage = ref('ENGLISH');\nconst changeLanguage = (language) => {\n  currentLanguage.value = language;\n  if (mapInstance.value) {\n    mtLayer.setLanguage(L.MaptilerLanguage[language]);\n    updateLayerControlNames();\n  }\n};\nfunction getLayerTranslation(layerName) {\n  if (layerTranslations[currentLanguage.value] && layerTranslations[currentLanguage.value][layerName]) {\n    return layerTranslations[currentLanguage.value][layerName];\n  }\n  return layerName;\n}\nconst currentTranslations = computed(() => translations[currentLanguage.value]);\nconst getTranslatedInfrastructureName = (infrastructure) => {\n  const name = currentTranslations.value[infrastructure.name] || currentTranslations.value.unknown;\n  const confidence = currentTranslations.value[infrastructure.confidence];\n  return `${name} (${currentTranslations.value.confidence} ${confidence})`;\n};\n//Reset Map Layer\nconst resetMapLayer = ref(null);\n\nlet resetMapCallCount = 0;\n\nconst resetMap = () => {\n  if (!mapInstance.value || !controlInstance) {\n    console.warn('Map instance or control instance not available');\n    return;\n  }\n\n  // Remove all overlay layers from the map\n  controlInstance._layers.forEach(layerObj => {\n    if (layerObj.overlay && mapInstance.value.hasLayer(layerObj.layer)) {\n      mapInstance.value.removeLayer(layerObj.layer);\n    }\n  });\n\n  // Uncheck all overlay layers in the layer control\n  if (controlInstance._layerControlInputs) {\n    controlInstance._layerControlInputs.forEach(input => {\n      if (input.overlay) {\n        input.checked = false;\n      }\n    });\n  }\n\n  // Force control to update its display\n  controlInstance._update();\n\n  // Remove class modifiers from map container\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active',\n    'fishing-active',\n    'seismic-active',\n    'anchorage-active',\n    'cable-ships-active'\n  );\n\n  // Reset state variables\n  oceanSelected.value = false;\n  fishingSelected.value = false;\n  showSeismicOverlay.value = false;\n\n  // Exit vessel tracking mode if active\n  if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  }\n\n  // Clear any selections\n  cableStore.deselectCables();\n  landingSiteStore.deselectLandingSite();\n\n  // Hide any open toggles\n  if (anchorageLayerToggleRef.value) {\n    anchorageLayerToggleRef.value.hide();\n  }\n  if (maintenanceLayerToggleRef.value) {\n    maintenanceLayerToggleRef.value.hide();\n  }\n\n  // Switch to the default base layer\n  const baseLayer = controlInstance._layers.find(layer => \n    !layer.overlay && layer.originalName === \"Base Layer\"\n  );\n  \n  if (baseLayer && baseLayer.layer) {\n    // Remove current base layer if any\n    controlInstance._layers\n      .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n      .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n    \n    // Add Base Layer\n    mapInstance.value.addLayer(baseLayer.layer);\n    \n    // Update layer control\n    controlInstance._update();\n  }\n};\n//Fishing\nconst format = \"dd/MM/yyyy\";\nconst fishLayerReady = ref(false);\nconst postResponse = ref(null);\nconst fishingSelected = ref(false);\n\n//Vessel Tracking\nconst hoveredMarker = ref(null);\nconst eventMarkerLayer = ref(null);\nconst viewingVesselTrack = ref(false);\n\nconst vesselTrackingRef = ref<any>(null);\nconst vesselLayerReady = ref(false);\nconst vesselPositions = ref([]);\nwatch(() => vesselTrackingRef.value?.vesselLayerReady, (newValue) => {\n  vesselLayerReady.value = newValue;  \n}, { immediate: true });\n\n // Watch for vesselPositions from VesselTracking\nwatch(\n  () => vesselPositions,\n  (newPositions) => {\n    if (newPositions && Array.isArray(newPositions) && newPositions.length > 0) {\n      vesselPositions.value = newPositions;\n    }\n  },\n  { deep: true }\n);\n\n//Watch for hoveredMarker changes and either add Marker or clear Marker\nwatch(\n  () => hoveredMarker.value,\n  (newMarker) => {\n    if (newMarker && eventMarkerLayer.value) {\n      eventMarkerLayer.value.addLayer(newMarker);\n    } else if (eventMarkerLayer.value && newMarker === null) {\n      eventMarkerLayer.value.clearLayers();\n    }\n  },\n  { deep: true }\n);\ninterface Vessel {\n  id: string;\n  position: [number, number];\n  flag: string;\n}\n\nconst exitVesselTrackingMode = () => {\n  vesselTrackingRef.value.exitVesselTrackingMode();\n}\n\nconst createShipIcon = (vessel: Vessel, caller : string) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return null;\n  }\n  return vesselTrackingRef.value.createShipIcon('#ff7800', vessel.flag, vessel);\n};\n\n// Wrapper function to call onShipClick from VesselTracking\nconst onShipClick = (e: Event, vessel: Vessel) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return;\n  }\n  vesselTrackingRef.value.onShipClick(e, vessel);\n};\n\nconst maintenanceLayerToggleRef = ref(null);\n//Fixed Infrastructure\nconst anchorageLayerToggleRef = ref(null);\nconst clusteredAnchorageRef = ref(null);\n\nconst infrastructurePositions = ref([]);\nconst processInfrastructureData = () => {\n  infrastructurePositions.value = fixedInfrastructure.results\n    .filter(item => !(item.label === \"noise\") && item.structure_end_date === \"\")\n    .map(item => ({\n      id: item.detection_id,\n      position: [item.lat, item.lon],\n      name: item.label,\n      confidence: item.label_confidence,\n      lastSeen: item.detection_date\n    }));\n};\n\nconst onPipelineClick = (e) => {\n  L.DomEvent.stopPropagation(e);\n  const feature = e.layer.toGeoJSON();\n  const properties = feature.properties;\n  const pipelineId = properties.PipelineID;\n\n  // Store the previously highlighted pipeline ID before updating\n  const previouslyHighlighted = highlightedPipelineId.value;\n  \n  // Toggle highlighting - if clicking same pipeline, deselect it\n  if (highlightedPipelineId.value === pipelineId) {\n    highlightedPipelineId.value = null;\n  } else {\n    highlightedPipelineId.value = pipelineId;\n  }\n\n  // Force redraw of all pipeline segments\n  if (mapInstance.value) {\n    mapInstance.value.eachLayer((layer) => {\n      if (layer.feature && layer.feature.properties) {\n        const isSamePipeline = layer.feature.properties.PipelineID === pipelineId;\n        const wasPreviouslyHighlighted = layer.feature.properties.PipelineID === previouslyHighlighted;\n        \n        // Only update layers that are either newly selected or previously selected\n        if (isSamePipeline || wasPreviouslyHighlighted) {\n          const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n          \n          // Check if this is a border layer or a fill layer\n          const currentStyle = layer.options;\n          \n          if (currentStyle.dashArray) {\n            layer.setStyle(borderStyle(layer.feature));\n          } else {\n            layer.setStyle(fillStyle(layer.feature));\n          }\n        }\n      }\n    });\n  }\n\n  // Show popup with pipeline info if a new pipeline was selected\n  if (highlightedPipelineId.value === pipelineId) {\n    const cost = properties.CostUSD ?? properties.Cost;\n    const formattedCost = cost ? formatCost(cost) : 'N/A';\n    const popupContent = `<strong>${properties.PipelineName}</strong><br/>\n      <strong>${currentTranslations.value.startCountry}:</strong> ${properties.StartCountry}<br/>\n      <strong>${currentTranslations.value.endCountry}:</strong> ${properties.EndCountry}<br/>\n      <strong>${currentTranslations.value.countries}:</strong> ${properties.Countries}<br/>\n      <strong>${currentTranslations.value.owner}:</strong> ${properties.Owner}<br/>\n      <strong>${currentTranslations.value.startYear}:</strong> ${properties.StartYear1}<br/>\n      <strong>${currentTranslations.value.capacity}:</strong> <span title=\"${currentTranslations.value.capacityTooltip}\">${properties[\"CapacityBcm/y\"]} Bcm/y</span><br/>\n      <strong>${currentTranslations.value.cost}:</strong> ${formattedCost}$<br/>\n      <strong>${currentTranslations.value.length}:</strong> ${properties.LengthKnownKm} km<br/>`;\n    \n    const popup = L.popup()\n      .setLatLng(e.latlng)\n      .setContent(popupContent)\n      .openOn(mapInstance.value);\n  }\n};\n\n// Utility function to format large numbers into billions or millions\nconst formatCost = (cost) => {\n  if (cost >= 1e9) {\n    return `${(cost / 1e9).toFixed(2)} B`;\n  } else if (cost >= 1e6) {\n    return `${(cost / 1e6).toFixed(2)} M`;\n  } else {\n    return cost.toString();\n  }\n};\n\nconst onPipelineHover = (e: Event) => {\n  const feature = e.layer.toGeoJSON();\n\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(feature.properties.PipelineName)\n      .addTo(mapInstance.value);\n  }\n}\n\nconst onPipelineDehover = (e: Event) => {\n  mapInstance.value.removeLayer(tooltip);\n}\n\n//Ocean depth\nconst drawingLayerRef = ref<any>(null);\nconst isDrawingModeActive = ref(false);\n\nconst oceanSelected = ref(false);\nconst currentOceanDepth = ref(\"Ocean Depth at this point: -5000m\");\nconst depthTooltip = ref(null);\n\nwatch(() => drawingLayerRef.value?.isDrawingModeActive, (newValue) => {\n  isDrawingModeActive.value = newValue;  \n}, { immediate: true });\n\nconst updateDepthTooltip = (e) => {\n  if (oceanSelected.value && depthTooltip.value) {\n    const containerPoint = mapInstance.value.latLngToContainerPoint(e.latlng);\n    depthTooltip.value.style.left = `${containerPoint.x + 15}px`;\n    depthTooltip.value.style.top = `${containerPoint.y + 15}px`;\n    depthTooltip.value.style.display = 'block';\n  } else if (depthTooltip.value) {\n    depthTooltip.value.style.display = 'none';\n  }\n};\nconst lattitude = ref(15);\nconst longitude = ref(15);\nconst functionalityOverviewRef = ref(null);\n\nconst seismicData = ref(null);\nconst showSeismicOverlay = ref(false); \nconst selectedEarthquake = ref(null);\nconst seismicLayer = ref(null);\nwatch(currentLanguage, () => {\n  if (showSeismicOverlay.value) {\n    updateSeismicLayer();\n  }\n});\nwatch(showSeismicOverlay, (newValue) => {\n  if (newValue) {\n    updateSeismicLayer();\n  } else if (seismicLayer.value) {\n    mapInstance.value.removeLayer(seismicLayer.value);\n    seismicLayer.value = null;\n  }\n});\nconst updateSeismicLayer = () => {\n  if (mapInstance.value && showSeismicOverlay.value && seismicData.value) {\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n    }\n\n    seismicLayer.value = L.geoJSON(seismicData.value, {\n      pointToLayer: reactivePointToLayer.value\n    }).addTo(mapInstance.value);\n  }\n};\n\n//Tile Provider for Ocean Layer\nconst tileProviders2 = [\n      {\n        url:\"https://server.arcgisonline.com/ArcGIS/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}\",\n        attribution:\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n        name:\"Ocean Depth\",\n        maxZoom: 10,\n        visible: false,\n      },\n      {\n        url:\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_only_labels/{z}/{x}/{y}{r}.png\",\n        attribution:\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n        name:\"Ocean Depth\",\n        maxZoom: 10,\n        visible: false,\n      },\n    ]\n//Polyline Measurement Tool\nlet tooltip = null;\nlet mtLayer = null;\n//Instanz von Map um auf Funktionen zugreifen zu können\nconst mapInstance = ref(null);\nconst polylineMeasure = ref(null);\nconst onMapReady = (mapIns) => {\n  mapInstance.value = mapIns;\n  cableStore.setMapInstance(mapIns);\n\n  // Create Reset Map layer\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n\n  initializePolylineMeasure();\n\n  tooltip = L.tooltip({\n    permanent: false,\n    direction: 'top',\n    offset: L.point(0, -10),\n    className: 'custom-tooltip'\n  });\n\n  mtLayer = new L.MaptilerLayer({\n    apiKey: \"fpBo6pC8RABDYTlWtD7U\",\n    language: L.MaptilerLanguage[\"ENGLISH\"],\n    style: L.MaptilerStyle.DATAVIZ,\n    name: \"OceanDepth\",\n    layertype: \"base\",\n  });\n\n  mtLayer.addTo(mapInstance.value);\n  eventMarkerLayer.value = L.layerGroup().addTo(mapInstance.value);\n  \n  mapReady.value = true;\n  \n};\n\nconst initializePolylineMeasure = () => {\n  polylineMeasure.value = L.control.polylineMeasure({\n    position: 'topleft',\n    showUnitControl: true,\n    unitControlUnits: [\"kilometres\", \"nauticalmiles\", \"landmiles\"],\n    unitControlTitle: {\n      text: 'Change Units',\n      metres: 'metres',\n      nauticalmiles: 'nautical miles',\n      landmiles: 'land miles'\n    },\n    unitControlLabel: {\n      metres: 'm',\n      kilometres: 'km',\n      feet: 'ft',\n      landmiles: 'mi',\n      nauticalmiles: 'nm'\n    },\n    useMapZoomAnimation: false\n  });\n\n  polylineMeasure.value.addTo(mapInstance.value);\n\n  // Handle zoom events\n  mapInstance.value.on('zoomstart', () => {\n    const tempLines = document.querySelectorAll('.leaflet-polylinemeasure-temporary-layer');\n    const measureLines = document.querySelectorAll('.leaflet-polylinemeasure-permanent-layer');\n    \n    // Temporarily hide measurement lines during zoom\n    tempLines.forEach(line => { line.style.display = 'none'; });\n    measureLines.forEach(line => { line.style.display = 'none'; });\n  });\n\n  mapInstance.value.on('zoomend', () => {\n    const tempLines = document.querySelectorAll('.leaflet-polylinemeasure-temporary-layer');\n    const measureLines = document.querySelectorAll('.leaflet-polylinemeasure-permanent-layer');\n    \n    // Show them again after zoom is complete\n    tempLines.forEach(line => { line.style.display = ''; });\n    measureLines.forEach(line => { line.style.display = ''; });\n  });\n};\n//Instanz von controlInstance um auf Funktionen zugreifen zu können\nlet controlInstance = null;\nconst onLayerControlReady = (controlIns) => {\n    controlInstance = controlIns;\n\n    // Rest of the existing layer control setup...\n    if (resetMapLayer.value) {\n        const resetMapContainer = document.createElement('div');\n        resetMapContainer.className = 'reset-map-container hidden';\n        \n        const resetMapButton = document.createElement('div');\n        resetMapButton.className = 'reset-map-button';\n        resetMapButton.textContent = getLayerTranslation(\"ResetMap\");\n        \n        resetMapContainer.appendChild(resetMapButton);\n        \n        const layerControlContainer = controlInstance.getContainer();\n        layerControlContainer.appendChild(resetMapContainer);\n        \n        resetMapButton.addEventListener('click', resetMap);\n    }\n    \n    // Add Data Centers layer to control\n    if (clusteredDataCentersRef.value && clusteredDataCentersRef.value.dataCenterLayer) {\n    controlInstance.addOverlay(clusteredDataCentersRef.value.dataCenterLayer, 'Data Centers');\n  }\n    updateLayerControlNames();\n};\n\nonBeforeUnmount(() => {\n  if (polylineMeasure.value && mapInstance.value) {\n    mapInstance.value.removeControl(polylineMeasure.value);\n  }\n});\n\nconst polylinesBounds = {};\n//set polyline to store\nconst onCreateLine = (polylineInstance, cableId) => {\n  // this overrides the line if a cable has more then one section. It will be better to set new bounds to whole system size\n  // TODO look for something like compine bounds\n  const bounds = polylineInstance.getBounds();\n  polylinesBounds[cableId] = polylinesBounds[cableId] ? polylinesBounds[cableId].extend(bounds) : bounds;\n\n  polylineInstance.on('mouseover', () => {\n    polylineInstance.openTooltip();\n  });\n  polylineInstance.on('mouseout', () => {\n    polylineInstance.closeTooltip();\n  });\n};\n\n//Bei Kabelwechsel Karte dort hin pannen und zoomen lassen\nwatch(() => cableStore.selectCable, (state) => {\n  if (cableStore.selectedFromSidebar) {\n    let bounds;\n    for(const cable of state) {\n      const bound = polylinesBounds[cable]\n      bounds = bounds ? bounds.extend(bound) : bound\n    }\n    if(bounds){\n      mapInstance.value.fitBounds(bounds)\n    }\n    cableStore.selectedFromSidebar = false;\n  }\n})\n\nwatch(\n  () => cableStore.viewingVesselTrack,\n  (newValue) => {\n    if (newValue) {\n      viewingVesselTrack.value = true;\n    } else {\n      viewingVesselTrack.value = false;\n    }\n  }\n);\n\nwatch(() => landingSiteStore.selectLandingSites, (state) => {\n  if (landingSiteStore.selectedFromSidebar) {\n    var latlng = L.latLng(state[0].geoData);\n    mapInstance.value.setView(latlng);\n    landingSiteStore.selectedFromSidebar = false;\n  }\n})\n\n//Function to update the Layer Names on the Layer Control which is called after the language has been changed\nfunction updateLayerControlNames() {\n  if (controlInstance) {\n    controlInstance._layers.forEach(layerObj => {\n      if(layerObj.originalName == null) layerObj.originalName = layerObj.name;\n      const translatedName = getLayerTranslation(layerObj.originalName);\n      layerObj.name = translatedName;\n    });\n    controlInstance._update();\n  }\n}\n\n//Tooltip for cable hover gets shown\nconst showTooltip = (e, cableName) => {\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(cableName)\n      .addTo(mapInstance.value);\n  }\n};\n\n//Tooltip for cable hover gets removed\nconst hideTooltip = () => {\n  if (mapInstance.value && tooltip) {\n    mapInstance.value.removeLayer(tooltip);\n  }\n};\n\nconst apiUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/4wings/generate-png';\nconst params = {\n  color: '#48ba0f',\n  interval: 'DAY',\n  'datasets[0]': 'public-global-fishing-effort:latest',\n  'date-range': '2023-11-01,2023-12-24' //Eventuell immer Standard Datum (bspw. vor einem Monat) nehmen\n};\n\nfishingWatch();\n\nasync function fishingWatch(){\n  try {\n    const response = await axios.post(apiUrl, null, {params: params})\n      postResponse.value = response; //TODO: evtl. ColorRamp rausschmeißen und nur URL speichern\n      modifiedPostUrl.value = response.data.url.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n      fishLayerReady.value = true;\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nconst cableShipsLayerGroup = ref(L.layerGroup());\n\nonMounted(() => {\n  processInfrastructureData();\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n});\n\n//Extracts Ocean Depth for current mouse position from GEBCO Web Map Service\nlet lastDepthQuery = '';\n\nasync function getOceanDepth(lat, lng) {\n  const queryString = `${lat.toFixed(4)},${lng.toFixed(4)}`;\n  if (queryString === lastDepthQuery) return;\n  lastDepthQuery = queryString;\n  try{\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n\n    let searchString = \"value_list\";\n    let searchIndex = response.data.indexOf(searchString);\n    let extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    currentOceanDepth.value = `${currentTranslations.value.oceanDepth}: ${extractedText}m`;\n  } catch(error) {\n    console.error(error);\n    currentOceanDepth.value = \"Ocean Depth: Unknown\";\n  }\n}\n\n//Translates picked Date from Datepicker to API Call to GlobalFishingWatch\nfunction datePicked(e){\n  if(e != null) {\n    let firstDay = formatDatePart(e[0].getDate());\n    let firstMonth = formatDatePart(e[0].getMonth() + 1);\n    let secondDay = formatDatePart(e[1].getDate());\n    let secondMonth = formatDatePart(e[1].getMonth() + 1);\n    params['date-range'] = e[0].getFullYear() + '-' + firstMonth + '-' +  firstDay + ',' + e[1].getFullYear() + '-' + secondMonth + '-' + secondDay;\n    fishingWatch();\n  }\n}\n\n//Helper Function to formate Dates\nfunction formatDatePart(part){\n  return part < 10 ? '0' + part : part;\n}\n\n// Funktion für Layerwechsel (@baselayerchanged Listener), um Popup bei Aktivierung/Deaktivierung des Ocean Layers zu öffnen/schließen\nfunction layerChanged(e) {\n  if (!mapInstance.value || !mapInstance.value._container) {\n    console.warn('Map instance not ready during layer change');\n    return;\n  }\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active', \n    'fishing-active', \n    'seismic-active'\n  );\n\n  /* if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  } */\n\n  if (e.originalName === \"Reset Map\") {\n    resetMap();\n    \n    // Find and switch to Base Layer\n    const baseLayer = controlInstance._layers.find(layer => \n      !layer.overlay && layer.originalName === \"Base Layer\"\n    );\n    \n    if (baseLayer && baseLayer.layer) {\n      // Remove current base layer if any\n      controlInstance._layers\n        .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n        .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n      \n      // Add Base Layer\n      mapInstance.value.addLayer(baseLayer.layer);\n      \n      // Update layer control\n      controlInstance._update();\n    }\n    return;\n  }\n  if(e.originalName === \"Base Layer\"){\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if(e.originalName === \"Seismic Activity\"){\n    mapContainer.classList.add('seismic-active');\n    fetchSeismicData();\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = true;\n  }\n  else if (e.originalName === \"Fishing Activity\"){\n    mapContainer.classList.add('fishing-active');\n    fishingSelected.value = true;\n    oceanSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if (e.originalName === \"Ocean Depth\") {\n    mapContainer.classList.add('ocean-depth-active');\n    oceanSelected.value = true;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  } else {\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n}\n\nfunction overlayAdded(e) {\n  const mapContainer = mapInstance.value._container;\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.add('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.show();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.add('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.show();\n    }\n  }\n}\n\nfunction overlayRemoved(e) {\n  const mapContainer = mapInstance.value._container;\n\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.remove('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.hide();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.remove('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.hide();\n    }\n  }\n}\n\nconst questionMarkClicked = () => {\n  if(functionalityOverviewRef.value){\n    functionalityOverviewRef.value.openModal();\n  }\n}\n\nlet set = false;\nconst onMapClick = ( event ) => { // onMapClick = (e: event) => { ... }\n  // TODO This is a workaround because the event is propagation to alls listeners\n  // Tested: mapInstance._container.stopPropgating(e)\n  // Tested: e.selected = true -> and then read in next handler\n  // Tested: @click.stop didn't work(see issue https://github.com/vue-leaflet/vue-leaflet/issues/362)\n  const previouslyHighlighted = highlightedPipelineId.value;\n  highlightedPipelineId.value = null;\n  \n  // Force redraw of previously highlighted pipeline if there was one\n  if (previouslyHighlighted && mapInstance.value) {\n    mapInstance.value.eachLayer((layer) => {\n      if (layer.feature && \n          layer.feature.properties && \n          layer.feature.properties.PipelineID === previouslyHighlighted) {\n        \n        const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n        \n        // Check if this is a border layer or a fill layer\n        const currentStyle = layer.options;\n        \n        // Apply appropriate style based on layer type\n        if (currentStyle.dashArray) {\n          layer.setStyle(borderStyle(layer.feature));\n        } else {\n          layer.setStyle(fillStyle(layer.feature));\n        }\n      }\n    });\n  }\n  if (maintenanceLayerToggleRef.value) {\n    const targetElement = event.originalEvent.target;\n    if (targetElement && !targetElement.classList.contains('leaflet-interactive')) {\n      maintenanceLayerToggleRef.value.clearHighlightedZones();\n    }\n  }  \n\n  if(!set) {\n    cableStore.deselectCables();\n    landingSiteStore.deselectLandingSite();\n  }\n  set = false\n}\n\nconst onCableClick = (e, cable) => {\n  set = true\n  if(!landingSiteStore.isOneSelected() && cableStore.isCableSelected(cable.id)) {\n    cableStore.deselectCables();\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(cable.id, false) // Set fromSidebar to false\n  }\n  \n  // Display cable name at click position\n  L.popup()\n    .setLatLng(e.latlng)\n    .setContent(cable.name)\n    .openOn(mapInstance.value);\n}\nconst onLandingSiteClick = (e, landingSite) => {\n  set = true\n  cableStore.deselectCables();\n  if(landingSiteStore.isLandingSiteSelected(toRaw(landingSite))) {\n    landingSiteStore.deselectLandingSite();\n  } else {\n    landingSiteStore.setSelectLandingSite(toRaw(landingSite))\n  }\n}\n\nconst updateMousePosition = debounce((e) => {\n  if(oceanSelected.value){\n    const latlng = e.latlng;\n    lattitude.value = latlng.lat;\n    longitude.value = latlng.lng;\n    if(!isDrawingModeActive.value){\n      getOceanDepth(latlng.lat, latlng.lng);\n      updateDepthTooltip(e);\n    }\n  }\n}, 100);\n\n//SEISMIC LAYER\nconst seismicDatePicked = (e) => {\n  if (e != null) {\n    let startDate = formatDatePart(e[0].getDate());\n    let startMonth = formatDatePart(e[0].getMonth() + 1);\n    let endDate = formatDatePart(e[1].getDate());\n    let endMonth = formatDatePart(e[1].getMonth() + 1);\n    const startTime = `${e[0].getFullYear()}-${startMonth}-${startDate}`;\n    const endTime = `${e[1].getFullYear()}-${endMonth}-${endDate}`;\n    // Clear existing seismic layer\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n      seismicLayer.value = null;\n    }\n    \n    fetchSeismicData(startTime, endTime);\n  } else {\n    // Clear existing seismic layer\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n      seismicLayer.value = null;\n    }\n    \n    fetchSeismicData();\n  }\n};\n\nconst fetchSeismicData = async (startTime = null, endTime = null) => {\n  try {\n    let url;\n    if (startTime && endTime) {\n      // Fetch data for the specified date range\n      url = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${startTime}&endtime=${endTime}`;\n    } else {\n      // Default to the last week's data\n      url = 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson';\n    }\n    const response = await axios.get(url);\n    seismicData.value = response.data;\n\n        // Add new seismic layer to the map\n        if (mapInstance.value && seismicData.value) {\n      seismicLayer.value = L.geoJSON(seismicData.value, {\n        pointToLayer: reactivePointToLayer.value\n      }).addTo(mapInstance.value);\n    }\n  } catch (error) {\n    console.error('Error fetching seismic data:', error);\n  }\n};\n\n// Fetch initial seismic data (last week's data) on component mount\n//fetchSeismicData();\n\nconst reactivePointToLayer = computed(() => (feature, latlng) => {\n  const magnitude = feature.properties.mag;\n  const radius = magnitude * 3;\n  const fillColor = magnitude > 5 ? 'red' : magnitude > 3 ? 'orange' : 'yellow';\n  return L.circleMarker(latlng, {\n    radius: radius,\n    fillColor: fillColor,\n    color: 'black',\n    weight: 1,\n    opacity: 1,\n    fillOpacity: 0.8\n  }).bindTooltip(`\n    <strong>${currentTranslations.value.magnitude}:</strong> ${magnitude}<br>\n    <strong>${currentTranslations.value.location}:</strong> ${feature.properties.place}<br>\n    <strong>${currentTranslations.value.time}:</strong> ${new Date(feature.properties.time).toLocaleString()}\n  `);\n});\n\n// Fetch seismic data on component mount\n//fetchSeismicData();\n\n</script>\n\n<style>\n  @import '@/assets/styles/mapStyles.css';\n</style>","import script from \"./LeafletMap.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LeafletMap.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LeafletMap.vue?vue&type=style&index=0&id=6f88a3ae&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-39f7479a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"landing-site-details-container\" }\nconst _hoisted_2 = { class: \"header-section\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-arrow-left\" }, null, -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Back to Map\", -1))\nconst _hoisted_5 = { class: \"landing-site-title\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"content-grid\"\n}\nconst _hoisted_7 = { class: \"info-card\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"card-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-info-circle\" }),\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Landing Site Information\")\n], -1))\nconst _hoisted_9 = { class: \"card-content\" }\nconst _hoisted_10 = { class: \"info-row\" }\nconst _hoisted_11 = { class: \"info-item\" }\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"label\" }, \"Country\", -1))\nconst _hoisted_13 = { class: \"value\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"info-card\"\n}\nconst _hoisted_15 = { class: \"card-header\" }\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-ethernet\" }, null, -1))\nconst _hoisted_17 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Connected Cables\", -1))\nconst _hoisted_18 = { class: \"count-badge\" }\nconst _hoisted_19 = { class: \"card-content\" }\nconst _hoisted_20 = { class: \"cables-grid\" }\nconst _hoisted_21 = [\"onClick\"]\nconst _hoisted_22 = {\n  key: 1,\n  class: \"info-card\"\n}\nconst _hoisted_23 = { class: \"card-header\" }\nconst _hoisted_24 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-geo-alt\" }, null, -1))\nconst _hoisted_25 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Connected Landing Sites\", -1))\nconst _hoisted_26 = { class: \"count-badge\" }\nconst _hoisted_27 = { class: \"card-content\" }\nconst _hoisted_28 = { class: \"connected-sites-grid\" }\nconst _hoisted_29 = [\"onClick\"]\n\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { queryLandingSiteById } from \"@/service/hasura\";\nimport { ref, computed } from \"vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LandingSiteViewer',\n  setup(__props) {\n\nconst landingSite = ref();\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\n\nconst handle = useClientHandle();\nconst loadLandingSite = async (id: string) => {\n  const result = await handle.client\n    .query(queryLandingSiteById, { id: id })\n    .toPromise();\n  if (result.error) {\n    console.error(result.error);\n    return;\n  }\n  const data = result.data.Landingsites[0];\n  landingSite.value = data;\n\n  await dataCableStore.initialize();\n  dataCableStore.setManySelectedCables(\n    data.CableSystem_X_Landingsites.map((cable: any) => cable.CableSystem.id)\n  );\n};\n\nconst getConnectedSitesCount = () => {\n  if (!landingSite.value?.CableSystem_X_Landingsites_t) return 0;\n  return landingSite.value.CableSystem_X_Landingsites_t.filter(\n    (site: string) => !landingSitesStore.isLandingSiteSelectedById(site)\n  ).length;\n};\n\nconst route = useRoute();\nconst id = route.params.landingSiteId.toString();\nloadLandingSite(id);\n\nasync function setLandingSite() {\n  await dataCableStore.initialize();\n  if (!landingSitesStore.isLandingSiteSelectedById(id)) {\n    landingSitesStore.setSelectLandingSiteById(id);\n  }\n}\nsetLandingSite();\n\nonBeforeRouteUpdate((to) => {\n  loadLandingSite(to.params.landingSiteId.toString());\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(dataCableStore).deselectCables(), _unref(landingSitesStore).deselectLandingSite())),\n        class: \"back-button\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_3,\n          _hoisted_4\n        ]),\n        _: 1\n      }),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"h1\", null, _toDisplayString(landingSite.value?.name || 'Loading...'), 1)\n      ])\n    ]),\n    (landingSite.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _hoisted_8,\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _hoisted_12,\n                  _createElementVNode(\"span\", _hoisted_13, _toDisplayString(landingSite.value.country), 1)\n                ])\n              ])\n            ])\n          ]),\n          (landingSite.value.CableSystem_X_Landingsites?.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _hoisted_16,\n                  _hoisted_17,\n                  _createElementVNode(\"span\", _hoisted_18, _toDisplayString(landingSite.value.CableSystem_X_Landingsites.length), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_19, [\n                  _createElementVNode(\"div\", _hoisted_20, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(landingSite.value.CableSystem_X_Landingsites, (cable) => {\n                      return (_openBlock(), _createElementBlock(\"div\", {\n                        key: cable.CableSystem.id,\n                        class: \"cable-chip\",\n                        onClick: ($event: any) => (\n                _unref(landingSitesStore).deselectLandingSite(),\n                _unref(dataCableStore).setSelectCable(cable.CableSystem.id)\n              )\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(cable.CableSystem.name), 1)\n                      ], 8, _hoisted_21))\n                    }), 128))\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (landingSite.value.CableSystem_X_Landingsites_t?.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [\n                _createElementVNode(\"div\", _hoisted_23, [\n                  _hoisted_24,\n                  _hoisted_25,\n                  _createElementVNode(\"span\", _hoisted_26, _toDisplayString(getConnectedSitesCount()), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_27, [\n                  _createElementVNode(\"div\", _hoisted_28, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(landingSite.value.CableSystem_X_Landingsites_t, (connectedSite) => {\n                      return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                        key: connectedSite,\n                        class: \"connected-site-chip\",\n                        onClick: ($event: any) => (_unref(landingSitesStore).setSelectLandingSiteById(connectedSite))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(connectedSite), 1)\n                      ], 8, _hoisted_29)), [\n                        [_vShow, !_unref(landingSitesStore).isLandingSiteSelectedById(connectedSite)]\n                      ])\n                    }), 128))\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"landing-site-details-container\">\n    <!-- Header Section -->\n    <div class=\"header-section\">\n      <router-link\n        to=\"/\"\n        @click=\"dataCableStore.deselectCables(), landingSitesStore.deselectLandingSite()\"\n        class=\"back-button\"\n      >\n        <i class=\"bi bi-arrow-left\"></i>\n        <span>Back to Map</span>\n      </router-link>\n      \n      <div class=\"landing-site-title\">\n        <h1>{{ landingSite?.name || 'Loading...' }}</h1>\n      </div>\n    </div>\n\n    <div v-if=\"landingSite\" class=\"content-grid\">\n      <!-- Basic Information Card -->\n      <div class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-info-circle\"></i>\n          <h3>Landing Site Information</h3>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"info-row\">\n            <div class=\"info-item\">\n              <span class=\"label\">Country</span>\n              <span class=\"value\">{{ landingSite.country }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Connected Cables Card -->\n      <div v-if=\"landingSite.CableSystem_X_Landingsites?.length\" class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-ethernet\"></i>\n          <h3>Connected Cables</h3>\n          <span class=\"count-badge\">{{ landingSite.CableSystem_X_Landingsites.length }}</span>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"cables-grid\">\n            <div\n              v-for=\"cable in landingSite.CableSystem_X_Landingsites\"\n              :key=\"cable.CableSystem.id\"\n              class=\"cable-chip\"\n              @click=\"\n                landingSitesStore.deselectLandingSite(),\n                dataCableStore.setSelectCable(cable.CableSystem.id)\n              \"\n            >\n              <span>{{ cable.CableSystem.name }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Connected Landing Sites Card -->\n      <div v-if=\"landingSite.CableSystem_X_Landingsites_t?.length\" class=\"info-card\">\n        <div class=\"card-header\">\n          <i class=\"bi bi-geo-alt\"></i>\n          <h3>Connected Landing Sites</h3>\n          <span class=\"count-badge\">{{ getConnectedSitesCount() }}</span>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"connected-sites-grid\">\n            <div\n              v-for=\"connectedSite in landingSite.CableSystem_X_Landingsites_t\"\n              :key=\"connectedSite\"\n              v-show=\"!landingSitesStore.isLandingSiteSelectedById(connectedSite)\"\n              class=\"connected-site-chip\"\n              @click=\"landingSitesStore.setSelectLandingSiteById(connectedSite)\"\n            >\n              <span>{{ connectedSite }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { queryLandingSiteById } from \"@/service/hasura\";\nimport { ref, computed } from \"vue\";\n\nconst landingSite = ref();\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\n\nconst handle = useClientHandle();\nconst loadLandingSite = async (id: string) => {\n  const result = await handle.client\n    .query(queryLandingSiteById, { id: id })\n    .toPromise();\n  if (result.error) {\n    console.error(result.error);\n    return;\n  }\n  const data = result.data.Landingsites[0];\n  landingSite.value = data;\n\n  await dataCableStore.initialize();\n  dataCableStore.setManySelectedCables(\n    data.CableSystem_X_Landingsites.map((cable: any) => cable.CableSystem.id)\n  );\n};\n\nconst getConnectedSitesCount = () => {\n  if (!landingSite.value?.CableSystem_X_Landingsites_t) return 0;\n  return landingSite.value.CableSystem_X_Landingsites_t.filter(\n    (site: string) => !landingSitesStore.isLandingSiteSelectedById(site)\n  ).length;\n};\n\nconst route = useRoute();\nconst id = route.params.landingSiteId.toString();\nloadLandingSite(id);\n\nasync function setLandingSite() {\n  await dataCableStore.initialize();\n  if (!landingSitesStore.isLandingSiteSelectedById(id)) {\n    landingSitesStore.setSelectLandingSiteById(id);\n  }\n}\nsetLandingSite();\n\nonBeforeRouteUpdate((to) => {\n  loadLandingSite(to.params.landingSiteId.toString());\n});\n</script>\n\n<style scoped>\n.landing-site-details-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  color: white;\n  padding: 0.5rem;\n  max-width: 100%;\n}\n\n/* Header Section */\n.header-section {\n  margin-bottom: 0.75rem;\n}\n\n.back-button {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #cbd5e0;\n  text-decoration: none;\n  font-size: 0.95rem;\n  padding: 0.5rem 0.75rem;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 0.8rem;\n  width: fit-content;\n}\n\n.back-button:hover {\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  text-decoration: none;\n  transform: translateX(-2px);\n}\n\n.landing-site-title {\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n}\n\n.landing-site-title h1 {\n  font-size: 1.3rem;\n  font-weight: 700;\n  margin: 0;\n  background: linear-gradient(135deg, #63b3ed, #4299e1);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  line-height: 1.2;\n}\n\n/* Content Grid */\n.content-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  flex: 1;\n}\n\n/* Info Cards */\n.info-card {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n  transition: all 0.2s ease;\n}\n\n.info-card:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  border-color: rgba(255, 255, 255, 0.15);\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.6rem 0.8rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.card-header i {\n  font-size: 1rem;\n  color: #63b3ed;\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 600;\n  flex: 1;\n}\n\n.count-badge {\n  background: rgba(99, 179, 237, 0.2);\n  color: #63b3ed;\n  padding: 0.2rem 0.5rem;\n  border-radius: 10px;\n  font-size: 0.75rem;\n  font-weight: 700;\n  min-width: 1.5rem;\n  text-align: center;\n}\n\n.card-content {\n  padding: 0.75rem;\n}\n\n/* Info Items */\n.info-row {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  padding: 0.75rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 6px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.info-item .label {\n  font-size: 0.75rem;\n  color: #a0aec0;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  font-weight: 500;\n}\n\n.info-item .value {\n  font-size: 1rem;\n  font-weight: 600;\n  color: white;\n}\n\n/* Cables Grid */\n.cables-grid {\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  gap: 0.5rem;\n}\n\n.cable-chip {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.4rem 0.6rem;\n  background: rgba(99, 179, 237, 0.1);\n  border: 1px solid rgba(99, 179, 237, 0.2);\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.85rem;\n  width: 100%;\n}\n\n.cable-chip:hover {\n  background: rgba(99, 179, 237, 0.25);\n  transform: translateY(-2px);\n  box-shadow: 0 2px 8px rgba(99, 179, 237, 0.2);\n}\n\n/* Connected Sites Grid */\n.connected-sites-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.5rem;\n}\n\n.connected-site-chip {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.4rem 0.6rem;\n  background: rgba(72, 187, 120, 0.1);\n  border: 1px solid rgba(72, 187, 120, 0.2);\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-size: 0.85rem;\n  width: 100%;\n}\n\n.connected-site-chip:hover {\n  background: rgba(72, 187, 120, 0.25);\n  transform: translateY(-2px);\n  box-shadow: 0 2px 8px rgba(72, 187, 120, 0.2);\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .landing-site-details-container {\n    padding: 0.75rem;\n  }\n  \n  .landing-site-title h1 {\n    font-size: 1.1rem;\n  }\n  \n  .card-header {\n    padding: 0.5rem 0.75rem;\n  }\n  \n  .card-content {\n    padding: 0.75rem;\n  }\n  \n  .connected-sites-grid {\n    grid-template-columns: 1fr;\n  }\n}\n</style>","import script from \"./LandingSiteViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LandingSiteViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LandingSiteViewer.vue?vue&type=style&index=0&id=39f7479a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39f7479a\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\nimport SidebarList from \"@/components/SideBarList.vue\";\nimport CableViewer from '@/components/CableViewer.vue';\nimport LeafletMap from '@/components/LeafletMap.vue';\nimport LandingsiteViewer from '@/components/LandingSiteViewer.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'home',\n    components: {\n      main: LeafletMap,\n      sidebar: SidebarList,\n    },\n  },\n  {\n    path: '/cables/:cableId',\n    name: 'cables',\n    components: {\n      main: LeafletMap,\n      sidebar: CableViewer,\n    },\n  },\n  {\n    path: '/landingSites/:landingSiteId',\n    name: 'landingSites',\n    components: {\n      main: LeafletMap,\n      sidebar: LandingsiteViewer,\n    },\n  },\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { defineStore } from \"pinia\";\nimport router from \"@/router/index\";\nimport { loadCables } from \"@/service/hasura\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\n\nexport const useDataCablesStore = defineStore(\"dataCables\", {\n  state: () => ({\n    dataCables: [] as any[],\n    selectCable: [] as any[],\n    landingSite: useLandingSitesStore(),\n    firstLoad: null as any,\n    selectedFromSidebar: false,\n    cableDetails: null as any,\n    mapInstance: null as any,\n    viewingVesselTrack: false,\n  }),\n  getters: {\n    getDataCables: (state) => {\n      return state.dataCables;\n    },\n    isNoneSelected: (state) => {\n      return state.selectCable.length == 0;\n    },\n    getSelectedCable: (state) => {\n      const cableId = state.selectCable[0];\n      return state.dataCables.find(cable => cable.id === cableId);\n    },\n    getMapInstance: (state) => {\n      return state.mapInstance;\n    }\n  },\n  actions: {\n    async initialize() {\n      if (this.firstLoad) {\n        await this.firstLoad;\n      } else {\n        this.firstLoad = Promise.all([\n          this.fetchDataCables(),\n          this.landingSite.fetchLandingSites(),\n        ]);\n      }\n    },\n    async fetchDataCables() {\n      const cables = ((await loadCables()) as any).data._rawValue.CableSystems;\n      cables.forEach((e: any) => {\n        e.geoData = JSON.parse(e.geoData);\n        e.opacity = 1; // Ensure opacity is defined and reactive\n      });\n      this.dataCables = cables;\n    },\n    setAllCablesOpacity(opacity: number) {\n      this.dataCables.forEach(cable => {\n        cable.opacity = opacity;\n    \n        if (cable.layer && this.mapInstance.hasLayer(cable.layer)) {\n          // Remove the layer and re-add it to force a re-render\n          this.mapInstance.removeLayer(cable.layer);\n          cable.layer.options.opacity = opacity; // Update the layer's opacity\n          cable.layer.addTo(this.mapInstance);\n        }\n      });\n    },\n    setSelectCable(cableId: string, fromSidebar = false) {\n      this.selectCable = [cableId];\n      this.selectedFromSidebar = fromSidebar;\n      this.fetchCableDetails(cableId);\n      router.push({ path: `/cables/${cableId}` });\n    },\n    setManySelectedCables(cableIds: string[]) {\n      this.selectCable = cableIds;\n    },\n    deselectCables() {\n      if (this.selectCable.length) {\n        this.selectCable = [];\n        this.cableDetails = [];\n        router.push({ path: \"/\" });\n      }\n    },\n    isCableSelected(cableId: string): boolean {\n      return this.selectCable.includes(cableId);\n    },\n    async fetchCableDetails(cableId: string) {\n      const cable = this.dataCables.find(c => c.id === cableId);\n      if (cable) {\n        this.cableDetails = cable;\n      }\n    },\n    setMapInstance(map: any) {\n      this.mapInstance = map;\n    },\n    setViewingVesselTrack(value: boolean) {\n      this.viewingVesselTrack = value;\n    },\n  },\n});","<template>\n  <div>\n    <!-- Sources Link in Footer -->\n    <p class=\"text-[#a0aec0] text-xs\">\n      Cable data by <a href=\"https://www2.telegeography.com/\" target=\"_blank\" class=\"text-blue-400 hover:text-blue-300 transition-colors\">Telegeography</a>\n      (<a href=\"https://www.submarinecablemap.com/\" target=\"_blank\" class=\"text-blue-400 hover:text-blue-300 transition-colors\">cable map</a>),\n      licensed under <a href=\"https://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\" class=\"text-blue-400 hover:text-blue-300 transition-colors\">Creative Commons Attribution-ShareAlike 4.0 International</a>,\n      merged with own data and data from <a href=\"https://subtelforum.com/\" target=\"_blank\" class=\"text-blue-400 hover:text-blue-300 transition-colors\">Submarine Telecoms Forum</a>\n      (<a href=\"https://subtelforum.com/online-map/\" target=\"_blank\" class=\"text-blue-400 hover:text-blue-300 transition-colors\">cable map</a>) used under fair use.\n      <button \n  v-if=\"!showSources\"\n  @click=\"showSources = true\" \n  class=\"toggle-button\"\n>\n  Data Sources\n  <svg class=\"toggle-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n  </svg>\n</button>\n\n    </p>\n\n    <!-- Expandable Sources Section -->\n    <div v-if=\"showSources\" class=\"sources-container\">\n      <div class=\"sources-content\">\n        <div class=\"sources-header\">\n          <h3 class=\"sources-title\">Data Sources</h3>\n          <button @click=\"showSources = false\" class=\"close-button\">\n            <span class=\"sr-only\">Close</span>\n            <svg class=\"close-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.5\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n        \n        <div class=\"sources-list\">\n          <div v-for=\"(source, index) in sources\" \n               :key=\"index\" \n               class=\"source-item\">\n            <h4 class=\"source-title\">{{ source.title }}</h4>\n            <div class=\"source-details\">\n              <p v-if=\"source.sourceName\" class=\"source-name\">\n                Source: {{ source.sourceName }}\n              </p>\n              <a :href=\"source.url\" \n                 target=\"_blank\" \n                 class=\"source-url\">\n                {{ source.url }}\n              </a>\n              <p v-if=\"source.description\" \n                 class=\"source-description\">\n                {{ source.description }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue';\n\nconst showSources = ref(false);\n\nconst sources = [\n  {\n    title: 'Cable Source \"Telegeography\"',\n    url: 'https://www2.telegeography.com/',\n    description: 'Mixed with own data'\n  },\n  {\n    title: 'Cable Source \"Mixed Sources\"',\n    url: 'https://kis-orca.org/map/',\n    description: 'Mixed with telegeography and own data'\n  },\n  {\n    title: 'Seismic Activity',\n    url: 'https://earthquake.usgs.gov/earthquakes/map/',\n    sourceName: 'U.S. Geological Survey (USGS)'\n  },\n  {\n    title: 'Fishing Activity',\n    url: 'https://globalfishingwatch.org/our-apis/documentation#4wings-introduction',\n    sourceName: 'Global Fishing Watch'\n  },\n  {\n    title: 'Ocean Depth',\n    url: 'https://www.gebco.net/data_and_products/gridded_bathymetry_data/',\n    sourceName: 'General Bathymetric Chart of the Oceans (GEBCO)'\n  },\n  {\n    title: 'Anchorage',\n    url: 'https://globalfishingwatch.org/datasets-and-code-anchorages/',\n    sourceName: 'Global Fishing Watch'\n  },\n  {\n    title: 'Fixed Infrastructure',\n    url: 'https://globalfishingwatch.org/our-apis/documentation#get-fixed-infrastructure-in-mvt-http-request',\n    sourceName: 'Global Fishing Watch'\n  },\n  {\n    title: 'Seamarks',\n    url: 'https://wiki.openstreetmap.org/wiki/Seamarks/Seamark_Objects',\n    sourceName: 'OpenStreetMap'\n  },\n  {\n    title: 'EEZ, Territorial Waters',\n    url: 'https://marineregions.org/downloads.php',\n    sourceName: 'Marine Regions'\n  },\n  {\n    title: 'Gas Pipelines',\n    url: 'https://globalenergymonitor.org/projects/global-gas-infrastructure-tracker/',\n    sourceName: 'Global Energy Monitor'\n  },\n  {\n    title: 'Cable Ships',\n    url: 'https://globalfishingwatch.org/our-apis/documentation#vessels-api',\n    sourceName: 'Global Fishing Watch'\n  },\n  {\n    title: 'Map',\n    url: 'https://www.maptiler.com/',\n    sourceName: 'MapTiler'\n  }\n];\n\n// Close sources on escape key\nconst handleKeydown = (event) => {\n  if (event.key === 'Escape' && showSources.value) {\n    showSources.value = false;\n  }\n};\n\n// Add and remove event listener\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown);\n});\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown);\n});\n</script>\n\n<style scoped>\n/* Toggle Button */\n.toggle-button {\n  background: rgba(99, 179, 237, 0.2);\n  border: 1px solid rgba(99, 179, 237, 0.4);\n  color: white;\n  font-size: 12px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  margin-left: 4px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.toggle-button:hover {\n  background: rgba(99, 179, 237, 0.3);\n  border-color: rgba(99, 179, 237, 0.6);\n  filter: brightness(1.1);\n}\n\n.toggle-icon {\n  width: 14px;\n  height: 14px;\n  transition: transform 0.3s ease;\n}\n\n.toggle-icon.rotated {\n  transform: rotate(180deg);\n}\n\n/* Expandable Container */\n.sources-container {\n  position: relative;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  margin-top: 8px;\n  animation: slideDown 0.3s ease-out;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Sources Content */\n.sources-content {\n  background-color: #1a202c;\n  color: white;\n  padding: 20px;\n  border-radius: 8px;\n  border: 1px solid #2d3748;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n/* Sources Header */\n.sources-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  border-bottom: 1px solid #2d3748;\n  padding-bottom: 12px;\n}\n\n.sources-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #63b3ed;\n  margin: 0;\n}\n\n/* Close Button - Same beautiful styling */\n.close-button {\n  background: linear-gradient(135deg, #63b3ed 0%, #4299e1 100%);\n  border: 2px solid rgba(99, 179, 237, 0.3);\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 3px 10px rgba(99, 179, 237, 0.3);\n}\n\n.close-button:hover {\n  background: linear-gradient(135deg, #90cdf4 0%, #63b3ed 100%);\n  transform: scale(1.1) rotate(90deg);\n  box-shadow: 0 6px 16px rgba(99, 179, 237, 0.5);\n  border-color: rgba(144, 205, 244, 0.5);\n}\n\n.close-button:active {\n  transform: scale(0.95) rotate(90deg);\n}\n\n.close-icon {\n  width: 16px;\n  height: 16px;\n  stroke-width: 2.5;\n}\n\n/* Sources List */\n.sources-list {\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n}\n\n.source-item {\n  border-bottom: 1px solid #2d3748;\n  padding-bottom: 10px;\n}\n\n.source-item:last-child {\n  border-bottom: none;\n}\n\n.source-title {\n  font-weight: 600;\n  margin-bottom: 4px;\n  color: #a0aec0;\n  margin: 0 0 4px 0;\n  font-size: 14px;\n}\n\n.source-details {\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n}\n\n.source-name {\n  color: #718096;\n  font-size: 13px;\n  margin: 0;\n}\n\n/* URL Styling - Fixed line breaking */\n.source-url {\n  color: #63b3ed;\n  font-size: 13px;\n  text-decoration: none;\n  transition: color 0.2s ease;\n  display: block;\n  word-break: break-all;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  line-height: 1.4;\n}\n\n.source-url:hover {\n  color: #90cdf4;\n  text-decoration: underline;\n}\n\n.source-description {\n  color: #718096;\n  font-size: 13px;\n  margin: 0;\n}\n\n/* Screen reader only */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n/* Custom scrollbar if content gets long */\n.sources-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.sources-content::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 3px;\n}\n\n.sources-content::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 3px;\n}\n\n.sources-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n</style>","import script from \"./SourcesModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourcesModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourcesModal.vue?vue&type=style&index=0&id=1e0a0c4f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1e0a0c4f\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@/assets/logo.png'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7688a7b3\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"sidebar-container\" }\nconst _hoisted_2 = { class: \"sidebar-header\" }\nconst _hoisted_3 = { class: \"d-flex align-items-center\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"cable-icon-container me-2\"\n}\nconst _hoisted_5 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"landing-icon\"\n}\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M4 8c4 8 12-8 16 8\",\n  stroke: \"white\",\n  \"stroke-width\": \"2\",\n  \"stroke-linecap\": \"round\"\n}, null, -1))\nconst _hoisted_7 = [\"fill\"]\nconst _hoisted_8 = [\"fill\"]\nconst _hoisted_9 = {\n  key: 1,\n  class: \"landing-icon-container me-2\"\n}\nconst _hoisted_10 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"landing-icon\"\n}\nconst _hoisted_11 = [\"fill\"]\nconst _hoisted_12 = {\n  key: 2,\n  class: \"ship-icon-container me-2\"\n}\nconst _hoisted_13 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"ship-icon\"\n}\nconst _hoisted_14 = [\"fill\"]\nconst _hoisted_15 = { class: \"ship-flag\" }\nconst _hoisted_16 = { class: \"scrollable-container\" }\nconst _hoisted_17 = { class: \"scrollable-content\" }\nconst _hoisted_18 = { class: \"sidebar-footer\" }\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  style: { width: '250px', height: 'auto' }\n}, null, -1))\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\" Copyright © Jonas Franken, 2024\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\" Licensed under the \"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    target: \"blank\",\n    href: \"https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12\"\n  }, \"EUPL\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"mailto:franken@peasec.de\" }, \"franken@peasec.de\")\n], -1))\n\nimport { ref, watch, onMounted, nextTick } from 'vue';\nimport L from 'leaflet';\nimport VueMultiselect from 'vue-multiselect';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\nimport SourcesModal from './SourcesModal.vue';\nimport vesselIds from '@/assets/vesselIds.json';\nimport VesselTracking from '@/components/VesselTracking.vue';\nimport axios from 'axios';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TheSidebar',\n  props: {\n  currentLanguage: { type: String, required: true },\n  cableStore: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  layerGroup: { type: Object, required: true },\n  mapReady: { type: Boolean, required: true },\n  vesselPositions: { type: Array, default: () => [] }\n},\n  emits: ['update:vesselPositions', 'update:hoveredMarker', 'update:viewingVesselTrack'],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emit = __emit;\n\nconst vesselTrackingRef = ref(null);\nconst cableStore = useDataCablesStore();\n\nconst landingSiteStore = useLandingSitesStore();\nconst selectedCables = ref([]);\nconst selectedLandingSite = ref(null);\nconst landingSitesAndCables = ref([]);\nconst isLoading = ref(false);\nlet inputArray = [];\nconst mapInstance = ref(null);\nconst hoveredMarker = ref(null);\n\nconst sidebarMarkerLayerGroup = ref<L.LayerGroup | null>(null);\n\n// Helper function to get ship color\nfunction getShipColor(vessel) {\n  return vessel.color || '#636363'; // Default color if none is provided\n}\n\n// Helper function to get flag emoji\nfunction getFlagEmoji(vessel) {\n  return vessel.flag || '🚩'; // Default flag emoji if none is provided\n}\n\n// Helper function to get cable color\nfunction getCableColor(cable) {\n  return cable.color || '#007BFF'; // Default color for cables\n}\n\n// Helper function to get landing site color\nfunction getLandingColor(landingSite) {\n  return landingSite.color || '#28A745'; // Default color for landing sites\n}\n\nconst onShipClickMethod = ref<((event: any, vessel: any) => void) | null>(null);\nconst currentSidebarMarker = ref(null);\n\n// Watch for hovered marker updates\nwatch(() => hoveredMarker.value, (newMarker) => {\n  if (newMarker && mapInstance.value) {\n    newMarker.addTo(mapInstance.value);\n  } else if (hoveredMarker.value && mapInstance.value && newMarker === null) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n    hoveredMarker.value = null;\n  }\n}, { deep: true });\n\nconst updateHoveredMarker = (marker) => {\n  if (hoveredMarker.value && mapInstance.value && mapInstance.value.hasLayer(hoveredMarker.value)) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n  }\n  hoveredMarker.value = marker;\n};\n\nconst updateVesselPositions = (positions) => {\n  emit('update:vesselPositions', positions);\n};\n\nconst updateViewingVesselTrack = (isViewing) => {\n  emit('update:viewingVesselTrack', isViewing);\n};\n\n// Function to clear sidebar vessel\nfunction clearSidebarVessel() {\n  if (sidebarMarkerLayerGroup.value) {\n    // Clear all markers from the layer group\n    sidebarMarkerLayerGroup.value.clearLayers();\n  }\n\n  // Update the vesselPositions array to exclude the sidebar-created vessel\n  if (props.vesselPositions && props.vesselPositions.length > 0) {\n    const updatedPositions = props.vesselPositions.filter(vessel => !vessel.fromSidebar);\n    emit('update:vesselPositions', updatedPositions);\n  }\n}\n\nasync function handleVesselSearchSelect(vessel) {\n  // Clear any existing sidebar vessel first\n  clearSidebarVessel();\n\n  if (!vesselTrackingRef.value) {\n    console.error('VesselTracking component not initialized');\n    return;\n  }\n\n  try {\n    const vesselInfo = vessel;\n    const latestPosition = await getVesselLatestPosition(vesselInfo.vesselId);\n\n    if (!latestPosition) {\n      console.error('Could not get latest position for vessel:', vesselInfo.vesselId);\n      return;\n    }\n\n    const vesselData = {\n      ...vessel,\n      ...latestPosition.vessel,\n      id: vesselInfo.vesselId,\n      position: latestPosition.position,\n      lastSeen: latestPosition.lastSeen || new Date().toISOString(),\n      eventType: latestPosition.eventType || 'Unknown',\n      flag: latestPosition.vessel?.flag || vessel.country || 'Unknown',\n      ssvid: vessel.ssvid || latestPosition.vessel?.ssvid,\n      name: vessel.name || latestPosition.vessel?.name || 'Unknown Vessel',\n      length: vesselInfo.length || 'Unknown',\n      beam: vesselInfo.beam || 'Unknown',\n      grossTonage: vesselInfo.grossTonage || 'Unknown',\n      purpose: vesselInfo.purpose || 'Unknown',\n      cableCapacity: vesselInfo.cableCapacity || 'Unknown',\n      notes: vesselInfo.notes || 'Unknown',\n      baseport: vesselInfo.baseport || 'Unknown',\n      owner: vesselInfo.owner || 'Unknown',\n      fromSidebar: true,\n    };\n\n    // Update parent component's vessel positions\n    if (Array.isArray(props.vesselPositions)) {\n      const updatedPositions = [...props.vesselPositions, vesselData];\n      emit('update:vesselPositions', updatedPositions);\n    } else {\n      emit('update:vesselPositions', [vesselData]);\n    }\n\n    cableStore.setAllCablesOpacity(0.15);\n\n    // Center map on vessel position\n    if (mapInstance.value && vesselData.position) {\n      mapInstance.value.setView([vesselData.position.lat, vesselData.position.lon], 8);\n    }\n\n    await nextTick();\n\n    if (!vesselTrackingRef.value) {\n      console.error('VesselTracking component not initialized');\n      return;\n    }\n\n    // Create and add marker using Leaflet\n    const shipIcon = vesselTrackingRef.value.createShipIcon('#636363', vesselData.flag, vesselData);\n\n    if (mapInstance.value && vesselData.position) {\n      const marker = new L.Marker([vesselData.position.lat, vesselData.position.lon], {\n        icon: shipIcon,\n      });\n\n      // Add click handler to the marker\n      marker.on('click', (e) => {\n        const clickEvent = {\n          latlng: {\n            lat: vesselData.position.lat,\n            lng: vesselData.position.lon,\n          },\n          originalEvent: e.originalEvent,\n        };\n\n        if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n          vesselTrackingRef.value.onShipClick(clickEvent, vesselData);\n        }\n      });\n\n      // Add the marker to the sidebar marker layer group\n      if (sidebarMarkerLayerGroup.value) {\n        marker.addTo(sidebarMarkerLayerGroup.value);\n      }\n\n      // Store the marker reference for later removal\n      vesselData.marker = marker;\n      currentSidebarMarker.value = marker;\n      marker.fromSidebar = true; // Mark the marker as created from sidebar\n    }\n\n    // Trigger the initial popup with vessel information\n    const mockEvent = {\n      latlng: {\n        lat: vesselData.position.lat,\n        lng: vesselData.position.lon,\n      },\n      originalEvent: new Event('click'),\n    };\n\n    // Show the initial popup with vessel information\n    if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n      vesselTrackingRef.value.onShipClick(mockEvent, vesselData);\n    }\n  } catch (error) {\n    console.error('Error in handleVesselSearchSelect:', error);\n  }\n}\n\n// Wähle Kabel aus Liste aus, sobald eines selektiert wird\nwatch(() => cableStore.selectCable, (state) => {\n  if (state.length > 0) {\n    const selectedCable = inputArray.find((str) => state[0] == str.id);\n    selectedCables.value = selectedCable;\n  } else {\n    selectedCables.value = [];\n  }\n  \n  if (selectedLandingSite.value?.geoData?.length > 0) {\n    selectedCables.value = selectedLandingSite.value;\n  }\n});\n\nwatch(() => landingSiteStore.selectLandingSites, (selectedLandingSites) => {\n  if (selectedLandingSites.length > 0) {\n    selectedLandingSite.value = inputArray.find((str) => selectedLandingSites[0].id == str.id);\n  } else {\n    selectedLandingSite.value = null;\n    selectedCables.value = [];\n  }\n});\n\n// Watcher for selectedCables\nwatch(() => selectedCables.value, (newValue, oldValue) => {\n  if (!newValue || newValue.length === 0) {\n    clearSidebarVessel();\n  }\n});\n\nasync function getVesselLatestPosition(vesselId) {\n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const params = {\n    limit: 1,\n    offset: 0,\n    sort: '-start',\n    vessels: [vesselId]\n  };\n  \n  try {\n    // Try both loitering and port visit events\n    params['datasets[0]'] = 'public-global-loitering-events:latest';\n    const loiteringResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    params['datasets[0]'] = 'public-global-port-visits-c2-events:latest';\n    const portVisitResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    let latestEvent = null;\n    let eventType = '';\n    \n    // Get the latest event by comparing dates\n    if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0 &&\n        portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      // If we have both types of events, compare their dates\n      const loiteringEvent = loiteringResponse.data.entries[0];\n      const portVisitEvent = portVisitResponse.data.entries[0];\n      \n      const loiteringDate = new Date(loiteringEvent.end);\n      const portVisitDate = new Date(portVisitEvent.end);\n      \n      if (loiteringDate > portVisitDate) {\n        latestEvent = loiteringEvent;\n        eventType = 'Loitering';\n      } else {\n        latestEvent = portVisitEvent;\n        eventType = 'PortVisit';\n      }\n    } else if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n      // Only loitering events available\n      latestEvent = loiteringResponse.data.entries[0];\n      eventType = 'Loitering';\n    } else if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      // Only port visit events available\n      latestEvent = portVisitResponse.data.entries[0];\n      eventType = 'PortVisit';\n    }\n        \n    if (latestEvent) {\n      return {\n        position: latestEvent.position,\n        lastSeen: latestEvent.end,\n        ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n        eventType: eventType,\n        vessel: {\n          ...latestEvent.vessel,\n          name: latestEvent.vessel.name || 'Unknown Vessel'\n        }\n      };\n    }\n    \n    return null;\n  } catch (error) {\n    console.error(\"Error fetching vessel position:\", error);\n    return null;\n  }\n}\n\nasync function initializeSearchBar() {\n  await cableStore.initialize();\n  const vesselSearchOptions = Object.values(vesselIds).map((vessel) => ({\n    id: vessel.vesselId,\n    name: vessel.shipname,\n    type: 'vessel', // Add type for vessels\n    ssvid: vessel.ssvid,\n    color: '#636363', // Default color\n    flag: vessel.flag || '🚩', // Use vessel's flag or default\n    ...vessel,\n  }));\n\n  const cableOptions = cableStore.getDataCables.map((cable) => ({\n    ...cable,\n    type: 'cable', // Add type for cables\n  }));\n\n  const landingSiteOptions = landingSiteStore.getLandingSites.map((landingSite) => ({\n    ...landingSite,\n    type: 'landingSite', // Add type for landing sites\n  }));\n\n  // Combine all options\n  inputArray = cableOptions.concat(landingSiteOptions).concat(vesselSearchOptions);\n  landingSitesAndCables.value = inputArray;\n}\n\nonMounted(async () => {\n  await initializeSearchBar();\n  // Set map instance with validation\n  mapInstance.value = cableStore.getMapInstance;\n  \n  // Only create the layer group if the map instance exists and is ready\n  if (mapInstance.value && mapInstance.value._loaded) {\n    sidebarMarkerLayerGroup.value = L.layerGroup().addTo(mapInstance.value);\n  } else {\n    console.warn(\"Map instance not ready during component mount, will initialize layer group later\");\n    \n    // Set up a function to retry creating the layer group\n    const initLayerGroup = () => {\n      if (mapInstance.value && mapInstance.value._loaded) {\n        sidebarMarkerLayerGroup.value = L.layerGroup().addTo(mapInstance.value);\n      } else {\n        setTimeout(initLayerGroup, 200); // Retry after a delay\n      }\n    };\n    \n    // Start the retry process\n    setTimeout(initLayerGroup, 200);\n  }\n  \n  // Initialize landingSitesAndCables with all options\n  landingSitesAndCables.value = inputArray;\n});\n\n// find cable in list function\nasync function asyncFind(queryGiven: string) {\n  // Debugging: Log the current search term\n\n  // Clear the sidebar-created ship icon and marker\n  clearSidebarVessel();\n\n  // If the search term is empty, show all options\n  if (!queryGiven) {\n    landingSitesAndCables.value = inputArray;\n    return;\n  }\n\n  // Perform the search if a query is provided\n  const regex = new RegExp(queryGiven.replace(/[-[]{}()+?.,\\^$|#\\s]/g, '&'), 'i');\n  const filteredArray = inputArray.filter((item) => {\n    if (item && typeof item.name === 'string') {\n      return regex.test(item.name.replace(/[-[]{}()+?.,\\^$|#\\s]/g, ''));\n    }\n    return false;\n  });\n\n  landingSitesAndCables.value = filteredArray;\n}\n\nfunction selectCableOrLandingSiteOrVessel(selection) {\n  if (selection.type === 'vessel') {\n    handleVesselSearchSelect(selection);\n  } else if (selection.country) {\n    cableStore.deselectCables();\n    landingSiteStore.setSelectLandingSite(selection, true);\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(selection.id, true);\n  }\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_unref(VueMultiselect), {\n        modelValue: selectedCables.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedCables).value = $event)),\n        \"track-by\": \"id\",\n        label: \"name\",\n        options: landingSitesAndCables.value,\n        searchable: true,\n        loading: isLoading.value,\n        \"internal-search\": false,\n        \"show-no-options\": false,\n        placeholder: selectedCables.value && selectedCables.value.length > 0 ? '' : 'Search...',\n        onSearchChange: asyncFind,\n        onSelect: selectCableOrLandingSiteOrVessel\n      }, {\n        option: _withCtx(({ option }) => [\n          _createElementVNode(\"div\", _hoisted_3, [\n            (option.type === 'cable')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                  (_openBlock(), _createElementBlock(\"svg\", _hoisted_5, [\n                    _hoisted_6,\n                    _createElementVNode(\"circle\", {\n                      cx: \"4\",\n                      cy: \"8\",\n                      r: \"2\",\n                      fill: getLandingColor(option),\n                      stroke: \"white\",\n                      \"stroke-width\": \"1\"\n                    }, null, 8, _hoisted_7),\n                    _createElementVNode(\"circle\", {\n                      cx: \"20\",\n                      cy: \"16\",\n                      r: \"2\",\n                      fill: getLandingColor(option),\n                      stroke: \"white\",\n                      \"stroke-width\": \"1\"\n                    }, null, 8, _hoisted_8)\n                  ]))\n                ]))\n              : _createCommentVNode(\"\", true),\n            (option.type === 'landingSite')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                  (_openBlock(), _createElementBlock(\"svg\", _hoisted_10, [\n                    _createElementVNode(\"path\", {\n                      d: \"M12 2C8.69 2 6 4.69 6 8c0 2.64 2.07 6.64 4.42 9.71 0 .01.01.02.02.03l1.28 1.56 1.28-1.56c.01-.01.02-.02.02-.03C15.93 14.64 18 10.64 18 8c0-3.31-2.69-6-6-6zm0 2c2.21 0 4 1.79 4 4 0 1.91-1.63 5.17-4 8.33-2.37-3.16-4-6.42-4-8.33 0-2.21 1.79-4 4-4zm-1 3v2h2V7h-2zm0 4v2h2v-2h-2zm-9 6v2h20v-2h-20z\",\n                      fill: getLandingColor(option),\n                      stroke: \"white\",\n                      \"stroke-width\": \"1\"\n                    }, null, 8, _hoisted_11)\n                  ]))\n                ]))\n              : _createCommentVNode(\"\", true),\n            (option.type === 'vessel')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                  (_openBlock(), _createElementBlock(\"svg\", _hoisted_13, [\n                    _createElementVNode(\"path\", {\n                      d: \"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\",\n                      fill: getShipColor(option),\n                      stroke: \"white\",\n                      \"stroke-width\": \"1\"\n                    }, null, 8, _hoisted_14)\n                  ])),\n                  _createElementVNode(\"span\", _hoisted_15, _toDisplayString(getFlagEmoji(option)), 1)\n                ]))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"span\", null, _toDisplayString(option.name), 1)\n          ])\n        ]),\n        _: 1\n      }, 8, [\"modelValue\", \"options\", \"loading\", \"placeholder\"]),\n      _createVNode(VesselTracking, {\n        ref_key: \"vesselTrackingRef\",\n        ref: vesselTrackingRef,\n        mapInstance: mapInstance.value,\n        currentLanguage: __props.currentLanguage,\n        cableStore: _unref(cableStore),\n        controlInstance: __props.controlInstance,\n        layerGroup: __props.layerGroup,\n        mapReady: __props.mapReady,\n        vesselPositions: __props.vesselPositions,\n        \"onUpdate:vesselPositions\": updateVesselPositions,\n        \"onUpdate:hoveredMarker\": updateHoveredMarker,\n        \"onUpdate:viewingVesselTrack\": updateViewingVesselTrack\n      }, null, 8, [\"mapInstance\", \"currentLanguage\", \"cableStore\", \"controlInstance\", \"layerGroup\", \"mapReady\", \"vesselPositions\"])\n    ]),\n    _createElementVNode(\"div\", _hoisted_16, [\n      _createElementVNode(\"div\", _hoisted_17, [\n        _createVNode(_component_router_view, { name: \"sidebar\" })\n      ]),\n      _createElementVNode(\"div\", _hoisted_18, [\n        _hoisted_19,\n        _createVNode(SourcesModal),\n        _hoisted_20\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"sidebar-container\">\n    <!-- Fixed header section -->\n    <div class=\"sidebar-header\">\n      <VueMultiselect\n  v-model=\"selectedCables\"\n  track-by=\"id\"\n  label=\"name\"\n  :options=\"landingSitesAndCables\"\n  :searchable=\"true\"\n  :loading=\"isLoading\"\n  :internal-search=\"false\"\n  :show-no-options=\"false\"\n:placeholder=\"selectedCables && selectedCables.length > 0 ? '' : 'Search...'\"\n  @search-change=\"asyncFind\"\n  @select=\"selectCableOrLandingSiteOrVessel\"\n>\n\n  <!-- Custom option template (keep your existing template) -->\n  <template v-slot:option=\"{ option }\">\n    <div class=\"d-flex align-items-center\">\n      <!-- Cable icon -->\n      <div v-if=\"option.type === 'cable'\" class=\"cable-icon-container me-2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" class=\"landing-icon\">\n          <path d=\"M4 8c4 8 12-8 16 8\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n          <circle cx=\"4\" cy=\"8\" r=\"2\" :fill=\"getLandingColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n          <circle cx=\"20\" cy=\"16\" r=\"2\" :fill=\"getLandingColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n      </div>\n      <!-- Landing site icon -->\n      <div v-if=\"option.type === 'landingSite'\" class=\"landing-icon-container me-2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" class=\"landing-icon\">\n          <path d=\"M12 2C8.69 2 6 4.69 6 8c0 2.64 2.07 6.64 4.42 9.71 0 .01.01.02.02.03l1.28 1.56 1.28-1.56c.01-.01.02-.02.02-.03C15.93 14.64 18 10.64 18 8c0-3.31-2.69-6-6-6zm0 2c2.21 0 4 1.79 4 4 0 1.91-1.63 5.17-4 8.33-2.37-3.16-4-6.42-4-8.33 0-2.21 1.79-4 4-4zm-1 3v2h2V7h-2zm0 4v2h2v-2h-2zm-9 6v2h20v-2h-20z\"\n            :fill=\"getLandingColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n      </div>\n      <!-- Ship icon -->\n      <div v-if=\"option.type === 'vessel'\" class=\"ship-icon-container me-2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" class=\"ship-icon\">\n          <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\"\n            :fill=\"getShipColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n        <span class=\"ship-flag\">{{ getFlagEmoji(option) }}</span>\n      </div>\n      <span>{{ option.name }}</span>\n    </div>\n  </template>\n</VueMultiselect>\n\n      <VesselTracking\n        ref=\"vesselTrackingRef\"\n        :mapInstance=\"mapInstance\"\n        :currentLanguage=\"currentLanguage\"\n        :cableStore=\"cableStore\"\n        :controlInstance=\"controlInstance\"\n        :layerGroup=\"layerGroup\"\n        :mapReady=\"mapReady\"\n        :vesselPositions=\"vesselPositions\"\n        @update:vesselPositions=\"updateVesselPositions\"\n        @update:hoveredMarker=\"updateHoveredMarker\"\n        @update:viewingVesselTrack=\"updateViewingVesselTrack\"\n      />\n    </div>\n\n    <!-- Single scrollable container for both content and footer -->\n    <div class=\"scrollable-container\">\n      <div class=\"scrollable-content\">\n        <router-view name=\"sidebar\" />\n      </div>\n      \n      <!-- Footer at the bottom of scrollable content -->\n      <div class=\"sidebar-footer\">\n        <img src=\"@/assets/logo.png\" :style=\"{ width: '250px', height: 'auto' }\" />\n        <SourcesModal />\n        <p>\n          Copyright © Jonas Franken, 2024<br />\n          Licensed under the\n          <a target=\"blank\" href=\"https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12\">EUPL</a><br />\n          <a href=\"mailto:franken@peasec.de\">franken@peasec.de</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onMounted, nextTick } from 'vue';\nimport L from 'leaflet';\nimport VueMultiselect from 'vue-multiselect';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\nimport SourcesModal from './SourcesModal.vue';\nimport vesselIds from '@/assets/vesselIds.json';\nimport VesselTracking from '@/components/VesselTracking.vue';\nimport axios from 'axios';\n\nconst props = defineProps({\n  currentLanguage: { type: String, required: true },\n  cableStore: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  layerGroup: { type: Object, required: true },\n  mapReady: { type: Boolean, required: true },\n  vesselPositions: { type: Array, default: () => [] }\n});\n\nconst emit = defineEmits(['update:vesselPositions', 'update:hoveredMarker', 'update:viewingVesselTrack']);\n\nconst vesselTrackingRef = ref(null);\nconst cableStore = useDataCablesStore();\n\nconst landingSiteStore = useLandingSitesStore();\nconst selectedCables = ref([]);\nconst selectedLandingSite = ref(null);\nconst landingSitesAndCables = ref([]);\nconst isLoading = ref(false);\nlet inputArray = [];\nconst mapInstance = ref(null);\nconst hoveredMarker = ref(null);\n\nconst sidebarMarkerLayerGroup = ref<L.LayerGroup | null>(null);\n\n// Helper function to get ship color\nfunction getShipColor(vessel) {\n  return vessel.color || '#636363'; // Default color if none is provided\n}\n\n// Helper function to get flag emoji\nfunction getFlagEmoji(vessel) {\n  return vessel.flag || '🚩'; // Default flag emoji if none is provided\n}\n\n// Helper function to get cable color\nfunction getCableColor(cable) {\n  return cable.color || '#007BFF'; // Default color for cables\n}\n\n// Helper function to get landing site color\nfunction getLandingColor(landingSite) {\n  return landingSite.color || '#28A745'; // Default color for landing sites\n}\n\nconst onShipClickMethod = ref<((event: any, vessel: any) => void) | null>(null);\nconst currentSidebarMarker = ref(null);\n\n// Watch for hovered marker updates\nwatch(() => hoveredMarker.value, (newMarker) => {\n  if (newMarker && mapInstance.value) {\n    newMarker.addTo(mapInstance.value);\n  } else if (hoveredMarker.value && mapInstance.value && newMarker === null) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n    hoveredMarker.value = null;\n  }\n}, { deep: true });\n\nconst updateHoveredMarker = (marker) => {\n  if (hoveredMarker.value && mapInstance.value && mapInstance.value.hasLayer(hoveredMarker.value)) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n  }\n  hoveredMarker.value = marker;\n};\n\nconst updateVesselPositions = (positions) => {\n  emit('update:vesselPositions', positions);\n};\n\nconst updateViewingVesselTrack = (isViewing) => {\n  emit('update:viewingVesselTrack', isViewing);\n};\n\n// Function to clear sidebar vessel\nfunction clearSidebarVessel() {\n  if (sidebarMarkerLayerGroup.value) {\n    // Clear all markers from the layer group\n    sidebarMarkerLayerGroup.value.clearLayers();\n  }\n\n  // Update the vesselPositions array to exclude the sidebar-created vessel\n  if (props.vesselPositions && props.vesselPositions.length > 0) {\n    const updatedPositions = props.vesselPositions.filter(vessel => !vessel.fromSidebar);\n    emit('update:vesselPositions', updatedPositions);\n  }\n}\n\nasync function handleVesselSearchSelect(vessel) {\n  // Clear any existing sidebar vessel first\n  clearSidebarVessel();\n\n  if (!vesselTrackingRef.value) {\n    console.error('VesselTracking component not initialized');\n    return;\n  }\n\n  try {\n    const vesselInfo = vessel;\n    const latestPosition = await getVesselLatestPosition(vesselInfo.vesselId);\n\n    if (!latestPosition) {\n      console.error('Could not get latest position for vessel:', vesselInfo.vesselId);\n      return;\n    }\n\n    const vesselData = {\n      ...vessel,\n      ...latestPosition.vessel,\n      id: vesselInfo.vesselId,\n      position: latestPosition.position,\n      lastSeen: latestPosition.lastSeen || new Date().toISOString(),\n      eventType: latestPosition.eventType || 'Unknown',\n      flag: latestPosition.vessel?.flag || vessel.country || 'Unknown',\n      ssvid: vessel.ssvid || latestPosition.vessel?.ssvid,\n      name: vessel.name || latestPosition.vessel?.name || 'Unknown Vessel',\n      length: vesselInfo.length || 'Unknown',\n      beam: vesselInfo.beam || 'Unknown',\n      grossTonage: vesselInfo.grossTonage || 'Unknown',\n      purpose: vesselInfo.purpose || 'Unknown',\n      cableCapacity: vesselInfo.cableCapacity || 'Unknown',\n      notes: vesselInfo.notes || 'Unknown',\n      baseport: vesselInfo.baseport || 'Unknown',\n      owner: vesselInfo.owner || 'Unknown',\n      fromSidebar: true,\n    };\n\n    // Update parent component's vessel positions\n    if (Array.isArray(props.vesselPositions)) {\n      const updatedPositions = [...props.vesselPositions, vesselData];\n      emit('update:vesselPositions', updatedPositions);\n    } else {\n      emit('update:vesselPositions', [vesselData]);\n    }\n\n    cableStore.setAllCablesOpacity(0.15);\n\n    // Center map on vessel position\n    if (mapInstance.value && vesselData.position) {\n      mapInstance.value.setView([vesselData.position.lat, vesselData.position.lon], 8);\n    }\n\n    await nextTick();\n\n    if (!vesselTrackingRef.value) {\n      console.error('VesselTracking component not initialized');\n      return;\n    }\n\n    // Create and add marker using Leaflet\n    const shipIcon = vesselTrackingRef.value.createShipIcon('#636363', vesselData.flag, vesselData);\n\n    if (mapInstance.value && vesselData.position) {\n      const marker = new L.Marker([vesselData.position.lat, vesselData.position.lon], {\n        icon: shipIcon,\n      });\n\n      // Add click handler to the marker\n      marker.on('click', (e) => {\n        const clickEvent = {\n          latlng: {\n            lat: vesselData.position.lat,\n            lng: vesselData.position.lon,\n          },\n          originalEvent: e.originalEvent,\n        };\n\n        if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n          vesselTrackingRef.value.onShipClick(clickEvent, vesselData);\n        }\n      });\n\n      // Add the marker to the sidebar marker layer group\n      if (sidebarMarkerLayerGroup.value) {\n        marker.addTo(sidebarMarkerLayerGroup.value);\n      }\n\n      // Store the marker reference for later removal\n      vesselData.marker = marker;\n      currentSidebarMarker.value = marker;\n      marker.fromSidebar = true; // Mark the marker as created from sidebar\n    }\n\n    // Trigger the initial popup with vessel information\n    const mockEvent = {\n      latlng: {\n        lat: vesselData.position.lat,\n        lng: vesselData.position.lon,\n      },\n      originalEvent: new Event('click'),\n    };\n\n    // Show the initial popup with vessel information\n    if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n      vesselTrackingRef.value.onShipClick(mockEvent, vesselData);\n    }\n  } catch (error) {\n    console.error('Error in handleVesselSearchSelect:', error);\n  }\n}\n\n// Wähle Kabel aus Liste aus, sobald eines selektiert wird\nwatch(() => cableStore.selectCable, (state) => {\n  if (state.length > 0) {\n    const selectedCable = inputArray.find((str) => state[0] == str.id);\n    selectedCables.value = selectedCable;\n  } else {\n    selectedCables.value = [];\n  }\n  \n  if (selectedLandingSite.value?.geoData?.length > 0) {\n    selectedCables.value = selectedLandingSite.value;\n  }\n});\n\nwatch(() => landingSiteStore.selectLandingSites, (selectedLandingSites) => {\n  if (selectedLandingSites.length > 0) {\n    selectedLandingSite.value = inputArray.find((str) => selectedLandingSites[0].id == str.id);\n  } else {\n    selectedLandingSite.value = null;\n    selectedCables.value = [];\n  }\n});\n\n// Watcher for selectedCables\nwatch(() => selectedCables.value, (newValue, oldValue) => {\n  if (!newValue || newValue.length === 0) {\n    clearSidebarVessel();\n  }\n});\n\nasync function getVesselLatestPosition(vesselId) {\n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const params = {\n    limit: 1,\n    offset: 0,\n    sort: '-start',\n    vessels: [vesselId]\n  };\n  \n  try {\n    // Try both loitering and port visit events\n    params['datasets[0]'] = 'public-global-loitering-events:latest';\n    const loiteringResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    params['datasets[0]'] = 'public-global-port-visits-c2-events:latest';\n    const portVisitResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    let latestEvent = null;\n    let eventType = '';\n    \n    // Get the latest event by comparing dates\n    if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0 &&\n        portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      // If we have both types of events, compare their dates\n      const loiteringEvent = loiteringResponse.data.entries[0];\n      const portVisitEvent = portVisitResponse.data.entries[0];\n      \n      const loiteringDate = new Date(loiteringEvent.end);\n      const portVisitDate = new Date(portVisitEvent.end);\n      \n      if (loiteringDate > portVisitDate) {\n        latestEvent = loiteringEvent;\n        eventType = 'Loitering';\n      } else {\n        latestEvent = portVisitEvent;\n        eventType = 'PortVisit';\n      }\n    } else if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n      // Only loitering events available\n      latestEvent = loiteringResponse.data.entries[0];\n      eventType = 'Loitering';\n    } else if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      // Only port visit events available\n      latestEvent = portVisitResponse.data.entries[0];\n      eventType = 'PortVisit';\n    }\n        \n    if (latestEvent) {\n      return {\n        position: latestEvent.position,\n        lastSeen: latestEvent.end,\n        ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n        eventType: eventType,\n        vessel: {\n          ...latestEvent.vessel,\n          name: latestEvent.vessel.name || 'Unknown Vessel'\n        }\n      };\n    }\n    \n    return null;\n  } catch (error) {\n    console.error(\"Error fetching vessel position:\", error);\n    return null;\n  }\n}\n\nasync function initializeSearchBar() {\n  await cableStore.initialize();\n  const vesselSearchOptions = Object.values(vesselIds).map((vessel) => ({\n    id: vessel.vesselId,\n    name: vessel.shipname,\n    type: 'vessel', // Add type for vessels\n    ssvid: vessel.ssvid,\n    color: '#636363', // Default color\n    flag: vessel.flag || '🚩', // Use vessel's flag or default\n    ...vessel,\n  }));\n\n  const cableOptions = cableStore.getDataCables.map((cable) => ({\n    ...cable,\n    type: 'cable', // Add type for cables\n  }));\n\n  const landingSiteOptions = landingSiteStore.getLandingSites.map((landingSite) => ({\n    ...landingSite,\n    type: 'landingSite', // Add type for landing sites\n  }));\n\n  // Combine all options\n  inputArray = cableOptions.concat(landingSiteOptions).concat(vesselSearchOptions);\n  landingSitesAndCables.value = inputArray;\n}\n\nonMounted(async () => {\n  await initializeSearchBar();\n  // Set map instance with validation\n  mapInstance.value = cableStore.getMapInstance;\n  \n  // Only create the layer group if the map instance exists and is ready\n  if (mapInstance.value && mapInstance.value._loaded) {\n    sidebarMarkerLayerGroup.value = L.layerGroup().addTo(mapInstance.value);\n  } else {\n    console.warn(\"Map instance not ready during component mount, will initialize layer group later\");\n    \n    // Set up a function to retry creating the layer group\n    const initLayerGroup = () => {\n      if (mapInstance.value && mapInstance.value._loaded) {\n        sidebarMarkerLayerGroup.value = L.layerGroup().addTo(mapInstance.value);\n      } else {\n        setTimeout(initLayerGroup, 200); // Retry after a delay\n      }\n    };\n    \n    // Start the retry process\n    setTimeout(initLayerGroup, 200);\n  }\n  \n  // Initialize landingSitesAndCables with all options\n  landingSitesAndCables.value = inputArray;\n});\n\n// find cable in list function\nasync function asyncFind(queryGiven: string) {\n  // Debugging: Log the current search term\n\n  // Clear the sidebar-created ship icon and marker\n  clearSidebarVessel();\n\n  // If the search term is empty, show all options\n  if (!queryGiven) {\n    landingSitesAndCables.value = inputArray;\n    return;\n  }\n\n  // Perform the search if a query is provided\n  const regex = new RegExp(queryGiven.replace(/[-[]{}()+?.,\\^$|#\\s]/g, '&'), 'i');\n  const filteredArray = inputArray.filter((item) => {\n    if (item && typeof item.name === 'string') {\n      return regex.test(item.name.replace(/[-[]{}()+?.,\\^$|#\\s]/g, ''));\n    }\n    return false;\n  });\n\n  landingSitesAndCables.value = filteredArray;\n}\n\nfunction selectCableOrLandingSiteOrVessel(selection) {\n  if (selection.type === 'vessel') {\n    handleVesselSearchSelect(selection);\n  } else if (selection.country) {\n    cableStore.deselectCables();\n    landingSiteStore.setSelectLandingSite(selection, true);\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(selection.id, true);\n  }\n}\n</script>\n\n/* ========== SIDEBAR STYLING (SCOPED) ========== */\n<style scoped>\n.sidebar-container {\n  height: 100vh;\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  color: white;\n  border-right: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.sidebar-header {\n  padding: 0.9rem 0.5rem 0rem;\n  flex-shrink: 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.scrollable-container {\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.scrollable-content {\n  flex: 1;\n}\n\n.sidebar-footer {\n  flex-shrink: 0;\n  padding: 1rem;\n  background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  font-size: 0.8rem;\n  color: #a0aec0;\n}\n\n/* Ensure CableViewer takes available space */\n.cable-details-container {\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Scrollbar styling */\n.scrollable-container::-webkit-scrollbar {\n  width: 12px;\n}\n\n.scrollable-container::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 6px;\n  margin: 4px;\n}\n\n.scrollable-container::-webkit-scrollbar-thumb {\n  background: rgba(99, 179, 237, 0.4);\n  border-radius: 6px;\n  border: 2px solid rgba(26, 32, 44, 0.5);\n  transition: background 0.2s ease;\n}\n\n.scrollable-container::-webkit-scrollbar-thumb:hover {\n  background: rgba(99, 179, 237, 0.6);\n}\n\n.scrollable-container::-webkit-scrollbar-thumb:active {\n  background: rgba(99, 179, 237, 0.8);\n}\n</style>\n\n\n/* ========== MULTISELECT STYLING (GLOBAL) ========== */\n<style>\n/* ========== IMPROVED MULTISELECT STYLING (GLOBAL) ========== */\n\n.multiselect {\n  width: 100%;\n  background: rgba(45, 55, 72, 0.9);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  font-family: inherit;\n  font-size: 1rem;\n  color: white;\n  position: relative;\n  margin-bottom: 1rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n  transition: all 0.3s ease;\n}\n\n.multiselect:hover {\n  border-color: rgba(99, 179, 237, 0.5);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\n}\n\n.multiselect__tags {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 0.7rem 3rem 0.7rem 3rem; /* Left padding for search icon, right padding for arrow */\n  min-height: 2.8rem;\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n  color: white;\n  transition: all 0.3s ease;\n  position: relative;\n}\n\n.multiselect--active .multiselect__tags {\n  background: rgba(45, 55, 72, 0.95);\n  border-radius: 8px 8px 0 0;\n}\n\n/* Search icon styling */\n.multiselect__tags::before {\n  content: \"\";\n  position: absolute;\n  left: 0.8rem;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 16px;\n  height: 16px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.6)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='8'%3E%3C/circle%3E%3Cpath d='m21 21-4.35-4.35'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  pointer-events: none;\n  z-index: 2;\n  transition: all 0.3s ease;\n}\n\n.multiselect--active .multiselect__tags::before {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='rgba(99,179,237,0.8)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='8'%3E%3C/circle%3E%3Cpath d='m21 21-4.35-4.35'%3E%3C/path%3E%3C/svg%3E\");\n}\n\n\n.multiselect__input,\n.multiselect__single {\n  background: transparent;\n  border: none;\n  padding: 0.3rem 0;\n  font-size: 1rem;\n  color: white;\n  flex-grow: 1;\n  outline: none;\n  min-width: 100px;\n  box-sizing: border-box;\n  margin-left: 0;\n  padding-left: 0;\n}\n\n\n.multiselect__single {\n  color: white;\n  font-weight: 500;\n  position: relative;\n  z-index: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: calc(100% - 1rem);\n}\n\n.multiselect__select {\n  position: absolute;\n  top: 50%;\n  right: 0.8rem;\n  transform: translateY(-50%);\n  width: 1.2rem;\n  height: 1.2rem;\n  cursor: pointer;\n  color: rgba(255, 255, 255, 0.7);\n  transition: color 0.2s ease, transform 0.2s ease;\n  z-index: 3;\n}\n\n.multiselect__select:hover {\n  color: #63b3ed;\n  transform: translateY(-50%) scale(1.1);\n}\n\n.multiselect--active .multiselect__select {\n  transform: translateY(-50%) rotate(180deg);\n}\n.multiselect__content-wrapper {\n  position: absolute;\n  z-index: 1000;\n  background: rgba(26, 32, 44, 0.98);\n  border: 1px solid rgba(99, 179, 237, 0.3);\n  border-top: none;\n  border-radius: 0 0 8px 8px;\n  width: 100%;\n  max-height: 400px;\n  overflow-y: auto;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);\n  box-sizing: border-box;\n}\n\n.multiselect__content {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.multiselect__element {\n  list-style: none;\n}\n\n.multiselect__option {\n  position: relative;\n  padding: 0.6rem 0.8rem;\n  min-height: 40px;\n  line-height: 1.4;\n  background: transparent;\n  color: rgba(255, 255, 255, 0.9);\n  cursor: pointer;\n  white-space: nowrap;\n  transition: all 0.15s ease;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.03);\n  list-style: none;\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n}\n\n.multiselect__option::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: -1;\n  background: transparent;\n  transition: background 0.15s ease;\n}\n\n.multiselect__option:hover::after,\n.multiselect__option--highlight::after {\n  background: rgba(99, 179, 237, 0.4);\n}\n\n.multiselect__option:hover,\n.multiselect__option--highlight {\n  color: white !important;\n}\n\n.multiselect__option:last-child {\n  border-bottom: none;\n  border-radius: 0 0 8px 8px;\n}\n\n.multiselect__option--selected {\n  background: rgba(72, 187, 120, 0.35);\n  color: #68d391;\n  font-weight: 600;\n  border-bottom: 1px solid rgba(72, 187, 120, 0.2);\n}\n\n.multiselect__option--selected:hover {\n  background: rgba(72, 187, 120, 0.5) !important;\n  border-bottom: 1px solid rgba(72, 187, 120, 0.3);\n}\n\n.multiselect__tag {\n  background: rgba(99, 179, 237, 0.2);\n  border: 1px solid rgba(99, 179, 237, 0.4);\n  border-radius: 6px;\n  margin-right: 0.5rem;\n  margin-bottom: 0.25rem;\n  padding: 0.3rem 0.6rem;\n  color: #63b3ed;\n  font-size: 0.9rem;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  transition: all 0.2s ease;\n}\n\n.multiselect__tag:hover {\n  background: rgba(99, 179, 237, 0.3);\n  border-color: rgba(99, 179, 237, 0.6);\n  transform: translateY(-1px);\n}\n\n.multiselect__tag-icon {\n  margin-left: 0.5rem;\n  cursor: pointer;\n  color: rgba(99, 179, 237, 0.8);\n  font-weight: bold;\n  transition: color 0.2s ease;\n}\n\n.multiselect__tag-icon:hover {\n  color: #e53e3e;\n}\n.multiselect__option::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: -1;\n  background: transparent;\n  transition: background 0.15s ease;\n}\n.multiselect--disabled {\n  background: rgba(45, 55, 72, 0.5);\n  color: rgba(255, 255, 255, 0.5);\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.multiselect--disabled .multiselect__select {\n  color: rgba(255, 255, 255, 0.3);\n}\n\n/* Custom scrollbar for multiselect dropdown */\n.multiselect__content-wrapper::-webkit-scrollbar {\n  width: 12px;\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  margin: 2px;\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar-thumb {\n  background: rgba(99, 179, 237, 0.6);\n  border-radius: 6px;\n  border: 2px solid rgba(26, 32, 44, 0.98);\n  transition: background 0.2s ease;\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar-thumb:hover {\n  background: rgba(99, 179, 237, 0.8);\n}\n\n.multiselect__content-wrapper::-webkit-scrollbar-thumb:active {\n  background: rgba(99, 179, 237, 1);\n}\n\n/* Icon styling improvements */\n.cable-icon-container,\n.landing-icon-container,\n.ship-icon-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 26px;\n  height: 26px;\n  margin-right: 10px;\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n.multiselect__option:hover .cable-icon-container,\n.multiselect__option:hover .landing-icon-container,\n.multiselect__option:hover .ship-icon-container {\n  background: rgba(99, 179, 237, 0.2);\n}\n\n.ship-flag {\n  position: absolute;\n  bottom: -2px;\n  right: -2px;\n  font-size: 0.8rem;\n  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.5));\n}\n\n/* Enhanced focus states */\n.multiselect--active {\n  border-color: rgba(99, 179, 237, 0.7);\n  box-shadow: 0 0 0 2px rgba(99, 179, 237, 0.2);\n}\n\n/* Better visual feedback for empty state */\n.multiselect:not(.multiselect--active):hover .multiselect__tags::before {\n  color: rgba(99, 179, 237, 0.7);\n  transform: translateY(-50%) scale(1.1);\n}\n</style>","import script from \"./TheSidebar.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TheSidebar.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./TheSidebar.vue?vue&type=style&index=0&id=7688a7b3&scoped=true&lang=css\"\nimport \"./TheSidebar.vue?vue&type=style&index=1&id=7688a7b3&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7688a7b3\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2825e864\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"d-flex full-height resizable-container\" }\nconst _hoisted_2 = { class: \"map-container\" }\n\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport SidebarNav from '@/components/TheSidebar.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\nconst sidebarWidth = ref(250); // Initial sidebar width\nlet isResizing = false;\n\nconst startResizing = (event: MouseEvent) => {\n  isResizing = true;\n  document.addEventListener('mousemove', resizeSidebar);\n  document.addEventListener('mouseup', stopResizing);\n};\n\nconst resizeSidebar = (event: MouseEvent) => {\n  if (isResizing) {\n    sidebarWidth.value = event.clientX;\n  }\n};\n\nconst stopResizing = () => {\n  isResizing = false;\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n};\n\nonBeforeUnmount(() => {\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n});\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref: \"sidebar\",\n      class: \"sidebar-nav\",\n      style: _normalizeStyle({ width: sidebarWidth.value + 'px' })\n    }, [\n      _createVNode(SidebarNav)\n    ], 4),\n    _createElementVNode(\"div\", {\n      ref: \"resizer\",\n      class: \"resizer\",\n      onMousedown: startResizing\n    }, null, 544),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_view, { name: \"main\" })\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"d-flex full-height resizable-container\">\n    <!-- SIDEBAR -->\n    <div ref=\"sidebar\" class=\"sidebar-nav\" :style=\"{ width: sidebarWidth + 'px' }\">\n    <SidebarNav />\n    </div>\n\n    <div ref=\"resizer\" class=\"resizer\" @mousedown=\"startResizing\"></div>\n\n    \n    <!-- CONTENT -->\n    <div class=\"map-container\">\n      <router-view name=\"main\"/>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport SidebarNav from '@/components/TheSidebar.vue';\n\nconst sidebarWidth = ref(250); // Initial sidebar width\nlet isResizing = false;\n\nconst startResizing = (event: MouseEvent) => {\n  isResizing = true;\n  document.addEventListener('mousemove', resizeSidebar);\n  document.addEventListener('mouseup', stopResizing);\n};\n\nconst resizeSidebar = (event: MouseEvent) => {\n  if (isResizing) {\n    sidebarWidth.value = event.clientX;\n  }\n};\n\nconst stopResizing = () => {\n  isResizing = false;\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n};\n\nonBeforeUnmount(() => {\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n});\n\n</script>\n\n<style scoped>\n/* Ensure the entire layout takes full viewport height */\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* Ensure the main container takes full height and uses flexbox */\n.full-height {\n  height: 100vh; /* Full viewport height */\n}\n\n.d-flex {\n  display: flex; /* Flexbox layout for the sidebar and main content */\n}\n\n/* SidebarNav component should be styled to take up the necessary width */\n.sidebar-nav {\n  min-width: 320px; /* or any width you need for the sidebar */\n  background-color: #f8f9fa; /* Background color for the sidebar */\n}\n\n/* The map container should take up all remaining space */\n.map-container {\n  flex-grow: 1; /* Take up the remaining space next to the sidebar */\n  height: 100%; /* Ensure it takes full height */\n  position: relative; /* Necessary for Leaflet or other map controls */\n}\n</style>\n","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=2825e864&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2825e864\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport HomeView from \"@/views/HomeView.vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\n\n//first load of cables and landing sites\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\nconst dataCableStore = useDataCablesStore();\ndataCableStore.initialize();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(HomeView)\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <HomeView />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport HomeView from \"@/views/HomeView.vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\n\n//first load of cables and landing sites\nconst dataCableStore = useDataCablesStore();\ndataCableStore.initialize();\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  --bs-dark-rgb: 72, 80, 106;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a277d376&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport { createPinia } from 'pinia';\nimport urql, { Client, cacheExchange, fetchExchange } from '@urql/vue';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport 'bootstrap';\n// commented out because opening the app in a browser would not show the most recent state, \n// could be reintegrated in the future to improve loading time\n// import './registerServiceWorker';\n\nconst client = new Client({\n    url: process.env.VUE_APP_GRAPHQL_SERVER_URL,\n    exchanges: [cacheExchange, fetchExchange],\n    fetchOptions: {\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret': process.env.VUE_APP_HASURA_ADMIN_SECRET,\n      },\n    },\n  });\n\ncreateApp(App).use(createPinia()).use(router).use(urql, client).mount('#app');\n//creates app instance of vue App and mounts it at ID app","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"32\":\"160655e9\",\"224\":\"f4a92431\",\"312\":\"0907f9cb\",\"384\":\"599d156f\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"sdcs-dashboard:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksdcs_dashboard\"] = self[\"webpackChunksdcs_dashboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [999], function() { return __webpack_require__(992); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","_hoisted_2","class","_hoisted_3","__name","setup","__props","dataCableStore","useDataCablesStore","_ctx","_cache","getDataCables","listItems","key","id","onClick","$event","setSelectCable","selectedCableId","name","__exports__","loadCables","handle","useQuery","query","result","loadLandingSites","queryCableById","queryLandingSiteById","useLandingSitesStore","state","landingSites","selectLandingSites","isLoading","selectedFromSidebar","getters","getLandingSites","actions","fetchLandingSites","data","_rawValue","Landingsites","forEach","e","geoData","JSON","parse","this","setSelectLandingSiteById","landingSiteId","fromSidebar","landingSite","find","site","setSelectLandingSite","console","error","push","path","deselectLandingSite","length","isOneSelected","isLandingSiteSelectedById","some","isLandingSiteSelected","includes","n","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","props","mapInstance","type","Object","required","drawnGeometry","default","samplePointCount","Number","showPopup","Boolean","emits","__expose","__emit","emit","depthAnalysis","isAnalyzing","analysisStore","Map","geometryIdCounter","WeakMap","calculateDistance","point1","point2","R","lat1","lat","Math","PI","lat2","deltaLat","deltaLng","lng","a","sin","cos","c","atan2","sqrt","interpolateLinePoints","segments","totalPoints","totalLength","segmentLengths","i","pointsPerSegment","map","max","round","interpolatedPoints","start","end","numPoints","j","fraction","interpolatedLat","interpolatedLng","isPointInPolygon","point","polygon","inside","x","y","xi","yi","xj","yj","intersect","samplePolygonPoints","bounds","getBounds","polygonLatLngs","getLatLngs","points","adjustedPoints","geodesicArea","min","maxAttempts","attempts","getSouth","random","getNorth","getWest","getEast","contains","sampleCirclePoints","circle","center","getLatLng","radius","getRadius","angle","r","extractSamplePoints","geometry","latlngs","fetchOceanDepth","Promise","minx","miny","maxx","maxy","url","axios","get","response","searchString","searchIndex","indexOf","extractedText","substring","parseFloat","NaN","analyzeGeometryDepths","value","samplePoints","depthPromises","coord","all","depths","validDepths","filter","depth","isNaN","averageDepth","reduce","b","deepestPoint","shallowestPoint","geomId","set","feature","properties","analysisId","analysis","off","on","layer","target","setLatLng","latlng","setContent","openOn","newGeometry","oldGeometry","window","d3","showProfile","isFullscreen","fetchingPoints","fetchedPoints","resizeObserver","currentElevationControl","currentElevationLayer","isOceanDepthActive","isCableShipsActive","isAnchorageActive","oceanDepthFullscreenClass","baseClasses","fullscreen","_container","MutationObserver","mutations","mutation","attributeName","classList","observe","attributes","attributeFilter","isComponentMounted","disconnect","resizeTimeout","cleanupElevationProfile","showElevationProfile","options","_originalResizeChart","_resizeChart","_safeResizeChart","bind","_map","_data","chart","_chart","area","_area","select","document","body","warn","onAdd","_initEvents","clearTimeout","listeners","event","removeEventListener","_mousemoveHandler","onRemove","Elevation","elevationOptions","theme","detached","elevationDiv","followMarker","reverseCoords","autofitBounds","imperial","altitude","distance","summary","ruler","legend","edgeScale","hotline","preferCanvas","waypoints","_onRemove","setupResizeHandling","getElementById","ResizeObserver","debounce","func","wait","timeout","later","apply","args","setTimeout","toggleFullscreen","log","height","p1","p2","pow","findClosestSegment","currentEndPoint","minDistance","Infinity","closestSegmentIndex","shouldReverse","segment","index","used","distanceToStart","distanceToEnd","segmentIndex","calculateTotalPoints","minPointDensity","maxDistanceThreshold","total","Array","isArray","segmentToProcess","shouldInterpolateSegment","interpolateSegment","sortCableSegments","rawSegments","sortedSegments","unusedSegmentsExist","nextSegment","segmentToAdd","reverse","calculateSegmentLength","lng1","lng2","segmentLength","SHORT_SEGMENT_THRESHOLD","SHORT_SEGMENT_MIN_DENSITY","NORMAL_SEGMENT_MIN_DENSITY","pointDensity","requiredDensity","interpolatedSegment","SHORT_SEGMENT_DISTANCE","NORMAL_SEGMENT_DISTANCE","actualThreshold","numExtraPoints","ceil","convertToGeoJSON","coordinates","rawCoordinates","stringify","unsortedSegments","processedCoordinates","multiLineString","acc","removeCurrentElevationControl","removeControl","removeLayer","eachLayer","className","style","geoJson","SafeElevationControl","addTo","load","safeRemoveClasses","element","classNames","classes","split","trim","remove","clear","originalRemoveClass","removeClass","el","innerHTML","selectors","selector","querySelectorAll","HTMLElement","_path","disabled","width","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","for","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","landingSitesStore","route","cable","getMapInstance","oceanDepthAnalyzerRef","filteredDepthAnalysis","loadCable","client","toPromise","CableSystems","formatDate","dateString","Date","toLocaleDateString","year","month","day","selectCable","cableDetails","extractDepthInfo","cableGeo","flattenedCoordinates","flatMap","filterDepthAnalysis","fullAnalysis","filteredAnalysis","params","cableId","toString","isCableSelected","to","_component_router_link","_component_CableRiskAnalysis","deselectCables","_","outOfService","toLocaleString","readyForService","CableSystem_X_Landingsites","Landingsite","Ownerships","entry","Company","nationality","count","toggleElevationProfile","active","activeAnalysis","toggleRiskAnalysis","ElevationProfile","ref","autoStart","OceanDepthAnalyzer","ref_key","onDepthAnalysisComplete","src","showConsent","clickToClose","styles","modalStyles","acceptTracking","declineTracking","show","closeModal","components","VueFinalModal","hasConsented","tracker","initializeTracker","projectKey","privateMode","canvas","disableCanvas","useAnimationFrame","fileExt","resourceBaseHref","_trackerInstance","startTracker","isActive","consent","localStorage","getItem","setItem","resetConsent","removeItem","stop","overlay","zIndex","content","render","dataCablesStore","selectedSource","isOpen","originalCableData","currentHoveredItem","toggleDropdown","selectSource","source","updateCableSource","async","dataCables","updateMixedSourceCables","originalCable","orig","initialize","mixedSourceCable","item","oceanSelected","currentGeometry","drawControl","drawnItemsLayer","lastGeometry","drawnItems","isDrawingModeActive","isEditModeActive","drawControlsInitialized","removeMapEventListeners","Event","CREATED","DELETED","DRAWSTART","DELETESTART","DELETESTOP","EDITSTART","EDITSTOP","initializeDrawingControls","addLayer","drawOptions","draw","polyline","shapeOptions","color","metric","nautic","feet","showArea","rectangle","showRadius","marker","circlemarker","edit","featureGroup","position","Draw","handleDrawCreated","handleDrawDeleted","handleDrawStart","handleDeleteStart","handleDeleteStop","handleEditStart","handleEditStop","setupClickHandler","highlightedLayer","createHighlightedLayer","targetLayer","stopPropagation","fire","toggleDrawingMode","fromWatcher","addControl","cleanupGeometries","clearLayers","itemDetails","layerType","getLayerCoordinates","highlightStyles","weight","opacity","fillColor","fillOpacity","icon","html","iconSize","coords","smoothFactor","noClip","layers","findIndex","splice","newMap","newValue","alt","timeline","leftPosition","rightPosition","hoverPosition","currentStartDate","currentEndDate","minDate","maxDate","setMonth","getMonth","visibleRangeStart","visibleRangeEnd","showLeftTooltip","showRightTooltip","eventTooltipContent","eventTooltipStyle","initializeDates","now","oneYearAgo","getFullYear","getDate","updateDates","startDate","adjustVisibleRange","endDate","updateHoverPosition","timelineRect","getBoundingClientRect","clientX","left","hoveredEvent","visibleEvents","startPosition","endPosition","emitEventHover","showEventTooltip","hideEventTooltip","hoveredLine","interEventLines","line","handleLineHover","hideHoverEffect","hoverEffectStyle","display","backgroundColor","timeRange","extendedVisibleRangeForEvents","events","visibleTimeRange","getTime","eventStart","eventEnd","timelineMarkers","leftSliderTime","rightSliderTime","selectedTimeRange","dayInMs","monthInMs","yearInMs","interval","format","markers","current","currentTime","abs","label","isFixed","sort","date","getEventBarStyle","isEventTooltipVisible","top","clientY","lines","sortedEvents","currentEvent","nextEvent","startEvent","endEvent","getInterEventLineStyle","lineStart","lineEnd","lineWidth","normalizedPosition","startTime","endTime","interpolatedTime","startLat","endLat","startLon","lon","endLon","interpolatedLon","time","startDrag","slider","preventDefault","initialX","initialLeft","initialRight","move","deltaX","deltaPct","extendVisibleRange","resetSliderPositions","addEventListener","direction","distanceDragged","expansionFactor","newVisibleStart","leftTime","newVisibleEnd","rightTime","emitValue","setTime","showTooltip","hideTooltip","initializePositions","dataPoints","deep","vesselTrackingUrl","currentLanguage","String","cableStore","controlInstance","layerGroup","mapReady","vesselPositions","isSearchSelected","timelineContainerStyle","mapBounds","getContainer","localVesselPositions","vesselLayerReady","vesselPostResponse","vesselModifiedPostUrl","isVesselTrackingMode","vesselTrackingSelected","vesselEvents","hoveredMarker","currentTrackedVessel","vesselTrackLayer","interpolatedEvents","currentTranslations","newPositions","vesselTracking","isValidCoordinate","undefined","dateRange","onDatePickerChange","selectedDates","onEventHover","onMarkerHover","onInterEventHover","eventData","isInterpolated","markerData","mmsi","flag","tooltip","permanent","offset","vesselData","lastSeen","toISOString","eventType","createShipIcon","bindTooltip","openTooltip","baseColor","countryCode","vessel","flagEmoji","getFlagEmoji","lastDateSeen","currentDate","daysSinceLastSeen","getColorComponent","calculateColor","startColor","hexToRgb","endColor","g","rgbToHex","iconAnchor","hex","exec","parseInt","slice","codePoints","toUpperCase","char","charCodeAt","fromCodePoint","vesselIdsToArray","vessels","vesselIds","vesselId","vesselTrackingParams","limit","vesselIdsArray","allVesselPositions","loiteringParams","portVisitParams","loiteringResponse","portVisitResponse","latestEvent","entries","portVisitEvent","ssvid","beam","grossTonage","purpose","cableCapacity","notes","baseport","owner","replace","formattedEndDate","formattedStartDate","onDateChange","timeDiff","vesselTrack","d","join","extendedStartDate","extendedEndDate","baseParams","portVisitsResponse","portVisits","loiteringEvents","allEvents","formattedEvents","drawVesselTrack","trackData","mapInstanceToUse","filteredData","eventStartDate","eventEndDate","hasLayer","trackPoints","arrowheads","size","yawn","fill","isValid","fitBounds","viewVesselTrack","v","toggleVesselTracking","setAllCablesOpacity","exitVesselTrackingMode","popup","viewingVesselTrack","setViewingVesselTrack","onShipClick","lastSeenDate","formattedDate","hour","minute","second","hour12","popupContent","grossTonnage","viewOn","maxWidth","trackLink","Error","message","container","querySelector","onMousedown","onTouchstart","stopEvent","exitVesselTracking","modelValue","placeholder","datePlaceholder","range","partialRange","dark","TimelineSlider","isVisible","zoneLabels","highlightedLayers","zoneColors","ACMA","NAZ","MECMA","SEAIOCMA","YZ","APMA","AAPMMSAA","SPZ","translatedKey","defaultName","visible","geoJsonLayer","features","getZoneStyle","abbreviation","defaultStyle","createLabel","getCenter","labelColor","interactive","highlightZone","layerConfig","featureItem","highlightStyle","clearHighlightedZones","toggleLayer","onEachFeature","click","labelKey","resetLayers","hide","formatPropertyKey","word","charAt","createTooltipContent","excludeKeys","toLowerCase","startsWith","supercluster","maxZoom","originalGeometry","accumulated","formattedFeatures","dataCenterLayer","polygonLayer","isLayerVisible","createDataCenterIcon","bindInteractiveTooltip","getTooltip","tooltipElement","getElement","pointerEvents","updateClusters","zoom","floor","getZoom","bbox","clusters","getClusters","cluster","point_count","expansionZoom","getClusterExpansionZoom","cluster_id","setView","pane","tooltipContent","polygonErr","initializeLayer","addOverlay","zoomAnimation","controlInst","immediate","layerDefinitions","def","translatedName","initializeLayers","groupedLayerObj","_layers","layerObj","originalName","groupedLayer","allGroupLayers","getLayers","matchedLayer","sublabel","distance_from_shore_m","isDock","dock","anchorageLayer","clusterMarker","anchorIcon","distanceFromShore","anchorageOverlayLayer","apiUrl","showAbortModal","abortEvaluation","landingSiteStore","selectedRadius","selectedColor","modifiedPostUrl","getTerritorialOptionsStyle","dashArray","getGasPipelinesOptionsStyle","isPipelineHighlighted","highlightedPipelineId","PipelineID","clusteredDataCentersRef","getEEZOptionsStyle","changeLanguage","language","mtLayer","setLanguage","updateLayerControlNames","getLayerTranslation","layerName","getTranslatedInfrastructureName","infrastructure","unknown","confidence","resetMapLayer","resetMap","_layerControlInputs","input","checked","_update","mapContainer","fishingSelected","showSeismicOverlay","vesselTrackingRef","anchorageLayerToggleRef","maintenanceLayerToggleRef","baseLayer","fishLayerReady","postResponse","eventMarkerLayer","newMarker","caller","infrastructurePositions","processInfrastructureData","structure_end_date","detection_id","label_confidence","detection_date","onPipelineClick","toGeoJSON","pipelineId","previouslyHighlighted","isSamePipeline","wasPreviouslyHighlighted","borderStyle","fillStyle","currentStyle","setStyle","cost","CostUSD","Cost","formattedCost","formatCost","PipelineName","startCountry","StartCountry","endCountry","EndCountry","countries","Countries","Owner","startYear","StartYear1","capacity","capacityTooltip","LengthKnownKm","toFixed","onPipelineHover","onPipelineDehover","drawingLayerRef","currentOceanDepth","depthTooltip","updateDepthTooltip","containerPoint","latLngToContainerPoint","lattitude","longitude","functionalityOverviewRef","seismicData","selectedEarthquake","seismicLayer","updateSeismicLayer","pointToLayer","reactivePointToLayer","tileProviders2","attribution","polylineMeasure","onMapReady","mapIns","setMapInstance","initializePolylineMeasure","apiKey","DATAVIZ","layertype","showUnitControl","unitControlUnits","unitControlTitle","text","metres","nauticalmiles","landmiles","unitControlLabel","kilometres","useMapZoomAnimation","tempLines","measureLines","onLayerControlReady","controlIns","resetMapContainer","createElement","resetMapButton","textContent","appendChild","layerControlContainer","polylinesBounds","onCreateLine","polylineInstance","extend","closeTooltip","bound","cableName","fishingWatch","post","cableShipsLayerGroup","lastDepthQuery","getOceanDepth","queryString","oceanDepth","datePicked","firstDay","formatDatePart","firstMonth","secondDay","secondMonth","part","layerChanged","add","fetchSeismicData","overlayAdded","overlayRemoved","questionMarkClicked","openModal","onMapClick","targetElement","originalEvent","onCableClick","onLandingSiteClick","updateMousePosition","seismicDatePicked","startMonth","endMonth","magnitude","mag","location","place","minZoom","zoomControl","markerZoomAnimation","worldCopyJump","onBaselayerchange","onOverlayadd","onOverlayremove","onReady","onMousemove","section","isNoneSelected","onMouseover","onMouseout","tee","country","geojson","tileProvider","VesselTracking","since","abortEvaluationText","cancel","confirm","FunctionalityOverview","oceanMapLegend","latitude","datePlaceholderFishing","seismicDate","datePlaceholderSeismic","onChange","CableSourceSelector","ClusteredAnchorage","ClusteredDataCenters","AnchorageLayerToggle","MaintenanceLayerToggle","DrawingLayer","selectedEarthquakeDetails","loadLandingSite","setManySelectedCables","CableSystem","getConnectedSitesCount","CableSystem_X_Landingsites_t","setLandingSite","connectedSite","routes","main","LeafletMap","sidebar","CableViewer","router","history","firstLoad","getSelectedCable","fetchDataCables","cables","fetchCableDetails","cableIds","showSources","sources","title","description","sourceName","handleKeydown","xmlns","viewBox","stroke","href","selectedCables","selectedLandingSite","landingSitesAndCables","inputArray","sidebarMarkerLayerGroup","getShipColor","getLandingColor","currentSidebarMarker","updateHoveredMarker","updateVesselPositions","positions","updateViewingVesselTrack","isViewing","clearSidebarVessel","updatedPositions","handleVesselSearchSelect","vesselInfo","getVesselLatestPosition","latestPosition","shipIcon","clickEvent","mockEvent","loiteringEvent","loiteringDate","portVisitDate","initializeSearchBar","vesselSearchOptions","values","shipname","cableOptions","landingSiteOptions","concat","asyncFind","queryGiven","regex","RegExp","filteredArray","test","selectCableOrLandingSiteOrVessel","selection","selectedCable","str","selectedLandingSites","oldValue","_loaded","_component_router_view","searchable","loading","onSearchChange","onSelect","option","cx","cy","SourcesModal","sidebarWidth","isResizing","startResizing","resizeSidebar","stopResizing","HomeView","exchanges","fetchOptions","headers","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","keys","every","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","then","ns","create","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","onerror","onload","doneFns","parentNode","removeChild","head","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","resolve","reject","loadingEnded","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}