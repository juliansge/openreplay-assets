{"version":3,"file":"js/app.472810b2.js","mappings":"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","sources":["webpack://sdcs-dashboard/./src/components/SideBarList.vue?7758","webpack://sdcs-dashboard/./src/components/SideBarList.vue","webpack://sdcs-dashboard/./src/components/SideBarList.vue?b7af","webpack://sdcs-dashboard/./src/service/hasura.ts","webpack://sdcs-dashboard/./src/store/landingSites.ts","webpack://sdcs-dashboard/./src/components/OceanDepthAnalyzer.vue?141a","webpack://sdcs-dashboard/./src/components/OceanDepthAnalyzer.vue","webpack://sdcs-dashboard/./src/components/OceanDepthAnalyzer.vue?6296","webpack://sdcs-dashboard/./src/components/ElevationProfile.vue?e093","webpack://sdcs-dashboard/./src/components/ElevationProfile.vue","webpack://sdcs-dashboard/./src/components/ElevationProfile.vue?d67e","webpack://sdcs-dashboard/./src/components/CableViewer.vue?ef87","webpack://sdcs-dashboard/./src/components/CableViewer.vue","webpack://sdcs-dashboard/./src/components/CableViewer.vue?a40d","webpack://sdcs-dashboard/./src/components/FunctionalityOverview.vue","webpack://sdcs-dashboard/./src/components/FunctionalityOverview.vue?213a","webpack://sdcs-dashboard/./src/components/CableSourceSelector.vue","webpack://sdcs-dashboard/./src/components/CableSourceSelector.vue?618a","webpack://sdcs-dashboard/./src/components/DrawingLayer.vue?578c","webpack://sdcs-dashboard/./src/components/DrawingLayer.vue","webpack://sdcs-dashboard/./src/components/DrawingLayer.vue?c6eb","webpack://sdcs-dashboard/./src/components/TimelineSlider.vue","webpack://sdcs-dashboard/./src/components/TimelineSlider.vue?b4fe","webpack://sdcs-dashboard/./src/components/VesselTracking.vue?5b05","webpack://sdcs-dashboard/./src/components/VesselTracking.vue","webpack://sdcs-dashboard/./src/components/VesselTracking.vue?6e7c","webpack://sdcs-dashboard/./src/components/MaintenanceLayerToggle.vue","webpack://sdcs-dashboard/./src/components/MaintenanceLayerToggle.vue?15b3","webpack://sdcs-dashboard/./src/components/ClusteredDataCenters.vue","webpack://sdcs-dashboard/./src/components/ClusteredDataCenters.vue?33f2","webpack://sdcs-dashboard/./src/components/AnchorageLayerToggle.vue","webpack://sdcs-dashboard/./src/components/AnchorageLayerToggle.vue?2efd","webpack://sdcs-dashboard/./src/components/ClusteredAnchorage.vue","webpack://sdcs-dashboard/./src/components/ClusteredAnchorage.vue?82e6","webpack://sdcs-dashboard/./src/components/LeafletMap.vue?786e","webpack://sdcs-dashboard/./src/components/LeafletMap.vue","webpack://sdcs-dashboard/./src/components/LeafletMap.vue?aa93","webpack://sdcs-dashboard/./src/components/LandingSiteViewer.vue?4def","webpack://sdcs-dashboard/./src/components/LandingSiteViewer.vue","webpack://sdcs-dashboard/./src/components/LandingSiteViewer.vue?a214","webpack://sdcs-dashboard/./src/router/index.ts","webpack://sdcs-dashboard/./src/store/datacables.ts","webpack://sdcs-dashboard/./src/components/SourcesModal.vue","webpack://sdcs-dashboard/./src/components/SourcesModal.vue?be58","webpack://sdcs-dashboard/./src/components/TheSidebar.vue?caed","webpack://sdcs-dashboard/./src/components/TheSidebar.vue","webpack://sdcs-dashboard/./src/components/TheSidebar.vue?ee61","webpack://sdcs-dashboard/./src/views/HomeView.vue?71c7","webpack://sdcs-dashboard/./src/views/HomeView.vue","webpack://sdcs-dashboard/./src/views/HomeView.vue?1da1","webpack://sdcs-dashboard/./src/App.vue?2a5e","webpack://sdcs-dashboard/./src/App.vue","webpack://sdcs-dashboard/./src/App.vue?7ccd","webpack://sdcs-dashboard/./src/openreplay.ts","webpack://sdcs-dashboard/./src/main.ts","webpack://sdcs-dashboard/webpack/bootstrap","webpack://sdcs-dashboard/webpack/runtime/chunk loaded","webpack://sdcs-dashboard/webpack/runtime/compat get default export","webpack://sdcs-dashboard/webpack/runtime/create fake namespace object","webpack://sdcs-dashboard/webpack/runtime/define property getters","webpack://sdcs-dashboard/webpack/runtime/ensure chunk","webpack://sdcs-dashboard/webpack/runtime/get javascript chunk filename","webpack://sdcs-dashboard/webpack/runtime/get mini-css chunk filename","webpack://sdcs-dashboard/webpack/runtime/global","webpack://sdcs-dashboard/webpack/runtime/hasOwnProperty shorthand","webpack://sdcs-dashboard/webpack/runtime/load script","webpack://sdcs-dashboard/webpack/runtime/make namespace object","webpack://sdcs-dashboard/webpack/runtime/publicPath","webpack://sdcs-dashboard/webpack/runtime/jsonp chunk loading","webpack://sdcs-dashboard/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-48603b74\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"onClick\"]\nconst _hoisted_2 = { class: \"d-flex w-100 align-items-center justify-content-between\" }\nconst _hoisted_3 = { class: \"mb-1\" }\n\nimport { useDataCablesStore } from \"@/store/datacables\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SideBarList',\n  setup(__props) {\n\nconst dataCableStore = useDataCablesStore();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(dataCableStore).getDataCables, (listItems) => {\n    return (_openBlock(), _createElementBlock(\"div\", {\n      class: \"text-start\",\n      key: listItems.id\n    }, [\n      _createElementVNode(\"a\", {\n        onClick: ($event: any) => (_unref(dataCableStore).setSelectCable(listItems.id, true)),\n        class: \"list-group-item list-group-item-action list-group-item-light\"\n      }, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"strong\", _hoisted_3, _toDisplayString(listItems.name), 1)\n        ])\n      ], 8, _hoisted_1)\n    ]))\n  }), 128))\n}\n}\n\n})","<template>\n  <div\n    class=\"text-start\"\n    v-for=\"listItems in dataCableStore.getDataCables\"\n    :key=\"listItems.id\"\n  >\n    <a\n      @click=\"dataCableStore.setSelectCable(listItems.id, true)\"\n      class=\"list-group-item list-group-item-action list-group-item-light\"\n    >\n      <div class=\"d-flex w-100 align-items-center justify-content-between\">\n        <strong class=\"mb-1\">{{ listItems.name }}</strong>\n      </div>\n    </a>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useDataCablesStore } from \"@/store/datacables\";\n\nconst dataCableStore = useDataCablesStore();\n</script>\n\n<style scoped>\n.list-group-item {\n  padding-left: 1rem;\n  padding-right: 1rem;\n  white-space: normal; \n  word-break: break-word;\n}\n</style>","import script from \"./SideBarList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SideBarList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SideBarList.vue?vue&type=style&index=0&id=48603b74&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-48603b74\"]])\n\nexport default __exports__","import { gql, useClientHandle } from \"@urql/vue\";\nexport async function loadCables() {\n  const handle = useClientHandle();\n  const result = await handle.useQuery({\n    query: gql`\n      query loadCables {\n        CableSystems {\n          id\n          abbreviation\n          name\n          geoData\n          outOfService\n          color\n        }\n      }\n    `,\n  });\n  return result;\n}\n\nexport async function loadLandingSites() {\n  const handle = useClientHandle();\n  const result = await handle.useQuery({\n    query: gql`\n      query loadLandingSites {\n        Landingsites {\n          country\n          id\n          name\n          geoData\n        }\n      }\n    `,\n  });\n  return result;\n}\nexport const queryCableById = `\n  query loadCableById ($id: String!) {\n    CableSystems(where: {id: {_eq: $id}}) {\n      id\n      eu_relations\n      endOfService\n      constructionCost\n      chineseInvolvement\n      abbreviation\n      length\n      name\n      outOfService\n      readyForService\n      seaRegion\n      stateOwnership\n      CableSystem_X_Landingsites {\n        Landingsite {\n          id\n          name\n        }\n      }\n      Ownerships {\n        companyId\n        Company {\n              id\n              name\n              nationality  \n        }\n      }\n    }\n  }`;\n\nexport const queryLandingSiteById = `\n  query loadLandingSiteById($id: String!) {\n    Landingsites(where: {id: {_eq: $id}}) {\n      country\n      id\n      name\n      CableSystem_X_Landingsites {\n        CableSystem {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n","import { defineStore } from \"pinia\"; \nimport router from \"@/router/index\"; \nimport { loadLandingSites } from \"@/service/hasura\"; \nimport { toRaw } from \"vue\"; \n\nexport const useLandingSitesStore = defineStore(\"landingSites\", { \n  state: () => ({ \n    landingSites: [] as any[], \n    selectLandingSites: [] as any[], \n    isLoading: true, \n    selectedFromSidebar: false, \n  }), \n  \n  getters: { \n    getLandingSites: (state) => { \n      return state.landingSites; \n    }, \n  }, \n  \n  actions: { \n    async fetchLandingSites() { \n      const landingSites = ((await loadLandingSites()) as any).data._rawValue.Landingsites; \n      landingSites.forEach((e: any) => (e.geoData = JSON.parse(e.geoData))); \n      this.landingSites = landingSites; \n    }, \n    \n    setSelectLandingSiteById(landingSiteId: string, fromSidebar = false) { \n      const landingSite = this.landingSites.find( \n        (site: any) => landingSiteId === site.id \n      ); \n      \n      if (landingSite) { \n        this.setSelectLandingSite(toRaw(landingSite), fromSidebar); \n      } else { \n        console.error(\"No landing site found!\"); \n      } \n    }, \n    \n    setSelectLandingSite(landingSite: any, fromSidebar = false) {\n      this.selectLandingSites = [landingSite]; \n      this.selectedFromSidebar = fromSidebar; \n      // you could set the selected cables here. You need to change the request loadLandingSites and copy the code from LandingViewer in this method! \n      router.push({ path: `/landingSites/${landingSite.id}` }); \n    }, \n    \n    deselectLandingSite() {\n      if (this.selectLandingSites.length) { \n        this.selectLandingSites = []; \n        this.selectedFromSidebar = false; \n        router.push({ path: \"/\" }); \n      } \n    }, \n    \n    isOneSelected() { \n      return !!this.landingSites.length; \n    }, \n    \n    isLandingSiteSelectedById(landingSiteId: string): boolean { \n      return this.selectLandingSites.some( \n        (site: any) => landingSiteId === site.id \n      ); \n    }, \n    \n    isLandingSiteSelected(landingSite: any): boolean { \n      return this.selectLandingSites.includes(landingSite); \n    }, \n  }, \n});","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-171dade4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"depth-analysis-popup\"\n}\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"🌊 Ocean Depth Analysis\")\n], -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, [\n    /*#__PURE__*/_createTextVNode(\"for \"),\n    /*#__PURE__*/_createElementVNode(\"span\", { class: \"highlight-green\" }, \"last geometry\"),\n    /*#__PURE__*/_createTextVNode(\" drawn\")\n  ])\n], -1))\nconst _hoisted_4 = { class: \"analysis-content\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Average Depth:\", -1))\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Deepest Point:\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Shallowest Point:\", -1))\nconst _hoisted_8 = {\n  key: 1,\n  class: \"loading-overlay\"\n}\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"spinner\" }, null, -1))\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Analyzing depth data...\", -1))\nconst _hoisted_11 = [\n  _hoisted_9,\n  _hoisted_10\n]\n\nimport { ref, watch, onMounted } from 'vue';\nimport axios from 'axios';\nimport L from 'leaflet';\n\ninterface PopupData {\n  popup: L.Popup;\n  analysis: {\n    averageDepth: number;\n    deepestPoint: number;\n    shallowestPoint: number;\n    samplePoints: L.LatLng[];\n  };\n}\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'OceanDepthAnalyzer',\n  props: {\n  mapInstance: { type: Object, required: true },\n  drawnGeometry: { type: Object, default: null },\n  samplePointCount: { type: Number, default: 200 },\n  showPopup: { type: Boolean, default: false }\n},\n  emits: ['depth-analysis-complete'],\n  setup(__props, { expose: __expose, emit: __emit }) {\n\nconst props = __props;\n\nconst emit = __emit;\n\nconst depthAnalysis = ref<{\n  averageDepth: number;\n  deepestPoint: number;\n  shallowestPoint: number;\n  samplePoints: L.LatLng[];\n} | null>(null);\n\nconst isAnalyzing = ref(false);\n\nconst analysisStore = ref(new Map<string, any>());\nlet geometryIdCounter = 0;\n\nconst geometryPopups = new Map<L.Layer, PopupData>();\nconst geometryAnalyses = new Map();\nconst analysisData = new WeakMap();\n\n// Calculate distance between two points in meters\nfunction calculateDistance(point1: L.LatLng, point2: L.LatLng): number {\n  const R = 6371000; // Earth's radius in meters\n  const lat1 = point1.lat * Math.PI / 180;\n  const lat2 = point2.lat * Math.PI / 180;\n  const deltaLat = (point2.lat - point1.lat) * Math.PI / 180;\n  const deltaLng = (point2.lng - point1.lng) * Math.PI / 180;\n\n  const a = Math.sin(deltaLat/2) * Math.sin(deltaLat/2) +\n           Math.cos(lat1) * Math.cos(lat2) *\n           Math.sin(deltaLng/2) * Math.sin(deltaLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\n// Interpolate points along a line with proportional distribution\nfunction interpolateLinePoints(segments: L.LatLng[], totalPoints: number): L.LatLng[] {\n  // Calculate total length and individual segment lengths\n  let totalLength = 0;\n  const segmentLengths: number[] = [];\n  \n  for (let i = 0; i < segments.length - 1; i++) {\n    const length = calculateDistance(segments[i], segments[i + 1]);\n    segmentLengths.push(length);\n    totalLength += length;\n  }\n\n  // Calculate points per segment based on segment length ratio\n  const pointsPerSegment = segmentLengths.map(length => \n    Math.max(2, Math.round((length / totalLength) * totalPoints))\n  );\n\n  // Generate points for each segment\n  const interpolatedPoints: L.LatLng[] = [];\n  for (let i = 0; i < segments.length - 1; i++) {\n    const start = segments[i];\n    const end = segments[i + 1];\n    const numPoints = pointsPerSegment[i];\n\n    for (let j = 0; j < numPoints; j++) {\n      const fraction = j / (numPoints - 1);\n      const interpolatedLat = start.lat + fraction * (end.lat - start.lat);\n      const interpolatedLng = start.lng + fraction * (end.lng - start.lng);\n      interpolatedPoints.push(L.latLng(interpolatedLat, interpolatedLng));\n    }\n  }\n\n  // Add the last point of the last segment\n  interpolatedPoints.push(segments[segments.length - 1]);\n  \n  return interpolatedPoints;\n}\n\nfunction isPointInPolygon(point: L.LatLng, polygon: L.LatLng[]): boolean {\n  let inside = false;\n  const x = point.lng, y = point.lat;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].lng, yi = polygon[i].lat;\n    const xj = polygon[j].lng, yj = polygon[j].lat;\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n  return inside;\n}\n\n// sampling for polygons\nfunction samplePolygonPoints(polygon: L.Polygon, numPoints = 500): L.LatLng[] {\n  const bounds = polygon.getBounds();\n  const polygonLatLngs = polygon.getLatLngs()[0] as L.LatLng[];\n  const points: L.LatLng[] = [];\n  \n  // Adjust numPoints based on polygon area\n  const area = L.GeometryUtil.geodesicArea(polygonLatLngs);\n  const adjustedPoints = Math.min(Math.max(numPoints, 100), props.samplePointCount);\n  \n  const maxAttempts = adjustedPoints * 10;\n  let attempts = 0;\n  \n  while (points.length < adjustedPoints && attempts < maxAttempts) {\n    const lat = bounds.getSouth() + Math.random() * (bounds.getNorth() - bounds.getSouth());\n    const lng = bounds.getWest() + Math.random() * (bounds.getEast() - bounds.getWest());\n    const point = L.latLng(lat, lng);\n    \n    if (bounds.contains(point) && isPointInPolygon(point, polygonLatLngs)) {\n      points.push(point);\n    }\n    attempts++;\n  }\n  \n  return points;\n}\n\n// sampling for circles\nfunction sampleCirclePoints(circle: L.Circle, numPoints = 250): L.LatLng[] {\n  const center = circle.getLatLng();\n  const radius = circle.getRadius();\n  const adjustedPoints = Math.min(Math.max(numPoints, 50), props.samplePointCount);\n  const points: L.LatLng[] = [center];\n  \n  for (let i = 0; i < adjustedPoints; i++) {\n    const angle = Math.random() * 2 * Math.PI;\n    const r = Math.sqrt(Math.random()) * radius;\n    const lat = center.lat + (r / 111000) * Math.sin(angle);\n    const lng = center.lng + (r / (111000 * Math.cos(center.lat * Math.PI / 180))) * Math.cos(angle);\n    points.push(L.latLng(lat, lng));\n  }\n  \n  return points;\n}\n\n// Extract coordinates based on geometry type\nfunction extractSamplePoints(geometry: any): L.LatLng[] {\n  if (geometry instanceof L.Marker) {\n    return [geometry.getLatLng()];\n  } else if (geometry instanceof L.Polygon || geometry instanceof L.Rectangle) {\n    return samplePolygonPoints(geometry as L.Polygon, props.samplePointCount);\n  } else if (geometry instanceof L.Polyline) {\n    const latlngs = geometry.getLatLngs() as L.LatLng[];\n    return interpolateLinePoints(latlngs, props.samplePointCount);\n  } else if (geometry instanceof L.Circle) {\n    return sampleCirclePoints(geometry, props.samplePointCount);\n  }\n  return [];\n}\n\n// Fetch ocean depth for a single coordinate\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    \n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    \n    return parseFloat(extractedText);\n  } catch (error) {\n    console.error('Error fetching ocean depth:', error);\n    return NaN;\n  }\n}\n\n// Analyze depths for entire geometry\nasync function analyzeGeometryDepths() {\n  if (!props.drawnGeometry || !(props.drawnGeometry instanceof L.Layer)) return;\n  \n  isAnalyzing.value = true;\n  const geometry = props.drawnGeometry;\n\n  try {\n    const samplePoints = extractSamplePoints(geometry);\n    if (samplePoints.length === 0) {\n      isAnalyzing.value = false;\n      return;\n    }\n\n    const depthPromises = samplePoints.map(coord => fetchOceanDepth(coord.lat, coord.lng));\n    const depths = await Promise.all(depthPromises);\n    const validDepths = depths.filter(depth => !isNaN(depth));\n\n    if (validDepths.length === 0) {\n      isAnalyzing.value = false;\n      return;\n    }\n\n    const fullDepthAnalysis = {\n      averageDepth: Math.round(validDepths.reduce((a, b) => a + b, 0) / validDepths.length),\n      deepestPoint: Math.round(Math.min(...validDepths)),\n      shallowestPoint: Math.round(Math.max(...validDepths)),\n      samplePoints\n    };\n\n    depthAnalysis.value = fullDepthAnalysis;\n    emit('depth-analysis-complete', fullDepthAnalysis);\n\n    if (props.showPopup && props.mapInstance && samplePoints.length > 0) {\n      // Generate a unique ID for this geometry if it doesn't have one\n      const geomId = `geometry_${geometryIdCounter++}`;\n\n      // Store the analysis data with the geometry's ID\n      analysisStore.value.set(geomId, fullDepthAnalysis);\n\n      // Also store the ID on the layer itself using Leaflet's feature data\n      if (geometry instanceof L.Path) {\n        geometry.feature = geometry.feature || {};\n        geometry.feature.properties = geometry.feature.properties || {};\n        geometry.feature.properties.analysisId = geomId;\n      }\n\n      // Create popup content function\n      const createPopupContent = (analysis: typeof fullDepthAnalysis) => `\n        <div style=\"padding: 10px;\">\n          <strong>Depth Analysis:</strong>\n          <ul style=\"padding-left: 20px; margin: 10px 0;\">\n            <li>Average Depth: ${analysis.averageDepth} meters</li>\n            <li>Deepest Point: ${analysis.deepestPoint} meters</li>\n            <li>Shallowest Point: ${analysis.shallowestPoint} meters</li>\n            <li>Total Sample Points: ${analysis.samplePoints.length}</li>\n          </ul>\n        </div>\n      `;\n\n      // Remove existing click handler\n      geometry.off('click');\n\n      // Add click handler\n      geometry.on('click', function(e: L.LeafletMouseEvent) {        \n        const layer = e.target;\n        \n        if (layer instanceof L.Path && layer.feature && layer.feature.properties) {\n          const analysisId = layer.feature.properties.analysisId;\n          const analysis = analysisStore.value.get(analysisId);\n          \n          if (analysis) {\n            L.popup()\n              .setLatLng(e.latlng)\n              .setContent(createPopupContent(analysis))\n              .openOn(props.mapInstance);\n          }\n        }\n      });\n\n      // Show initial popup\n      const initialPopup = L.popup()\n        .setLatLng(samplePoints[0])\n        .setContent(createPopupContent(fullDepthAnalysis))\n        .openOn(props.mapInstance);\n\n    }\n  } catch (error) {\n    console.error('Error analyzing geometry depths:', error);\n  } finally {\n    isAnalyzing.value = false;\n  }\n}\n\nwatch(() => props.drawnGeometry, (newGeometry, oldGeometry) => {\n  if (newGeometry) {\n    analyzeGeometryDepths();\n  }\n});\n\n\nonMounted(() => {\n  if (props.drawnGeometry) {\n    analyzeGeometryDepths();\n  }\n});\n\n__expose({\n  analyzeGeometryDepths,\n  depthAnalysis,\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (depthAnalysis.value && props.showPopup)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _hoisted_2,\n          _hoisted_3,\n          _createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"p\", null, [\n              _hoisted_5,\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.averageDepth) + \"m\", 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _hoisted_6,\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.deepestPoint) + \"m\", 1)\n            ]),\n            _createElementVNode(\"p\", null, [\n              _hoisted_7,\n              _createTextVNode(\" \" + _toDisplayString(depthAnalysis.value.shallowestPoint) + \"m\", 1)\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (isAnalyzing.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _hoisted_11))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { ref, watch, onMounted } from 'vue';\nimport axios from 'axios';\nimport L from 'leaflet';\n\nconst props = defineProps({\n  mapInstance: { type: Object, required: true },\n  drawnGeometry: { type: Object, default: null },\n  samplePointCount: { type: Number, default: 200 },\n  showPopup: { type: Boolean, default: false }\n});\n\nconst emit = defineEmits(['depth-analysis-complete']);\n\nconst depthAnalysis = ref<{\n  averageDepth: number;\n  deepestPoint: number;\n  shallowestPoint: number;\n  samplePoints: L.LatLng[];\n} | null>(null);\n\nconst isAnalyzing = ref(false);\n\nconst analysisStore = ref(new Map<string, any>());\nlet geometryIdCounter = 0;\n\ninterface PopupData {\n  popup: L.Popup;\n  analysis: {\n    averageDepth: number;\n    deepestPoint: number;\n    shallowestPoint: number;\n    samplePoints: L.LatLng[];\n  };\n}\nconst geometryPopups = new Map<L.Layer, PopupData>();\nconst geometryAnalyses = new Map();\nconst analysisData = new WeakMap();\n\n// Calculate distance between two points in meters\nfunction calculateDistance(point1: L.LatLng, point2: L.LatLng): number {\n  const R = 6371000; // Earth's radius in meters\n  const lat1 = point1.lat * Math.PI / 180;\n  const lat2 = point2.lat * Math.PI / 180;\n  const deltaLat = (point2.lat - point1.lat) * Math.PI / 180;\n  const deltaLng = (point2.lng - point1.lng) * Math.PI / 180;\n\n  const a = Math.sin(deltaLat/2) * Math.sin(deltaLat/2) +\n           Math.cos(lat1) * Math.cos(lat2) *\n           Math.sin(deltaLng/2) * Math.sin(deltaLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\n// Interpolate points along a line with proportional distribution\nfunction interpolateLinePoints(segments: L.LatLng[], totalPoints: number): L.LatLng[] {\n  // Calculate total length and individual segment lengths\n  let totalLength = 0;\n  const segmentLengths: number[] = [];\n  \n  for (let i = 0; i < segments.length - 1; i++) {\n    const length = calculateDistance(segments[i], segments[i + 1]);\n    segmentLengths.push(length);\n    totalLength += length;\n  }\n\n  // Calculate points per segment based on segment length ratio\n  const pointsPerSegment = segmentLengths.map(length => \n    Math.max(2, Math.round((length / totalLength) * totalPoints))\n  );\n\n  // Generate points for each segment\n  const interpolatedPoints: L.LatLng[] = [];\n  for (let i = 0; i < segments.length - 1; i++) {\n    const start = segments[i];\n    const end = segments[i + 1];\n    const numPoints = pointsPerSegment[i];\n\n    for (let j = 0; j < numPoints; j++) {\n      const fraction = j / (numPoints - 1);\n      const interpolatedLat = start.lat + fraction * (end.lat - start.lat);\n      const interpolatedLng = start.lng + fraction * (end.lng - start.lng);\n      interpolatedPoints.push(L.latLng(interpolatedLat, interpolatedLng));\n    }\n  }\n\n  // Add the last point of the last segment\n  interpolatedPoints.push(segments[segments.length - 1]);\n  \n  return interpolatedPoints;\n}\n\nfunction isPointInPolygon(point: L.LatLng, polygon: L.LatLng[]): boolean {\n  let inside = false;\n  const x = point.lng, y = point.lat;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].lng, yi = polygon[i].lat;\n    const xj = polygon[j].lng, yj = polygon[j].lat;\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n  return inside;\n}\n\n// sampling for polygons\nfunction samplePolygonPoints(polygon: L.Polygon, numPoints = 500): L.LatLng[] {\n  const bounds = polygon.getBounds();\n  const polygonLatLngs = polygon.getLatLngs()[0] as L.LatLng[];\n  const points: L.LatLng[] = [];\n  \n  // Adjust numPoints based on polygon area\n  const area = L.GeometryUtil.geodesicArea(polygonLatLngs);\n  const adjustedPoints = Math.min(Math.max(numPoints, 100), props.samplePointCount);\n  \n  const maxAttempts = adjustedPoints * 10;\n  let attempts = 0;\n  \n  while (points.length < adjustedPoints && attempts < maxAttempts) {\n    const lat = bounds.getSouth() + Math.random() * (bounds.getNorth() - bounds.getSouth());\n    const lng = bounds.getWest() + Math.random() * (bounds.getEast() - bounds.getWest());\n    const point = L.latLng(lat, lng);\n    \n    if (bounds.contains(point) && isPointInPolygon(point, polygonLatLngs)) {\n      points.push(point);\n    }\n    attempts++;\n  }\n  \n  return points;\n}\n\n// sampling for circles\nfunction sampleCirclePoints(circle: L.Circle, numPoints = 250): L.LatLng[] {\n  const center = circle.getLatLng();\n  const radius = circle.getRadius();\n  const adjustedPoints = Math.min(Math.max(numPoints, 50), props.samplePointCount);\n  const points: L.LatLng[] = [center];\n  \n  for (let i = 0; i < adjustedPoints; i++) {\n    const angle = Math.random() * 2 * Math.PI;\n    const r = Math.sqrt(Math.random()) * radius;\n    const lat = center.lat + (r / 111000) * Math.sin(angle);\n    const lng = center.lng + (r / (111000 * Math.cos(center.lat * Math.PI / 180))) * Math.cos(angle);\n    points.push(L.latLng(lat, lng));\n  }\n  \n  return points;\n}\n\n// Extract coordinates based on geometry type\nfunction extractSamplePoints(geometry: any): L.LatLng[] {\n  if (geometry instanceof L.Marker) {\n    return [geometry.getLatLng()];\n  } else if (geometry instanceof L.Polygon || geometry instanceof L.Rectangle) {\n    return samplePolygonPoints(geometry as L.Polygon, props.samplePointCount);\n  } else if (geometry instanceof L.Polyline) {\n    const latlngs = geometry.getLatLngs() as L.LatLng[];\n    return interpolateLinePoints(latlngs, props.samplePointCount);\n  } else if (geometry instanceof L.Circle) {\n    return sampleCirclePoints(geometry, props.samplePointCount);\n  }\n  return [];\n}\n\n// Fetch ocean depth for a single coordinate\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    \n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    \n    return parseFloat(extractedText);\n  } catch (error) {\n    console.error('Error fetching ocean depth:', error);\n    return NaN;\n  }\n}\n\n// Analyze depths for entire geometry\nasync function analyzeGeometryDepths() {\n  if (!props.drawnGeometry || !(props.drawnGeometry instanceof L.Layer)) return;\n  \n  isAnalyzing.value = true;\n  const geometry = props.drawnGeometry;\n\n  try {\n    const samplePoints = extractSamplePoints(geometry);\n    if (samplePoints.length === 0) {\n      isAnalyzing.value = false;\n      return;\n    }\n\n    const depthPromises = samplePoints.map(coord => fetchOceanDepth(coord.lat, coord.lng));\n    const depths = await Promise.all(depthPromises);\n    const validDepths = depths.filter(depth => !isNaN(depth));\n\n    if (validDepths.length === 0) {\n      isAnalyzing.value = false;\n      return;\n    }\n\n    const fullDepthAnalysis = {\n      averageDepth: Math.round(validDepths.reduce((a, b) => a + b, 0) / validDepths.length),\n      deepestPoint: Math.round(Math.min(...validDepths)),\n      shallowestPoint: Math.round(Math.max(...validDepths)),\n      samplePoints\n    };\n\n    depthAnalysis.value = fullDepthAnalysis;\n    emit('depth-analysis-complete', fullDepthAnalysis);\n\n    if (props.showPopup && props.mapInstance && samplePoints.length > 0) {\n      // Generate a unique ID for this geometry if it doesn't have one\n      const geomId = `geometry_${geometryIdCounter++}`;\n\n      // Store the analysis data with the geometry's ID\n      analysisStore.value.set(geomId, fullDepthAnalysis);\n\n      // Also store the ID on the layer itself using Leaflet's feature data\n      if (geometry instanceof L.Path) {\n        geometry.feature = geometry.feature || {};\n        geometry.feature.properties = geometry.feature.properties || {};\n        geometry.feature.properties.analysisId = geomId;\n      }\n\n      // Create popup content function\n      const createPopupContent = (analysis: typeof fullDepthAnalysis) => `\n        <div style=\"padding: 10px;\">\n          <strong>Depth Analysis:</strong>\n          <ul style=\"padding-left: 20px; margin: 10px 0;\">\n            <li>Average Depth: ${analysis.averageDepth} meters</li>\n            <li>Deepest Point: ${analysis.deepestPoint} meters</li>\n            <li>Shallowest Point: ${analysis.shallowestPoint} meters</li>\n            <li>Total Sample Points: ${analysis.samplePoints.length}</li>\n          </ul>\n        </div>\n      `;\n\n      // Remove existing click handler\n      geometry.off('click');\n\n      // Add click handler\n      geometry.on('click', function(e: L.LeafletMouseEvent) {        \n        const layer = e.target;\n        \n        if (layer instanceof L.Path && layer.feature && layer.feature.properties) {\n          const analysisId = layer.feature.properties.analysisId;\n          const analysis = analysisStore.value.get(analysisId);\n          \n          if (analysis) {\n            L.popup()\n              .setLatLng(e.latlng)\n              .setContent(createPopupContent(analysis))\n              .openOn(props.mapInstance);\n          }\n        }\n      });\n\n      // Show initial popup\n      const initialPopup = L.popup()\n        .setLatLng(samplePoints[0])\n        .setContent(createPopupContent(fullDepthAnalysis))\n        .openOn(props.mapInstance);\n\n    }\n  } catch (error) {\n    console.error('Error analyzing geometry depths:', error);\n  } finally {\n    isAnalyzing.value = false;\n  }\n}\n\nwatch(() => props.drawnGeometry, (newGeometry, oldGeometry) => {\n  if (newGeometry) {\n    analyzeGeometryDepths();\n  }\n});\n\n\nonMounted(() => {\n  if (props.drawnGeometry) {\n    analyzeGeometryDepths();\n  }\n});\n\ndefineExpose({\n  analyzeGeometryDepths,\n  depthAnalysis,\n});\n</script>\n\n<template>\n  <div v-if=\"depthAnalysis && props.showPopup\" class=\"depth-analysis-popup\">\n    <h3><strong>🌊 Ocean Depth Analysis</strong></h3>\n    <p><strong>for <span class=\"highlight-green\">last geometry</span> drawn</strong></p>\n    <div class=\"analysis-content\">\n      <p><strong>Average Depth:</strong> {{depthAnalysis.averageDepth}}m</p>\n      <p><strong>Deepest Point:</strong> {{depthAnalysis.deepestPoint}}m</p>\n      <p><strong>Shallowest Point:</strong> {{depthAnalysis.shallowestPoint}}m</p>\n    </div>\n  </div>\n  <!-- Loading overlay -->\n  <div v-if=\"isAnalyzing\" class=\"loading-overlay\">\n    <div class=\"spinner\"></div>\n    <p>Analyzing depth data...</p>\n  </div>\n</template>\n\n<style scoped>\n.depth-analysis-popup {\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #48506a;\n  color: #ecf0f1;\n  border: none;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  max-width: 300px;\n  width: auto;\n  max-height: 200px;\n  overflow-y: auto;\n  z-index: 3000;\n  font-size: 13px;\n  text-align: center;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.highlight-green {\n  color: #00ff00;\n}\n\n.depth-analysis-popup h3 {\n  margin: 0 0 8px;\n  font-size: 16px;\n  color: #ecf0f1;\n}\n\n.analysis-content {\n  font-size: 13px;\n  line-height: 1.4;\n}\n\n.analysis-content p {\n  margin: 4px 0;\n}\n\n.analysis-content strong {\n  color: #ecf0f1;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.7);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 2000;\n}\n\n.spinner {\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n  margin-bottom: 10px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style>","import script from \"./OceanDepthAnalyzer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./OceanDepthAnalyzer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./OceanDepthAnalyzer.vue?vue&type=style&index=0&id=171dade4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-171dade4\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-e0b5752a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"elevation-container\" }\nconst _hoisted_2 = [\"disabled\"]\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = { key: 2 }\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = { key: 1 }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"progress-bar-container\"\n}\n\nimport { ref, watch, onBeforeUnmount, computed, onMounted } from 'vue';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport '@raruto/leaflet-elevation';\nimport '@raruto/leaflet-elevation/dist/leaflet-elevation.css';\nimport 'leaflet/dist/leaflet.css';\n\ninterface Point {\n  lat: number;\n  lng: number;\n}\n\ninterface Segment {\n  points: Point[];\n  used?: boolean;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ElevationProfile',\n  props: {\n    mapInstance: {},\n    geoData: {}\n  },\n  setup(__props: any) {\n\nwindow.d3 = d3;\nconst props = __props;\n\nconst showProfile = ref(false);\nconst isLoading = ref(false);\nconst isFullscreen = ref(false);\nconst fetchingPoints = ref(false);\nconst fetchedPoints = ref(0);\nconst totalPoints = ref(0);\n\nconst resizeObserver = ref<ResizeObserver | null>(null);\n\nlet currentElevationControl: any = null;\nlet currentElevationLayer: any = null;\n\nconst isOceanDepthActive = ref(false);\nconst isCableShipsActive = ref(false);\nconst isAnchorageActive = ref(false);\n\nconst oceanDepthFullscreenClass = computed(() => {\n  const baseClasses = {\n    fullscreen: isFullscreen.value,\n    \"ocean-depth-fullscreen\": isFullscreen.value && isOceanDepthActive.value,\n    \"anchorage-fullscreen\": isFullscreen.value && isAnchorageActive.value,\n    \"cable-ships-fullscreen\": isFullscreen.value && isCableShipsActive.value,\n    \"elevation-detached\": true,\n  };\n  return baseClasses;\n});\n\nonMounted(() => {\n  if (props.mapInstance?._container) {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n          const classList = props.mapInstance._container.classList;\n          isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n          isAnchorageActive.value = classList.contains(\"anchorage-active\");\n          isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n        }\n      });\n    });\n\n    observer.observe(props.mapInstance._container, {\n      attributes: true,\n      attributeFilter: [\"class\"],\n    });\n\n    // Set initial values\n    const classList = props.mapInstance._container.classList;\n    isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n    isAnchorageActive.value = classList.contains(\"anchorage-active\");\n    isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n\n    isComponentMounted.value = true;\n\n    // Cleanup observer on component unmount\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n  }\n});\n\nconst isComponentMounted = ref(true);\nlet resizeTimeout: ReturnType<typeof setTimeout> | null = null;\n\nwatch(oceanDepthFullscreenClass, () => {\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    showElevationProfile();\n  }\n});\n\n\n//Workaround because clear method of elevation control does not work properly currently\nclass SafeElevationControl extends (L.Control as any).Elevation {\n  constructor(options: any) {\n    super(options);\n    this._originalResizeChart = this._resizeChart;\n    this._resizeChart = this._safeResizeChart.bind(this);\n  }\n\n  _safeResizeChart() {\n    try {\n      if (!this._container || !this._map || !this._data || !this._data.length) {\n        return;\n      }\n\n      const chart = this._chart;\n      const area = this._area;\n      \n      if (!chart || !area) {\n        return;\n      }\n\n      // Check if required d3 methods exist\n      if (typeof chart.select !== 'function' || typeof area.select !== 'function') {\n        return;\n      }\n\n      // Check if the container is still in the DOM\n      if (!document.body.contains(this._container)) {\n        return;\n      }\n\n      // Check if map is valid\n      if (!this._map._container || !document.body.contains(this._map._container)) {\n        return;\n      }\n\n      // Ensure required methods exist before calling\n      if (typeof this._originalResizeChart === 'function') {\n        this._originalResizeChart();\n      }\n    } catch (error) {\n      console.warn('Safe resize handling prevented error:', error);\n    }\n  }\n\n  onAdd(map: L.Map) {\n    try {\n      // Ensure map is valid\n      if (!map || !map._container) {\n        console.warn('Invalid map instance');\n        return this;\n      }\n\n      // Call parent onAdd with additional error handling\n      const result = super.onAdd(map);\n\n      // Add safety check for _container\n      if (!this._container) {\n        console.warn('Container not initialized');\n        return result;\n      }\n\n      // Initialize event handlers safely\n      if (typeof this._initEvents === 'function') {\n        try {\n          this._initEvents();\n        } catch (error) {\n          console.warn('Error initializing events:', error);\n        }\n      }\n\n      return result;\n    } catch (error) {\n      console.warn('Error during elevation control addition:', error);\n      return this;\n    }\n  }\n\n  onRemove(map: L.Map) {\n    try {\n      // Clear any pending resize operations\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = null;\n      }\n\n      // Safely remove event listeners\n      if (this._container) {\n        const listeners = ['mousemove', 'mouseout', 'mouseover', 'click'];\n        listeners.forEach(event => {\n          try {\n            this._container.removeEventListener(event, this._mousemoveHandler);\n          } catch (e) {\n            // Ignore errors during listener removal\n          }\n        });\n      }\n\n      // Clear references\n      this._chart = null;\n      this._area = null;\n      this._data = null;\n\n      // Call parent onRemove\n      super.onRemove(map);\n    } catch (error) {\n      console.warn('Error during elevation control removal:', error);\n    }\n  }\n}\nconst elevationOptions = {\n  theme: \"lightblue-theme\",\n  detached: true,\n  elevationDiv: \"#elevation-div\",\n  followMarker: false,\n  reverseCoords: false,\n  autofitBounds: false,\n  imperial: false,\n  altitude: false,\n  distance: false,\n  summary: false,\n  ruler: false,\n  legend: false,\n  edgeScale: true,\n  hotline: true,\n  preferCanvas: true,\n  waypoints: false,\n  onRemove: function(this: any) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n      resizeObserver.value = null;\n    }\n    // Call original onRemove if it exists\n    if (this._onRemove) {\n      this._onRemove();\n    }\n  }\n};\n\nconst setupResizeHandling = () => {\n  const elevationDiv = document.getElementById('elevation-div');\n  if (elevationDiv && isComponentMounted.value) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n    }\n\n    resizeObserver.value = new ResizeObserver(debounce(() => {\n      if (currentElevationControl && isComponentMounted.value) {\n        try {\n          // Check if control is still valid\n          if (currentElevationControl._container && \n              currentElevationControl._map && \n              document.body.contains(currentElevationControl._container) &&\n              typeof currentElevationControl._resizeChart === 'function') {\n            currentElevationControl._resizeChart();\n          }\n        } catch (error) {\n          console.warn('Safe resize handling:', error);\n        }\n      }\n    }, 250));\n\n    resizeObserver.value.observe(elevationDiv);\n  }\n};\n\nconst debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  \n  return function executedFunction(\n    this: any,\n    ...args: Parameters<T>\n  ) {\n    const later = () => {\n      clearTimeout(timeout);\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nconst toggleFullscreen = () => {\n  console.log(\"MAP INSTANCE: \", props.mapInstance);\n  isFullscreen.value = !isFullscreen.value;\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    elevationOptions.height = isFullscreen.value ? 400 : 300;\n    showElevationProfile();\n  }\n};\n\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lng - 0.0001;\n    const miny = lat - 0.0001;\n    const maxx = lng + 0.0001;\n    const maxy = lat + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    fetchedPoints.value++;\n    return parseFloat(extractedText);\n  } catch (error) {\n    console.error('Error fetching ocean depth:', error);\n    fetchedPoints.value++;\n    return 0;\n  }\n}\n\nfunction calculateDistance(p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.lat - p1.lat, 2) + Math.pow(p2.lng - p1.lng, 2)\n  );\n}\n\nfunction findClosestSegment(\n  currentEndPoint: Point,\n  segments: Segment[]\n): { segmentIndex: number; shouldReverse: boolean } | null {\n  let minDistance = Infinity;\n  let closestSegmentIndex = -1;\n  let shouldReverse = false;\n\n  segments.forEach((segment, index) => {\n    if (segment.used) return;\n\n    // Check distance to start of segment\n    const distanceToStart = calculateDistance(currentEndPoint, segment.points[0]);\n    if (distanceToStart < minDistance) {\n      minDistance = distanceToStart;\n      closestSegmentIndex = index;\n      shouldReverse = false;\n    }\n\n    // Check distance to end of segment\n    const distanceToEnd = calculateDistance(\n      currentEndPoint,\n      segment.points[segment.points.length - 1]\n    );\n    if (distanceToEnd < minDistance) {\n      minDistance = distanceToEnd;\n      closestSegmentIndex = index;\n      shouldReverse = true;\n    }\n  });\n\n  if (closestSegmentIndex === -1) return null;\n\n  return {\n    segmentIndex: closestSegmentIndex,\n    shouldReverse\n  };\n}\n\nfunction calculateTotalPoints(segments: number[][][], minPointDensity: number, maxDistanceThreshold: number): number {\n  let total = 0;\n  \n  for (const segment of segments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n      total += segmentToProcess.length;\n    }\n  }\n  \n  return total;\n}\n\nfunction sortCableSegments(rawSegments: number[][][]): number[][][] {\n  // Convert raw segments to our Segment interface\n  const segments: Segment[] = rawSegments.map(segment => ({\n    points: segment.map(([lat, lng]) => ({ lat, lng })),\n    used: false\n  }));\n\n  const sortedSegments: number[][][] = [];\n  \n  // Start with the first segment\n  if (segments.length === 0) return [];\n  \n  segments[0].used = true;\n  sortedSegments.push(rawSegments[0]);\n  \n  let currentEndPoint = segments[0].points[segments[0].points.length - 1];\n\n  // Keep finding the closest segment until all segments are used\n  const unusedSegmentsExist = () => segments.some(segment => !segment.used);\n  \n  while (unusedSegmentsExist()) {\n    const nextSegment = findClosestSegment(currentEndPoint, segments);\n    \n    if (!nextSegment) break;\n    \n    const { segmentIndex, shouldReverse } = nextSegment;\n    segments[segmentIndex].used = true;\n\n    // Add the segment to our sorted array, reversing if necessary\n    const segmentToAdd = shouldReverse \n      ? [...rawSegments[segmentIndex]].reverse()\n      : rawSegments[segmentIndex];\n    \n    sortedSegments.push(segmentToAdd);\n    \n    // Update the current end point for the next iteration\n    currentEndPoint = shouldReverse \n      ? segments[segmentIndex].points[0]\n      : segments[segmentIndex].points[segments[segmentIndex].points.length - 1];\n  }\n\n  return sortedSegments;\n}\n\nconst calculateSegmentLength = (segment: [number, number][]): number => {\n  let length = 0;\n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    length += Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n  }\n  return length;\n};\n\nconst shouldInterpolateSegment = (segment: [number, number][], minPointDensity: number): boolean => {\n  const segmentLength = calculateSegmentLength(segment);\n  \n  // Define thresholds for adaptive point density\n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_MIN_DENSITY = 20;\n  const NORMAL_SEGMENT_MIN_DENSITY = 10;\n  \n  const pointDensity = segment.length / segmentLength;\n  \n  // Use higher density requirement for shorter segments\n  const requiredDensity = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_MIN_DENSITY \n    : NORMAL_SEGMENT_MIN_DENSITY;\n    \n  return pointDensity < requiredDensity;\n};\n\nconst interpolateSegment = (segment: [number, number][], maxDistanceThreshold: number): [number, number][] => {\n  const interpolatedSegment: [number, number][] = [];\n  const segmentLength = calculateSegmentLength(segment);\n  \n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_DISTANCE = 0.25; // Smaller distance threshold for short segments\n  const NORMAL_SEGMENT_DISTANCE = 0.50; // Original distance threshold\n  \n  const actualThreshold = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_DISTANCE \n    : NORMAL_SEGMENT_DISTANCE;\n  \n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    interpolatedSegment.push([lat1, lng1]); // Include the start point\n    \n    const distance = Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n    \n    if (distance > actualThreshold) {\n      const numExtraPoints = Math.ceil(distance / actualThreshold) - 1;\n      for (let j = 1; j <= numExtraPoints; j++) {\n        const fraction = j / (numExtraPoints + 1);\n        interpolatedSegment.push([\n          lat1 + fraction * (lat2 - lat1),\n          lng1 + fraction * (lng2 - lng1),\n        ]);\n      }\n    }\n  }\n  \n  interpolatedSegment.push(segment[segment.length - 1]); // Include the end point\n  return interpolatedSegment;\n};\n\nconst convertToGeoJSON = async (coordinates: any) => {\n  const rawCoordinates = JSON.parse(JSON.stringify(coordinates));\n  const unsortedSegments = [...rawCoordinates[0]].filter(Array.isArray);\n  \n  const sortedSegments = sortCableSegments(unsortedSegments);\n\n  const maxDistanceThreshold = 0.50;\n  const minPointDensity = 10;\n\n  totalPoints.value = calculateTotalPoints(sortedSegments, minPointDensity, maxDistanceThreshold);\n  fetchedPoints.value = 0;\n  fetchingPoints.value = true;\n\n  const processedCoordinates: ([number, number, number] | null)[] = [];\n\n  for (const segment of sortedSegments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      // Add null to separate segments\n      if (processedCoordinates.length > 0) {\n        processedCoordinates.push(null);\n      }\n\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n\n      for (const [lat, lng] of segmentToProcess) {\n        const depth = await fetchOceanDepth(lng, lat);\n        processedCoordinates.push([lng, lat, depth]);\n      }\n    }\n  }\n\n  fetchingPoints.value = false;\n\n  // Convert processed coordinates to MultiLineString format\n  const multiLineString = processedCoordinates.reduce((acc: number[][][], coord: [number, number, number] | null) => {\n    if (coord === null) {\n      acc.push([]);\n    } else {\n      if (acc.length === 0) {\n        acc.push([]);\n      }\n      acc[acc.length - 1].push(coord);\n    }\n    return acc;\n  }, []);\n\n  return {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"MultiLineString\",\n      coordinates: multiLineString,\n    },\n  };\n};\n\nconst removeCurrentElevationControl = () => {\n  if (currentElevationControl && props.mapInstance) {\n    props.mapInstance.removeControl(currentElevationControl);\n    currentElevationControl = null;\n  }\n  if (currentElevationLayer && props.mapInstance) {\n    props.mapInstance.removeLayer(currentElevationLayer);\n    currentElevationLayer = null;\n  }\n  \n  props.mapInstance.eachLayer((layer: any) => {\n    if (layer.options && (\n      layer.options.className === 'elevation-profile' ||\n      (layer.options.style && layer.options.style.className === 'elevation-profile')\n    )) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n};\n\nconst showElevationProfile = async () => {\n  if (!props.geoData || !isComponentMounted.value) return;\n  isLoading.value = true;\n  showProfile.value = true;\n\n  try {\n    removeCurrentElevationControl();\n    const geoJson = await convertToGeoJSON(props.geoData);\n    \n    if (!isComponentMounted.value) return;\n\n    elevationOptions.height = isFullscreen.value ? 600 : 300;\n    \n    if (!window.d3) {\n      window.d3 = d3;\n    }\n\n    // Use our SafeElevationControl instead of L.control.elevation\n    currentElevationControl = new SafeElevationControl(elevationOptions).addTo(props.mapInstance);\n\n    if (currentElevationControl) {\n      currentElevationControl.load(geoJson);\n      setupResizeHandling();\n    }\n  } catch (error) {\n    console.error('Error loading elevation profile:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst safeRemoveClasses = (element: HTMLElement, classNames: string) => {\n  if (!element) return;\n  const classes = classNames.split(' ').filter(className => className.trim());\n  classes.forEach(className => {\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.warn(`Failed to remove class: ${className}`, error);\n    }\n  });\n};\n\n\nconst cleanupElevationProfile = () => {\n  if (resizeObserver.value) {\n    resizeObserver.value.disconnect();\n    resizeObserver.value = null;\n  }\n  if (currentElevationControl) {\n    try {\n      if (typeof currentElevationControl.clear === 'function') {\n        const originalRemoveClass = L.DomUtil.removeClass;\n        L.DomUtil.removeClass = function(el: HTMLElement, name: string) {\n          safeRemoveClasses(el, name);\n        };\n        \n        currentElevationControl.clear();\n        \n        L.DomUtil.removeClass = originalRemoveClass;\n      }\n      \n      const elevationDiv = document.getElementById('elevation-div');\n      if (elevationDiv) {\n        elevationDiv.innerHTML = '';\n      }\n      \n      if (props.mapInstance) {\n        props.mapInstance.removeControl(currentElevationControl);\n      }\n    } catch (error) {\n      console.error('Error during elevation control cleanup:', error);\n    }\n    currentElevationControl = null;\n  }\n\n  const selectors = [\n    '.elevation-polyline',\n    '.elevation-profile',\n    '.elevation-line',\n    '.elevation-point',\n    '.elevation-marker',\n    '.elevation-summary',\n    '.elevation-tooltip',\n    '.leaflet-elevation'\n  ];\n\n  selectors.forEach(selector => {\n    document.querySelectorAll(selector).forEach(element => {\n      if (element instanceof HTMLElement) {\n        try {\n          if (element.className) {\n            safeRemoveClasses(element, element.className);\n          }\n          element.remove();\n        } catch (error) {\n          console.error(`Error removing element with selector ${selector}:`, error);\n        }\n      }\n    });\n  });\n\n  if (props.mapInstance) {\n    props.mapInstance.eachLayer((layer: any) => {\n      try {\n        if (layer.options && (\n          layer.options.className === 'elevation-profile' ||\n          (layer.options.style && layer.options.style.className === 'elevation-profile') ||\n          layer._path?.classList?.contains('elevation-polyline') ||\n          layer.options.className?.includes('elevation-') ||\n          layer._container?.classList?.contains('leaflet-elevation')\n        )) {\n          props.mapInstance.removeLayer(layer);\n        }\n      } catch (error) {\n        console.error('Error removing map layer:', error);\n      }\n    });\n  }\n\n  if (currentElevationLayer && props.mapInstance) {\n    try {\n      props.mapInstance.removeLayer(currentElevationLayer);\n    } catch (error) {\n      console.error('Error removing current elevation layer:', error);\n    }\n    currentElevationLayer = null;\n  }\n\n  showProfile.value = false;\n};\n\nwatch(() => props.geoData, () => {\n  if (showProfile.value) {\n    cleanupElevationProfile();\n  }\n});\n\nonBeforeUnmount(() => {\n  isComponentMounted.value = false;\n  cleanupElevationProfile();\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"button-group\", {'has-two-buttons': showProfile.value}])\n    }, [\n      _createElementVNode(\"button\", {\n        onClick: showElevationProfile,\n        class: \"btn-elevation\",\n        disabled: isLoading.value\n      }, [\n        (!isLoading.value && !fetchingPoints.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"Elevation Profile\"))\n          : (fetchingPoints.value)\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"Fetching points: \" + _toDisplayString(fetchedPoints.value) + \"/\" + _toDisplayString(totalPoints.value), 1))\n            : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"Loading...\"))\n      ], 8, _hoisted_2),\n      (showProfile.value)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: toggleFullscreen,\n            class: _normalizeClass([\"btn-elevation\", {'active': isFullscreen.value}])\n          }, [\n            (!isFullscreen.value)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"Expand View\"))\n              : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Minimize View\"))\n          ], 2))\n        : _createCommentVNode(\"\", true)\n    ], 2),\n    (fetchingPoints.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"div\", {\n            class: \"progress-bar\",\n            style: _normalizeStyle({width: `${(fetchedPoints.value/totalPoints.value)*100}%`})\n          }, null, 4)\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      id: \"elevation-div\",\n      class: _normalizeClass([\"elevation-div\", oceanDepthFullscreenClass.value])\n    }, null, 2)\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"elevation-container\">\n    <div class=\"button-group\" :class=\"{'has-two-buttons': showProfile}\">\n      <button @click=\"showElevationProfile\" class=\"btn-elevation\" :disabled=\"isLoading\">\n        <span v-if=\"!isLoading && !fetchingPoints\">Elevation Profile</span>\n        <span v-else-if=\"fetchingPoints\">Fetching points: {{fetchedPoints}}/{{totalPoints}}</span>\n        <span v-else>Loading...</span>\n      </button>\n      <button v-if=\"showProfile\" @click=\"toggleFullscreen\" class=\"btn-elevation\" :class=\"{'active': isFullscreen}\">\n        <span v-if=\"!isFullscreen\">Expand View</span>\n        <span v-else>Minimize View</span>\n      </button>\n    </div>\n    <div v-if=\"fetchingPoints\" class=\"progress-bar-container\">\n      <div class=\"progress-bar\" :style=\"{width: `${(fetchedPoints/totalPoints)*100}%`}\"></div>\n    </div>\n    <div id=\"elevation-div\" class=\"elevation-div\" :class=\"oceanDepthFullscreenClass\"></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onBeforeUnmount, computed, onMounted } from 'vue';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nwindow.d3 = d3;\nimport '@raruto/leaflet-elevation';\nimport '@raruto/leaflet-elevation/dist/leaflet-elevation.css';\nimport 'leaflet/dist/leaflet.css';\n\nconst props = defineProps<{\n  mapInstance: any;\n  geoData: any;\n}>();\n\nconst showProfile = ref(false);\nconst isLoading = ref(false);\nconst isFullscreen = ref(false);\nconst fetchingPoints = ref(false);\nconst fetchedPoints = ref(0);\nconst totalPoints = ref(0);\n\nconst resizeObserver = ref<ResizeObserver | null>(null);\n\nlet currentElevationControl: any = null;\nlet currentElevationLayer: any = null;\n\nconst isOceanDepthActive = ref(false);\nconst isCableShipsActive = ref(false);\nconst isAnchorageActive = ref(false);\n\nconst oceanDepthFullscreenClass = computed(() => {\n  const baseClasses = {\n    fullscreen: isFullscreen.value,\n    \"ocean-depth-fullscreen\": isFullscreen.value && isOceanDepthActive.value,\n    \"anchorage-fullscreen\": isFullscreen.value && isAnchorageActive.value,\n    \"cable-ships-fullscreen\": isFullscreen.value && isCableShipsActive.value,\n    \"elevation-detached\": true,\n  };\n  return baseClasses;\n});\n\nonMounted(() => {\n  if (props.mapInstance?._container) {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\" && mutation.attributeName === \"class\") {\n          const classList = props.mapInstance._container.classList;\n          isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n          isAnchorageActive.value = classList.contains(\"anchorage-active\");\n          isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n        }\n      });\n    });\n\n    observer.observe(props.mapInstance._container, {\n      attributes: true,\n      attributeFilter: [\"class\"],\n    });\n\n    // Set initial values\n    const classList = props.mapInstance._container.classList;\n    isOceanDepthActive.value = classList.contains(\"ocean-depth-active\");\n    isAnchorageActive.value = classList.contains(\"anchorage-active\");\n    isCableShipsActive.value = classList.contains(\"cable-ships-active\");\n\n    isComponentMounted.value = true;\n\n    // Cleanup observer on component unmount\n    onBeforeUnmount(() => {\n      observer.disconnect();\n    });\n  }\n});\n\nconst isComponentMounted = ref(true);\nlet resizeTimeout: ReturnType<typeof setTimeout> | null = null;\n\nwatch(oceanDepthFullscreenClass, () => {\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    showElevationProfile();\n  }\n});\n\n\n//Workaround because clear method of elevation control does not work properly currently\nclass SafeElevationControl extends (L.Control as any).Elevation {\n  constructor(options: any) {\n    super(options);\n    this._originalResizeChart = this._resizeChart;\n    this._resizeChart = this._safeResizeChart.bind(this);\n  }\n\n  _safeResizeChart() {\n    try {\n      if (!this._container || !this._map || !this._data || !this._data.length) {\n        return;\n      }\n\n      const chart = this._chart;\n      const area = this._area;\n      \n      if (!chart || !area) {\n        return;\n      }\n\n      // Check if required d3 methods exist\n      if (typeof chart.select !== 'function' || typeof area.select !== 'function') {\n        return;\n      }\n\n      // Check if the container is still in the DOM\n      if (!document.body.contains(this._container)) {\n        return;\n      }\n\n      // Check if map is valid\n      if (!this._map._container || !document.body.contains(this._map._container)) {\n        return;\n      }\n\n      // Ensure required methods exist before calling\n      if (typeof this._originalResizeChart === 'function') {\n        this._originalResizeChart();\n      }\n    } catch (error) {\n      console.warn('Safe resize handling prevented error:', error);\n    }\n  }\n\n  onAdd(map: L.Map) {\n    try {\n      // Ensure map is valid\n      if (!map || !map._container) {\n        console.warn('Invalid map instance');\n        return this;\n      }\n\n      // Call parent onAdd with additional error handling\n      const result = super.onAdd(map);\n\n      // Add safety check for _container\n      if (!this._container) {\n        console.warn('Container not initialized');\n        return result;\n      }\n\n      // Initialize event handlers safely\n      if (typeof this._initEvents === 'function') {\n        try {\n          this._initEvents();\n        } catch (error) {\n          console.warn('Error initializing events:', error);\n        }\n      }\n\n      return result;\n    } catch (error) {\n      console.warn('Error during elevation control addition:', error);\n      return this;\n    }\n  }\n\n  onRemove(map: L.Map) {\n    try {\n      // Clear any pending resize operations\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = null;\n      }\n\n      // Safely remove event listeners\n      if (this._container) {\n        const listeners = ['mousemove', 'mouseout', 'mouseover', 'click'];\n        listeners.forEach(event => {\n          try {\n            this._container.removeEventListener(event, this._mousemoveHandler);\n          } catch (e) {\n            // Ignore errors during listener removal\n          }\n        });\n      }\n\n      // Clear references\n      this._chart = null;\n      this._area = null;\n      this._data = null;\n\n      // Call parent onRemove\n      super.onRemove(map);\n    } catch (error) {\n      console.warn('Error during elevation control removal:', error);\n    }\n  }\n}\nconst elevationOptions = {\n  theme: \"lightblue-theme\",\n  detached: true,\n  elevationDiv: \"#elevation-div\",\n  followMarker: false,\n  reverseCoords: false,\n  autofitBounds: false,\n  imperial: false,\n  altitude: false,\n  distance: false,\n  summary: false,\n  ruler: false,\n  legend: false,\n  edgeScale: true,\n  hotline: true,\n  preferCanvas: true,\n  waypoints: false,\n  onRemove: function(this: any) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n      resizeObserver.value = null;\n    }\n    // Call original onRemove if it exists\n    if (this._onRemove) {\n      this._onRemove();\n    }\n  }\n};\n\nconst setupResizeHandling = () => {\n  const elevationDiv = document.getElementById('elevation-div');\n  if (elevationDiv && isComponentMounted.value) {\n    if (resizeObserver.value) {\n      resizeObserver.value.disconnect();\n    }\n\n    resizeObserver.value = new ResizeObserver(debounce(() => {\n      if (currentElevationControl && isComponentMounted.value) {\n        try {\n          // Check if control is still valid\n          if (currentElevationControl._container && \n              currentElevationControl._map && \n              document.body.contains(currentElevationControl._container) &&\n              typeof currentElevationControl._resizeChart === 'function') {\n            currentElevationControl._resizeChart();\n          }\n        } catch (error) {\n          console.warn('Safe resize handling:', error);\n        }\n      }\n    }, 250));\n\n    resizeObserver.value.observe(elevationDiv);\n  }\n};\n\nconst debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  \n  return function executedFunction(\n    this: any,\n    ...args: Parameters<T>\n  ) {\n    const later = () => {\n      clearTimeout(timeout);\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\ninterface Point {\n  lat: number;\n  lng: number;\n}\n\ninterface Segment {\n  points: Point[];\n  used?: boolean;\n}\n\nconst toggleFullscreen = () => {\n  console.log(\"MAP INSTANCE: \", props.mapInstance);\n  isFullscreen.value = !isFullscreen.value;\n  if (currentElevationControl) {\n    cleanupElevationProfile();\n    elevationOptions.height = isFullscreen.value ? 400 : 300;\n    showElevationProfile();\n  }\n};\n\nasync function fetchOceanDepth(lat: number, lng: number): Promise<number> {\n  try {\n    const minx = lng - 0.0001;\n    const miny = lat - 0.0001;\n    const maxx = lng + 0.0001;\n    const maxy = lat + 0.0001;\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n    const searchString = \"value_list\";\n    const searchIndex = response.data.indexOf(searchString);\n    const extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    fetchedPoints.value++;\n    return parseFloat(extractedText);\n  } catch (error) {\n    console.error('Error fetching ocean depth:', error);\n    fetchedPoints.value++;\n    return 0;\n  }\n}\n\nfunction calculateDistance(p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.lat - p1.lat, 2) + Math.pow(p2.lng - p1.lng, 2)\n  );\n}\n\nfunction findClosestSegment(\n  currentEndPoint: Point,\n  segments: Segment[]\n): { segmentIndex: number; shouldReverse: boolean } | null {\n  let minDistance = Infinity;\n  let closestSegmentIndex = -1;\n  let shouldReverse = false;\n\n  segments.forEach((segment, index) => {\n    if (segment.used) return;\n\n    // Check distance to start of segment\n    const distanceToStart = calculateDistance(currentEndPoint, segment.points[0]);\n    if (distanceToStart < minDistance) {\n      minDistance = distanceToStart;\n      closestSegmentIndex = index;\n      shouldReverse = false;\n    }\n\n    // Check distance to end of segment\n    const distanceToEnd = calculateDistance(\n      currentEndPoint,\n      segment.points[segment.points.length - 1]\n    );\n    if (distanceToEnd < minDistance) {\n      minDistance = distanceToEnd;\n      closestSegmentIndex = index;\n      shouldReverse = true;\n    }\n  });\n\n  if (closestSegmentIndex === -1) return null;\n\n  return {\n    segmentIndex: closestSegmentIndex,\n    shouldReverse\n  };\n}\n\nfunction calculateTotalPoints(segments: number[][][], minPointDensity: number, maxDistanceThreshold: number): number {\n  let total = 0;\n  \n  for (const segment of segments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n      total += segmentToProcess.length;\n    }\n  }\n  \n  return total;\n}\n\nfunction sortCableSegments(rawSegments: number[][][]): number[][][] {\n  // Convert raw segments to our Segment interface\n  const segments: Segment[] = rawSegments.map(segment => ({\n    points: segment.map(([lat, lng]) => ({ lat, lng })),\n    used: false\n  }));\n\n  const sortedSegments: number[][][] = [];\n  \n  // Start with the first segment\n  if (segments.length === 0) return [];\n  \n  segments[0].used = true;\n  sortedSegments.push(rawSegments[0]);\n  \n  let currentEndPoint = segments[0].points[segments[0].points.length - 1];\n\n  // Keep finding the closest segment until all segments are used\n  const unusedSegmentsExist = () => segments.some(segment => !segment.used);\n  \n  while (unusedSegmentsExist()) {\n    const nextSegment = findClosestSegment(currentEndPoint, segments);\n    \n    if (!nextSegment) break;\n    \n    const { segmentIndex, shouldReverse } = nextSegment;\n    segments[segmentIndex].used = true;\n\n    // Add the segment to our sorted array, reversing if necessary\n    const segmentToAdd = shouldReverse \n      ? [...rawSegments[segmentIndex]].reverse()\n      : rawSegments[segmentIndex];\n    \n    sortedSegments.push(segmentToAdd);\n    \n    // Update the current end point for the next iteration\n    currentEndPoint = shouldReverse \n      ? segments[segmentIndex].points[0]\n      : segments[segmentIndex].points[segments[segmentIndex].points.length - 1];\n  }\n\n  return sortedSegments;\n}\n\nconst calculateSegmentLength = (segment: [number, number][]): number => {\n  let length = 0;\n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    length += Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n  }\n  return length;\n};\n\nconst shouldInterpolateSegment = (segment: [number, number][], minPointDensity: number): boolean => {\n  const segmentLength = calculateSegmentLength(segment);\n  \n  // Define thresholds for adaptive point density\n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_MIN_DENSITY = 20;\n  const NORMAL_SEGMENT_MIN_DENSITY = 10;\n  \n  const pointDensity = segment.length / segmentLength;\n  \n  // Use higher density requirement for shorter segments\n  const requiredDensity = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_MIN_DENSITY \n    : NORMAL_SEGMENT_MIN_DENSITY;\n    \n  return pointDensity < requiredDensity;\n};\n\nconst interpolateSegment = (segment: [number, number][], maxDistanceThreshold: number): [number, number][] => {\n  const interpolatedSegment: [number, number][] = [];\n  const segmentLength = calculateSegmentLength(segment);\n  \n  const SHORT_SEGMENT_THRESHOLD = 2.0;\n  const SHORT_SEGMENT_DISTANCE = 0.25; // Smaller distance threshold for short segments\n  const NORMAL_SEGMENT_DISTANCE = 0.50; // Original distance threshold\n  \n  const actualThreshold = segmentLength < SHORT_SEGMENT_THRESHOLD \n    ? SHORT_SEGMENT_DISTANCE \n    : NORMAL_SEGMENT_DISTANCE;\n  \n  for (let i = 0; i < segment.length - 1; i++) {\n    const [lat1, lng1] = segment[i];\n    const [lat2, lng2] = segment[i + 1];\n    interpolatedSegment.push([lat1, lng1]); // Include the start point\n    \n    const distance = Math.sqrt((lat2 - lat1) ** 2 + (lng2 - lng1) ** 2);\n    \n    if (distance > actualThreshold) {\n      const numExtraPoints = Math.ceil(distance / actualThreshold) - 1;\n      for (let j = 1; j <= numExtraPoints; j++) {\n        const fraction = j / (numExtraPoints + 1);\n        interpolatedSegment.push([\n          lat1 + fraction * (lat2 - lat1),\n          lng1 + fraction * (lng2 - lng1),\n        ]);\n      }\n    }\n  }\n  \n  interpolatedSegment.push(segment[segment.length - 1]); // Include the end point\n  return interpolatedSegment;\n};\n\nconst convertToGeoJSON = async (coordinates: any) => {\n  const rawCoordinates = JSON.parse(JSON.stringify(coordinates));\n  const unsortedSegments = [...rawCoordinates[0]].filter(Array.isArray);\n  \n  const sortedSegments = sortCableSegments(unsortedSegments);\n\n  const maxDistanceThreshold = 0.50;\n  const minPointDensity = 10;\n\n  totalPoints.value = calculateTotalPoints(sortedSegments, minPointDensity, maxDistanceThreshold);\n  fetchedPoints.value = 0;\n  fetchingPoints.value = true;\n\n  const processedCoordinates: ([number, number, number] | null)[] = [];\n\n  for (const segment of sortedSegments) {\n    if (Array.isArray(segment) && segment.length > 0) {\n      // Add null to separate segments\n      if (processedCoordinates.length > 0) {\n        processedCoordinates.push(null);\n      }\n\n      const segmentToProcess = shouldInterpolateSegment(segment, minPointDensity)\n        ? interpolateSegment(segment, maxDistanceThreshold)\n        : segment;\n\n      for (const [lat, lng] of segmentToProcess) {\n        const depth = await fetchOceanDepth(lng, lat);\n        processedCoordinates.push([lng, lat, depth]);\n      }\n    }\n  }\n\n  fetchingPoints.value = false;\n\n  // Convert processed coordinates to MultiLineString format\n  const multiLineString = processedCoordinates.reduce((acc: number[][][], coord: [number, number, number] | null) => {\n    if (coord === null) {\n      acc.push([]);\n    } else {\n      if (acc.length === 0) {\n        acc.push([]);\n      }\n      acc[acc.length - 1].push(coord);\n    }\n    return acc;\n  }, []);\n\n  return {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"MultiLineString\",\n      coordinates: multiLineString,\n    },\n  };\n};\n\nconst removeCurrentElevationControl = () => {\n  if (currentElevationControl && props.mapInstance) {\n    props.mapInstance.removeControl(currentElevationControl);\n    currentElevationControl = null;\n  }\n  if (currentElevationLayer && props.mapInstance) {\n    props.mapInstance.removeLayer(currentElevationLayer);\n    currentElevationLayer = null;\n  }\n  \n  props.mapInstance.eachLayer((layer: any) => {\n    if (layer.options && (\n      layer.options.className === 'elevation-profile' ||\n      (layer.options.style && layer.options.style.className === 'elevation-profile')\n    )) {\n      props.mapInstance.removeLayer(layer);\n    }\n  });\n};\n\nconst showElevationProfile = async () => {\n  if (!props.geoData || !isComponentMounted.value) return;\n  isLoading.value = true;\n  showProfile.value = true;\n\n  try {\n    removeCurrentElevationControl();\n    const geoJson = await convertToGeoJSON(props.geoData);\n    \n    if (!isComponentMounted.value) return;\n\n    elevationOptions.height = isFullscreen.value ? 600 : 300;\n    \n    if (!window.d3) {\n      window.d3 = d3;\n    }\n\n    // Use our SafeElevationControl instead of L.control.elevation\n    currentElevationControl = new SafeElevationControl(elevationOptions).addTo(props.mapInstance);\n\n    if (currentElevationControl) {\n      currentElevationControl.load(geoJson);\n      setupResizeHandling();\n    }\n  } catch (error) {\n    console.error('Error loading elevation profile:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst safeRemoveClasses = (element: HTMLElement, classNames: string) => {\n  if (!element) return;\n  const classes = classNames.split(' ').filter(className => className.trim());\n  classes.forEach(className => {\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.warn(`Failed to remove class: ${className}`, error);\n    }\n  });\n};\n\n\nconst cleanupElevationProfile = () => {\n  if (resizeObserver.value) {\n    resizeObserver.value.disconnect();\n    resizeObserver.value = null;\n  }\n  if (currentElevationControl) {\n    try {\n      if (typeof currentElevationControl.clear === 'function') {\n        const originalRemoveClass = L.DomUtil.removeClass;\n        L.DomUtil.removeClass = function(el: HTMLElement, name: string) {\n          safeRemoveClasses(el, name);\n        };\n        \n        currentElevationControl.clear();\n        \n        L.DomUtil.removeClass = originalRemoveClass;\n      }\n      \n      const elevationDiv = document.getElementById('elevation-div');\n      if (elevationDiv) {\n        elevationDiv.innerHTML = '';\n      }\n      \n      if (props.mapInstance) {\n        props.mapInstance.removeControl(currentElevationControl);\n      }\n    } catch (error) {\n      console.error('Error during elevation control cleanup:', error);\n    }\n    currentElevationControl = null;\n  }\n\n  const selectors = [\n    '.elevation-polyline',\n    '.elevation-profile',\n    '.elevation-line',\n    '.elevation-point',\n    '.elevation-marker',\n    '.elevation-summary',\n    '.elevation-tooltip',\n    '.leaflet-elevation'\n  ];\n\n  selectors.forEach(selector => {\n    document.querySelectorAll(selector).forEach(element => {\n      if (element instanceof HTMLElement) {\n        try {\n          if (element.className) {\n            safeRemoveClasses(element, element.className);\n          }\n          element.remove();\n        } catch (error) {\n          console.error(`Error removing element with selector ${selector}:`, error);\n        }\n      }\n    });\n  });\n\n  if (props.mapInstance) {\n    props.mapInstance.eachLayer((layer: any) => {\n      try {\n        if (layer.options && (\n          layer.options.className === 'elevation-profile' ||\n          (layer.options.style && layer.options.style.className === 'elevation-profile') ||\n          layer._path?.classList?.contains('elevation-polyline') ||\n          layer.options.className?.includes('elevation-') ||\n          layer._container?.classList?.contains('leaflet-elevation')\n        )) {\n          props.mapInstance.removeLayer(layer);\n        }\n      } catch (error) {\n        console.error('Error removing map layer:', error);\n      }\n    });\n  }\n\n  if (currentElevationLayer && props.mapInstance) {\n    try {\n      props.mapInstance.removeLayer(currentElevationLayer);\n    } catch (error) {\n      console.error('Error removing current elevation layer:', error);\n    }\n    currentElevationLayer = null;\n  }\n\n  showProfile.value = false;\n};\n\nwatch(() => props.geoData, () => {\n  if (showProfile.value) {\n    cleanupElevationProfile();\n  }\n});\n\nonBeforeUnmount(() => {\n  isComponentMounted.value = false;\n  cleanupElevationProfile();\n});\n</script>\n\n<style scoped>\n.elevation-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  position: relative;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  justify-content: center;\n}\n\n.button-group.has-two-buttons {\n  justify-content: flex-start; \n}\n\n.btn-elevation {\n  background-color: #4b5673;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  transition: background-color 0.2s ease;\n  width: auto;\n  min-width: 130px;\n  height: 36px; \n  font-size: 0.9rem; \n}\n\n.progress-bar-container {\n  width: 100%;\n  height: 4px;\n  background-color: rgba(75, 86, 115, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n  margin-top: -0.5rem;\n}\n\n.progress-bar {\n  height: 100%;\n  background-color: #697fc7;\n}\n\n.btn-elevation:hover {\n  background-color: #5c6b8a;\n}\n\n.btn-elevation:disabled {\n  background-color: #3a4255;\n  cursor: not-allowed;\n}\n\n.btn-elevation.active {\n  background-color: #2c3e50;\n}\n\n.elevation-div {\n  height: 300px;\n  width: 100%;\n  font: 12px/1.5 \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n  background-color: rgba(75, 86, 115, 0.5);\n  border-radius: 4px;\n  padding: 0.75rem;\n  transition: all 0.3s ease;\n}\n\n.elevation-div.fullscreen {\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  width: 83vw;\n  height: 300px;\n  z-index: 1000;\n  background-color: rgba(46, 53, 71, 0.95);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n  margin-left: auto;\n}\n\n.elevation-div.fullscreen.ocean-depth-fullscreen {\n  width: 60vw !important;\n  right: 11vw !important;\n}\n\n.elevation-div.fullscreen.anchorage-fullscreen {\n  width: 72vw !important;\n  right: 11vw !important;\n}\n\n.elevation-div.fullscreen.cable-ships-fullscreen {\n  width: 70vw !important;\n  right: 13vw !important;\n}\n</style>","import script from \"./ElevationProfile.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ElevationProfile.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ElevationProfile.vue?vue&type=style&index=0&id=e0b5752a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e0b5752a\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2bc89004\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"py-2\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-arrow-return-left\",\n  \"aria-label\": \"return to cable list\",\n  id: \"return-icon\"\n}, null, -1))\nconst _hoisted_3 = { id: \"title\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = {\n  key: 0,\n  class: \"cable-details\"\n}\nconst _hoisted_6 = { class: \"list-group-item\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"length\", -1))\nconst _hoisted_8 = { class: \"field-value\" }\nconst _hoisted_9 = { class: \"list-group-item\" }\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"operational\", -1))\nconst _hoisted_11 = { class: \"field-value\" }\nconst _hoisted_12 = { class: \"list-group-item\" }\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"ready for service\", -1))\nconst _hoisted_14 = { class: \"field-value\" }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"list-group-item\"\n}\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"landing sites\", -1))\nconst _hoisted_17 = { class: \"field-value\" }\nconst _hoisted_18 = [\"onClick\"]\nconst _hoisted_19 = {\n  key: 1,\n  class: \"list-group-item\"\n}\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"ownerships\", -1))\nconst _hoisted_21 = { class: \"field-value\" }\nconst _hoisted_22 = { class: \"list-group-item depth-analysis-section\" }\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"Ocean Depth Analysis\", -1))\nconst _hoisted_24 = { class: \"field-value\" }\nconst _hoisted_25 = { class: \"depth-analysis-controls\" }\nconst _hoisted_26 = { class: \"control-row\" }\nconst _hoisted_27 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"samplePointCount\",\n  class: \"dropdown-label\"\n}, \"Sample Points:\", -1))\nconst _hoisted_28 = [\"value\"]\nconst _hoisted_29 = { class: \"button-container\" }\nconst _hoisted_30 = [\"disabled\"]\nconst _hoisted_31 = { key: 0 }\nconst _hoisted_32 = { key: 1 }\nconst _hoisted_33 = {\n  key: 0,\n  class: \"depth-analysis-results\"\n}\nconst _hoisted_34 = { class: \"analysis-detail\" }\nconst _hoisted_35 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Average Depth:\", -1))\nconst _hoisted_36 = { class: \"analysis-detail\" }\nconst _hoisted_37 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Deepest Point:\", -1))\n\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { queryCableById } from \"@/service/hasura\";\nimport { ref, watch} from \"vue\";\nimport OceanDepthAnalyzer from \"./OceanDepthAnalyzer.vue\";\nimport ElevationProfile from './ElevationProfile.vue';\nimport L from 'leaflet';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CableViewer',\n  setup(__props) {\n\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\nconst route = useRoute();\n\nconst geoData = ref(null);\nconst cable = ref();\nconst handle = useClientHandle();\nconst drawnGeometry = ref(null);\nconst mapInstance = dataCableStore.getMapInstance;\nconst isAnalyzing = ref(false);\nconst oceanDepthAnalyzerRef = ref(null);\nconst filteredDepthAnalysis = ref(null);\nconst samplePointCount = ref(100);\n\nconst loadCable = async (id: string) => {\n  const result = await handle.client.query(queryCableById, { id: id }).toPromise();\n  if (result.error) {\n    console.error(result.error);\n    return;\n  }\n  cable.value = result.data.CableSystems[0];\n};\n\nfunction formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric', \n    month: 'long', \n    day: 'numeric'\n  });\n}\n\nwatch(() => dataCableStore.selectCable, () => {\n  geoData.value = dataCableStore.cableDetails.geoData;\n})\n// Reset depth analysis when cable changes\nwatch(() => cable.value, () => {\n  drawnGeometry.value = null;\n  filteredDepthAnalysis.value = null;\n  isAnalyzing.value = false;\n  geoData.value = dataCableStore.cableDetails.geoData;\n});\n\nconst extractDepthInfo = async () => {\n  let cableGeo = dataCableStore.cableDetails;\n  if (!cableGeo || !cableGeo.geoData) return;\n  \n  isAnalyzing.value = true;\n  try {\n    const flattenedCoordinates = cableGeo.geoData.flatMap(segment => \n      segment[0].map(coord => [coord[1], coord[0]])\n    );\n\n    const geoData = {\n      type: 'LineString',\n      coordinates: flattenedCoordinates\n    };\n\n     const latlngs = geoData.coordinates.map((coord: number[]) => \n      L.latLng(coord[1], coord[0])\n    );\n    const geometry = L.polyline(latlngs);\n\n    drawnGeometry.value = geometry;\n  } catch (error) {\n    console.error('Error extracting depth info:', error);\n  } finally {\n    isAnalyzing.value = false;\n  }\n};\n\nconst filterDepthAnalysis = (fullAnalysis) => {\n  const filteredAnalysis = {\n    averageDepth: fullAnalysis.averageDepth,\n    deepestPoint: fullAnalysis.deepestPoint,\n    samplePoints: fullAnalysis.samplePoints\n  };\n\n  filteredDepthAnalysis.value = filteredAnalysis;\n  console.log('Filtered depth analysis:', filteredAnalysis);\n};\n\nlet id = route.params.cableId.toString();\n\nif (!dataCableStore.isCableSelected(id)) {\n  dataCableStore.setSelectCable(id, true);\n}\n\nloadCable(id);\n\nonBeforeRouteUpdate((to) => {\n  loadCable(to.params.cableId.toString());\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"span\", _hoisted_1, [\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(dataCableStore).deselectCables()))\n      }, {\n        default: _withCtx(() => [\n          _hoisted_2\n        ]),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"span\", _hoisted_3, [\n      _createElementVNode(\"strong\", null, _toDisplayString(cable.value?.name), 1),\n      _hoisted_4\n    ]),\n    (cable.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          _createElementVNode(\"div\", _hoisted_6, [\n            _hoisted_7,\n            _createElementVNode(\"div\", _hoisted_8, _toDisplayString(cable.value.length) + \"km\", 1)\n          ]),\n          _createElementVNode(\"div\", _hoisted_9, [\n            _hoisted_10,\n            _createElementVNode(\"div\", _hoisted_11, [\n              _createElementVNode(\"i\", {\n                class: _normalizeClass(['bi', !cable.value.outOfService ? 'bi-check-circle-fill text-success' : 'bi-x-circle-fill text-danger'])\n              }, null, 2)\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_12, [\n            _hoisted_13,\n            _createElementVNode(\"div\", _hoisted_14, _toDisplayString(formatDate(cable.value.readyForService)), 1)\n          ]),\n          (cable.value.CableSystem_X_Landingsites)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                _hoisted_16,\n                _createElementVNode(\"div\", _hoisted_17, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.value.CableSystem_X_Landingsites, (point) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: point.Landingsite.id,\n                      class: \"landing-site-item\"\n                    }, [\n                      _createElementVNode(\"a\", {\n                        onClick: ($event: any) => (_unref(landingSitesStore).setSelectLandingSiteById(point.Landingsite.id))\n                      }, _toDisplayString(point.Landingsite.name), 9, _hoisted_18)\n                    ]))\n                  }), 128))\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (cable.value.Ownerships)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                _hoisted_20,\n                _createElementVNode(\"div\", _hoisted_21, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.value.Ownerships, (entry) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: entry.Company.id,\n                      class: \"ownership-item\"\n                    }, _toDisplayString(entry.Company.name) + _toDisplayString(entry.Company.nationality), 1))\n                  }), 128))\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_22, [\n            _hoisted_23,\n            _createElementVNode(\"div\", _hoisted_24, [\n              _createElementVNode(\"div\", _hoisted_25, [\n                _createElementVNode(\"div\", _hoisted_26, [\n                  _hoisted_27,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    id: \"samplePointCount\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((samplePointCount).value = $event)),\n                    class: \"dropdown\"\n                  }, [\n                    (_openBlock(), _createElementBlock(_Fragment, null, _renderList([100, 200, 500, 1000, 2000, 5000], (count) => {\n                      return _createElementVNode(\"option\", {\n                        key: count,\n                        value: count\n                      }, _toDisplayString(count), 9, _hoisted_28)\n                    }), 64))\n                  ], 512), [\n                    [_vModelSelect, samplePointCount.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_29, [\n                  _createElementVNode(\"button\", {\n                    onClick: extractDepthInfo,\n                    class: \"btn btn-depth-analysis\",\n                    disabled: isAnalyzing.value\n                  }, [\n                    (!isAnalyzing.value)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \"Extract Depth Info\"))\n                      : (_openBlock(), _createElementBlock(\"span\", _hoisted_32, \"Analyzing...\"))\n                  ], 8, _hoisted_30)\n                ])\n              ]),\n              (filteredDepthAnalysis.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n                    _createElementVNode(\"div\", _hoisted_34, [\n                      _hoisted_35,\n                      _createTextVNode(\" \" + _toDisplayString(filteredDepthAnalysis.value.averageDepth) + \"m \", 1)\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_36, [\n                      _hoisted_37,\n                      _createTextVNode(\" \" + _toDisplayString(filteredDepthAnalysis.value.deepestPoint) + \"m \", 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            (drawnGeometry.value)\n              ? (_openBlock(), _createBlock(OceanDepthAnalyzer, {\n                  key: 0,\n                  ref_key: \"oceanDepthAnalyzerRef\",\n                  ref: oceanDepthAnalyzerRef,\n                  mapInstance: _unref(mapInstance),\n                  drawnGeometry: drawnGeometry.value,\n                  samplePointCount: samplePointCount.value,\n                  onDepthAnalysisComplete: filterDepthAnalysis\n                }, null, 8, [\"mapInstance\", \"drawnGeometry\", \"samplePointCount\"]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createVNode(ElevationProfile, {\n      mapInstance: _unref(mapInstance),\n      geoData: geoData.value\n    }, null, 8, [\"mapInstance\", \"geoData\"])\n  ], 64))\n}\n}\n\n})","<template>\n  <span class=\"py-2\">\n    <router-link to=\"/\" @click=\"dataCableStore.deselectCables()\">\n      <i class=\"bi bi-arrow-return-left\" aria-label=\"return to cable list\" id=\"return-icon\"></i>\n    </router-link>\n  </span>\n  \n  <span id=\"title\">\n    <strong>{{cable?.name}}</strong><br/>\n  </span>\n  \n  <div v-if=\"cable\" class=\"cable-details\">\n    <div class=\"list-group-item\">\n      <span class=\"field-label\">length</span>\n      <div class=\"field-value\">{{cable.length}}km</div>\n    </div>\n    \n    <div class=\"list-group-item\">\n      <span class=\"field-label\">operational</span>\n      <div class=\"field-value\">\n        <i :class=\"['bi', !cable.outOfService ? 'bi-check-circle-fill text-success' : 'bi-x-circle-fill text-danger']\"></i>\n      </div>\n    </div>\n    \n    <div class=\"list-group-item\">\n      <span class=\"field-label\">ready for service</span>\n      <div class=\"field-value\">{{formatDate(cable.readyForService)}}</div>\n    </div>\n    \n    <div v-if=\"cable.CableSystem_X_Landingsites\" class=\"list-group-item\">\n      <span class=\"field-label\">landing sites</span>\n      <div class=\"field-value\">\n        <div v-for=\"point in cable.CableSystem_X_Landingsites\" :key=\"point.Landingsite.id\" class=\"landing-site-item\">\n          <a @click=\"landingSitesStore.setSelectLandingSiteById(point.Landingsite.id)\">\n            {{point.Landingsite.name}}\n          </a>\n        </div>\n      </div>\n    </div>\n    \n    <div v-if=\"cable.Ownerships\" class=\"list-group-item\">\n      <span class=\"field-label\">ownerships</span>\n      <div class=\"field-value\">\n        <div v-for=\"entry in cable.Ownerships\" :key=\"entry.Company.id\" class=\"ownership-item\">\n          {{entry.Company.name}}{{entry.Company.nationality}}\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"list-group-item depth-analysis-section\">\n    <span class=\"field-label\">Ocean Depth Analysis</span>\n    <div class=\"field-value\">\n      <!-- Depth Analysis Controls -->\n      <div class=\"depth-analysis-controls\">\n        <!-- Dropdown for sample point count -->\n        <div class=\"control-row\">\n          <label for=\"samplePointCount\" class=\"dropdown-label\">Sample Points:</label>\n          <select id=\"samplePointCount\" v-model=\"samplePointCount\" class=\"dropdown\">\n            <option v-for=\"count in [100, 200, 500, 1000, 2000, 5000]\" :key=\"count\" :value=\"count\">\n              {{count}}\n            </option>\n          </select>\n        </div>\n      \n      <!-- Depth Analysis Button -->\n      <div class=\"button-container\">\n        <button @click=\"extractDepthInfo\" class=\"btn btn-depth-analysis\" :disabled=\"isAnalyzing\">\n          <span v-if=\"!isAnalyzing\">Extract Depth Info</span>\n           <span v-else>Analyzing...</span>\n        </button>\n      </div>\n    </div>\n\n    <!-- Show depth analysis results if available -->\n    <div v-if=\"filteredDepthAnalysis\" class=\"depth-analysis-results\">\n      <div class=\"analysis-detail\">\n        <strong>Average Depth:</strong> {{filteredDepthAnalysis.averageDepth}}m\n      </div>\n      <div class=\"analysis-detail\">\n        <strong>Deepest Point:</strong> {{filteredDepthAnalysis.deepestPoint}}m\n      </div>\n    </div>\n  </div>\n  \n  <OceanDepthAnalyzer \n    v-if=\"drawnGeometry\"\n    ref=\"oceanDepthAnalyzerRef\"\n    :mapInstance=\"mapInstance\"\n    :drawnGeometry=\"drawnGeometry\"\n    :samplePointCount=\"samplePointCount\"\n    @depth-analysis-complete=\"filterDepthAnalysis\"\n  />\n</div>\n\n  </div>\n\n  <ElevationProfile \n    :mapInstance=\"mapInstance\" \n    :geoData=\"geoData\"\n  />\n</template>\n\n\n<script setup lang=\"ts\">\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { queryCableById } from \"@/service/hasura\";\nimport { ref, watch} from \"vue\";\nimport OceanDepthAnalyzer from \"./OceanDepthAnalyzer.vue\";\nimport ElevationProfile from './ElevationProfile.vue';\nimport L from 'leaflet';\n\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\nconst route = useRoute();\n\nconst geoData = ref(null);\nconst cable = ref();\nconst handle = useClientHandle();\nconst drawnGeometry = ref(null);\nconst mapInstance = dataCableStore.getMapInstance;\nconst isAnalyzing = ref(false);\nconst oceanDepthAnalyzerRef = ref(null);\nconst filteredDepthAnalysis = ref(null);\nconst samplePointCount = ref(100);\n\nconst loadCable = async (id: string) => {\n  const result = await handle.client.query(queryCableById, { id: id }).toPromise();\n  if (result.error) {\n    console.error(result.error);\n    return;\n  }\n  cable.value = result.data.CableSystems[0];\n};\n\nfunction formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric', \n    month: 'long', \n    day: 'numeric'\n  });\n}\n\nwatch(() => dataCableStore.selectCable, () => {\n  geoData.value = dataCableStore.cableDetails.geoData;\n})\n// Reset depth analysis when cable changes\nwatch(() => cable.value, () => {\n  drawnGeometry.value = null;\n  filteredDepthAnalysis.value = null;\n  isAnalyzing.value = false;\n  geoData.value = dataCableStore.cableDetails.geoData;\n});\n\nconst extractDepthInfo = async () => {\n  let cableGeo = dataCableStore.cableDetails;\n  if (!cableGeo || !cableGeo.geoData) return;\n  \n  isAnalyzing.value = true;\n  try {\n    const flattenedCoordinates = cableGeo.geoData.flatMap(segment => \n      segment[0].map(coord => [coord[1], coord[0]])\n    );\n\n    const geoData = {\n      type: 'LineString',\n      coordinates: flattenedCoordinates\n    };\n\n     const latlngs = geoData.coordinates.map((coord: number[]) => \n      L.latLng(coord[1], coord[0])\n    );\n    const geometry = L.polyline(latlngs);\n\n    drawnGeometry.value = geometry;\n  } catch (error) {\n    console.error('Error extracting depth info:', error);\n  } finally {\n    isAnalyzing.value = false;\n  }\n};\n\nconst filterDepthAnalysis = (fullAnalysis) => {\n  const filteredAnalysis = {\n    averageDepth: fullAnalysis.averageDepth,\n    deepestPoint: fullAnalysis.deepestPoint,\n    samplePoints: fullAnalysis.samplePoints\n  };\n\n  filteredDepthAnalysis.value = filteredAnalysis;\n  console.log('Filtered depth analysis:', filteredAnalysis);\n};\n\nlet id = route.params.cableId.toString();\n\nif (!dataCableStore.isCableSelected(id)) {\n  dataCableStore.setSelectCable(id, true);\n}\n\nloadCable(id);\n\nonBeforeRouteUpdate((to) => {\n  loadCable(to.params.cableId.toString());\n});\n</script>\n\n<style scoped>\n.depth-analysis-controls {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  gap: 1rem;\n}\n\n.control-row {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  width: 100%;\n  justify-content: center;\n}\n\n.button-container {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n}\n.dropdown-label {\n  color: white;\n  margin-right: 0.5rem;\n}\n\n.dropdown {\n  background-color: #4b5673;\n  color: white;\n  border: none;\n  padding: 0.5rem;\n  border-radius: 4px;\n}\n.depth-analysis-results {\n  margin-top: 1rem;\n  width: 100%;\n}\n.analysis-detail {\n  margin-bottom: 0.5rem;\n  color: white;\n}\n\n.analysis-detail strong {\n  color: #8b9dc7;\n  margin-right: 0.5rem;\n}\n.depth-analysis-section {\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.depth-analysis-section .field-label {\n  margin-left: -0.75rem; \n  margin-right: -0.75rem;\n  padding: 0.5rem 3.75rem; \n  background-color: #2e3547;\n  border-radius: 4px;\n}\n\n\n.btn-depth-analysis {\n  background-color: #4b5673;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  transition: background-color 0.2s ease;\n  width: auto;\n  min-width: 150px;\n}\n\n.btn-depth-analysis:hover {\n  background-color: #5c6b8a;\n}\n\n.btn-depth-analysis:disabled {\n  background-color: #3a4255;\n  cursor: not-allowed;\n}\n\n\n.depth-analysis-results {\n  margin-top: 0.75rem;\n  background-color: rgba(75, 86, 115, 0.5);\n  border-radius: 4px;\n  padding: 0.75rem;\n}\n\n.analysis-detail {\n  margin-bottom: 0.5rem;\n  color: white;\n}\n\n.analysis-detail strong {\n  color: #8b9dc7;\n  margin-right: 0.5rem;\n}\n#return-icon {\n  color: white;\n  font-size: 1.5rem;\n  padding: 0.5rem;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n#return-icon:hover {\n  background-color: #697fc7;\n}\n\n#title {\n  color: white;\n  font-size: 1.2rem;\n  margin-bottom: 1rem;\n  display: block;\n}\n\n.cable-details {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.list-group-item {\n  background: transparent;\n  border: none;\n  color: white;\n  padding: 0.5rem 0;\n}\n\n.field-label {\n  display: block;\n  color: #8b9dc7;\n  background-color: #2e3547;\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 0.25rem;\n  font-weight: 500;\n  margin-left: -0.75rem;\n  margin-right: -0.75rem;\n  padding: 0.5rem 0.75rem;\n}\n\n.field-value {\n  color: white;\n  background-color: rgba(75, 86, 115, 0.5);\n  border-radius: 4px;\n  padding: 0.5rem 0.75rem;\n  margin-top: 0.25rem;\n}\n\n.landing-site-item,\n.ownership-item {\n  padding: 0.25rem 0;\n}\n\n.landing-site-item:not(:last-child),\n.ownership-item:not(:last-child) {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.landing-site-item a {\n  color: white;\n  text-decoration: none;\n  cursor: pointer;\n  display: block;\n  transition: color 0.2s ease;\n}\n\n.landing-site-item a:hover {\n  color: #8b9dc7;\n  text-decoration: none;\n}\n\n.text-success {\n  color: #28a745 !important;\n}\n\n.text-danger {\n  color: #dc3545 !important;\n}\n</style>\n","import script from \"./CableViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CableViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./CableViewer.vue?vue&type=style&index=0&id=2bc89004&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2bc89004\"]])\n\nexport default __exports__","<template>\n  <VueFinalModal v-model=\"show\" :clickToClose=\"false\" :styles=\"modalStyles\">\n    <div class=\"modal-overlay\" @click=\"closeModal\"></div>\n    <div class=\"modal-content\">\n      <h2>Welcome to an overview on the SDCS Dashboard!</h2>\n      <p>Below is a short summary of its core functionalities:</p>\n      <img src=\"../assets/functionality-overview.jpg\" class=\"screenshot\">\n      <ul class=\"functionality-list\">\n        <li>\n          <span class=\"step-number\">1</span>\n          Click on&nbsp;<strong> Cable</strong>: View data of a specific cable in the Sidebar or search for cables using the search bar.&nbsp;<span class=\"step-number\">2</span>\n        </li>\n        <li>\n          <span class=\"step-number\">3</span>\n          Click on&nbsp;<strong> Landing Site</strong>: View data of a specific landing site in the Sidebar&nbsp;<span class=\"step-number\">2</span>\n        </li>\n        <li>\n          <span class=\"step-number\">4</span>\n          Switch&nbsp;<strong> Layer / Overlay</strong>: Choose the data you want to inspect, e.g., Fishing Activity, Ocean Depth Data, Gas Pipelines, etc.\n        </li>\n        <li>\n          <span class=\"step-number\">5</span>\n          Use the&nbsp;<strong> Distance Measuring Tool</strong>\n        </li>\n        <li>\n          <span class=\"step-number\">6</span>\n          Use the&nbsp;<strong> Change language, select cable source or reopen the overview</strong>\n        </li>\n      </ul>\n      <button @click=\"closeModal\" class=\"close-button\">Close</button>\n    </div>\n  </VueFinalModal>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { VueFinalModal } from 'vue-final-modal';\n\nexport default {\n  components: { VueFinalModal },\n  setup() {\n    const show = ref(true);\n\n    const closeModal = () => {\n      show.value = false;\n    };\n\n    const openModal = () => {\n      console.log(\"Called openModal\");\n      show.value = true;\n    };\n\n    const modalStyles = {\n      overlay: {\n        zIndex: 1000,\n      },\n      content: {\n        zIndex: 1001,\n      },\n    };\n\n    return { show, closeModal, modalStyles, openModal };\n  },\n};\n</script>\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n}\n\n.modal-content {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 20px;\n  background: white;\n  border-radius: 5px;\n  z-index: 1001;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  border: 6px solid #48506a;\n  /* max-width: 1500px; */\n  width: 65%;\n  justify-content: center;\n  align-items: center; \n}\n\n.screenshot{\n    top: 60%;\n    left: 60%;\n    width: 90%;\n    height: 'auto';\n  }\n\n.functionality-list {\n  list-style: none;\n  padding: 0;\n  font-size: 14px;\n  line-height: 1.3;\n  padding-top: 20px;\n}\n\n.functionality-list li {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 6px;\n  word-break: break-word;\n}\n\n.step-number {\n  background-color: #697fc7;\n  color: white;\n  border-radius: 50%;\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  line-height: 24px;\n  text-align: center;\n  font-size: 12px;\n  margin-right: 10px;\n}\n\n.button-container{\n  display: flex;\n  justify-content: space-between;\n  align-items: center\n}\n\n.close-button {\n  width: 20%;\n  padding: 10px 25px;\n  background-color: #697fc7;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.close-button:hover {\n  background-color: #48506a;\n}\n\n.filler{\n  width: 400px\n}\n\n\n</style>\n","import { render } from \"./FunctionalityOverview.vue?vue&type=template&id=0299338d&scoped=true\"\nimport script from \"./FunctionalityOverview.vue?vue&type=script&lang=js\"\nexport * from \"./FunctionalityOverview.vue?vue&type=script&lang=js\"\n\nimport \"./FunctionalityOverview.vue?vue&type=style&index=0&id=0299338d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0299338d\"]])\n\nexport default __exports__","<template>\n  <div class=\"cable-source-selector\">\n    <button @click=\"toggleDropdown\" class=\"select-button\">\n      Cable Source\n      <i :class=\"['arrow', isOpen ? 'up' : 'down']\"></i>\n    </button>\n    <div v-if=\"isOpen\" class=\"dropdown\">\n      <div \n        class=\"dropdown-item\" \n        @mouseenter=\"currentHoveredItem = 'Telegeography'\"\n        @mouseleave=\"currentHoveredItem = ''\"\n      >\n        <div class=\"source-container\">\n          <button \n            @click=\"selectSource('Telegeography')\"\n            :class=\"{active: selectedSource === 'Telegeography'}\"\n            class=\"dropdown-button\"\n          >\n            Telegeography\n          </button>\n          <div \n            class=\"info-icon-wrapper\"\n            :class=\"{\n              'hovered': currentHoveredItem === 'Telegeography',\n              'selected': selectedSource === 'Telegeography'\n            }\"\n          >\n            <span class=\"info-icon\">ℹ️\n              <span class=\"tooltip\">\n                Telegeography is a trusted dataset offering detailed information on global submarine cables, including routes, landing points, and technical specifications. It provides a comprehensive overview of the global connectivity infrastructure but may generalize details in certain regions, focusing more on a broad, worldwide perspective than localized precision.\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div \n        class=\"dropdown-item\"\n        @mouseenter=\"currentHoveredItem = 'Mixed Sources'\"\n        @mouseleave=\"currentHoveredItem = ''\"\n      >\n        <div class=\"source-container\">\n          <button \n            @click=\"selectSource('MixedSources')\"\n            :class=\"{active: selectedSource === 'MixedSources'}\"\n            class=\"dropdown-button\"\n          >\n            Mixed Sources\n          </button>\n          <div \n            class=\"info-icon-wrapper\"\n            :class=\"{\n              'hovered': currentHoveredItem === 'MixedSources',\n              'selected': selectedSource === 'MixedSources'\n            }\"\n          >\n            <span class=\"info-icon\">ℹ️\n              <span class=\"tooltip\">\n                Mixed Cable Source integrates cable data from OpenStreetMap, which sources much of its information from KIS-ORCA, which offers more accurate geodata for submarine cables, particularly around the British Isles and other European regions.\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport groupedCables from \"@/assets/groupedCables.json\";\n\nconst dataCablesStore = useDataCablesStore();\nconst selectedSource = ref(\"Telegeography\");\nconst isOpen = ref(false);\nconst originalCableData = ref([]);\nconst currentHoveredItem = ref(\"\");\n\nconst toggleDropdown = () => {\n  isOpen.value = !isOpen.value;\n};\n\nconst selectSource = (source) => {\n  selectedSource.value = source;\n  isOpen.value = false;\n  updateCableSource(source);\n};\n\nconst updateCableSource = async (source) => {\n  if (source === \"MixedSources\") {\n    if (originalCableData.value.length === 0) {\n      originalCableData.value = dataCablesStore.dataCables.map((cable) => ({\n        name: cable.name,\n        geoData: JSON.parse(JSON.stringify(cable.geoData)),\n      }));\n    }\n    updateMixedSourceCables();\n  } else {\n    if (originalCableData.value.length > 0) {\n      dataCablesStore.dataCables.forEach((cable) => {\n        const originalCable = originalCableData.value.find(\n          (orig) => orig.name === cable.name\n        );\n        if (originalCable) {\n          cable.geoData = originalCable.geoData;\n        }\n      });\n      originalCableData.value = [];\n    }\n    await dataCablesStore.initialize();\n  }\n};\n\nconst updateMixedSourceCables = () => {\n  dataCablesStore.dataCables.forEach((cable) => {\n    const mixedSourceCable = groupedCables.features.find(\n      (item) => item.properties.name === cable.name\n    );\n    if (mixedSourceCable) {\n      const geoData = [\n        mixedSourceCable.geometry.coordinates.map((segment) =>\n          segment.map((coord) => [coord[0], coord[1]])\n        ),\n      ];\n      cable.geoData = geoData;\n    }\n  });\n};\n</script>\n\n<style>\n.cable-source-selector {\n  background-color: #48506a;\n  position: absolute;\n  top: -80px;\n  left: 0px;\n  z-index: 1000;\n  color: #ffffff;\n}\n\n.arrow {\n  border: solid #ffffff;\n  color: #ffffff;\n  border-width: 0 2px 2px 0;\n  display: inline-block;\n  padding: 3px;\n  margin-left: 8px;\n}\n\n.down {\n  transform: rotate(45deg);\n  -webkit-transform: rotate(45deg);\n}\n\n.up {\n  transform: rotate(-135deg);\n  -webkit-transform: rotate(-135deg);\n}\n\n.dropdown {\n  position: absolute;\n  background-color: #48506a;\n  color: #ffffff;\n  border: none;\n  padding: 6px 0;\n  width: 100%;\n  z-index: 1;\n}\n\n.dropdown-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 3px 0;\n}\n\n.source-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.dropdown button {\n  width: 0px;\n  padding: 6px 6px;\n  text-align: left;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  color: #ffffff;\n  flex-grow: 1;\n}\n\n.dropdown button:hover,\n.dropdown button.active {\n  background-color: #697fc7;\n  color: #ffffff;\n}\n\n.info-icon-wrapper {\n  display: flex;\n  align-items: center;\n  padding: 4.5px;\n  height: 120%;\n  border-radius: 0px;\n}\n\n.info-icon-wrapper.hovered {\n  background-color: #697fc7;\n  height: 120%;\n}\n\n.info-icon-wrapper.selected {\n  background-color: #697fc7;\n  height: 120%;\n}\n\n.info-icon {\n  position: relative;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.info-icon .tooltip {\n  position: absolute;\n  top: 100%; /* Position below the icon */\n  left: 20px; /* Move tooltip to the left */\n  width: 300px; /* Fixed width for multi-line tooltip */\n  background-color: #333;\n  color: #ffffff;\n  border: none;\n  font-size: 12px;\n  padding: 10px;\n  border-radius: 4px;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.2s, opacity 0.2s;\n  z-index: 10;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n  white-space: normal; /* Allow text to wrap */\n  line-height: 1.4;\n}\n\n.info-icon:hover .tooltip {\n  visibility: visible;\n  opacity: 1;\n}\n</style>","import script from \"./CableSourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CableSourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CableSourceSelector.vue?vue&type=style&index=0&id=3a8800dc&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-add0aa80\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"drawing-controls\"\n}\nconst _hoisted_2 = { class: \"button-container\" }\nconst _hoisted_3 = [\"data-drawing-active\"]\nconst _hoisted_4 = [\"src\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"sample-points-control\"\n}\nconst _hoisted_6 = { class: \"dropdown-wrapper\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-label\" }, \"Analysis Detail\", -1))\nconst _hoisted_8 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"100\\\" data-v-add0aa80>Quick Scan</option><option value=\\\"500\\\" data-v-add0aa80>Standard Detail</option><option value=\\\"1000\\\" data-v-add0aa80>High Detail</option><option value=\\\"2000\\\" data-v-add0aa80>Very High Detail</option><option value=\\\"5000\\\" data-v-add0aa80>Ultra Detailed</option>\", 5)\nconst _hoisted_13 = [\n  _hoisted_8\n]\n\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport \"leaflet-draw/dist/leaflet.draw-src.css\";\nimport OceanDepthAnalyzer from './OceanDepthAnalyzer.vue';\n\n// Props for receiving map instance\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DrawingLayer',\n  props: {\n  mapInstance: {\n    type: Object,\n    required: true\n  },\n  oceanSelected: {\n    type: Boolean,\n    required: true\n  }\n},\n  setup(__props, { expose: __expose }) {\n\n  const props = __props;\n\nconst currentGeometry = ref<L.Layer | null>(null);\nconst drawControl = ref(null);\nconst drawnItemsLayer = ref(null);\nconst lastGeometry = ref<L.Layer | null>(null);\nconst drawnItems = ref([]);\nconst isDrawingModeActive = ref(false);\nconst isEditModeActive = ref(false);\nconst drawControlsInitialized = ref(false);\nconst samplePointCount = ref(100);\n\n// Initialize drawing layer\nonMounted(() => {\n  if (props.mapInstance) {\n    initializeDrawingControls();\n  }\n});\n\n// Cleanup when component is unmounted\nonUnmounted(() => {\n  if (props.mapInstance) {\n    removeMapEventListeners();\n    if (drawnItemsLayer.value) {\n      props.mapInstance.removeLayer(drawnItemsLayer.value);\n    }\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n  }\n});\n\nfunction removeMapEventListeners() {\n  props.mapInstance.off(L.Draw.Event.CREATED);\n  props.mapInstance.off(L.Draw.Event.DELETED);\n  props.mapInstance.off(L.Draw.Event.DRAWSTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTOP);\n  props.mapInstance.off(L.Draw.Event.EDITSTART);\n  props.mapInstance.off(L.Draw.Event.EDITSTOP);\n}\n\nwatch(() => props.mapInstance, (newMap) => {\n  if (newMap) {\n    initializeDrawingControls();\n  }\n});\n\nwatch(() => props.oceanSelected, (newValue) => {\n  if (!newValue) {\n    toggleDrawingMode(true);\n  }\n});\n\nfunction initializeDrawingControls() {\n  // Create a layer group for drawn items\n  drawnItemsLayer.value = new L.FeatureGroup();\n  props.mapInstance.addLayer(drawnItemsLayer.value);\n\n  // Configure drawing options\n  const drawOptions = {\n    draw: {\n      polyline: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false\n      },\n      polygon: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false,\n        showArea: true\n      },\n      rectangle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showArea: true\n      },\n      circle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showRadius: true\n      },\n      marker: {},\n      circlemarker: false,\n    },\n    edit: {\n      featureGroup: drawnItemsLayer.value,\n      remove: true\n    },\n    position: 'topleft',\n    className: 'custom-draw-toolbar'\n  };\n\n  // Create drawing control\n  drawControl.value = new L.Control.Draw(drawOptions);\n\n  // Event handlers for drawing\n  props.mapInstance.on(L.Draw.Event.CREATED, handleDrawCreated);\n  props.mapInstance.on(L.Draw.Event.DELETED, handleDrawDeleted);\n  props.mapInstance.on(L.Draw.Event.DRAWSTART, handleDrawStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTART, handleDeleteStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTOP, handleDeleteStop);\n  props.mapInstance.on(L.Draw.Event.EDITSTART, handleEditStart);\n  props.mapInstance.on(L.Draw.Event.EDITSTOP, handleEditStop);\n  \n  drawControlsInitialized.value = true;\n}\n\nfunction handleDeleteStart() {\n  isEditModeActive.value = true;\n  // Remove click handlers during delete mode\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      layer.off('click');\n    });\n  }\n  if (lastGeometry.value) {\n    lastGeometry.value.off('click');\n  }\n}\n\nfunction handleDeleteStop() {\n  isEditModeActive.value = false;\n  // Restore click handlers\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      setupClickHandler(layer);\n    });\n  }\n  if (lastGeometry.value && currentGeometry.value) {\n    setupClickHandler(lastGeometry.value, currentGeometry.value);\n  }\n}\n\nfunction handleEditStart() {\n  isEditModeActive.value = true;\n  // Remove last geometry highlight during edit mode\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleEditStop() {\n  isEditModeActive.value = false;\n  // Restore highlight if needed\n  if (currentGeometry.value) {\n    const highlightedLayer = createHighlightedLayer(currentGeometry.value);\n    if (highlightedLayer) {\n      lastGeometry.value = highlightedLayer;\n      props.mapInstance.addLayer(highlightedLayer);\n      setupClickHandler(highlightedLayer, currentGeometry.value);\n    }\n  }\n}\n\nfunction setupClickHandler(layer: L.Layer, targetLayer: L.Layer | null = null) {\n  if (!isEditModeActive.value) {\n    layer.on('click', (event) => {\n      if (!isEditModeActive.value) {\n        L.DomEvent.stopPropagation(event);\n        (targetLayer || layer).fire('click', event);\n      }\n    });\n  }\n}\n\nfunction toggleDrawingMode(fromWatcher) {\n  if (!fromWatcher) isDrawingModeActive.value = !isDrawingModeActive.value;\n  \n  if (isDrawingModeActive.value && !fromWatcher) {\n    props.mapInstance.addControl(drawControl.value);\n  } else if (!props.oceanSelected && isDrawingModeActive.value) {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n    isDrawingModeActive.value = !isDrawingModeActive.value;\n  } else {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n  }\n}\n\nfunction cleanupGeometries() {\n  currentGeometry.value = null;\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.clearLayers();\n  }\n  drawnItems.value = [];\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawStart() {\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawCreated(e) {\n  const layer = e.layer;\n  \n  setupClickHandler(layer);\n  drawnItemsLayer.value.addLayer(layer);\n  currentGeometry.value = layer;\n  \n  const highlightedLayer = createHighlightedLayer(layer);\n  if (highlightedLayer) {\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n    \n    lastGeometry.value = highlightedLayer;\n    setupClickHandler(highlightedLayer, layer);\n    drawnItemsLayer.value.addLayer(highlightedLayer);\n  }\n\n  const itemDetails = {\n    type: e.layerType,\n    coordinates: getLayerCoordinates(layer)\n  };\n  drawnItems.value.push(itemDetails);\n}\n\nfunction createHighlightedLayer(layer: L.Layer): L.Layer | null {\n  const highlightStyles = {\n    color: '#00ff00',\n    weight: 3,\n    opacity: 1,\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  };\n\n  if (layer instanceof L.Marker) {\n    return L.marker(layer.getLatLng(), {\n      icon: L.divIcon({\n        className: 'last-geometry-marker',\n        html: '<div style=\"background-color:#00ff00;width:20px;height:20px;border-radius:50%;border:2px solid #00ff00;\"></div>',\n        iconSize: [20, 20]\n      })\n    });\n  } else if (layer instanceof L.Polygon || layer instanceof L.Rectangle) {\n    const coords = layer.getLatLngs();\n    return L.polygon(coords, { ...highlightStyles, smoothFactor: 1, noClip: true });\n  } else if (layer instanceof L.Polyline) {\n    return L.polyline(layer.getLatLngs(), highlightStyles);\n  } else if (layer instanceof L.Circle) {\n    return L.circle(layer.getLatLng(), {\n      ...highlightStyles,\n      radius: layer.getRadius()\n    });\n  }\n  return null;\n}\n\nfunction handleDrawDeleted(e) {\n  const layers = e.layers;\n  \n  layers.eachLayer((layer) => {\n    const index = drawnItems.value.findIndex(item => \n      JSON.stringify(getLayerCoordinates(layer)) === JSON.stringify(item.coordinates)\n    );\n    if (index !== -1) {\n      drawnItems.value.splice(index, 1);\n    }\n    \n    if (currentGeometry.value === layer) {\n      currentGeometry.value = null;\n      if (lastGeometry.value) {\n        drawnItemsLayer.value.removeLayer(lastGeometry.value);\n        lastGeometry.value = null;\n      }\n    }\n  });\n}\n\nfunction getLayerCoordinates(layer: L.Layer | any) {\n  try {\n    if (layer instanceof L.Marker) {\n      return layer.getLatLng();\n    } else if (layer instanceof L.Polyline) {\n      return layer.getLatLngs();\n    } else if (layer instanceof L.Rectangle || layer instanceof L.Polygon) {\n      return layer.getBounds();\n    } else if (layer instanceof L.Circle) {\n      return {\n        center: layer.getLatLng(),\n        radius: layer.getRadius()\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error('Error getting layer coordinates:', error);\n    return null;\n  }\n}\n\n__expose({\n  isDrawingModeActive,\n  samplePointCount\n});\n  \nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (drawControlsInitialized.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (toggleDrawingMode(false))),\n              class: \"toggle-drawing-btn\",\n              \"data-drawing-active\": isDrawingModeActive.value\n            }, [\n              _createElementVNode(\"img\", {\n                src: require('@/assets/graphics/seadepth.png'),\n                alt: \"Drawing Toggle\",\n                class: \"drawing-icon\"\n              }, null, 8, _hoisted_4)\n            ], 8, _hoisted_3)\n          ]),\n          (isDrawingModeActive.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    id: \"samplePointCount\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((samplePointCount).value = $event)),\n                    class: \"dropdown\"\n                  }, _hoisted_13, 512), [\n                    [_vModelSelect, samplePointCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (currentGeometry.value)\n      ? (_openBlock(), _createBlock(OceanDepthAnalyzer, {\n          key: 1,\n          \"map-instance\": props.mapInstance,\n          \"drawn-geometry\": currentGeometry.value,\n          \"sample-point-count\": samplePointCount.value,\n          showPopup: true\n        }, null, 8, [\"map-instance\", \"drawn-geometry\", \"sample-point-count\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <div v-if=\"drawControlsInitialized\" class=\"drawing-controls\">\n      <div class=\"button-container\">\n        <button \n          @click=\"toggleDrawingMode(false)\" \n          class=\"toggle-drawing-btn\" \n          :data-drawing-active=\"isDrawingModeActive\"\n        >\n          <img :src=\"require('@/assets/graphics/seadepth.png')\" alt=\"Drawing Toggle\" class=\"drawing-icon\"/>\n        </button>\n      </div>\n      \n      <!-- Updated Sample Points Dropdown -->\n      <div v-if=\"isDrawingModeActive\" class=\"sample-points-control\">\n        <div class=\"dropdown-wrapper\">\n          <div class=\"dropdown-label\">Analysis Detail</div>\n          <select \n            id=\"samplePointCount\" \n            v-model=\"samplePointCount\" \n            class=\"dropdown\"\n          >\n            <option value=\"100\">Quick Scan</option>\n            <option value=\"500\">Standard Detail</option>\n            <option value=\"1000\">High Detail</option>\n            <option value=\"2000\">Very High Detail</option>\n            <option value=\"5000\">Ultra Detailed</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    \n    <OceanDepthAnalyzer \n      v-if=\"currentGeometry\"\n      :map-instance=\"props.mapInstance\"\n      :drawn-geometry=\"currentGeometry\"\n      :sample-point-count=\"samplePointCount\"\n      :showPopup=\"true\"\n    />\n  </div>\n</template>\n  \n  <script setup lang=\"ts\">\n  import { ref, onMounted, onUnmounted, watch } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet-draw';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport \"leaflet-draw/dist/leaflet.draw-src.css\";\nimport OceanDepthAnalyzer from './OceanDepthAnalyzer.vue';\n\n// Props for receiving map instance\nconst props = defineProps({\n  mapInstance: {\n    type: Object,\n    required: true\n  },\n  oceanSelected: {\n    type: Boolean,\n    required: true\n  }\n});\n\nconst currentGeometry = ref<L.Layer | null>(null);\nconst drawControl = ref(null);\nconst drawnItemsLayer = ref(null);\nconst lastGeometry = ref<L.Layer | null>(null);\nconst drawnItems = ref([]);\nconst isDrawingModeActive = ref(false);\nconst isEditModeActive = ref(false);\nconst drawControlsInitialized = ref(false);\nconst samplePointCount = ref(100);\n\n// Initialize drawing layer\nonMounted(() => {\n  if (props.mapInstance) {\n    initializeDrawingControls();\n  }\n});\n\n// Cleanup when component is unmounted\nonUnmounted(() => {\n  if (props.mapInstance) {\n    removeMapEventListeners();\n    if (drawnItemsLayer.value) {\n      props.mapInstance.removeLayer(drawnItemsLayer.value);\n    }\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n  }\n});\n\nfunction removeMapEventListeners() {\n  props.mapInstance.off(L.Draw.Event.CREATED);\n  props.mapInstance.off(L.Draw.Event.DELETED);\n  props.mapInstance.off(L.Draw.Event.DRAWSTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTART);\n  props.mapInstance.off(L.Draw.Event.DELETESTOP);\n  props.mapInstance.off(L.Draw.Event.EDITSTART);\n  props.mapInstance.off(L.Draw.Event.EDITSTOP);\n}\n\nwatch(() => props.mapInstance, (newMap) => {\n  if (newMap) {\n    initializeDrawingControls();\n  }\n});\n\nwatch(() => props.oceanSelected, (newValue) => {\n  if (!newValue) {\n    toggleDrawingMode(true);\n  }\n});\n\nfunction initializeDrawingControls() {\n  // Create a layer group for drawn items\n  drawnItemsLayer.value = new L.FeatureGroup();\n  props.mapInstance.addLayer(drawnItemsLayer.value);\n\n  // Configure drawing options\n  const drawOptions = {\n    draw: {\n      polyline: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false\n      },\n      polygon: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        feet: false,\n        showArea: true\n      },\n      rectangle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showArea: true\n      },\n      circle: {\n        shapeOptions: { color: '#ff0000' },\n        metric: false,\n        nautic: true,\n        showRadius: true\n      },\n      marker: {},\n      circlemarker: false,\n    },\n    edit: {\n      featureGroup: drawnItemsLayer.value,\n      remove: true\n    },\n    position: 'topleft',\n    className: 'custom-draw-toolbar'\n  };\n\n  // Create drawing control\n  drawControl.value = new L.Control.Draw(drawOptions);\n\n  // Event handlers for drawing\n  props.mapInstance.on(L.Draw.Event.CREATED, handleDrawCreated);\n  props.mapInstance.on(L.Draw.Event.DELETED, handleDrawDeleted);\n  props.mapInstance.on(L.Draw.Event.DRAWSTART, handleDrawStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTART, handleDeleteStart);\n  props.mapInstance.on(L.Draw.Event.DELETESTOP, handleDeleteStop);\n  props.mapInstance.on(L.Draw.Event.EDITSTART, handleEditStart);\n  props.mapInstance.on(L.Draw.Event.EDITSTOP, handleEditStop);\n  \n  drawControlsInitialized.value = true;\n}\n\nfunction handleDeleteStart() {\n  isEditModeActive.value = true;\n  // Remove click handlers during delete mode\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      layer.off('click');\n    });\n  }\n  if (lastGeometry.value) {\n    lastGeometry.value.off('click');\n  }\n}\n\nfunction handleDeleteStop() {\n  isEditModeActive.value = false;\n  // Restore click handlers\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.eachLayer((layer: L.Layer) => {\n      setupClickHandler(layer);\n    });\n  }\n  if (lastGeometry.value && currentGeometry.value) {\n    setupClickHandler(lastGeometry.value, currentGeometry.value);\n  }\n}\n\nfunction handleEditStart() {\n  isEditModeActive.value = true;\n  // Remove last geometry highlight during edit mode\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleEditStop() {\n  isEditModeActive.value = false;\n  // Restore highlight if needed\n  if (currentGeometry.value) {\n    const highlightedLayer = createHighlightedLayer(currentGeometry.value);\n    if (highlightedLayer) {\n      lastGeometry.value = highlightedLayer;\n      props.mapInstance.addLayer(highlightedLayer);\n      setupClickHandler(highlightedLayer, currentGeometry.value);\n    }\n  }\n}\n\nfunction setupClickHandler(layer: L.Layer, targetLayer: L.Layer | null = null) {\n  if (!isEditModeActive.value) {\n    layer.on('click', (event) => {\n      if (!isEditModeActive.value) {\n        L.DomEvent.stopPropagation(event);\n        (targetLayer || layer).fire('click', event);\n      }\n    });\n  }\n}\n\nfunction toggleDrawingMode(fromWatcher) {\n  if (!fromWatcher) isDrawingModeActive.value = !isDrawingModeActive.value;\n  \n  if (isDrawingModeActive.value && !fromWatcher) {\n    props.mapInstance.addControl(drawControl.value);\n  } else if (!props.oceanSelected && isDrawingModeActive.value) {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n    isDrawingModeActive.value = !isDrawingModeActive.value;\n  } else {\n    cleanupGeometries();\n    props.mapInstance.removeControl(drawControl.value);\n  }\n}\n\nfunction cleanupGeometries() {\n  currentGeometry.value = null;\n  if (drawnItemsLayer.value) {\n    drawnItemsLayer.value.clearLayers();\n  }\n  drawnItems.value = [];\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawStart() {\n  if (lastGeometry.value) {\n    props.mapInstance.removeLayer(lastGeometry.value);\n    lastGeometry.value = null;\n  }\n}\n\nfunction handleDrawCreated(e) {\n  const layer = e.layer;\n  \n  setupClickHandler(layer);\n  drawnItemsLayer.value.addLayer(layer);\n  currentGeometry.value = layer;\n  \n  const highlightedLayer = createHighlightedLayer(layer);\n  if (highlightedLayer) {\n    if (lastGeometry.value) {\n      props.mapInstance.removeLayer(lastGeometry.value);\n    }\n    \n    lastGeometry.value = highlightedLayer;\n    setupClickHandler(highlightedLayer, layer);\n    drawnItemsLayer.value.addLayer(highlightedLayer);\n  }\n\n  const itemDetails = {\n    type: e.layerType,\n    coordinates: getLayerCoordinates(layer)\n  };\n  drawnItems.value.push(itemDetails);\n}\n\nfunction createHighlightedLayer(layer: L.Layer): L.Layer | null {\n  const highlightStyles = {\n    color: '#00ff00',\n    weight: 3,\n    opacity: 1,\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  };\n\n  if (layer instanceof L.Marker) {\n    return L.marker(layer.getLatLng(), {\n      icon: L.divIcon({\n        className: 'last-geometry-marker',\n        html: '<div style=\"background-color:#00ff00;width:20px;height:20px;border-radius:50%;border:2px solid #00ff00;\"></div>',\n        iconSize: [20, 20]\n      })\n    });\n  } else if (layer instanceof L.Polygon || layer instanceof L.Rectangle) {\n    const coords = layer.getLatLngs();\n    return L.polygon(coords, { ...highlightStyles, smoothFactor: 1, noClip: true });\n  } else if (layer instanceof L.Polyline) {\n    return L.polyline(layer.getLatLngs(), highlightStyles);\n  } else if (layer instanceof L.Circle) {\n    return L.circle(layer.getLatLng(), {\n      ...highlightStyles,\n      radius: layer.getRadius()\n    });\n  }\n  return null;\n}\n\nfunction handleDrawDeleted(e) {\n  const layers = e.layers;\n  \n  layers.eachLayer((layer) => {\n    const index = drawnItems.value.findIndex(item => \n      JSON.stringify(getLayerCoordinates(layer)) === JSON.stringify(item.coordinates)\n    );\n    if (index !== -1) {\n      drawnItems.value.splice(index, 1);\n    }\n    \n    if (currentGeometry.value === layer) {\n      currentGeometry.value = null;\n      if (lastGeometry.value) {\n        drawnItemsLayer.value.removeLayer(lastGeometry.value);\n        lastGeometry.value = null;\n      }\n    }\n  });\n}\n\nfunction getLayerCoordinates(layer: L.Layer | any) {\n  try {\n    if (layer instanceof L.Marker) {\n      return layer.getLatLng();\n    } else if (layer instanceof L.Polyline) {\n      return layer.getLatLngs();\n    } else if (layer instanceof L.Rectangle || layer instanceof L.Polygon) {\n      return layer.getBounds();\n    } else if (layer instanceof L.Circle) {\n      return {\n        center: layer.getLatLng(),\n        radius: layer.getRadius()\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error('Error getting layer coordinates:', error);\n    return null;\n  }\n}\n\ndefineExpose({\n  isDrawingModeActive,\n  samplePointCount\n});\n  </script>\n  \n  <style scoped>\n.drawing-controls {\n  position: absolute;\n  bottom: 130px;\n  left: 0px;\n  z-index: 1000;\n  display: flex;\n  gap: 0.5rem;\n  height: 48px;\n}\n\n.button-container {\n  height: 48px;\n  flex-shrink: 0;\n  margin-top: 12px;\n  margin-left: 10px;\n}\n\n.toggle-drawing-btn {\n  background: #48506a;\n  padding: 0;\n  cursor: pointer;\n  border: 1px solid #ccc;\n  border-radius: 12px;\n  height: 48px;\n  width: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.toggle-drawing-btn:hover {\n  background: #697fc7;\n}\n\n.toggle-drawing-btn[data-drawing-active=\"true\"] {\n  background: #697fc7;\n}\n\n.drawing-icon {\n  width: 48px;\n  height: 48px;\n  padding: 4px;\n}\n\n.sample-points-control {\n  align-self: center;\n}\n\n.dropdown-wrapper {\n  background: #48506a;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  width: 155px; /* Adjust width as needed */\n}\n\n.dropdown-label {\n  color: white;\n  font-size: 0.9rem;\n  padding: 0.5rem;\n  background: #2e3547;\n  border-bottom: 1px solid #ccc;\n  text-align: center;\n}\n\n.dropdown {\n  background-color: #48506a;\n  color: white;\n  border: none;\n  padding: 0.5rem;\n  cursor: pointer;\n  width: 100%;\n  text-align: center;\n}\n\n.dropdown:hover {\n  background-color: #697fc7;\n}\n\n.custom-draw-toolbar {\n  margin-top: 50px;\n  left: 200px;\n}\n\n.leaflet-draw-toolbar {\n  background-color: #48506a !important;\n}\n\n.leaflet-top.leaflet-draw-toolbar {\n  left: 200px !important;\n}\n</style>","import script from \"./DrawingLayer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DrawingLayer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./DrawingLayer.vue?vue&type=style&index=0&id=add0aa80&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-add0aa80\"]])\n\nexport default __exports__","<template>\n  <div class=\"timeline-slider\">\n    <div class=\"timeline\" ref=\"timeline\" @mousemove=\"updateHoverPosition\" @mouseleave=\"hideHoverEffect\">\n      <div class=\"hover-effect\" :style=\"hoverEffectStyle\">\n        <div class=\"hover-line\"></div>\n      </div>\n      <div class=\"slider left\" :style=\"{ left: leftPosition + '%' }\" @mousedown=\"startDrag('left', $event)\" @mouseover=\"showTooltip('left')\" @mouseout=\"hideTooltip('left')\">\n        <div v-if=\"showLeftTooltip\" class=\"slider-tooltip\">{{ formatDate(currentStartDate) }}</div>\n      </div>\n      <div class=\"slider right\" :style=\"{ left: rightPosition + '%' }\" @mousedown=\"startDrag('right', $event)\" @mouseover=\"showTooltip('right')\" @mouseout=\"hideTooltip('right')\">\n        <div v-if=\"showRightTooltip\" class=\"slider-tooltip\">{{ formatDate(currentEndDate) }}</div>\n      </div>\n      <div class=\"selected-range\" :style=\"{ left: leftPosition + '%', width: (rightPosition - leftPosition) + '%' }\"></div>\n      <div v-for=\"(marker, index) in timelineMarkers\" :key=\"index\" class=\"timeline-marker\" :style=\"{ left: marker.position + '%' }\">{{ marker.label }}</div>\n      <div v-for=\"(event, index) in visibleEvents\" :key=\"'event-' + index\" class=\"event-bar\" :style=\"getEventBarStyle(event)\" @mouseover=\"showEventTooltip(event, $event)\" @mouseout=\"hideEventTooltip\" @mouseenter=\"emitEventHover(event)\"></div>\n      <div v-for=\"(line, index) in interEventLines\" :key=\"'line-' + index\" class=\"inter-event-line\" :style=\"getInterEventLineStyle(line)\" @mousemove=\"handleLineHover(line, $event)\"></div>\n    </div>\n    <div v-if=\"isEventTooltipVisible\" class=\"event-tooltip\" :style=\"eventTooltipStyle\">{{ eventTooltipContent }}</div>\n    <div class=\"date-range-display\">Selected Range: {{ formatDate(currentStartDate) }} - {{ formatDate(currentEndDate) }}</div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue';\n\nconst props = defineProps({\n  events: { type: Array, default: () => [] },\n  startDate: Date,\n  endDate: Date,\n});\n\nconst emit = defineEmits(['update:startDate', 'update:endDate', 'eventHover', 'eventLeave', 'interEventHover']);\n\nconst timeline = ref(null);\nconst leftPosition = ref(10);\nconst rightPosition = ref(90);\nconst hoverPosition = ref(null);\nconst currentStartDate = ref(new Date());\nconst currentEndDate = ref(new Date());\nconst minDate = ref(new Date('2000-01-01'));\nconst maxDate = ref(new Date(new Date().setMonth(new Date().getMonth() + 6)));\nconst visibleRangeStart = ref(new Date());\nconst visibleRangeEnd = ref(new Date());\nconst showLeftTooltip = ref(false);\nconst showRightTooltip = ref(false);\nconst eventTooltipContent = ref('');\nconst eventTooltipStyle = ref({});\n\nconst initializeDates = () => {\n  const now = new Date();\n  const oneYearAgo = new Date(now.getFullYear() - 1, now.getMonth(), now.getDate());\n  visibleRangeEnd.value = new Date(now.getFullYear(), now.getMonth() + 2, now.getDate());\n  visibleRangeStart.value = new Date(oneYearAgo.getFullYear(), oneYearAgo.getMonth() - 2, oneYearAgo.getDate());\n\n  // Set initial slider positions\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n\n  // Calculate initial dates based on slider positions\n  updateDates('left', true);\n  updateDates('right', true);\n};\n\nwatch(() => props.startDate, (startDate) => {\n  currentStartDate.value = startDate;\n  adjustVisibleRange();\n  emit('update:startDate', currentStartDate.value);\n});\n\nwatch(() => props.endDate, (endDate) => {\n  currentEndDate.value = endDate;\n  adjustVisibleRange();\n  emit('update:endDate', currentEndDate.value);\n});\n\nconst updateHoverPosition = (event) => {\n  const timelineRect = timeline.value.getBoundingClientRect();\n  hoverPosition.value = ((event.clientX - timelineRect.left) / timelineRect.width) * 100;\n  \n  // Find any event at this hover position\n  const hoveredEvent = visibleEvents.value.find(event => {\n    return hoverPosition.value >= event.startPosition && hoverPosition.value <= event.endPosition;\n  });\n  \n  if (hoveredEvent) {\n    // Use the existing emitEventHover function\n    emitEventHover(hoveredEvent);\n    showEventTooltip(hoveredEvent, event);\n  } else {\n    hideEventTooltip();\n  }\n  \n  // Find any inter-event line at this hover position\n  const hoveredLine = interEventLines.value.find(line => {\n    return hoverPosition.value >= line.start && hoverPosition.value <= line.end;\n  });\n  \n  if (hoveredLine) {\n    handleLineHover(hoveredLine, event);\n  }\n};\n\nconst hideHoverEffect = () => {\n  hoverPosition.value = null;\n  hideEventTooltip();\n};\n\nconst hoverEffectStyle = computed(() => {\n  if (hoverPosition.value === null) {\n    return { display: 'none' };\n  }\n  \n  // Check if hover position overlaps with any event or inter-event line\n  const hoveredEvent = visibleEvents.value.find(event => {\n    return hoverPosition.value >= event.startPosition && hoverPosition.value <= event.endPosition;\n  });\n  \n  const hoveredLine = interEventLines.value.find(line => {\n    return hoverPosition.value >= line.start && hoverPosition.value <= line.end;\n  });\n  \n  return {\n    left: `${hoverPosition.value}%`,\n    display: 'block',\n    backgroundColor: (hoveredEvent || hoveredLine) ? 'rgba(255, 255, 255, 0.5)' : 'rgba(255, 255, 255, 0.2)'\n  };\n});\n\nconst visibleEvents = computed(() => {\n  const { start, end, timeRange } = extendedVisibleRangeForEvents.value;\n  return props.events.map(event => {\n    const startDate = new Date(event.start);\n    const endDate = new Date(event.end);\n    const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n    let startPosition = ((startDate.getTime() - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    let endPosition = ((endDate.getTime() - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    startPosition = Math.max(0, Math.min(startPosition, 100));\n    endPosition = Math.max(0, Math.min(endPosition, 100));\n    return { ...event, startPosition, endPosition };\n  }).filter(event => {\n    const eventStart = new Date(event.start);\n    const eventEnd = new Date(event.end);\n    return eventStart <= end && eventEnd >= start;\n  });\n});\n\nconst emitEventHover = (event) => {\n  emit('eventHover', event);\n};\n\nconst timelineMarkers = computed(() => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  const leftSliderTime = currentStartDate.value.getTime();\n  const rightSliderTime = currentEndDate.value.getTime();\n  const selectedTimeRange = rightSliderTime - leftSliderTime;\n  const dayInMs = 24 * 60 * 60 * 1000;\n  const monthInMs = 30 * dayInMs;\n  const yearInMs = 365 * dayInMs;\n\n  let interval, format;\n  if (selectedTimeRange <= 30 * dayInMs) {\n    interval = dayInMs;\n    format = 'day';\n  } else if (selectedTimeRange <= 1.5 * yearInMs) {\n    interval = monthInMs;\n    format = 'month';\n  } else {\n    interval = yearInMs;\n    format = 'year';\n  }\n\n  const markers = [];\n  // Subtract 10 days from the visible range start\n  let current = new Date(visibleRangeStart.value.getTime() - 10 * dayInMs);\n\n  while (current.getTime() <= visibleRangeEnd.value.getTime()) {\n    const currentTime = current.getTime();\n    const position = ((currentTime - visibleRangeStart.value.getTime()) / visibleTimeRange) * 100;\n    const closeToSlider = Math.abs(position - leftPosition.value) < 5 || Math.abs(position - rightPosition.value) < 5;\n    if (position >= 0 && position <= 100) {\n      let label;\n      switch (format) {\n        case 'day':\n          label = current.getDate().toString();\n          break;\n        case 'month':\n          label = current.toLocaleString('default', { month: 'short' });\n          if (current.getMonth() === 0) {\n            label = `${label}\\n${current.getFullYear()}`;\n          }\n          break;\n        case 'year':\n          label = current.getFullYear().toString();\n          break;\n      }\n      markers.push({ position, label, isFixed: false });\n    }\n    current = new Date(current.getTime() + interval);\n  }\n\n  //markers.push({ position: leftPosition.value, label: formatDate(currentStartDate.value), isFixed: true });\n  //markers.push({ position: rightPosition.value, label: formatDate(currentEndDate.value), isFixed: true });\n\n  return markers.sort((a, b) => a.position - b.position);\n});\n\nconst formatDate = (date) => {\n  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\n};\n\nconst getEventBarStyle = (event) => {\n  return { left: `${event.startPosition}%`, width: `${event.endPosition - event.startPosition}%`, backgroundColor: '#007bff' };\n};\n\nconst isEventTooltipVisible = ref(false);\nconst showEventTooltip = (event, e) => {\n  const startDate = new Date(event.start);\n  const endDate = new Date(event.end);\n  eventTooltipContent.value = `${formatDate(startDate)} - ${formatDate(endDate)}`;\n  \n  if (e) {\n    eventTooltipStyle.value = {\n      left: `${e.clientX}px`,\n      top: `${e.clientY - 30}px`\n    };\n  }\n  \n  isEventTooltipVisible.value = true;\n};\n\nconst hideEventTooltip = () => {\n  isEventTooltipVisible.value = false;\n};\n\nconst interEventLines = computed(() => {\n  const lines = [];\n  const sortedEvents = [...visibleEvents.value].sort((a, b) => new Date(a.start) - new Date(b.start));\n  for (let i = 0; i < sortedEvents.length - 1; i++) {\n    const currentEvent = sortedEvents[i];\n    const nextEvent = sortedEvents[i + 1];\n    if (new Date(nextEvent.start) > new Date(currentEvent.end)) {\n      lines.push({ start: currentEvent.endPosition, end: nextEvent.startPosition, startEvent: currentEvent, endEvent: nextEvent });\n    }\n  }\n  return lines;\n});\n\nconst getInterEventLineStyle = (line) => {\n  const start = Math.min(line.start, line.end);\n  const end = Math.max(line.start, line.end);\n  return { left: `${start}%`, width: `${end - start}%`, backgroundColor: '#48506a', height: '8px', top: 'calc(50% - 4px)' };\n};\n\nconst handleLineHover = (line, event) => {\n  try {\n    const timelineRect = timeline.value.getBoundingClientRect();\n    \n    // Calculate position along the line\n    const lineStart = line.start;\n    const lineEnd = line.end;\n    const lineWidth = lineEnd - lineStart;\n    const position = (hoverPosition.value - lineStart) / lineWidth;\n    const normalizedPosition = Math.max(0, Math.min(1, position));\n    \n    const startTime = new Date(line.startEvent.end).getTime();\n    const endTime = new Date(line.endEvent.start).getTime();\n    const interpolatedTime = startTime + (endTime - startTime) * normalizedPosition;\n    \n    const startLat = line.startEvent.position?.lat ?? 0;\n    const endLat = line.endEvent.position?.lat ?? 0;\n    const interpolatedLat = startLat + (endLat - startLat) * normalizedPosition;\n    \n    const startLon = line.startEvent.position?.lon ?? 0;\n    const endLon = line.endEvent.position?.lon ?? 0;\n    const interpolatedLon = startLon + (endLon - startLon) * normalizedPosition;\n    \n    emit('interEventHover', {\n      time: new Date(interpolatedTime),\n      position: {\n        lat: interpolatedLat,\n        lon: interpolatedLon\n      },\n      startEvent: line.startEvent,\n      endEvent: line.endEvent\n    });\n  } catch (error) {\n    console.error('Error in handleLineHover:', error);\n  }\n};\nconst startDrag = (slider, event) => {\n  event.preventDefault();\n  const initialX = event.clientX;\n  const initialLeft = leftPosition.value;\n  const initialRight = rightPosition.value;\n  const timelineRect = timeline.value.getBoundingClientRect();\n\n  const move = (e) => {\n    const deltaX = e.clientX - initialX;\n    const deltaPct = (deltaX / timelineRect.width) * 100;\n    if (slider === 'left') {\n      if (leftPosition.value <= 10) {\n        extendVisibleRange('left', deltaX);\n      }\n      leftPosition.value = Math.max(0, Math.min(initialLeft + deltaPct, rightPosition.value - 1));\n    } else {\n      if (rightPosition.value >= 90) {\n        extendVisibleRange('right', deltaX);\n      }\n      rightPosition.value = Math.max(leftPosition.value + 1, Math.min(initialRight + deltaPct, 100));\n    }\n  };\n\n  const stop = () => {\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', stop);\n    updateDates(slider, true);\n    adjustVisibleRange();\n    resetSliderPositions();\n  };\n\n  window.addEventListener('mousemove', move);\n  window.addEventListener('mouseup', stop);\n};\n\nconst extendedVisibleRangeForEvents = computed(() => {\n  const start = new Date(visibleRangeStart.value);\n  const end = new Date(visibleRangeEnd.value);\n  start.setMonth(start.getMonth() - 4);\n  end.setMonth(end.getMonth() + 4);\n  return { start, end, timeRange: end.getTime() - start.getTime() };\n});\n\nconst extendVisibleRange = (direction, distanceDragged) => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  const expansionFactor = 0.0001;\n  if (direction === 'left') {\n    const newVisibleStart = new Date(visibleRangeStart.value.getTime() - visibleTimeRange * Math.abs(distanceDragged) * expansionFactor);\n    visibleRangeStart.value = new Date(Math.max(newVisibleStart, minDate.value));\n    leftPosition.value = 10;\n    const leftTime = visibleRangeStart.value.getTime() + (leftPosition.value / 100) * visibleTimeRange;\n    currentStartDate.value = new Date(Math.max(leftTime, minDate.value.getTime()));\n  } else {\n    const newVisibleEnd = new Date(visibleRangeEnd.value.getTime() + visibleTimeRange * Math.abs(distanceDragged) * expansionFactor);\n    visibleRangeEnd.value = new Date(Math.min(newVisibleEnd, maxDate.value));\n    rightPosition.value = 90;\n    const rightTime = visibleRangeEnd.value.getTime() + (rightPosition.value / 100) * visibleTimeRange;\n    currentEndDate.value = new Date(Math.min(rightTime, maxDate.value.getTime()));\n  }\n  updateDates(direction, false);\n};\n\nconst updateDates = (slider, emitValue) => {\n  const visibleTimeRange = visibleRangeEnd.value.getTime() - visibleRangeStart.value.getTime();\n  if (slider === 'left') {\n    const leftTime = visibleRangeStart.value.getTime() + (leftPosition.value / 100) * visibleTimeRange *0.835;\n    currentStartDate.value = new Date(Math.max(leftTime, minDate.value.getTime()));\n    if (emitValue) emit('update:startDate', currentStartDate.value);\n  } else {\n    const rightTime = visibleRangeStart.value.getTime() + (rightPosition.value / 100) * visibleTimeRange * 1.019;\n    currentEndDate.value = new Date(Math.min(rightTime, maxDate.value.getTime()));\n    if (emitValue) emit('update:endDate', currentEndDate.value);\n  }\n};\n\nconst adjustVisibleRange = () => {\n  const newVisibleStart = new Date(currentStartDate.value);\n  const newVisibleEnd = new Date(currentEndDate.value);\n  const visibleTimeRange = newVisibleEnd.getTime() - newVisibleStart.getTime();\n  newVisibleStart.setTime(newVisibleStart.getTime() - visibleTimeRange * 0.1);\n  newVisibleEnd.setTime(newVisibleEnd.getTime() + visibleTimeRange * 0.1);\n  visibleRangeStart.value = new Date(Math.max(newVisibleStart, minDate.value));\n  visibleRangeEnd.value = new Date(Math.min(newVisibleEnd, maxDate.value));\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n};\n\nconst resetSliderPositions = () => {\n  leftPosition.value = 10;\n  rightPosition.value = 90;\n};\n\nconst showTooltip = (slider) => {\n  if (slider === 'left') {\n    showLeftTooltip.value = true;\n  } else {\n    showRightTooltip.value = true;\n  }\n};\n\nconst hideTooltip = (slider) => {\n  if (slider === 'left') {\n    showLeftTooltip.value = false;\n  } else {\n    showRightTooltip.value = false;\n  }\n};\n\nconst initializePositions = () => {\n  leftPosition.value = 0;\n  rightPosition.value = 100;\n};\n\nonMounted(() => {\n  initializeDates();\n  initializePositions();\n  adjustVisibleRange();\n});\n\nwatch(() => props.dataPoints, () => {\n  initializeDates();\n}, { deep: true });\n</script>\n\n<style scoped>\n.timeline-slider {\n  width: 100%;\n  padding: 20px;\n  user-select: none;\n  touch-action: none;\n}\n\n.timeline {\n  position: relative;\n  height: 30px;\n  width: 100%;\n  background-color: #ddd;\n  margin-bottom: 20px;\n  border-radius: 20px;\n}\n\n.inter-event-line {\n  position: absolute;\n  height: 8px;\n  background-color: red;\n  top: calc(50% - 4px);\n  z-index: 10;\n}\n\n.event-bar {\n  position: absolute;\n  height: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: #007bff;\n  opacity: 0.7;\n  border-radius: 10px;\n  z-index: 2;\n}\n\n.slider {\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  background-color: #48506a;\n  border: 3px solid #007bff;\n  border-radius: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.selected-range {\n  position: absolute;\n  height: 100%;\n  background-color: #007bff;\n  opacity: 0.5;\n  border-radius: 20px;\n  z-index: 1;\n}\n\n.timeline-marker {\n  position: absolute;\n  top: 100%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  color: #ffff;\n  text-align: center;\n  white-space: pre-line;\n}\n\n.timeline-marker::before {\n  content: '';\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 2px;\n  height: 20px;\n  background-color: #48506a;\n}\n\n.slider-tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 10px;\n}\n\n.debug-info {\n  position: absolute;\n  bottom: -30px;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px;\n  font-size: 12px;\n  z-index: 1002;\n}\n\n.tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 10px;\n}\n\n.event-tooltip {\n  position: fixed;\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1000;\n  pointer-events: none;\n}\n\n.hover-effect {\n  position: absolute;\n  top: 0;\n  width: 20px;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  transform: translateX(-50%);\n  pointer-events: none;\n  z-index: 10;\n}\n\n.hover-line {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 1px;\n  height: 100%;\n  background-color: white;\n  transform: translateX(-50%);\n}\n\n.date-range-display {\n  text-align: center;\n  margin-top: 35px;\n  font-size: 14px;\n  color: #fff;\n}\n</style>\n\n<style scoped>\n.timeline-slider {\n  width: 100%;\n  padding: 20px;\n  user-select: none;\n  touch-action: none;\n}\n\n.timeline {\n  position: relative;\n  height: 30px;\n  width: 100%;\n  background-color: #ddd;\n  margin-bottom: 20px;\n  border-radius: 20px;\n}\n\n.inter-event-line {\n  position: absolute;\n  height: 8px;\n  background-color: red;\n  top: calc(50% - 4px);\n  z-index: 10;\n}\n\n.event-bar {\n  position: absolute;\n  height: 20px;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: #007bff;\n  opacity: 0.7;\n  border-radius: 10px;\n  z-index: 2;\n}\n\n.slider {\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  background-color: #48506a;\n  border: 3px solid #007bff;\n  border-radius: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.selected-range {\n  position: absolute;\n  height: 100%;\n  background-color: #007bff;\n  opacity: 0.5;\n  border-radius: 20px;\n  z-index: 1;\n}\n\n.timeline-marker {\n  position: absolute;\n  top: 100%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  color: #ffff;\n  text-align: center;\n  white-space: pre-line;\n}\n\n.timeline-marker::before {\n  content: '';\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 2px;\n  height: 20px;\n  background-color: #48506a;\n}\n\n.slider-tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 10px;\n}\n\n.debug-info {\n  position: absolute;\n  bottom: -30px;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px;\n  font-size: 12px;\n  z-index: 1002;\n}\n\n.tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1001;\n  pointer-events: none;\n  margin-bottom: 10px;\n}\n\n.event-tooltip {\n  position: fixed;\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 1000;\n  pointer-events: none;\n}\n\n.hover-effect {\n  position: absolute;\n  top: 0;\n  width: 20px;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  transform: translateX(-50%);\n  pointer-events: none;\n  z-index: 10;\n}\n\n.hover-line {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 1px;\n  height: 100%;\n  background-color: white;\n  transform: translateX(-50%);\n}\n\n.date-range-display {\n  text-align: center;\n  margin-top: 35px;\n  font-size: 14px;\n  color: #fff;\n}\n</style>","import script from \"./TimelineSlider.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimelineSlider.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TimelineSlider.vue?vue&type=style&index=0&id=0763002f&scoped=true&lang=css\"\nimport \"./TimelineSlider.vue?vue&type=style&index=1&id=0763002f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0763002f\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, createBlock as _createBlock, withModifiers as _withModifiers, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e3bbcfc\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"tracking-controls\" }\nconst _hoisted_2 = { class: \"date-picker-container\" }\n\nimport { ref, watch, computed, nextTick, PropType, onMounted, onUnmounted } from 'vue';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport TimelineSlider from './TimelineSlider.vue';\nimport vesselIds from \"@/assets/vesselIds.json\";\nimport translations from \"@/assets/translations/translations.json\";\nimport { useDataCablesStore } from '@/store/datacables';\n\nconst interpolationInterval = 3600000;\n\nconst format = 'dd/MM/yyyy';\n\nconst vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'VesselTracking',\n  props: {\n  mapInstance: { type: Object as PropType<L.Map>, required: true },\n  currentLanguage: { type: String, required: true },\n  cableStore: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  layerGroup: { type: Object, required: true },\n  mapReady: { type: Boolean, required: true },\n  vesselPositions: { type: Array as PropType<any[]>, default: () => [] },\n},\n  emits: [\n  'update:vesselPositions',\n  'update:hoveredMarker',\n  'update:viewingVesselTrack'\n],\n  setup(__props, { expose: __expose, emit: __emit }) {\n\nconst cableStore = useDataCablesStore();\n\nconst props = __props;\n\nconst emit = __emit;\n\nconst isSearchSelected = ref(false);\nconst timelineContainerStyle = computed(() => {\n  if (!props.mapInstance) return {};\n  \n  const mapBounds = props.mapInstance.getContainer().getBoundingClientRect();\n  return {\n    width: `${mapBounds.width}px`,\n    left: isSearchSelected.value ? `${mapBounds.left}px` : '0'\n  };\n});\n\nconst localVesselPositions = ref(props.vesselPositions ? [...props.vesselPositions] : []);\nconst vesselLayerReady = ref(false);\nconst vesselPostResponse = ref(null);\nconst vesselModifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{y}/{x}.png');\nconst isVesselTrackingMode = ref(false);\nconst vesselTrackingSelected = ref(false);\nconst vesselEvents = ref([]);\nconst hoveredMarker = ref();\nconst currentTrackedVessel = ref(null);\nconst vesselTrackLayer = ref(null);\n\nconst interpolatedEvents = ref([]);\nconst currentTranslations = computed(() => translations[props.currentLanguage]);\n\nwatch(() => props.vesselPositions, (newPositions) => {\n  if (newPositions) {\n    localVesselPositions.value = [...newPositions];\n  }\n}, { deep: true });\n\nwatch(() => props.mapReady, (newValue) => {\n  vesselTracking();\n})\n\nconst isValidCoordinate = (lat, lon) => {\n  return lat !== undefined && lon !== undefined && \n         !isNaN(lat) && !isNaN(lon) &&\n         lat >= -90 && lat <= 90 && lon >= -180 && lon <= 180;\n};\n\nconst dateRange = ref<[Date, Date]>([\n  new Date(new Date().setMonth(new Date().getMonth() - 1)), \n  new Date()\n]);\n\nconst onDatePickerChange = (selectedDates: [Date, Date]) => {\n  if (selectedDates && selectedDates.length === 2) {\n    startDate.value = selectedDates[0];\n    endDate.value = selectedDates[1];\n  }\n};\nwatch([startDate, endDate], () => {\n  dateRange.value = [startDate.value, endDate.value];\n});\n\nconst interpolatePosition = (start, end, fraction) => {\n  if (!start?.lat || !start?.lon || !end?.lat || !end?.lon) {\n    console.warn(\"Invalid start or end positions for interpolation\", { start, end });\n    return null;\n  }\n  \n  const lat = start.lat + (end.lat - start.lat) * fraction;\n  const lon = start.lon + (end.lon - start.lon) * fraction;\n  \n  if (!isValidCoordinate(lat, lon)) {\n    console.warn(\"Interpolation resulted in invalid coordinates\", { lat, lon, start, end, fraction });\n    return null;\n  }\n  \n  return { lat, lon };\n};\n\nconst generateInterpolatedEvents = (events) => {\n  if (!events || events.length < 2) return events;\n  \n  const allEvents = [];\n  const visibleTimeRange = {\n    start: startDate.value.getTime(),\n    end: endDate.value.getTime()\n  };\n\n  // Helper function to check if a time falls within the visible range\n  const isTimeInRange = (time) => {\n    const timestamp = new Date(time).getTime();\n    return timestamp >= visibleTimeRange.start && timestamp <= visibleTimeRange.end;\n  };\n\n  // Helper function to get the visible portion of an interpolation range\n  const getVisibleInterpolationRange = (startTime, endTime) => {\n    return {\n      start: Math.max(startTime, visibleTimeRange.start),\n      end: Math.min(endTime, visibleTimeRange.end)\n    };\n  };\n\n  for (let i = 0; i < events.length - 1; i++) {\n    const startEvent = events[i];\n    const endEvent = events[i + 1];\n    const startTime = new Date(startEvent.end).getTime();\n    const endTime = new Date(endEvent.start).getTime();\n\n    // Add the start event if it's in range\n    if (isTimeInRange(startEvent.start) || isTimeInRange(startEvent.end)) {\n      allEvents.push(startEvent);\n    }\n\n    // Handle interpolation between events\n    const duration = endTime - startTime;\n    if (duration > interpolationInterval &&\n        (isTimeInRange(startTime) || isTimeInRange(endTime) || \n         (startTime < visibleTimeRange.end && endTime > visibleTimeRange.start))) {\n      \n      const visibleRange = getVisibleInterpolationRange(startTime, endTime);\n      const visibleDuration = visibleRange.end - visibleRange.start;\n\n      if (visibleDuration > 0) {\n        // Calculate number of interpolation steps based on the visible duration\n        const steps = Math.floor(visibleDuration / interpolationInterval);\n\n        for (let step = 0; step <= steps; step++) {\n          const currentTime = visibleRange.start + step * interpolationInterval;\n          const fraction = (currentTime - startTime) / duration;\n          \n          if (currentTime <= visibleRange.end) {\n            // Inside the generateInterpolatedEvents function where interpolation happens:\nconst interpolatedPos = interpolatePosition(startEvent.position, endEvent.position, fraction);\nif (interpolatedPos) {\n  allEvents.push({\n    isInterpolated: true,\n    time: new Date(currentTime).toISOString(),\n    position: interpolatedPos,\n    startEvent: startEvent,\n    endEvent: endEvent\n  });\n}\n          }\n        }\n      }\n    }\n  }\n\n  // Add the last event if it's in range\n  if (events.length > 0 && isTimeInRange(events[events.length - 1].start)) {\n    allEvents.push(events[events.length - 1]);\n  }\n\n  return allEvents.sort((a, b) => {\n    const timeA = a.isInterpolated ? new Date(a.time).getTime() : new Date(a.start).getTime();\n    const timeB = b.isInterpolated ? new Date(b.time).getTime() : new Date(b.start).getTime();\n    return timeA - timeB;\n  });};\n\nconst onEventHover = (event) => onMarkerHover(event, false);\nconst onInterEventHover = (data) => onMarkerHover(data, true);\n\n//function handles hovers on events or interEvents, and passes correct Marker to parent component\n// In VesselTracking.vue\nconst onMarkerHover = (eventData, isInterpolated = false) => {\n  if (!eventData?.position) return;\n\n  const lat = eventData.position.lat;\n  const lon = eventData.position.lon;\n  \n  if (!isValidCoordinate(lat, lon)) {\n    console.warn(\"Invalid coordinates in event data\", eventData);\n    return;\n  }\n\n  if (!hoveredMarker.value) {\n    const markerData = {\n      id: eventData.mmsi || 'Unknown',\n      position: [lat, lon],\n      flag: isInterpolated ? eventData.startEvent.flag || 'Unknown' : eventData.flag || 'Unknown',\n      tooltip: L.tooltip({\n        permanent: false,\n        direction: 'top',\n        className: 'custom-tooltip',\n        offset: [0, -10],\n        html: true\n      }).setContent(\n        isInterpolated\n          ? `${eventData.startEvent.name || 'Unknown Vessel'}<br>Interpolated Time: ${formatDate(eventData.time)}<br>Between events:<br>Start: ${formatDate(eventData.startEvent.end)}<br>End: ${formatDate(eventData.endEvent.start)}`\n          : `${eventData.name || 'Unknown Vessel'}<br>Event: ${eventData.type}<br>Start: ${formatDate(eventData.start)}<br>End: ${formatDate(eventData.end)}`\n      )\n    };\n    \n    // Check if vesselPositions has at least one element\n    const vesselData = props.vesselPositions.length > 0 \n      ? props.vesselPositions[0]\n      : {\n          id: eventData.mmsi || 'Unknown',\n          name: eventData.name || 'Unknown Vessel',\n          position: {\n            lat: eventData.position.lat,\n            lon: eventData.position.lon\n          },\n          lastSeen: eventData.end || new Date().toISOString(),\n          eventType: eventData.type || 'Unknown'\n        };\n    \n    const marker = L.marker(markerData.position, {\n      icon: createShipIcon('#636363', markerData.flag, vesselData),\n    }).bindTooltip(markerData.tooltip).on('click', () => {\n      marker.openTooltip();\n    });\n    \n    hoveredMarker.value = marker;\n  } else {\n    hoveredMarker.value.setLatLng([lat, lon]);\n  }\n  \n  emit('update:hoveredMarker', hoveredMarker.value);\n};\n\nconst startDate = ref(new Date(new Date().setMonth(new Date().getMonth() - 1)));\nconst endDate = ref(new Date());\n\nconst createShipIcon = (baseColor = '#ff7800', countryCode = 'Unknown', vessel) => {\n  const flagEmoji = countryCode !== 'Unknown' ? getFlagEmoji(countryCode) : '🏴‍☠️';\n  \n  const lastDateSeen = new Date(vessel.lastSeen);\n  const currentDate = new Date();\n  const daysSinceLastSeen = (currentDate - lastDateSeen) / (1000 * 60 * 60 * 24);\n  const getColorComponent = (start, end, fraction) => {\n    return Math.round(start + fraction * (end - start));\n  };\n\n  const calculateColor = (daysSinceLastSeen) => {\n    // Use a non-linear function to make color change faster initially\n    const fraction = Math.min(Math.pow(daysSinceLastSeen / 60, 1.5), 1);\n    const startColor = hexToRgb(baseColor);\n    const endColor = hexToRgb('#8B4513'); // Brown\n\n    const r = getColorComponent(startColor.r, endColor.r, fraction);\n    const g = getColorComponent(startColor.g, endColor.g, fraction);\n    const b = getColorComponent(startColor.b, endColor.b, fraction);\n\n    return rgbToHex(r, g, b);\n  };\n\n  const color = calculateColor(daysSinceLastSeen);\n\n  const icon = L.divIcon({\n    html: `\n      <div class=\"ship-icon-container\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n          <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\" fill=\"${color}\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n        <span class=\"ship-flag\">${flagEmoji}</span>\n      </div>\n    `,\n    className: 'ship-icon',\n    iconSize: [24, 24],\n    iconAnchor: [12, 12],\n  });\n  return icon;\n};\n\n// Helper function to convert hex to RGB\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n// Helper function to convert RGB to hex\nfunction rgbToHex(r, g, b) {\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n}\n\n// Function to convert country code to flag emoji\nconst getFlagEmoji = (countryCode) => {\n  // Handle specific cases for country codes\n  if (countryCode === 'KOR') { // South Korea\n    countryCode = 'KR';\n  } else if (countryCode === 'SWE') { // Sweden\n    countryCode = 'SE';\n  } else if (countryCode === 'ARE') { // United Arab Emirates\n    countryCode = 'AE';\n  } else if (countryCode === 'ATG') { // Antigua and Barbuda\n    countryCode = 'AG';\n  } else if (countryCode === 'BRB') { // Barbados\n    countryCode = 'BB';\n  }\n\n  const codePoints = countryCode\n    .toUpperCase()\n    .slice(0, 2)\n    .split('')\n    .map(char => 127397 + char.charCodeAt());\n\n  return String.fromCodePoint(...codePoints);\n};\n\nfunction vesselIdsToArray(vessels){\n  let vesselIds = [];\n  for (let key in vessels) {\n    vesselIds.push(vessels[key].vesselId);\n  }\n  return vesselIds;\n}\n\nconst vesselTrackingParams = {\n  limit: 1,\n  offset: 0,\n  sort: '-start',\n};\n\n//API Call to find all latest positions of Cable Vessels\nasync function vesselTracking() {\n  try {\n    \n    const vesselIdsArray = vesselIdsToArray(vesselIds);\n    const allVesselPositions = [];\n    props.layerGroup.clearLayers();\n\n/*     const vesselTest = ['52ba19e87-7314-096f-8d50-0793badbc25a'];\n\n    const testParams = {\n      ...vesselTrackingParams,\n      vessels: vesselTest, \n      'datasets[0]': 'public-global-port-visits-c2-events:latest',\n    }\n    const testResponse = await axios.get(vesselTrackingUrl, { params: testParams });\n    console.log(\"TESTRESPONSE: \", testResponse); */\n\n    for (const vesselId of vesselIdsArray) {\n      const loiteringParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-loitering-events:latest',\n      };\n\n      const portVisitParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-port-visits-c2-events:latest',\n      };\n\n      const [loiteringResponse, portVisitResponse] = await Promise.all([\n        axios.get(vesselTrackingUrl, { params: loiteringParams }),\n        axios.get(vesselTrackingUrl, { params: portVisitParams })\n      ]);\n      let latestEvent = null;\n      let eventType = '';\n\n      if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n        latestEvent = loiteringResponse.data.entries[0];\n        eventType = 'Loitering';\n      }\n\n      if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n        const portVisitEvent = portVisitResponse.data.entries[0];\n        if (!latestEvent || new Date(portVisitEvent.end) > new Date(latestEvent.end)) {\n          latestEvent = portVisitEvent;\n          eventType = 'Port Visit';\n        }\n      }\n\n      if (latestEvent) {\n        allVesselPositions.push({\n          id: vesselId,\n          name: latestEvent.vessel?.name || 'Unknown Vessel',\n          position: latestEvent.position,\n          lastSeen: latestEvent.end,\n          eventType: eventType,\n          ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n          flag: latestEvent.vessel?.flag || 'ARE'\n        });\n      }\n    }\n    allVesselPositions.forEach(vessel => {\n      const ssvid = vessel.ssvid;\n      \n      if (vesselIds[ssvid]) {\n      // Zusätzliche Attribute aus der vesselData zuweisen\n        vessel.length = vesselIds[ssvid].length || 'Unknown';\n        vessel.beam = vesselIds[ssvid].beam || 'Unknown';\n        vessel.grossTonage = vesselIds[ssvid].grossTonage || 'Unknown';\n        vessel.purpose = vesselIds[ssvid].purpose || 'Unknown';\n        vessel.cableCapacity = vesselIds[ssvid].cableCapacity || 'Unknown';\n        vessel.notes = vesselIds[ssvid].notes || 'Unknown';\n        vessel.baseport = vesselIds[ssvid].baseport || 'Unknown';\n        vessel.owner = vesselIds[ssvid].owner || 'Unknown';\n      } else {\n        vessel.length = 'Unknown';\n        vessel.beam = 'Unknown';\n        vessel.grossTonage = 'Unknown';\n      }\n    });\n    localVesselPositions.value = allVesselPositions;\n    emit('update:vesselPositions', localVesselPositions.value);\n    vesselPostResponse.value = { data: { entries: allVesselPositions } };\n    vesselModifiedPostUrl.value = vesselTrackingUrl.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n\n  } catch (error) {\n    console.error(\"Error fetching vessel tracking data:\", error);\n  }\n  vesselLayerReady.value = true;\n}\n\nconst formattedEndDate = ref(new Date());\nconst formattedStartDate = ref(new Date(formattedEndDate.value.getFullYear() - 1, formattedEndDate.value.getMonth(), formattedEndDate.value.getDate()));\n\n//When date changes by TimelineSlider\nconst onDateChange = () => {\n  if (vesselTrackingSelected.value) {\n    formattedStartDate.value = formatDate(startDate.value);\n    formattedEndDate.value = formatDate(endDate.value);\n\n    const start = new Date(startDate.value);\n    const end = new Date(endDate.value);\n    const timeDiff = end - start;\n    \n    if (timeDiff < 3600000) {\n      console.warn(\"Selected time range is very short, which may result in insufficient data\");\n    }\n  \n    vesselTrack(formattedStartDate.value, formattedEndDate.value);\n  }\n};\n\n//Helper function to format Date into API Call correct data\nconst formatDate = (date) => {\n  const d = new Date(date);\n  let month = '' + (d.getMonth() + 1);\n  let day = '' + d.getDate();\n  const year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\n//API Call for specific vesselTrack of one currentTrackedVessel\nasync function vesselTrack(startDate, endDate) {\n  if (!currentTrackedVessel.value) return;\n  \n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const extendedStartDate = new Date(startDate);\n  const extendedEndDate = new Date(endDate);\n  extendedStartDate.setMonth(extendedStartDate.getMonth() - 5);\n  extendedEndDate.setMonth(extendedEndDate.getMonth() + 5);\n  \n  const baseParams = {\n    limit: 1000,\n    offset: 0,\n    sort: '-start',\n    vessels: [currentTrackedVessel.value],\n    'start-date': formatDate(extendedStartDate),\n    'end-date': formatDate(extendedEndDate),\n  };\n  \n  try {\n    const [portVisitsResponse, loiteringResponse] = await Promise.all([\n      axios.get(vesselTrackingUrl, {\n        params: {...baseParams, 'datasets[0]': 'public-global-port-visits-c2-events:latest'}\n      }),\n      axios.get(vesselTrackingUrl, {\n        params: {...baseParams, 'datasets[0]': 'public-global-loitering-events:latest'}\n      })\n    ]);\n    \n    // Check if the responses have the expected structure\n    const portVisits = portVisitsResponse?.data?.entries || [];\n    const loiteringEvents = loiteringResponse?.data?.entries || [];\n    \n    // Combine and sort the events from both responses\n    const allEvents = [\n      ...portVisits.map(entry => ({...entry, type: 'PortVisit'})),\n      ...loiteringEvents.map(entry => ({...entry, type: 'Loitering'}))\n    ].sort((a, b) => new Date(b.start) - new Date(a.start));\n    \n    // Check if we have any events\n    if (allEvents.length === 0) {\n      console.warn(\"No vessel events found for the selected time period\");\n      interpolatedEvents.value = [];\n      return;\n    }\n    \n    // Process the events\n    const formattedEvents = allEvents.map(entry => {\n      // Validate each entry has the required fields\n      if (!entry.position || !entry.vessel) {\n        console.warn(\"Invalid event entry:\", entry);\n        return null;\n      }\n      \n      return {\n        start: entry.start,\n        end: entry.end,\n        position: entry.position,\n        flag: entry.vessel?.flag || 'Unknown',\n        name: entry.vessel?.name || 'Unknown Vessel',\n        mmsi: entry.vessel?.ssvid || 'Unknown',\n        type: entry.type\n      };\n    }).filter(event => event !== null); // Remove any null entries\n    \n    interpolatedEvents.value = formattedEvents;\n    \n    if (formattedEvents.length > 0) {\n      drawVesselTrack(interpolatedEvents.value);\n    } else {\n      console.warn(\"No valid vessel events found after filtering\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching vessel track data:\", error);\n    interpolatedEvents.value = [];\n  }\n}\n//Function to draw the vessel Track on the mapInstance\nconst drawVesselTrack = (trackData) => {\n\n  \n  // Get map instance, with fallback options\n  let mapInstanceToUse = props.mapInstance;\n  \n  if (!mapInstanceToUse && props.cableStore) {\n    mapInstanceToUse = props.cableStore.getMapInstance;\n  }\n  \n  if (!trackData || trackData.length === 0) {\n    console.warn(\"No track data available\");\n    return;\n  }\n  \n  const startDate = new Date(formattedStartDate.value);\n  const endDate = new Date(formattedEndDate.value);\n  \n\n  const timeDiff = endDate - startDate;\n  if (timeDiff < 3600000) { // Less than 1 hour\n    console.warn(\"Time range is too short, which may result in insufficient data\");\n  }\n\n  if (isNaN(startDate) || isNaN(endDate)) {\n    console.error(\"Invalid date range provided:\", formattedStartDate.value, formattedEndDate.value);\n    return;\n  }\n  \n  // Filter the track data within the date range\n  const filteredData = trackData.filter(event => {\n    const eventStartDate = new Date(event.start);\n    const eventEndDate = new Date(event.end);\n    return (\n      (eventStartDate >= startDate && eventStartDate <= endDate) ||\n      (eventEndDate >= startDate && eventEndDate <= endDate)\n    );\n  });\n    \n  if (filteredData.length === 0) {\n    console.warn(\"No track data within the specified date range.\");\n    return;\n  }\n  \n  // Remove existing vessel track layer if it exists\n  if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n    mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n  }\n  \n  // Get the track points\n  const trackPoints = filteredData\n    .map(event => {\n      const lat = event.position?.lat;\n      const lon = event.position?.lon;\n      \n      if (!isValidCoordinate(lat, lon)) {\n        console.warn(\"Invalid coordinates in track data\", event);\n        return null;\n      }\n      \n      return [lat, lon];\n    })\n    .filter(point => point !== null)\n    .reverse();\n\n  if (trackPoints.length < 2) {\n    console.warn(\"Not enough valid track points to draw polyline\");\n    return;\n  }\n\n  try {\n    if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n      mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n    }\n    vesselTrackLayer.value = L.polyline(trackPoints, {\n      color: '#ad7dad',\n      weight: 3,\n      opacity: 0.7\n    }).arrowheads({\n      size: '20px',\n      yawn: 30,\n      fill: true\n    }).addTo(mapInstanceToUse);\n    \n    // Fit the map to the bounds of the track\n    if (vesselTrackLayer.value) {\n      vesselTrackLayer.value.addTo(mapInstanceToUse);\n      \n      // Only fit bounds if there are valid points\n      if (vesselTrackLayer.value.getBounds && !vesselTrackLayer.value.getBounds().isValid()) {\n        console.warn(\"Invalid bounds for vessel track layer\");\n      } else if (vesselTrackLayer.value.getBounds) {\n        mapInstanceToUse.fitBounds(vesselTrackLayer.value.getBounds());\n      }\n    }\n      } catch (error) {\n    console.error(\"Error creating polyline:\", error);\n  }\n};\n\n/*\n  Handles the click on viewVesselTrack on the Vessel Popup\n  Deselects Cables on Map, so that track is better distinguishable\n  filters vesselPositions after the one tracked Vessel\n*/\nconst viewVesselTrack = async (vessel) => {\n  try {\n    if (!vessel || !vessel.ssvid) {\n      console.error('Invalid vessel data provided to viewVesselTrack');\n      return;\n    }\n    vesselTrackingSelected.value = true;\n    isVesselTrackingMode.value = true;\n    isSearchSelected.value = vessel.fromSidebar || false;\n\n    // Initialize the cable store\n    const cableStore = useDataCablesStore();\n\n    if (vesselIds[vessel.ssvid]) {\n      currentTrackedVessel.value = vesselIds[vessel.ssvid].vesselId;\n    } else {\n      console.error('Vessel ID not found for ssvid:', vessel.ssvid);\n      return;\n    }\n\n    // Ensure we're using the cable store instance correctly\n    if (cableStore && cableStore.dataCables) {\n      // Deselect cables first\n      cableStore.deselectCables();\n      await nextTick();\n\n      // Update vessel positions if needed\n      if (!vessel.fromSidebar && Array.isArray(localVesselPositions.value)) {\n        localVesselPositions.value = localVesselPositions.value.filter(v => v.id === vessel.id);\n        emit('update:vesselPositions', localVesselPositions.value);\n      }\n\n      // Fetch vessel track data\n      await vesselTrack(formattedStartDate.value, formattedEndDate.value);\n      toggleVesselTracking();\n      //emit('update:viewingVesselTrack', true);\n\n      // Explicitly update cable opacity using the store\n      cableStore.setAllCablesOpacity(0.15); // Ensure this is called\n\n      // Force a reactivity update\n      await nextTick();\n    } else {\n      console.error('Cable store or dataCables not properly initialized');\n    }\n  } catch (error) {\n    console.error('Error in viewVesselTrack:', error);\n    isVesselTrackingMode.value = false;\n    vesselTrackingSelected.value = false;\n    isSearchSelected.value = false;\n  }\n};\n\nconst exitVesselTrackingMode = () => {\n  isVesselTrackingMode.value = false;\n  vesselTrackingSelected.value = false;\n  isSearchSelected.value = false;\n  currentTrackedVessel.value = null;\n  hoveredMarker.value = null;\n  emit( 'update:hoveredMarker', null);\n  \n  // Clear the cable ships layer group\n  const updatedPositions = props.vesselPositions.filter(vessel => {\n    if (vessel.fromSidebar) {\n      // Remove sidebar-created markers\n      if (vessel.marker && props.mapInstance.hasLayer(vessel.marker)) {\n        props.mapInstance.removeLayer(vessel.marker);\n       }\n      if (vessel.popup && props.mapInstance.hasLayer(vessel.popup)) {\n        props.mapInstance.removeLayer(vessel.popup);        \n      }        \n    }\n    props.layerGroup.clearLayers();\n  });\n\n  toggleVesselTracking();\n  //emit('update:viewingVesselTrack', false);\n  \n  vesselTracking();\n  props.cableStore.dataCables.forEach(cable => {\n    cable.opacity = 1;\n  });\n  \n  if (vesselTrackLayer.value) {\n    props.mapInstance.removeLayer(vesselTrackLayer.value);\n    vesselTrackLayer.value = null;\n  }\n};\n\nconst viewingVesselTrack = ref(false);\n\nconst toggleVesselTracking = () => {\n  const newValue = !viewingVesselTrack.value;\n  viewingVesselTrack.value = newValue;\n  cableStore.setViewingVesselTrack(newValue);\n};\n\n//Handle Ship Clicks\nconst onShipClick = (e, vessel) => {\n  try {    \n    if (!vessel || !vessel.lastSeen) {\n      console.error('Invalid vessel data provided to onShipClick');\n      return;\n    }\n\n    // Get map instance from the cable store\n    const mapInstance = props.cableStore.getMapInstance;\n    if (!mapInstance) {\n      console.error('Map instance is not available from cableStore');\n      return;\n    }\n\n    const lastSeenDate = new Date(vessel.lastSeen);\n    const formattedDate = lastSeenDate.toLocaleString('en-GB', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      hour12: false\n    });\n\n    // Create popup content\n    const popupContent = `\n      <div>\n        <strong>${vessel.name || 'Unknown Vessel'}</strong><br/>\n        <strong>${currentTranslations.value?.lastSeen || 'Last Seen'}:</strong> ${formattedDate}<br/>\n        <strong>${currentTranslations.value?.event || 'Event'}:</strong> ${vessel.eventType || 'Unknown'}<br/>\n        <strong>MMSI:</strong> ${vessel.ssvid || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.flag || 'Flag'}:</strong> ${getFlagEmoji(vessel.flag)}${vessel.flag}<br/>\n        <strong>${currentTranslations.value?.length || 'Length'}:</strong> ${vessel.length || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.beam || 'Beam'}:</strong> ${vessel.beam || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.grossTonnage || 'Gross Tonnage'}:</strong> ${vessel.grossTonage || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.purpose || 'Purpose'}:</strong> ${vessel.purpose || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.cableCapacity || 'Cable Capacity'}:</strong> ${vessel.cableCapacity || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.notes || 'Notes'}:</strong> ${vessel.notes || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.baseport || 'Base Port'}:</strong> ${vessel.baseport || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.owner || 'Owner'}:</strong> ${vessel.owner || 'Unknown'}<br/>\n        <a href=\"#\" id=\"getVesselTrack\">${currentTranslations.value?.viewVesselTrack || 'View Vessel Track'}</a><br/>\n        <a href=\"https://www.vesselfinder.com/vessels/details/${vessel.ssvid}\" target=\"_blank\">\n          ${currentTranslations.value?.viewOn || 'View on VesselFinder'}\n        </a>\n      </div>\n    `;\n\n    // Create and configure the popup\n    const popup = L.popup({\n      maxWidth: 300,\n      className: 'vessel-popup'\n    });\n\n    // Set popup location and content\n    popup.setLatLng([\n      e.latlng.lat || vessel.position.lat,\n      e.latlng.lng || vessel.position.lon\n    ]);\n    popup.setContent(popupContent);\n\n    // Remove existing popup if any\n    if (vessel.popup && mapInstance.hasLayer(vessel.popup)) {\n      mapInstance.removeLayer(vessel.popup);\n    }\n\n    // Add the new popup to the map\n    popup.addTo(mapInstance);\n\n    // Store the popup reference\n    vessel.popup = popup;\n\n    // Add event listener after popup is added to DOM\n    nextTick(() => {\n      const trackLink = document.getElementById(\"getVesselTrack\");\n      if (trackLink) {\n        trackLink.addEventListener(\"click\", function(event) {\n          event.preventDefault();\n          viewVesselTrack(vessel);\n        });\n      }\n    });\n\n  } catch (error) {\n    console.error('Error in onShipClick:', error);\n    // Try to provide more specific error information\n    if (error instanceof Error) {\n      console.error('Error details:', error.message);\n    }\n  }\n};\n\n// Add resize observer to update timeline width when map size changes\nonMounted(() => {\n  if (props.mapInstance) {\n    const resizeObserver = new ResizeObserver(() => {\n      // Force reactive update of computed style\n      nextTick(() => {\n        const mapBounds = props.mapInstance.getContainer().getBoundingClientRect();\n        if (vesselTrackingSelected.value) {\n          const container = document.querySelector('.date-popup-vesselTrack');\n          if (container) {\n            container.style.width = `${mapBounds.width}px`;\n            if (isSearchSelected.value) {\n              container.style.left = `${mapBounds.left}px`;\n            }\n          }\n        }\n      });\n    });\n    \n    resizeObserver.observe(props.mapInstance.getContainer());\n    \n    // Cleanup observer on component unmount\n    onUnmounted(() => {\n      resizeObserver.disconnect();\n      exitVesselTrackingMode();\n    });\n  }\n});\n\n// Expose necessary methods and reactive variables\n__expose({\n  isSearchSelected,\n  vesselLayerReady,\n  isVesselTrackingMode,\n  vesselTrackingSelected,\n  vesselEvents,\n  hoveredMarker,\n  startDate,\n  endDate,\n  localVesselPositions,\n  onShipClick,\n  createShipIcon,\n  exitVesselTrackingMode,\n  vesselTracking,\n  viewVesselTrack\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (vesselTrackingSelected.value)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"date-popup-vesselTrack\", {\n      'search-selected': isSearchSelected.value,\n      'map-selected': !isSearchSelected.value\n    }]),\n        style: _normalizeStyle(timelineContainerStyle.value),\n        onMousedown: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"])),\n        onTouchstart: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.stopEvent && _ctx.stopEvent(...args)))\n      }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          (isVesselTrackingMode.value)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: exitVesselTrackingMode,\n                class: \"deselect-vessel-tracking-btn\"\n              }, _toDisplayString(currentTranslations.value?.exitVesselTracking || 'Exit Vessel Tracking'), 1))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createVNode(_unref(VueDatePicker), {\n              modelValue: dateRange.value,\n              \"onUpdate:modelValue\": [\n                _cache[0] || (_cache[0] = ($event: any) => ((dateRange).value = $event)),\n                onDatePickerChange\n              ],\n              placeholder: currentTranslations.value?.datePlaceholder || 'Select date range',\n              \"preview-format\": format,\n              format: format,\n              \"enable-time-picker\": false,\n              range: { partialRange: false },\n              dark: \"\",\n              class: \"custom-datepicker\",\n              \"no-today\": \"\",\n              \"max-date\": new Date()\n            }, null, 8, [\"modelValue\", \"placeholder\", \"max-date\"])\n          ])\n        ]),\n        (vesselTrackingSelected.value)\n          ? (_openBlock(), _createBlock(TimelineSlider, {\n              key: 0,\n              startDate: startDate.value,\n              \"onUpdate:startDate\": [\n                _cache[1] || (_cache[1] = ($event: any) => ((startDate).value = $event)),\n                onDateChange\n              ],\n              endDate: endDate.value,\n              \"onUpdate:endDate\": [\n                _cache[2] || (_cache[2] = ($event: any) => ((endDate).value = $event)),\n                onDateChange\n              ],\n              events: interpolatedEvents.value,\n              onEventHover: onEventHover,\n              onInterEventHover: onInterEventHover,\n              class: \"timeline-slider\"\n            }, null, 8, [\"startDate\", \"endDate\", \"events\"]))\n          : _createCommentVNode(\"\", true)\n      ], 38))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\n  <div \n    v-if=\"vesselTrackingSelected\" \n    class=\"date-popup-vesselTrack\"\n    :class=\"{\n      'search-selected': isSearchSelected,\n      'map-selected': !isSearchSelected\n    }\"\n    :style=\"timelineContainerStyle\"\n    @mousedown.stop\n    @touchstart=\"stopEvent\"\n  >\n    <div class=\"tracking-controls\">\n      <button \n        v-if=\"isVesselTrackingMode\" \n        @click=\"exitVesselTrackingMode\"\n        class=\"deselect-vessel-tracking-btn\"\n      >\n        {{currentTranslations?.exitVesselTracking || 'Exit Vessel Tracking'}}\n      </button>\n      <div class=\"date-picker-container\">\n        <VueDatePicker\n          v-model=\"dateRange\"\n          @update:model-value=\"onDatePickerChange\"\n          :placeholder=\"currentTranslations?.datePlaceholder || 'Select date range'\"\n          :preview-format=\"format\"\n          :format=\"format\"\n          :enable-time-picker=\"false\"\n          :range=\"{ partialRange: false }\"\n          dark\n          class=\"custom-datepicker\"\n          no-today\n          :max-date=\"new Date()\"\n        />\n      </div>\n    </div>\n    <TimelineSlider\n      v-if=\"vesselTrackingSelected\"\n      v-model:startDate=\"startDate\"\n      v-model:endDate=\"endDate\"\n      :events=\"interpolatedEvents\"\n      @update:startDate=\"onDateChange\"\n      @update:endDate=\"onDateChange\"\n      @eventHover=\"onEventHover\"\n      @interEventHover=\"onInterEventHover\"\n      class=\"timeline-slider\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, computed, defineEmits, defineExpose, nextTick, PropType, onMounted, onUnmounted } from 'vue';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport TimelineSlider from './TimelineSlider.vue';\nimport vesselIds from \"@/assets/vesselIds.json\";\nimport translations from \"@/assets/translations/translations.json\";\nimport { useDataCablesStore } from '@/store/datacables';\n\nconst cableStore = useDataCablesStore();\n\nconst props = defineProps({\n  mapInstance: { type: Object as PropType<L.Map>, required: true },\n  currentLanguage: { type: String, required: true },\n  cableStore: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  layerGroup: { type: Object, required: true },\n  mapReady: { type: Boolean, required: true },\n  vesselPositions: { type: Array as PropType<any[]>, default: () => [] },\n});\n\nconst emit = defineEmits([\n  'update:vesselPositions',\n  'update:hoveredMarker',\n  'update:viewingVesselTrack'\n]);\n\nconst isSearchSelected = ref(false);\nconst timelineContainerStyle = computed(() => {\n  if (!props.mapInstance) return {};\n  \n  const mapBounds = props.mapInstance.getContainer().getBoundingClientRect();\n  return {\n    width: `${mapBounds.width}px`,\n    left: isSearchSelected.value ? `${mapBounds.left}px` : '0'\n  };\n});\n\nconst localVesselPositions = ref(props.vesselPositions ? [...props.vesselPositions] : []);\nconst vesselLayerReady = ref(false);\nconst vesselPostResponse = ref(null);\nconst vesselModifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{y}/{x}.png');\nconst isVesselTrackingMode = ref(false);\nconst vesselTrackingSelected = ref(false);\nconst vesselEvents = ref([]);\nconst hoveredMarker = ref();\nconst currentTrackedVessel = ref(null);\nconst vesselTrackLayer = ref(null);\n\nconst interpolatedEvents = ref([]);\nconst interpolationInterval = 3600000;\n\nconst currentTranslations = computed(() => translations[props.currentLanguage]);\n\nwatch(() => props.vesselPositions, (newPositions) => {\n  if (newPositions) {\n    localVesselPositions.value = [...newPositions];\n  }\n}, { deep: true });\n\nwatch(() => props.mapReady, (newValue) => {\n  vesselTracking();\n})\n\nconst isValidCoordinate = (lat, lon) => {\n  return lat !== undefined && lon !== undefined && \n         !isNaN(lat) && !isNaN(lon) &&\n         lat >= -90 && lat <= 90 && lon >= -180 && lon <= 180;\n};\n\nconst dateRange = ref<[Date, Date]>([\n  new Date(new Date().setMonth(new Date().getMonth() - 1)), \n  new Date()\n]);\n\nconst format = 'dd/MM/yyyy';\n\nconst onDatePickerChange = (selectedDates: [Date, Date]) => {\n  if (selectedDates && selectedDates.length === 2) {\n    startDate.value = selectedDates[0];\n    endDate.value = selectedDates[1];\n  }\n};\nwatch([startDate, endDate], () => {\n  dateRange.value = [startDate.value, endDate.value];\n});\n\nconst interpolatePosition = (start, end, fraction) => {\n  if (!start?.lat || !start?.lon || !end?.lat || !end?.lon) {\n    console.warn(\"Invalid start or end positions for interpolation\", { start, end });\n    return null;\n  }\n  \n  const lat = start.lat + (end.lat - start.lat) * fraction;\n  const lon = start.lon + (end.lon - start.lon) * fraction;\n  \n  if (!isValidCoordinate(lat, lon)) {\n    console.warn(\"Interpolation resulted in invalid coordinates\", { lat, lon, start, end, fraction });\n    return null;\n  }\n  \n  return { lat, lon };\n};\n\nconst generateInterpolatedEvents = (events) => {\n  if (!events || events.length < 2) return events;\n  \n  const allEvents = [];\n  const visibleTimeRange = {\n    start: startDate.value.getTime(),\n    end: endDate.value.getTime()\n  };\n\n  // Helper function to check if a time falls within the visible range\n  const isTimeInRange = (time) => {\n    const timestamp = new Date(time).getTime();\n    return timestamp >= visibleTimeRange.start && timestamp <= visibleTimeRange.end;\n  };\n\n  // Helper function to get the visible portion of an interpolation range\n  const getVisibleInterpolationRange = (startTime, endTime) => {\n    return {\n      start: Math.max(startTime, visibleTimeRange.start),\n      end: Math.min(endTime, visibleTimeRange.end)\n    };\n  };\n\n  for (let i = 0; i < events.length - 1; i++) {\n    const startEvent = events[i];\n    const endEvent = events[i + 1];\n    const startTime = new Date(startEvent.end).getTime();\n    const endTime = new Date(endEvent.start).getTime();\n\n    // Add the start event if it's in range\n    if (isTimeInRange(startEvent.start) || isTimeInRange(startEvent.end)) {\n      allEvents.push(startEvent);\n    }\n\n    // Handle interpolation between events\n    const duration = endTime - startTime;\n    if (duration > interpolationInterval &&\n        (isTimeInRange(startTime) || isTimeInRange(endTime) || \n         (startTime < visibleTimeRange.end && endTime > visibleTimeRange.start))) {\n      \n      const visibleRange = getVisibleInterpolationRange(startTime, endTime);\n      const visibleDuration = visibleRange.end - visibleRange.start;\n\n      if (visibleDuration > 0) {\n        // Calculate number of interpolation steps based on the visible duration\n        const steps = Math.floor(visibleDuration / interpolationInterval);\n\n        for (let step = 0; step <= steps; step++) {\n          const currentTime = visibleRange.start + step * interpolationInterval;\n          const fraction = (currentTime - startTime) / duration;\n          \n          if (currentTime <= visibleRange.end) {\n            // Inside the generateInterpolatedEvents function where interpolation happens:\nconst interpolatedPos = interpolatePosition(startEvent.position, endEvent.position, fraction);\nif (interpolatedPos) {\n  allEvents.push({\n    isInterpolated: true,\n    time: new Date(currentTime).toISOString(),\n    position: interpolatedPos,\n    startEvent: startEvent,\n    endEvent: endEvent\n  });\n}\n          }\n        }\n      }\n    }\n  }\n\n  // Add the last event if it's in range\n  if (events.length > 0 && isTimeInRange(events[events.length - 1].start)) {\n    allEvents.push(events[events.length - 1]);\n  }\n\n  return allEvents.sort((a, b) => {\n    const timeA = a.isInterpolated ? new Date(a.time).getTime() : new Date(a.start).getTime();\n    const timeB = b.isInterpolated ? new Date(b.time).getTime() : new Date(b.start).getTime();\n    return timeA - timeB;\n  });};\n\nconst onEventHover = (event) => onMarkerHover(event, false);\nconst onInterEventHover = (data) => onMarkerHover(data, true);\n\n//function handles hovers on events or interEvents, and passes correct Marker to parent component\n// In VesselTracking.vue\nconst onMarkerHover = (eventData, isInterpolated = false) => {\n  if (!eventData?.position) return;\n\n  const lat = eventData.position.lat;\n  const lon = eventData.position.lon;\n  \n  if (!isValidCoordinate(lat, lon)) {\n    console.warn(\"Invalid coordinates in event data\", eventData);\n    return;\n  }\n\n  if (!hoveredMarker.value) {\n    const markerData = {\n      id: eventData.mmsi || 'Unknown',\n      position: [lat, lon],\n      flag: isInterpolated ? eventData.startEvent.flag || 'Unknown' : eventData.flag || 'Unknown',\n      tooltip: L.tooltip({\n        permanent: false,\n        direction: 'top',\n        className: 'custom-tooltip',\n        offset: [0, -10],\n        html: true\n      }).setContent(\n        isInterpolated\n          ? `${eventData.startEvent.name || 'Unknown Vessel'}<br>Interpolated Time: ${formatDate(eventData.time)}<br>Between events:<br>Start: ${formatDate(eventData.startEvent.end)}<br>End: ${formatDate(eventData.endEvent.start)}`\n          : `${eventData.name || 'Unknown Vessel'}<br>Event: ${eventData.type}<br>Start: ${formatDate(eventData.start)}<br>End: ${formatDate(eventData.end)}`\n      )\n    };\n    \n    // Check if vesselPositions has at least one element\n    const vesselData = props.vesselPositions.length > 0 \n      ? props.vesselPositions[0]\n      : {\n          id: eventData.mmsi || 'Unknown',\n          name: eventData.name || 'Unknown Vessel',\n          position: {\n            lat: eventData.position.lat,\n            lon: eventData.position.lon\n          },\n          lastSeen: eventData.end || new Date().toISOString(),\n          eventType: eventData.type || 'Unknown'\n        };\n    \n    const marker = L.marker(markerData.position, {\n      icon: createShipIcon('#636363', markerData.flag, vesselData),\n    }).bindTooltip(markerData.tooltip).on('click', () => {\n      marker.openTooltip();\n    });\n    \n    hoveredMarker.value = marker;\n  } else {\n    hoveredMarker.value.setLatLng([lat, lon]);\n  }\n  \n  emit('update:hoveredMarker', hoveredMarker.value);\n};\n\nconst startDate = ref(new Date(new Date().setMonth(new Date().getMonth() - 1)));\nconst endDate = ref(new Date());\n\nconst createShipIcon = (baseColor = '#ff7800', countryCode = 'Unknown', vessel) => {\n  const flagEmoji = countryCode !== 'Unknown' ? getFlagEmoji(countryCode) : '🏴‍☠️';\n  \n  const lastDateSeen = new Date(vessel.lastSeen);\n  const currentDate = new Date();\n  const daysSinceLastSeen = (currentDate - lastDateSeen) / (1000 * 60 * 60 * 24);\n  const getColorComponent = (start, end, fraction) => {\n    return Math.round(start + fraction * (end - start));\n  };\n\n  const calculateColor = (daysSinceLastSeen) => {\n    // Use a non-linear function to make color change faster initially\n    const fraction = Math.min(Math.pow(daysSinceLastSeen / 60, 1.5), 1);\n    const startColor = hexToRgb(baseColor);\n    const endColor = hexToRgb('#8B4513'); // Brown\n\n    const r = getColorComponent(startColor.r, endColor.r, fraction);\n    const g = getColorComponent(startColor.g, endColor.g, fraction);\n    const b = getColorComponent(startColor.b, endColor.b, fraction);\n\n    return rgbToHex(r, g, b);\n  };\n\n  const color = calculateColor(daysSinceLastSeen);\n\n  const icon = L.divIcon({\n    html: `\n      <div class=\"ship-icon-container\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n          <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\" fill=\"${color}\" stroke=\"white\" stroke-width=\"1\"/>\n        </svg>\n        <span class=\"ship-flag\">${flagEmoji}</span>\n      </div>\n    `,\n    className: 'ship-icon',\n    iconSize: [24, 24],\n    iconAnchor: [12, 12],\n  });\n  return icon;\n};\n\n// Helper function to convert hex to RGB\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n// Helper function to convert RGB to hex\nfunction rgbToHex(r, g, b) {\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n}\n\n// Function to convert country code to flag emoji\nconst getFlagEmoji = (countryCode) => {\n  // Handle specific cases for country codes\n  if (countryCode === 'KOR') { // South Korea\n    countryCode = 'KR';\n  } else if (countryCode === 'SWE') { // Sweden\n    countryCode = 'SE';\n  } else if (countryCode === 'ARE') { // United Arab Emirates\n    countryCode = 'AE';\n  } else if (countryCode === 'ATG') { // Antigua and Barbuda\n    countryCode = 'AG';\n  } else if (countryCode === 'BRB') { // Barbados\n    countryCode = 'BB';\n  }\n\n  const codePoints = countryCode\n    .toUpperCase()\n    .slice(0, 2)\n    .split('')\n    .map(char => 127397 + char.charCodeAt());\n\n  return String.fromCodePoint(...codePoints);\n};\n\nfunction vesselIdsToArray(vessels){\n  let vesselIds = [];\n  for (let key in vessels) {\n    vesselIds.push(vessels[key].vesselId);\n  }\n  return vesselIds;\n}\n\nconst vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\nconst vesselTrackingParams = {\n  limit: 1,\n  offset: 0,\n  sort: '-start',\n};\n\n//API Call to find all latest positions of Cable Vessels\nasync function vesselTracking() {\n  try {\n    \n    const vesselIdsArray = vesselIdsToArray(vesselIds);\n    const allVesselPositions = [];\n    props.layerGroup.clearLayers();\n\n/*     const vesselTest = ['52ba19e87-7314-096f-8d50-0793badbc25a'];\n\n    const testParams = {\n      ...vesselTrackingParams,\n      vessels: vesselTest, \n      'datasets[0]': 'public-global-port-visits-c2-events:latest',\n    }\n    const testResponse = await axios.get(vesselTrackingUrl, { params: testParams });\n    console.log(\"TESTRESPONSE: \", testResponse); */\n\n    for (const vesselId of vesselIdsArray) {\n      const loiteringParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-loitering-events:latest',\n      };\n\n      const portVisitParams = {\n        ...vesselTrackingParams,\n        vessels: [vesselId],\n        'datasets[0]': 'public-global-port-visits-c2-events:latest',\n      };\n\n      const [loiteringResponse, portVisitResponse] = await Promise.all([\n        axios.get(vesselTrackingUrl, { params: loiteringParams }),\n        axios.get(vesselTrackingUrl, { params: portVisitParams })\n      ]);\n      let latestEvent = null;\n      let eventType = '';\n\n      if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n        latestEvent = loiteringResponse.data.entries[0];\n        eventType = 'Loitering';\n      }\n\n      if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n        const portVisitEvent = portVisitResponse.data.entries[0];\n        if (!latestEvent || new Date(portVisitEvent.end) > new Date(latestEvent.end)) {\n          latestEvent = portVisitEvent;\n          eventType = 'Port Visit';\n        }\n      }\n\n      if (latestEvent) {\n        allVesselPositions.push({\n          id: vesselId,\n          name: latestEvent.vessel?.name || 'Unknown Vessel',\n          position: latestEvent.position,\n          lastSeen: latestEvent.end,\n          eventType: eventType,\n          ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n          flag: latestEvent.vessel?.flag || 'ARE'\n        });\n      }\n    }\n    allVesselPositions.forEach(vessel => {\n      const ssvid = vessel.ssvid;\n      \n      if (vesselIds[ssvid]) {\n      // Zusätzliche Attribute aus der vesselData zuweisen\n        vessel.length = vesselIds[ssvid].length || 'Unknown';\n        vessel.beam = vesselIds[ssvid].beam || 'Unknown';\n        vessel.grossTonage = vesselIds[ssvid].grossTonage || 'Unknown';\n        vessel.purpose = vesselIds[ssvid].purpose || 'Unknown';\n        vessel.cableCapacity = vesselIds[ssvid].cableCapacity || 'Unknown';\n        vessel.notes = vesselIds[ssvid].notes || 'Unknown';\n        vessel.baseport = vesselIds[ssvid].baseport || 'Unknown';\n        vessel.owner = vesselIds[ssvid].owner || 'Unknown';\n      } else {\n        vessel.length = 'Unknown';\n        vessel.beam = 'Unknown';\n        vessel.grossTonage = 'Unknown';\n      }\n    });\n    localVesselPositions.value = allVesselPositions;\n    emit('update:vesselPositions', localVesselPositions.value);\n    vesselPostResponse.value = { data: { entries: allVesselPositions } };\n    vesselModifiedPostUrl.value = vesselTrackingUrl.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n\n  } catch (error) {\n    console.error(\"Error fetching vessel tracking data:\", error);\n  }\n  vesselLayerReady.value = true;\n}\n\nconst formattedEndDate = ref(new Date());\nconst formattedStartDate = ref(new Date(formattedEndDate.value.getFullYear() - 1, formattedEndDate.value.getMonth(), formattedEndDate.value.getDate()));\n\n//When date changes by TimelineSlider\nconst onDateChange = () => {\n  if (vesselTrackingSelected.value) {\n    formattedStartDate.value = formatDate(startDate.value);\n    formattedEndDate.value = formatDate(endDate.value);\n\n    const start = new Date(startDate.value);\n    const end = new Date(endDate.value);\n    const timeDiff = end - start;\n    \n    if (timeDiff < 3600000) {\n      console.warn(\"Selected time range is very short, which may result in insufficient data\");\n    }\n  \n    vesselTrack(formattedStartDate.value, formattedEndDate.value);\n  }\n};\n\n//Helper function to format Date into API Call correct data\nconst formatDate = (date) => {\n  const d = new Date(date);\n  let month = '' + (d.getMonth() + 1);\n  let day = '' + d.getDate();\n  const year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\n//API Call for specific vesselTrack of one currentTrackedVessel\nasync function vesselTrack(startDate, endDate) {\n  if (!currentTrackedVessel.value) return;\n  \n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const extendedStartDate = new Date(startDate);\n  const extendedEndDate = new Date(endDate);\n  extendedStartDate.setMonth(extendedStartDate.getMonth() - 5);\n  extendedEndDate.setMonth(extendedEndDate.getMonth() + 5);\n  \n  const baseParams = {\n    limit: 1000,\n    offset: 0,\n    sort: '-start',\n    vessels: [currentTrackedVessel.value],\n    'start-date': formatDate(extendedStartDate),\n    'end-date': formatDate(extendedEndDate),\n  };\n  \n  try {\n    const [portVisitsResponse, loiteringResponse] = await Promise.all([\n      axios.get(vesselTrackingUrl, {\n        params: {...baseParams, 'datasets[0]': 'public-global-port-visits-c2-events:latest'}\n      }),\n      axios.get(vesselTrackingUrl, {\n        params: {...baseParams, 'datasets[0]': 'public-global-loitering-events:latest'}\n      })\n    ]);\n    \n    // Check if the responses have the expected structure\n    const portVisits = portVisitsResponse?.data?.entries || [];\n    const loiteringEvents = loiteringResponse?.data?.entries || [];\n    \n    // Combine and sort the events from both responses\n    const allEvents = [\n      ...portVisits.map(entry => ({...entry, type: 'PortVisit'})),\n      ...loiteringEvents.map(entry => ({...entry, type: 'Loitering'}))\n    ].sort((a, b) => new Date(b.start) - new Date(a.start));\n    \n    // Check if we have any events\n    if (allEvents.length === 0) {\n      console.warn(\"No vessel events found for the selected time period\");\n      interpolatedEvents.value = [];\n      return;\n    }\n    \n    // Process the events\n    const formattedEvents = allEvents.map(entry => {\n      // Validate each entry has the required fields\n      if (!entry.position || !entry.vessel) {\n        console.warn(\"Invalid event entry:\", entry);\n        return null;\n      }\n      \n      return {\n        start: entry.start,\n        end: entry.end,\n        position: entry.position,\n        flag: entry.vessel?.flag || 'Unknown',\n        name: entry.vessel?.name || 'Unknown Vessel',\n        mmsi: entry.vessel?.ssvid || 'Unknown',\n        type: entry.type\n      };\n    }).filter(event => event !== null); // Remove any null entries\n    \n    interpolatedEvents.value = formattedEvents;\n    \n    if (formattedEvents.length > 0) {\n      drawVesselTrack(interpolatedEvents.value);\n    } else {\n      console.warn(\"No valid vessel events found after filtering\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching vessel track data:\", error);\n    interpolatedEvents.value = [];\n  }\n}\n//Function to draw the vessel Track on the mapInstance\nconst drawVesselTrack = (trackData) => {\n\n  \n  // Get map instance, with fallback options\n  let mapInstanceToUse = props.mapInstance;\n  \n  if (!mapInstanceToUse && props.cableStore) {\n    mapInstanceToUse = props.cableStore.getMapInstance;\n  }\n  \n  if (!trackData || trackData.length === 0) {\n    console.warn(\"No track data available\");\n    return;\n  }\n  \n  const startDate = new Date(formattedStartDate.value);\n  const endDate = new Date(formattedEndDate.value);\n  \n\n  const timeDiff = endDate - startDate;\n  if (timeDiff < 3600000) { // Less than 1 hour\n    console.warn(\"Time range is too short, which may result in insufficient data\");\n  }\n\n  if (isNaN(startDate) || isNaN(endDate)) {\n    console.error(\"Invalid date range provided:\", formattedStartDate.value, formattedEndDate.value);\n    return;\n  }\n  \n  // Filter the track data within the date range\n  const filteredData = trackData.filter(event => {\n    const eventStartDate = new Date(event.start);\n    const eventEndDate = new Date(event.end);\n    return (\n      (eventStartDate >= startDate && eventStartDate <= endDate) ||\n      (eventEndDate >= startDate && eventEndDate <= endDate)\n    );\n  });\n    \n  if (filteredData.length === 0) {\n    console.warn(\"No track data within the specified date range.\");\n    return;\n  }\n  \n  // Remove existing vessel track layer if it exists\n  if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n    mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n  }\n  \n  // Get the track points\n  const trackPoints = filteredData\n    .map(event => {\n      const lat = event.position?.lat;\n      const lon = event.position?.lon;\n      \n      if (!isValidCoordinate(lat, lon)) {\n        console.warn(\"Invalid coordinates in track data\", event);\n        return null;\n      }\n      \n      return [lat, lon];\n    })\n    .filter(point => point !== null)\n    .reverse();\n\n  if (trackPoints.length < 2) {\n    console.warn(\"Not enough valid track points to draw polyline\");\n    return;\n  }\n\n  try {\n    if (vesselTrackLayer.value && mapInstanceToUse.hasLayer(vesselTrackLayer.value)) {\n      mapInstanceToUse.removeLayer(vesselTrackLayer.value);\n    }\n    vesselTrackLayer.value = L.polyline(trackPoints, {\n      color: '#ad7dad',\n      weight: 3,\n      opacity: 0.7\n    }).arrowheads({\n      size: '20px',\n      yawn: 30,\n      fill: true\n    }).addTo(mapInstanceToUse);\n    \n    // Fit the map to the bounds of the track\n    if (vesselTrackLayer.value) {\n      vesselTrackLayer.value.addTo(mapInstanceToUse);\n      \n      // Only fit bounds if there are valid points\n      if (vesselTrackLayer.value.getBounds && !vesselTrackLayer.value.getBounds().isValid()) {\n        console.warn(\"Invalid bounds for vessel track layer\");\n      } else if (vesselTrackLayer.value.getBounds) {\n        mapInstanceToUse.fitBounds(vesselTrackLayer.value.getBounds());\n      }\n    }\n      } catch (error) {\n    console.error(\"Error creating polyline:\", error);\n  }\n};\n\n/*\n  Handles the click on viewVesselTrack on the Vessel Popup\n  Deselects Cables on Map, so that track is better distinguishable\n  filters vesselPositions after the one tracked Vessel\n*/\nconst viewVesselTrack = async (vessel) => {\n  try {\n    if (!vessel || !vessel.ssvid) {\n      console.error('Invalid vessel data provided to viewVesselTrack');\n      return;\n    }\n    vesselTrackingSelected.value = true;\n    isVesselTrackingMode.value = true;\n    isSearchSelected.value = vessel.fromSidebar || false;\n\n    // Initialize the cable store\n    const cableStore = useDataCablesStore();\n\n    if (vesselIds[vessel.ssvid]) {\n      currentTrackedVessel.value = vesselIds[vessel.ssvid].vesselId;\n    } else {\n      console.error('Vessel ID not found for ssvid:', vessel.ssvid);\n      return;\n    }\n\n    // Ensure we're using the cable store instance correctly\n    if (cableStore && cableStore.dataCables) {\n      // Deselect cables first\n      cableStore.deselectCables();\n      await nextTick();\n\n      // Update vessel positions if needed\n      if (!vessel.fromSidebar && Array.isArray(localVesselPositions.value)) {\n        localVesselPositions.value = localVesselPositions.value.filter(v => v.id === vessel.id);\n        emit('update:vesselPositions', localVesselPositions.value);\n      }\n\n      // Fetch vessel track data\n      await vesselTrack(formattedStartDate.value, formattedEndDate.value);\n      toggleVesselTracking();\n      //emit('update:viewingVesselTrack', true);\n\n      // Explicitly update cable opacity using the store\n      cableStore.setAllCablesOpacity(0.15); // Ensure this is called\n\n      // Force a reactivity update\n      await nextTick();\n    } else {\n      console.error('Cable store or dataCables not properly initialized');\n    }\n  } catch (error) {\n    console.error('Error in viewVesselTrack:', error);\n    isVesselTrackingMode.value = false;\n    vesselTrackingSelected.value = false;\n    isSearchSelected.value = false;\n  }\n};\n\nconst exitVesselTrackingMode = () => {\n  isVesselTrackingMode.value = false;\n  vesselTrackingSelected.value = false;\n  isSearchSelected.value = false;\n  currentTrackedVessel.value = null;\n  hoveredMarker.value = null;\n  emit( 'update:hoveredMarker', null);\n  \n  // Clear the cable ships layer group\n  const updatedPositions = props.vesselPositions.filter(vessel => {\n    if (vessel.fromSidebar) {\n      // Remove sidebar-created markers\n      if (vessel.marker && props.mapInstance.hasLayer(vessel.marker)) {\n        props.mapInstance.removeLayer(vessel.marker);\n       }\n      if (vessel.popup && props.mapInstance.hasLayer(vessel.popup)) {\n        props.mapInstance.removeLayer(vessel.popup);        \n      }        \n    }\n    props.layerGroup.clearLayers();\n  });\n\n  toggleVesselTracking();\n  //emit('update:viewingVesselTrack', false);\n  \n  vesselTracking();\n  props.cableStore.dataCables.forEach(cable => {\n    cable.opacity = 1;\n  });\n  \n  if (vesselTrackLayer.value) {\n    props.mapInstance.removeLayer(vesselTrackLayer.value);\n    vesselTrackLayer.value = null;\n  }\n};\n\nconst viewingVesselTrack = ref(false);\n\nconst toggleVesselTracking = () => {\n  const newValue = !viewingVesselTrack.value;\n  viewingVesselTrack.value = newValue;\n  cableStore.setViewingVesselTrack(newValue);\n};\n\n//Handle Ship Clicks\nconst onShipClick = (e, vessel) => {\n  try {    \n    if (!vessel || !vessel.lastSeen) {\n      console.error('Invalid vessel data provided to onShipClick');\n      return;\n    }\n\n    // Get map instance from the cable store\n    const mapInstance = props.cableStore.getMapInstance;\n    if (!mapInstance) {\n      console.error('Map instance is not available from cableStore');\n      return;\n    }\n\n    const lastSeenDate = new Date(vessel.lastSeen);\n    const formattedDate = lastSeenDate.toLocaleString('en-GB', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      hour12: false\n    });\n\n    // Create popup content\n    const popupContent = `\n      <div>\n        <strong>${vessel.name || 'Unknown Vessel'}</strong><br/>\n        <strong>${currentTranslations.value?.lastSeen || 'Last Seen'}:</strong> ${formattedDate}<br/>\n        <strong>${currentTranslations.value?.event || 'Event'}:</strong> ${vessel.eventType || 'Unknown'}<br/>\n        <strong>MMSI:</strong> ${vessel.ssvid || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.flag || 'Flag'}:</strong> ${getFlagEmoji(vessel.flag)}${vessel.flag}<br/>\n        <strong>${currentTranslations.value?.length || 'Length'}:</strong> ${vessel.length || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.beam || 'Beam'}:</strong> ${vessel.beam || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.grossTonnage || 'Gross Tonnage'}:</strong> ${vessel.grossTonage || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.purpose || 'Purpose'}:</strong> ${vessel.purpose || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.cableCapacity || 'Cable Capacity'}:</strong> ${vessel.cableCapacity || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.notes || 'Notes'}:</strong> ${vessel.notes || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.baseport || 'Base Port'}:</strong> ${vessel.baseport || 'Unknown'}<br/>\n        <strong>${currentTranslations.value?.owner || 'Owner'}:</strong> ${vessel.owner || 'Unknown'}<br/>\n        <a href=\"#\" id=\"getVesselTrack\">${currentTranslations.value?.viewVesselTrack || 'View Vessel Track'}</a><br/>\n        <a href=\"https://www.vesselfinder.com/vessels/details/${vessel.ssvid}\" target=\"_blank\">\n          ${currentTranslations.value?.viewOn || 'View on VesselFinder'}\n        </a>\n      </div>\n    `;\n\n    // Create and configure the popup\n    const popup = L.popup({\n      maxWidth: 300,\n      className: 'vessel-popup'\n    });\n\n    // Set popup location and content\n    popup.setLatLng([\n      e.latlng.lat || vessel.position.lat,\n      e.latlng.lng || vessel.position.lon\n    ]);\n    popup.setContent(popupContent);\n\n    // Remove existing popup if any\n    if (vessel.popup && mapInstance.hasLayer(vessel.popup)) {\n      mapInstance.removeLayer(vessel.popup);\n    }\n\n    // Add the new popup to the map\n    popup.addTo(mapInstance);\n\n    // Store the popup reference\n    vessel.popup = popup;\n\n    // Add event listener after popup is added to DOM\n    nextTick(() => {\n      const trackLink = document.getElementById(\"getVesselTrack\");\n      if (trackLink) {\n        trackLink.addEventListener(\"click\", function(event) {\n          event.preventDefault();\n          viewVesselTrack(vessel);\n        });\n      }\n    });\n\n  } catch (error) {\n    console.error('Error in onShipClick:', error);\n    // Try to provide more specific error information\n    if (error instanceof Error) {\n      console.error('Error details:', error.message);\n    }\n  }\n};\n\n// Add resize observer to update timeline width when map size changes\nonMounted(() => {\n  if (props.mapInstance) {\n    const resizeObserver = new ResizeObserver(() => {\n      // Force reactive update of computed style\n      nextTick(() => {\n        const mapBounds = props.mapInstance.getContainer().getBoundingClientRect();\n        if (vesselTrackingSelected.value) {\n          const container = document.querySelector('.date-popup-vesselTrack');\n          if (container) {\n            container.style.width = `${mapBounds.width}px`;\n            if (isSearchSelected.value) {\n              container.style.left = `${mapBounds.left}px`;\n            }\n          }\n        }\n      });\n    });\n    \n    resizeObserver.observe(props.mapInstance.getContainer());\n    \n    // Cleanup observer on component unmount\n    onUnmounted(() => {\n      resizeObserver.disconnect();\n      exitVesselTrackingMode();\n    });\n  }\n});\n\n// Expose necessary methods and reactive variables\ndefineExpose({\n  isSearchSelected,\n  vesselLayerReady,\n  isVesselTrackingMode,\n  vesselTrackingSelected,\n  vesselEvents,\n  hoveredMarker,\n  startDate,\n  endDate,\n  localVesselPositions,\n  onShipClick,\n  createShipIcon,\n  exitVesselTrackingMode,\n  vesselTracking,\n  viewVesselTrack\n});\n</script>\n\n<style scoped>\n.tracking-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 8px;\n}\n\n.date-picker-container {\n  flex-grow: 1;\n  max-width: 300px;\n}\n\n.custom-datepicker {\n  left: 20px;\n  width: 2%;\n  position: relative;\n}\n\n:deep(.custom-datepicker) .dp__input{\n  height: 36px !important;\n  width: 36px !important;\n  border: 3px solid #007bff !important;\n}\n:deep(.custom-datepicker) .dp__input:hover{\n  border: 3px solid #bababa !important;\n}\n:deep(.custom-datepicker) .dp__icon{\n  pointer-events: none;\n  font-weight: bold !important;\n  height: 22px !important; \n  width: 22px !important; \n  left: 8.5px !important;\n}\n:deep(.custom-datepicker) .dp__input{\n  height: 100%;\n  cursor: pointer;\n}\n:deep(.custom-datepicker) .dp__clear_icon {\n  visibility: hidden;\n}\n:deep(.custom-datepicker) .dp__input_icon_wrapper {\n  pointer-events: auto;\n  cursor: pointer;\n}\n:deep(.custom-datepicker) .dp--menu-wrapper {\n  left: -3px !important;\n}\n:deep(.custom-datepicker) .dp__arrow_bottom {\n  left: 20px !important;\n}\n.date-popup-vesselTrack {\n  position: absolute;\n  z-index: 1000;\n  background: #48506a;\n  padding: 0.875rem;\n  border-radius: 4px;\n}\n\n.date-popup-vesselTrack.map-selected {\n  bottom: 20px;\n  left: 0;\n}\n\n.date-popup-vesselTrack.search-selected {\n  bottom: 20px;\n}\n.timeline-slider {\n  width: 90%;\n  height: auto;\n  margin: 0 auto;\n}\n</style>","import script from \"./VesselTracking.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./VesselTracking.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./VesselTracking.vue?vue&type=style&index=0&id=5e3bbcfc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e3bbcfc\"]])\n\nexport default __exports__","<template>\n  <div \n    v-if=\"isVisible\" \n    class=\"maintenance-layer-toggle-popup\"\n    :class=\"{ 'viewing-vessel-track': props.viewingVesselTrack }\"\n  >\n    <h3 class=\"maintenance-layer-title\">\n      {{props.currentTranslations.maintenanceZonesLayer}}\n    </h3>\n    <div class=\"layers-container\">\n      <div \n        v-for=\"layer in layers\" \n        :key=\"layer.name\" \n        class=\"layer-toggle\"\n      >\n        <input \n          :id=\"layer.name\" \n          type=\"checkbox\" \n          v-model=\"layer.visible\" \n          @change=\"toggleLayer(layer)\" \n          class=\"layer-checkbox\"\n        />\n        <label \n          :for=\"layer.name\" \n          class=\"layer-label\"\n        >\n          {{props.currentTranslations[layer.translatedKey]}}\n        </label>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script setup>\nimport { ref } from 'vue';\nimport L from 'leaflet';\nimport maintenanceZonesJson from '@/assets/cableMaintenanceZones.json';\nimport privateMaintenanceZonesJson from '@/assets/privateMaintenanceAgreementZones.json';\n\nconst props = defineProps({\n  mapInstance: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  currentTranslations: { type: Object, required: true },\n  viewingVesselTrack: { type: Object, required: true },\n});\n\nconst isVisible = ref(false);\nconst zoneLabels = new Map();\nconst highlightedLayers = [];\n\nconst zoneColors = {\n  ACMA: '#FF6B6B',\n  NAZ: '#19422a',\n  MECMA: '#2cd42c',\n  '20CMA': '#FDCB6E',\n  SEAIOCMA: '#6C5CE7',\n  YZ: '#FF8A5B',\n  APMA: '#FFB900',\n  AAPMMSAA: '#FF6D9A',\n  SPZ: '#A569BD',\n  'E-MARINE': '#34D399',\n};\n\nconst layers = ref([\n  {\n    name: 'PublicMaintenanceZones',\n    translatedKey: 'publicMaintenanceZonesLayer',\n    defaultName: 'PublicMaintenanceZones',\n    visible: false,\n    geoJsonLayer: null,\n    features: maintenanceZonesJson.features,\n  },\n  {\n    name: 'PrivateMaintenanceZones',\n    translatedKey: 'privateMaintenanceZonesLayer',\n    defaultName: 'PrivateMaintenanceZones',\n    visible: false,\n    geoJsonLayer: null,\n    features: privateMaintenanceZonesJson.features,\n  },\n]);\n\nconst getZoneStyle = (feature) => {\n  const abbreviation = feature.properties.abbreviation;\n  const defaultStyle = { color: '#000000', weight: 2, opacity: 0.7, fillOpacity: 0.3 };\n  if (zoneColors[abbreviation]) {\n    return {\n      ...defaultStyle,\n      color: zoneColors[abbreviation],\n      fillColor: zoneColors[abbreviation],\n    };\n  }\n  return defaultStyle;\n};\n\nconst createLabel = (feature) => {\n  const geoJson = L.geoJSON(feature);\n  const bounds = geoJson.getBounds();\n  const center = bounds.getCenter();\n  const abbreviation = feature.properties.abbreviation;\n  const labelColor = zoneColors[abbreviation] || '#000000';\n  return L.marker(center, {\n    icon: L.divIcon({\n      className: 'maintenance-zone-label',\n      html: `<div style=\"color:${labelColor};\">${feature.properties.abbreviation}</div>`,\n      iconSize: null,\n    }),\n    interactive: false,\n  });\n};\n\nconst highlightZone = (feature, event) => {\n    if (!props.mapInstance) return;\n\n    // Clear previously highlighted layers\n    highlightedLayers.forEach((layer) => {\n        props.mapInstance.removeLayer(layer);\n    });\n    highlightedLayers.length = 0;\n\n    const abbreviation = feature.properties.abbreviation;\n\n    // Highlight all features with the same abbreviation\n    layers.value.forEach((layerConfig) => {\n        layerConfig.features.forEach((featureItem) => {\n            if (featureItem.properties.abbreviation === abbreviation) {\n                const highlightStyle = {\n                    color: zoneColors[abbreviation] || '#FFD700',\n                    weight: 4,\n                    opacity: 1,\n                    fillOpacity: 0.6,\n                };\n                const highlightedLayer = L.geoJSON(featureItem, { style: highlightStyle }).addTo(props.mapInstance);\n                highlightedLayers.push(highlightedLayer);\n            }\n        });\n    });\n\n    // Create a popup for the selected feature\n    const popupContent = `\n        <strong>${props.currentTranslations.abbreviation}:</strong>${feature.properties.abbreviation}<br/>\n        <strong>${props.currentTranslations.name}:</strong>${feature.properties.name}<br/>\n    `;\n    const popup = L.popup()\n        .setLatLng(L.geoJSON(feature).getBounds().getCenter())\n        .setContent(popupContent)\n        .openOn(props.mapInstance);\n\n    // Prevent the click event from propagating to the map\n    event.stopPropagation();\n};\n\n\nconst clearHighlightedZones = () => {\n  highlightedLayers.forEach((layer) => {\n    props.mapInstance.removeLayer(layer);\n  });\n  highlightedLayers.length = 0;\n};\n\nconst toggleLayer = (layerConfig) => {\n  if (!props.mapInstance) return;\n\n  if (layerConfig.visible) {\n    if (!layerConfig.geoJsonLayer) {\n      layerConfig.geoJsonLayer = L.geoJSON(layerConfig.features, {\n        style: getZoneStyle,\n        onEachFeature: (feature, layer) => {\n          layer.on({ click: () => highlightZone(feature, event) });\n        },\n      }).addTo(props.mapInstance);\n    } else {\n      props.mapInstance.addLayer(layerConfig.geoJsonLayer);\n    }\n\n    layerConfig.features.forEach((feature) => {\n      const labelKey = `${layerConfig.name}-${feature.properties.abbreviation}`;\n      let label = zoneLabels.get(labelKey);\n      if (!label) {\n        label = createLabel(feature);\n        zoneLabels.set(labelKey, label);\n      }\n      label.addTo(props.mapInstance);\n    });\n  } else {\n    if (layerConfig.geoJsonLayer) {\n      props.mapInstance.removeLayer(layerConfig.geoJsonLayer);\n    }\n    layerConfig.features.forEach((feature) => {\n      const labelKey = `${layerConfig.name}-${feature.properties.abbreviation}`;\n      const label = zoneLabels.get(labelKey);\n      if (label) {\n        props.mapInstance.removeLayer(label);\n      }\n    });\n  }\n};\n\nconst resetLayers = () => {\n  layers.value.forEach((layer) => {\n    layer.visible = false;\n    if (layer.geoJsonLayer) {\n      props.mapInstance.removeLayer(layer.geoJsonLayer);\n    }\n    layer.features.forEach((feature) => {\n      const labelKey = `${layer.name}-${feature.properties.abbreviation}`;\n      const label = zoneLabels.get(labelKey);\n      if (label) {\n        props.mapInstance.removeLayer(label);\n      }\n    });\n  });\n  clearHighlightedZones();\n};\n\ndefineExpose({\n  show: () => {\n    isVisible.value = true;\n  },\n  hide: () => {\n    isVisible.value = false;\n    resetLayers();\n  },\n  clearHighlightedZones,\n});\n</script>\n\n\n<style>\n.maintenance-layer-toggle-popup {\n  font-size: 13px;\n  font-weight: bold;\n  text-align: left;\n  position: absolute;\n  bottom: 20px;\n  right: 12px;\n  width: 230px;\n  max-height: 150px;\n  z-index: 500;\n  background-color: #48506a;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  overflow: hidden;\n}\n\n/* Add new class for vessel track view positioning */\n.maintenance-layer-toggle-popup.viewing-vessel-track {\n  bottom: 220px;\n  left: 20px;\n}\n\n/* Adjust other positioning classes to work with vessel track */\n.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 200px;\n}\n\n.anchorage-active:not(.ocean-depth-active) .maintenance-layer-toggle-popup {\n  right: 210px;\n}\n\n.cable-ships-active.anchorage-active.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 400px;\n}\n\n/* Add combined classes for when both vessel track and other states are active */\n.viewing-vessel-track.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 400px;\n}\n\n.viewing-vessel-track.anchorage-active:not(.ocean-depth-active) .maintenance-layer-toggle-popup {\n  right: 410px;\n}\n\n.viewing-vessel-track.cable-ships-active.anchorage-active.ocean-depth-active .maintenance-layer-toggle-popup {\n  right: 600px;\n}\n\n/* Rest of the styles remain the same */\n.maintenance-layer-title {\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: white;\n  text-align: center;\n}\n\n.layers-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 100px;\n  overflow-y: auto;\n}\n\n.layer-toggle {\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.layer-checkbox {\n  margin-right: 8px;\n  width: 16px;\n  height: 16px;\n}\n\n.layer-label {\n  color: white;\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.maintenance-zone-label {\n  background-color: white;\n  border: 1px solid #333;\n  border-radius: 4px;\n  padding: 2px 6px;\n  font-size: 12px;\n  font-weight: bold;\n  white-space: nowrap;\n}\n</style>","import script from \"./MaintenanceLayerToggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MaintenanceLayerToggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MaintenanceLayerToggle.vue?vue&type=style&index=0&id=1b6975df&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\n  import { ref, onUnmounted, watch } from 'vue'\n  import L from 'leaflet'\n  import Supercluster from 'supercluster'\n  import datacenters from '@/assets/datacenters.json'\n  \n  const props = defineProps({\n    mapInstance: {\n      type: Object,\n      required: true\n    },\n    controlInstance: {\n      type: Object,\n      required: true\n    },\n    mapReady: {\n      type: Boolean,\n      required: true\n    },\n    currentTranslations: {\n      type: Object,\n      required: true\n    },\n  })\n  \n  // Helper function to format property keys for display\n  const formatPropertyKey = (key) => {\n    return key.replace('@', '')\n      .split(':')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join('')\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join('')\n  }\n  \n  // Create tooltip content from properties\n  const createTooltipContent = (properties) => {\n    const excludeKeys = ['originalGeometry', 'cluster', 'cluster_id', 'point_count', 'point_count_abbreviated', 'id']\n    const content = Object.entries(properties)\n      .filter(([key, value]) => \n        !excludeKeys.includes(key) && \n        value !== null && \n        value !== undefined && \n        value !== '' && \n        !key.toLowerCase().includes('id')\n      )\n      .map(([key, value]) => \n        `<div class=\"tooltip-row\"><strong>${formatPropertyKey(key)}:</strong> ${\n          value.toString().startsWith('http') ? \n          `<a href=\"${value}\" target=\"_blank\" rel=\"noopener noreferrer\">${value}</a>` : \n          value\n        }</div>`\n      )\n      .join('')\n    return `<div class=\"datacenter-tooltip\">${content}</div>`\n  }\n  \n  const supercluster = ref(null)\n  try {\n    supercluster.value = new Supercluster({\n      radius: 40,\n      maxZoom: 16,\n      map: (props) => ({\n        ...props.properties,\n        count: 1,\n        originalGeometry: props.originalGeometry\n      }),\n      reduce: (accumulated, props) => {\n        accumulated.count += props.count\n      }\n    })\n  \n    const formattedFeatures = datacenters.features.map(feature => ({\n      type: 'Feature',\n      properties: {\n        ...feature.properties, \n        originalGeometry: feature.geometry.type === 'Polygon' ? feature.geometry : null\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: feature.geometry.type === 'Polygon' ? \n          [feature.geometry.coordinates[0][0][0], feature.geometry.coordinates[0][0][1]] : \n          feature.geometry.coordinates\n      }\n    }))\n    \n    supercluster.value.load(formattedFeatures)\n  } catch (error) {\n    console.error('Failed to initialize Supercluster:', error)\n  }\n  \n  const dataCenterLayer = ref(null)\n  const polygonLayer = ref(null) // Separate layer for polygons\n  const isLayerVisible = ref(false)\n  \n  const createDataCenterIcon = () => {\n    return L.divIcon({\n      html: `<div class=\"data-center-marker\"><svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" fill=\"#4a90e2\" rx=\"2\"/><rect x=\"6\" y=\"4\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"8\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"12\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><rect x=\"6\" y=\"16\" width=\"12\" height=\"3\" fill=\"#214d7c\" rx=\"1\"/><circle cx=\"7\" cy=\"5.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"9.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"13.5\" r=\"0.5\" fill=\"#00ff00\"/><circle cx=\"7\" cy=\"17.5\" r=\"0.5\" fill=\"#00ff00\"/></svg></div>`,\n      className: 'data-center-icon',\n      iconSize: [24, 24],\n      iconAnchor: [12, 12]\n    })\n  }\n  \n  // Helper function to bind interactive tooltip\n  const bindInteractiveTooltip = (layer, content) => {\n    const tooltip = layer.bindTooltip(content, {\n      permanent: false,\n      direction: 'top',\n      className: 'datacenter-tooltip interactive',\n      opacity: 1\n    }).getTooltip()\n    \n    // Make tooltip interactive\n    if (tooltip) {\n      const tooltipElement = tooltip.getElement()\n      if (tooltipElement) {\n        tooltipElement.style.pointerEvents = 'auto'\n      }\n    }\n  }\n  \n  const updateClusters = () => {\n    if (!props.mapInstance || !dataCenterLayer.value || !isLayerVisible.value) {\n      return\n    }\n    \n    try {\n      const bounds = props.mapInstance.getBounds()\n      const zoom = Math.floor(props.mapInstance.getZoom())\n      const bbox = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()]\n      const clusters = supercluster.value.getClusters(bbox, zoom)\n      \n      dataCenterLayer.value.clearLayers()\n      \n      // Clear polygon layer if it exists\n      if (polygonLayer.value) {\n        polygonLayer.value.clearLayers()\n      }\n      \n      clusters.forEach((cluster) => {\n        const [lng, lat] = cluster.geometry.coordinates\n        const latlng = L.latLng(lat, lng)\n        \n        if (cluster.properties.cluster) {\n          const count = cluster.properties.point_count\n          const size = count < 10 ? 'small' : count < 50 ? 'medium' : 'large'\n          const marker = L.marker(latlng, {\n            icon: L.divIcon({\n              html: `<div class=\"cluster-marker ${size}\"><div class=\"cluster-count\">${count}</div></div>`,\n              className: 'custom-cluster-icon',\n              iconSize: [40, 40],\n              iconAnchor: [20, 20]\n            })\n          })\n          \n          marker.on('click', () => {\n            const expansionZoom = supercluster.value.getClusterExpansionZoom(cluster.properties.cluster_id)\n            props.mapInstance.setView(latlng, expansionZoom)\n          })\n          \n          dataCenterLayer.value.addLayer(marker)\n        } else {\n          // Handle polygons separately to avoid animation issues\n          if (cluster.properties.originalGeometry && polygonLayer.value) {\n            try {\n              const polygon = L.polygon(\n                cluster.properties.originalGeometry.coordinates[0].map(coord => [coord[1], coord[0]]),\n                {\n                  color: '#4a90e2',\n                  weight: 2,\n                  fillColor: '#4a90e2',\n                  fillOpacity: 0.2,\n                  // Disable animation for polygons to prevent the error\n                  pane: 'overlayPane'\n                }\n              )\n              const tooltipContent = createTooltipContent(cluster.properties)\n              bindInteractiveTooltip(polygon, tooltipContent)\n              polygonLayer.value.addLayer(polygon)\n            } catch (polygonErr) {\n              console.error('Error creating polygon:', polygonErr)\n            }\n          }\n          \n          // Still add the marker\n          const marker = L.marker(latlng, {\n            icon: createDataCenterIcon()\n          })\n          \n          const tooltipContent = createTooltipContent(cluster.properties)\n          bindInteractiveTooltip(marker, tooltipContent)\n          dataCenterLayer.value.addLayer(marker)\n        }\n      })\n    } catch (error) {\n      console.error('Error in updateClusters:', error)\n    }\n  }\n  \n  const initializeLayer = () => {\n    if (!props.mapInstance || !props.controlInstance) {\n      return\n    }\n    \n    try {\n      // Create separate layer for polygons to manage their animation separately\n      polygonLayer.value = L.layerGroup()\n      dataCenterLayer.value = L.layerGroup()\n      \n      // Add both layers to the map\n      props.mapInstance.addLayer(polygonLayer.value)\n      props.controlInstance.addOverlay(dataCenterLayer.value, 'Data Centers', false)\n      \n      // This is critical: disable animations for the polygon layer\n      if (props.mapInstance.options) {\n        // Preserve existing options\n        const currentZoomAnimation = props.mapInstance.options.zoomAnimation\n        \n        // Add zoomend event listener that runs before animation starts\n        props.mapInstance.on('zoomanim', (e) => {\n          if (isLayerVisible.value && polygonLayer.value) {\n            // Hide polygons during zoom animation\n            polygonLayer.value.eachLayer((layer) => {\n              if (layer._path) {\n                layer._path.style.display = 'none'\n              }\n            })\n          }\n        })\n        \n        // Add zoomend event listener\n        props.mapInstance.on('zoomend', () => {\n          updateClusters()\n          \n          // Show polygons after zoom animation completes\n          if (isLayerVisible.value && polygonLayer.value) {\n            polygonLayer.value.eachLayer((layer) => {\n              if (layer._path) {\n                layer._path.style.display = ''\n              }\n            })\n          }\n        })\n      }\n      \n      props.mapInstance.on('moveend', updateClusters)\n      \n      props.mapInstance.on('overlayadd', (e) => {\n        if (e.name === 'Data Centers') {\n          isLayerVisible.value = true\n          if (!props.mapInstance.hasLayer(polygonLayer.value)) {\n            props.mapInstance.addLayer(polygonLayer.value)\n          }\n          updateClusters()\n        }\n      })\n      \n      props.mapInstance.on('overlayremove', (e) => {\n        if (e.name === 'Data Centers') {\n          isLayerVisible.value = false\n          if (props.mapInstance.hasLayer(polygonLayer.value)) {\n            props.mapInstance.removeLayer(polygonLayer.value)\n          }\n        }\n      })\n      \n      isLayerVisible.value = false\n    } catch (error) {\n      console.error('Error in initializeLayer:', error)\n    }\n  }\n  \n  watch(\n    [() => props.mapReady, () => props.controlInstance],\n    ([mapReady, controlInst]) => {\n      if (mapReady && controlInst) {\n        initializeLayer()\n      }\n    },\n    { immediate: true }\n  )\n  \n  onUnmounted(() => {\n    if (props.mapInstance) {\n      props.mapInstance.off('moveend', updateClusters)\n      props.mapInstance.off('zoomend', updateClusters)\n      props.mapInstance.off('zoomanim')\n      \n      if (dataCenterLayer.value) {\n        props.mapInstance.removeLayer(dataCenterLayer.value)\n      }\n      \n      if (polygonLayer.value) {\n        props.mapInstance.removeLayer(polygonLayer.value)\n      }\n    }\n  })\n  \n  defineExpose({\n    dataCenterLayer,\n  })\n  </script>\n  \n  <style>\n  .custom-cluster-icon {\n    background: none;\n    border: none;\n  }\n  \n  .cluster-marker {\n    background-color: #4a90e2;\n    border: 2px solid #214d7c;\n    border-radius: 50%;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n  }\n  \n  .cluster-marker.small {\n    width: 30px;\n    height: 30px;\n    font-size: 12px;\n  }\n  \n  .cluster-marker.medium {\n    width: 35px;\n    height: 35px;\n    font-size: 14px;\n  }\n  \n  .cluster-marker.large {\n    width: 40px;\n    height: 40px;\n    font-size: 16px;\n  }\n  \n  .cluster-count {\n    width: 100%;\n    text-align: center;\n  }\n  \n  .data-center-marker {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .data-center-icon {\n    background: none;\n    border: none;\n  }\n  \n  .datacenter-tooltip.interactive {\n    pointer-events: auto !important;\n  }\n  \n  .leaflet-tooltip.interactive {\n    pointer-events: auto !important;\n  }\n  \n  .datacenter-tooltip {\n    padding: 8px;\n    background-color: white;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n    /* Ensure tooltip is above other elements */\n    z-index: 1000;\n  }\n  \n  .tooltip-row {\n    margin: 4px 0;\n    line-height: 1.4;\n    white-space: nowrap;\n  }\n  \n  .tooltip-row a {\n    color: #4a90e2;\n    text-decoration: none;\n    cursor: pointer;\n  }\n  \n  .tooltip-row a:hover {\n    text-decoration: underline;\n  }\n  \n  /* Ensure the tooltip stays visible when hovering */\n  .leaflet-tooltip-pane {\n    z-index: 1000;\n  }\n  \n  .leaflet-tooltip {\n    pointer-events: auto !important;\n  }\n  </style>","import script from \"./ClusteredDataCenters.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClusteredDataCenters.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClusteredDataCenters.vue?vue&type=style&index=0&id=0d8ce9ef&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"isVisible\" class=\"anchorage-layer-toggle-popup\">\n    <h3 class=\"anchorage-layer-title\">{{ currentTranslations.anchorageLayerToggles }}</h3>\n    <div class=\"layers-container\">\n      <div v-for=\"layer in layers\" :key=\"layer.name\" class=\"layer-toggle\">\n        <input \n          :id=\"layer.name\" \n          type=\"checkbox\" \n          :checked=\"layer.visible\" \n          @change=\"toggleLayer(layer)\" \n          class=\"layer-checkbox\"\n        />\n        <label :for=\"layer.name\" class=\"layer-label\">\n          {{ layer.translatedName }}\n        </label>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script setup>\nimport { ref, watch, onMounted } from 'vue';\n\nconst props = defineProps({\n  mapInstance: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  currentTranslations: { type: Object, required: true }\n});\n\nconst isVisible = ref(false);\n\n// Define the layers with predefined names to match\nconst layerDefinitions = [\n  { name: 'Seamarks', translatedKey: 'seamarksLayer', defaultName: 'Seamarks' },\n  { name: 'FixedInfrastructure', translatedKey: 'fixedInfrastructureLayer', defaultName: 'Fixed Infrastructure' },\n  { name: 'Anchorage', translatedKey: 'anchorageLayer', defaultName: 'Anchorage' }\n];\n\n// Reactive layers array\nconst layers = ref(layerDefinitions.map(def => ({\n  name: def.name,\n  translatedName: props.currentTranslations[def.translatedKey] || def.defaultName,\n  layer: null,\n  visible: false\n})));\n\n// Initialize layers when map is ready\nconst initializeLayers = () => {\n  if (!props.controlInstance) return;\n\n  // Find the grouped layer\n  const groupedLayerObj = props.controlInstance._layers.find(\n    layerObj => layerObj.originalName === \"Anchorage and seabed use\"\n  );\n\n  if (!groupedLayerObj) {\n    console.warn(\"Grouped layer 'Anchorage and seabed use' not found\");\n    return;\n  }\n\n  const groupedLayer = groupedLayerObj.layer;\n\n  // Get all layers in the group\n  const allGroupLayers = groupedLayer.getLayers();\n\n  // Match layers dynamically\n  layers.value.forEach((layerConfig, index) => {\n    // Try to match layer by name similarity or use the layer by index\n    const matchedLayer = allGroupLayers.find(layer => \n      layer.options?.name?.toLowerCase().includes(layerConfig.name.toLowerCase())\n    ) || allGroupLayers[index];\n\n    if (matchedLayer) {\n      layerConfig.layer = matchedLayer;\n      \n      // Check if the layer is currently on the map\n      layerConfig.visible = props.mapInstance.hasLayer(matchedLayer);\n      \n      // If layer should be visible but isn't, add it\n      if (layerConfig.visible) {\n        props.mapInstance.addLayer(matchedLayer);\n      }\n    }\n  });\n};\n\n// Toggle individual layer visibility\nconst toggleLayer = (layerConfig) => {\n  if (!layerConfig.layer) return;\n\n  layerConfig.visible = !layerConfig.visible;\n  \n  if (layerConfig.visible) {\n    props.mapInstance.addLayer(layerConfig.layer);\n  } else {\n    props.mapInstance.removeLayer(layerConfig.layer);\n  }\n};\n\n// Watch for changes in control instance\nwatch(() => props.controlInstance, () => {\n  initializeLayers();\n}, { immediate: true });\n\ndefineExpose({\n  show: () => {\n    isVisible.value = true;\n    initializeLayers();\n  },\n  hide: () => {\n    isVisible.value = false;\n  }\n});\n</script>\n\n<style scoped>\n.anchorage-layer-toggle-popup {\n  font-size: 13px;\n  font-weight: bold;\n  text-align: left;\n  position: absolute;\n  bottom: 20px;\n  right: 12px;\n  width: 180px;\n  max-height: 150px;\n  z-index: 1000;\n  background-color: #48506a;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 15px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: right 0.3s ease;\n  overflow: hidden;\n}\n.anchorage-layer-title{\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: white;\n  text-align: center;\n}\n\n.layers-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 100px;\n  overflow-y: auto;\n}\n\n.layer-toggle {\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n}\n\n.layer-checkbox {\n  margin-right: 8px;\n  width: 16px;\n  height: 16px;\n}\n\n.layer-label {\n  color: white;\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.ocean-depth-active .anchorage-layer-toggle-popup {\n  right: 200px;\n}\n\n</style>\n","import script from \"./AnchorageLayerToggle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AnchorageLayerToggle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AnchorageLayerToggle.vue?vue&type=style&index=0&id=66af2f0a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-66af2f0a\"]])\n\nexport default __exports__","<script setup>\nimport { ref, onUnmounted, watch } from 'vue';\nimport L from 'leaflet';\nimport Supercluster from 'supercluster';\nimport anchorageData from '@/assets/anchorage.json';\nimport anchorSVG from '@/assets/graphics/anchor.svg';\n\n\nconst props = defineProps({\n  mapInstance: {\n    type: Object,\n    required: true\n  },\n  controlInstance: {\n    type: Object,\n    required: true\n  },\n  mapReady: {\n    type: Boolean,\n    required: true\n  },\n  currentTranslations: {\n    type: Object,\n    required: true\n  }\n});\n\nconst supercluster = ref(new Supercluster({\n  radius: 40,\n  maxZoom: 16,\n  map: props => ({\n    label: props.label,\n    sublabel: props.sublabel,\n    distance: props.distance_from_shore_m,\n    isDock: props.dock === 'true',\n    count: 1\n  }),\n  reduce: (accumulated, props) => {\n    accumulated.count += props.count;\n    accumulated.isDock = accumulated.isDock || props.isDock;\n    return accumulated;\n  }\n}));\n\nconst anchorageLayer = ref(null);\nconst isLayerVisible = ref(false);\n\nconst updateClusters = () => {\n  if (!props.mapInstance || !anchorageLayer.value || !isLayerVisible.value) return;\n  \n  const bounds = props.mapInstance.getBounds();\n  const bbox = [\n    bounds.getWest(),\n    bounds.getSouth(),\n    bounds.getEast(),\n    bounds.getNorth()\n  ];\n  \n  const zoom = props.mapInstance.getZoom();\n  const clusters = supercluster.value.getClusters(bbox, Math.floor(zoom));\n  \n  // Clear existing layers\n  anchorageLayer.value.clearLayers();\n  \n  clusters.forEach(cluster => {\n    const coordinates = cluster.geometry.coordinates;\n    const latlng = L.latLng(coordinates[1], coordinates[0]);\n    \n    if (cluster.properties.cluster) {\n      // Create cluster marker\n      const count = cluster.properties.point_count;\n      const size = count < 100 ? 'small' : count < 1000 ? 'medium' : 'large';\n      \n      const clusterMarker = L.divIcon({\n        html: `\n          <div class=\"cluster-marker ${size}\">\n            ${count}\n          </div>\n        `,\n        className: 'custom-cluster-icon',\n        iconSize: L.point(40, 40)\n      });\n      \n      const marker = L.marker(latlng, {\n        icon: clusterMarker\n      });\n      \n      // Add click handler to zoom into cluster\n      marker.on('click', () => {\n        const expansionZoom = supercluster.value.getClusterExpansionZoom(cluster.properties.cluster_id);\n        props.mapInstance.setView(latlng, expansionZoom);\n      });\n      \n      anchorageLayer.value.addLayer(marker);\n    } else {\n      // Create individual point marker\n      const anchorIcon = L.divIcon({\n        html: `\n          <div class=\"anchor-icon\">\n            <img src=\"${anchorSVG}\" alt=\"Anchor\" width=\"24\" height=\"24\" />\n          </div>\n        `,\n        className: 'anchor-icon',\n        iconSize: L.point(24, 24)\n      });\n      const marker = L.marker(latlng, { icon: anchorIcon });\n      // Add tooltip\n      marker.bindTooltip(`\n        <strong>${cluster.properties.label}</strong><br>\n        ${cluster.properties.sublabel}<br>\n        ${props.currentTranslations.distanceFromShore}: ${cluster.properties.distance_from_shore_m} m<br>\n        ${props.currentTranslations.isDock}: <strong>${cluster.properties.dock === 'true' ? '<span class=\"text-green-500\">✓</span>' : '<span class=\"text-red-500\">✕</span>'}</strong>\n        <br>\n      `);\n      \n      anchorageLayer.value.addLayer(marker);\n    }\n  });\n};\n\nconst initializeLayer = () => {\n  if (!props.mapInstance || !props.mapReady) return;\n  \n  // Load GeoJSON features directly into supercluster\n  supercluster.value.load(anchorageData.features);\n  \n  // Initialize layer group if not exists\n  if (!anchorageLayer.value) {\n    anchorageLayer.value = L.layerGroup();\n    \n    // Add to map control layers\n    const anchorageOverlayLayer = props.controlInstance._layers.find(\n      layerObj => layerObj.originalName === \"Anchorage and seabed use\"\n    );\n    if (anchorageOverlayLayer) {\n      anchorageOverlayLayer.layer.addLayer(anchorageLayer.value);\n    } else {\n      console.warn(\"Could not find Anchorage and seabed use layer group\");\n      // Fallback: add directly to map if layer group not found\n      props.mapInstance.addLayer(anchorageLayer.value);\n    }\n    \n    // Add event listeners for map movements\n    props.mapInstance.on('moveend', updateClusters);\n    props.mapInstance.on('zoomend', updateClusters);\n    \n    // Listen for layer add/remove events\n    props.mapInstance.on('overlayadd', (e) => {\n      if (e.name === 'Anchorage and seabed use') {\n        isLayerVisible.value = true;\n        updateClusters();\n      }\n    });\n    \n    props.mapInstance.on('overlayremove', (e) => {\n      if (e.name === 'Anchorage and seabed use') {\n        isLayerVisible.value = false;\n      }\n    });\n  }\n};\n\n// Watch for map ready state\nwatch(() => props.mapReady, (newValue) => {\n  if (newValue) {\n    initializeLayer();\n  }\n});\n\n// Clean up on component unmount\nonUnmounted(() => {\n  if (props.mapInstance && anchorageLayer.value) {\n    props.mapInstance.off('moveend', updateClusters);\n    props.mapInstance.off('zoomend', updateClusters);\n    props.mapInstance.removeLayer(anchorageLayer.value);\n  }\n});\n</script>\n\n<style>\n.custom-cluster-icon {\n  background: none;\n  border: none;\n}\n\n.cluster-marker {\n  background-color: #48506a;\n  border-radius: 50%;\n  border: 2px solid #666;\n  color: #ffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n}\n\n.cluster-marker.small {\n  width: 30px;\n  height: 30px;\n  font-size: 12px;\n}\n\n.cluster-marker.medium {\n  width: 35px;\n  height: 35px;\n  font-size: 14px;\n}\n\n.cluster-marker.large {\n  width: 40px;\n  height: 40px;\n  font-size: 16px;\n}\n\n.text-green-500 {\n  color: green;\n}\n\n.text-red-500 {\n  color: red;\n}\n</style>","import script from \"./ClusteredAnchorage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClusteredAnchorage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClusteredAnchorage.vue?vue&type=style&index=0&id=426f31e1&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vShow as _vShow } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"?\", -1)\nconst _hoisted_2 = [\n  _hoisted_1\n]\nconst _hoisted_3 = {\n  key: 1,\n  class: \"custom-popup\"\n}\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#a2c3e2\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\" : > -200m \")\n], -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#6d9cc8\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\" : > -1000m \")\n], -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#426e9d\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\" : > -6000m \")\n], -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"#214d7c\"} }, \"■\"),\n  /*#__PURE__*/_createTextVNode(\" : > -11000m \")\n], -1)\nconst _hoisted_8 = {\n  key: 2,\n  class: \"custom-popup3\"\n}\nconst _hoisted_9 = {\n  key: 3,\n  class: \"date-popup\"\n}\nconst _hoisted_10 = {\n  key: 4,\n  class: \"date-popup\"\n}\nconst _hoisted_11 = { class: \"language-selector\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"language-icon\" }, null, -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"ENGLISH\" }, \"English\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"GERMAN\" }, \"Deutsch\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"SPANISH\" }, \"Español\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"FRENCH\" }, \"Français\", -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"ITALIAN\" }, \"Italiano\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"CHINESE\" }, \"中国\", -1)\nconst _hoisted_19 = [\n  _hoisted_13,\n  _hoisted_14,\n  _hoisted_15,\n  _hoisted_16,\n  _hoisted_17,\n  _hoisted_18\n]\nconst _hoisted_20 = { class: \"cable-source-selector\" }\nconst _hoisted_21 = {\n  key: 0,\n  class: \"earthquake-details\"\n}\n\nimport FunctionalityOverview from './FunctionalityOverview.vue';\n\nimport { ref, onMounted, watch, toRaw, computed, onBeforeUnmount } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet.wms';\n//import tracker from '@/openreplay';\nimport { tracker } from '@openreplay/tracker';\n\nimport 'leaflet/dist/leaflet.css';\n// Import the PolylineMeasure plugin\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure.css';\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure';\n\nimport axios from 'axios';\nimport {\n  LMap,\n  LTileLayer,\n  LControlLayers,\n  LTooltip,\n  LPolyline,\n  LMarker,\n  LCircleMarker,\n  LGeoJson,\n  LLayerGroup,\n} from '@vue-leaflet/vue-leaflet';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\n\n\n//Cable Selection\nimport CableSourceSelector from './CableSourceSelector.vue';\n\nimport DrawingLayer from './DrawingLayer.vue'\n//Translation\nimport translations from \"@/assets/translations/translations.json\";\nimport layerTranslations from \"@/assets/translations/layerTranslations.json\";\n\n//Cable Ships\nimport VesselTracking from './VesselTracking.vue';\nimport MaintenanceLayerToggle from './MaintenanceLayerToggle.vue';\n\n//MaritimeZone Imports\nimport eezBoundariesJson from \"@/assets/eez_boundaries_v12.json\";\nimport eez12nmJson from \"@/assets/eez_12nm_v4.json\";\n\nimport countries from \"@/assets/countries.json\";\n\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport '@vuepic/vue-datepicker/dist/main.css'\n//GasPipelines\nimport gasPipelinesJson from \"@/assets/GEM-GGIT-Gas-Pipelines-2023-12.json\";\n//Infrastructures\nimport fixedInfrastructure from \"@/assets/fixedInfrastructure.json\";\nimport ClusteredDataCenters from './ClusteredDataCenters.vue';\n\n//Anchorage\nimport AnchorageLayerToggle from './AnchorageLayerToggle.vue';\nimport ClusteredAnchorage from './ClusteredAnchorage.vue';\n\nimport debounce from \"lodash.debounce\";\n\nimport \"@maptiler/leaflet-maptilersdk\";\nimport 'leaflet-arrowheads';\n\nconst format = \"dd/MM/yyyy\";\ninterface Vessel {\n  id: string;\n  position: [number, number];\n  flag: string;\n}\n\nconst apiUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/4wings/generate-png';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LeafletMap',\n  setup(__props) {\n\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\n\n// Define reactive data\nconst zoom = ref(2.5);\nconst center = ref([47.41322, -1.219482]);\nconst circle = {\n  radius: 3,\n  selectedRadius: 6,\n  color: 'grey',\n  selectedColor: 'red',\n};\nconst modifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png');\nconst date =  ref();\nconst map = ref(null);\nconst mapReady = ref(false);\n\nfunction getTerritorialOptionsStyle(){\n  return {\n    color: '#4a2727',\n    dashArray: '8',\n    fillColor: '#4a2727',\n    fillOpacity: '0.2',\n  };\n}\n\nfunction getGasPipelinesOptionsStyle() {\n  return [\n    // Border style\n    (feature: any) => {\n      const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n      return {\n        color: isPipelineHighlighted ? '#FF5733' : '#333333',\n        weight: isPipelineHighlighted ? 6 : 4,\n        opacity: isPipelineHighlighted ? 0.9 : 0.5,\n        dashArray: '5',\n      };\n    },\n    // Fill style\n    (feature: any) => {\n      const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n      return {\n        color: isPipelineHighlighted ? '#FFAA33' : '#3dff98',\n        weight: isPipelineHighlighted ? 1.2 : 0.7,\n        opacity: isPipelineHighlighted ? 0.8 : 0.5,\n      };\n    }\n  ];\n}\n\nconst highlightedPipelineId = ref<string | null>(null);\n\nconst clusteredDataCentersRef = ref(null);\n\nfunction getEEZOptionsStyle(){\n  return{\n    color: '#8a3030', \n    dashArray: '8'\n  }\n}\n\n// Translation\nconst currentLanguage = ref('ENGLISH');\nconst changeLanguage = (language) => {\n  currentLanguage.value = language;\n  if (mapInstance.value) {\n    mtLayer.setLanguage(L.MaptilerLanguage[language]);\n    updateLayerControlNames();\n  }\n};\nfunction getLayerTranslation(layerName) {\n  if (layerTranslations[currentLanguage.value] && layerTranslations[currentLanguage.value][layerName]) {\n    return layerTranslations[currentLanguage.value][layerName];\n  }\n  return layerName;\n}\nconst currentTranslations = computed(() => translations[currentLanguage.value]);\nconst getTranslatedInfrastructureName = (infrastructure) => {\n  const name = currentTranslations.value[infrastructure.name] || currentTranslations.value.unknown;\n  const confidence = currentTranslations.value[infrastructure.confidence];\n  return `${name} (${currentTranslations.value.confidence} ${confidence})`;\n};\n//Reset Map Layer\nconst resetMapLayer = ref(null);\n\nlet resetMapCallCount = 0;\n\nconst resetMap = () => {\n  if (!mapInstance.value || !controlInstance) {\n    console.warn('Map instance or control instance not available');\n    return;\n  }\n\n  // Remove all overlay layers from the map\n  controlInstance._layers.forEach(layerObj => {\n    if (layerObj.overlay && mapInstance.value.hasLayer(layerObj.layer)) {\n      mapInstance.value.removeLayer(layerObj.layer);\n    }\n  });\n\n  // Uncheck all overlay layers in the layer control\n  if (controlInstance._layerControlInputs) {\n    controlInstance._layerControlInputs.forEach(input => {\n      if (input.overlay) {\n        input.checked = false;\n      }\n    });\n  }\n\n  // Force control to update its display\n  controlInstance._update();\n\n  // Remove class modifiers from map container\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active',\n    'fishing-active',\n    'seismic-active',\n    'anchorage-active',\n    'cable-ships-active'\n  );\n\n  // Reset state variables\n  oceanSelected.value = false;\n  fishingSelected.value = false;\n  showSeismicOverlay.value = false;\n\n  // Exit vessel tracking mode if active\n  if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  }\n\n  // Clear any selections\n  cableStore.deselectCables();\n  landingSiteStore.deselectLandingSite();\n\n  // Hide any open toggles\n  if (anchorageLayerToggleRef.value) {\n    anchorageLayerToggleRef.value.hide();\n  }\n  if (maintenanceLayerToggleRef.value) {\n    maintenanceLayerToggleRef.value.hide();\n  }\n\n  // Switch to the default base layer\n  const baseLayer = controlInstance._layers.find(layer => \n    !layer.overlay && layer.originalName === \"Base Layer\"\n  );\n  \n  if (baseLayer && baseLayer.layer) {\n    // Remove current base layer if any\n    controlInstance._layers\n      .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n      .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n    \n    // Add Base Layer\n    mapInstance.value.addLayer(baseLayer.layer);\n    \n    // Update layer control\n    controlInstance._update();\n  }\n};\n//Fishing\nconst fishLayerReady = ref(false);\nconst postResponse = ref(null);\nconst fishingSelected = ref(false);\n\n//Vessel Tracking\nconst hoveredMarker = ref(null);\nconst eventMarkerLayer = ref(null);\nconst viewingVesselTrack = ref(false);\n\nconst vesselTrackingRef = ref<any>(null);\nconst vesselLayerReady = ref(false);\nconst vesselPositions = ref([]);\nwatch(() => vesselTrackingRef.value?.vesselLayerReady, (newValue) => {\n  vesselLayerReady.value = newValue;  \n}, { immediate: true });\n\n // Watch for vesselPositions from VesselTracking\nwatch(\n  () => vesselPositions,\n  (newPositions) => {\n    if (newPositions && Array.isArray(newPositions) && newPositions.length > 0) {\n      vesselPositions.value = newPositions;\n    }\n  },\n  { deep: true }\n);\n\n//Watch for hoveredMarker changes and either add Marker or clear Marker\nwatch(\n  () => hoveredMarker.value,\n  (newMarker) => {\n    if (newMarker && eventMarkerLayer.value) {\n      eventMarkerLayer.value.addLayer(newMarker);\n    } else if (eventMarkerLayer.value && newMarker === null) {\n      eventMarkerLayer.value.clearLayers();\n    }\n  },\n  { deep: true }\n);\nconst exitVesselTrackingMode = () => {\n  vesselTrackingRef.value.exitVesselTrackingMode();\n}\n\nconst createShipIcon = (vessel: Vessel, caller : string) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return null;\n  }\n  return vesselTrackingRef.value.createShipIcon('#ff7800', vessel.flag, vessel);\n};\n\n// Wrapper function to call onShipClick from VesselTracking\nconst onShipClick = (e: Event, vessel: Vessel) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return;\n  }\n  vesselTrackingRef.value.onShipClick(e, vessel);\n};\n\nconst maintenanceLayerToggleRef = ref(null);\n//Fixed Infrastructure\nconst anchorageLayerToggleRef = ref(null);\nconst clusteredAnchorageRef = ref(null);\n\nconst infrastructurePositions = ref([]);\nconst processInfrastructureData = () => {\n  infrastructurePositions.value = fixedInfrastructure.results\n    .filter(item => !(item.label === \"noise\") && item.structure_end_date === \"\")\n    .map(item => ({\n      id: item.detection_id,\n      position: [item.lat, item.lon],\n      name: item.label,\n      confidence: item.label_confidence,\n      lastSeen: item.detection_date\n    }));\n};\n\nconst onPipelineClick = (e) => {\n  L.DomEvent.stopPropagation(e);\n  const feature = e.layer.toGeoJSON();\n  const properties = feature.properties;\n  const pipelineId = properties.PipelineID;\n\n  // Store the previously highlighted pipeline ID before updating\n  const previouslyHighlighted = highlightedPipelineId.value;\n  \n  // Toggle highlighting - if clicking same pipeline, deselect it\n  if (highlightedPipelineId.value === pipelineId) {\n    highlightedPipelineId.value = null;\n  } else {\n    highlightedPipelineId.value = pipelineId;\n  }\n\n  // Force redraw of all pipeline segments\n  if (mapInstance.value) {\n    mapInstance.value.eachLayer((layer) => {\n      if (layer.feature && layer.feature.properties) {\n        const isSamePipeline = layer.feature.properties.PipelineID === pipelineId;\n        const wasPreviouslyHighlighted = layer.feature.properties.PipelineID === previouslyHighlighted;\n        \n        // Only update layers that are either newly selected or previously selected\n        if (isSamePipeline || wasPreviouslyHighlighted) {\n          const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n          \n          // Check if this is a border layer or a fill layer\n          const currentStyle = layer.options;\n          \n          if (currentStyle.dashArray) {\n            layer.setStyle(borderStyle(layer.feature));\n          } else {\n            layer.setStyle(fillStyle(layer.feature));\n          }\n        }\n      }\n    });\n  }\n\n  // Show popup with pipeline info if a new pipeline was selected\n  if (highlightedPipelineId.value === pipelineId) {\n    const cost = properties.CostUSD ?? properties.Cost;\n    const formattedCost = cost ? formatCost(cost) : 'N/A';\n    const popupContent = `<strong>${properties.PipelineName}</strong><br/>\n      <strong>${currentTranslations.value.startCountry}:</strong> ${properties.StartCountry}<br/>\n      <strong>${currentTranslations.value.endCountry}:</strong> ${properties.EndCountry}<br/>\n      <strong>${currentTranslations.value.countries}:</strong> ${properties.Countries}<br/>\n      <strong>${currentTranslations.value.owner}:</strong> ${properties.Owner}<br/>\n      <strong>${currentTranslations.value.startYear}:</strong> ${properties.StartYear1}<br/>\n      <strong>${currentTranslations.value.capacity}:</strong> <span title=\"${currentTranslations.value.capacityTooltip}\">${properties[\"CapacityBcm/y\"]} Bcm/y</span><br/>\n      <strong>${currentTranslations.value.cost}:</strong> ${formattedCost}$<br/>\n      <strong>${currentTranslations.value.length}:</strong> ${properties.LengthKnownKm} km<br/>`;\n    \n    const popup = L.popup()\n      .setLatLng(e.latlng)\n      .setContent(popupContent)\n      .openOn(mapInstance.value);\n  }\n};\n\n// Utility function to format large numbers into billions or millions\nconst formatCost = (cost) => {\n  if (cost >= 1e9) {\n    return `${(cost / 1e9).toFixed(2)} B`;\n  } else if (cost >= 1e6) {\n    return `${(cost / 1e6).toFixed(2)} M`;\n  } else {\n    return cost.toString();\n  }\n};\n\nconst onPipelineHover = (e: Event) => {\n  const feature = e.layer.toGeoJSON();\n\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(feature.properties.PipelineName)\n      .addTo(mapInstance.value);\n  }\n}\n\nconst onPipelineDehover = (e: Event) => {\n  mapInstance.value.removeLayer(tooltip);\n}\n\n//Ocean depth\nconst drawingLayerRef = ref<any>(null);\nconst isDrawingModeActive = ref(false);\n\nconst oceanSelected = ref(false);\nconst currentOceanDepth = ref(\"Ocean Depth at this point: -5000m\");\nconst depthTooltip = ref(null);\n\nwatch(() => drawingLayerRef.value?.isDrawingModeActive, (newValue) => {\n  isDrawingModeActive.value = newValue;  \n}, { immediate: true });\n\nconst updateDepthTooltip = (e) => {\n  if (oceanSelected.value && depthTooltip.value) {\n    const containerPoint = mapInstance.value.latLngToContainerPoint(e.latlng);\n    depthTooltip.value.style.left = `${containerPoint.x + 15}px`;\n    depthTooltip.value.style.top = `${containerPoint.y + 15}px`;\n    depthTooltip.value.style.display = 'block';\n  } else if (depthTooltip.value) {\n    depthTooltip.value.style.display = 'none';\n  }\n};\nconst lattitude = ref(15);\nconst longitude = ref(15);\nconst functionalityOverviewRef = ref(null);\n\nconst seismicData = ref(null);\nconst showSeismicOverlay = ref(false); \nconst selectedEarthquake = ref(null);\nconst seismicLayer = ref(null);\nwatch(currentLanguage, () => {\n  if (showSeismicOverlay.value) {\n    updateSeismicLayer();\n  }\n});\nwatch(showSeismicOverlay, (newValue) => {\n  if (newValue) {\n    updateSeismicLayer();\n  } else if (seismicLayer.value) {\n    mapInstance.value.removeLayer(seismicLayer.value);\n    seismicLayer.value = null;\n  }\n});\nconst updateSeismicLayer = () => {\n  if (mapInstance.value && showSeismicOverlay.value && seismicData.value) {\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n    }\n\n    seismicLayer.value = L.geoJSON(seismicData.value, {\n      pointToLayer: reactivePointToLayer.value\n    }).addTo(mapInstance.value);\n  }\n};\n\n//Tile Provider for Ocean Layer\nconst tileProviders2 = [\n      {\n        url:\"https://server.arcgisonline.com/ArcGIS/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}\",\n        attribution:\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n        name:\"Ocean Depth\",\n        maxZoom: 10,\n        visible: false,\n      },\n      {\n        url:\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_only_labels/{z}/{x}/{y}{r}.png\",\n        attribution:\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n        name:\"Ocean Depth\",\n        maxZoom: 10,\n        visible: false,\n      },\n    ]\n//Polyline Measurement Tool\nlet tooltip = null;\nlet mtLayer = null;\n//Instanz von Map um auf Funktionen zugreifen zu können\nconst mapInstance = ref(null);\nconst polylineMeasure = ref(null);\nconst onMapReady = (mapIns) => {\n  mapInstance.value = mapIns;\n  cableStore.setMapInstance(mapIns);\n\n  // Create Reset Map layer\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n\n  initializePolylineMeasure();\n\n  tooltip = L.tooltip({\n    permanent: false,\n    direction: 'top',\n    offset: L.point(0, -10),\n    className: 'custom-tooltip'\n  });\n\n  mtLayer = new L.MaptilerLayer({\n    apiKey: \"fpBo6pC8RABDYTlWtD7U\",\n    language: L.MaptilerLanguage[\"ENGLISH\"],\n    style: L.MaptilerStyle.DATAVIZ,\n    name: \"OceanDepth\",\n    layertype: \"base\",\n  });\n\n  mtLayer.addTo(mapInstance.value);\n  eventMarkerLayer.value = L.layerGroup().addTo(mapInstance.value);\n  \n  mapReady.value = true;\n  \n};\n\nconst initializePolylineMeasure = () => {\n  polylineMeasure.value = L.control.polylineMeasure({\n    position: 'topleft',\n    showUnitControl: true,\n    unitControlUnits: [\"kilometres\", \"nauticalmiles\", \"landmiles\"],\n    unitControlTitle: {\n      text: 'Change Units',\n      metres: 'metres',\n      nauticalmiles: 'nautical miles',\n      landmiles: 'land miles'\n    },\n    unitControlLabel: {\n      metres: 'm',\n      kilometres: 'km',\n      feet: 'ft',\n      landmiles: 'mi',\n      nauticalmiles: 'nm'\n    },\n    useMapZoomAnimation: false\n  });\n\n  polylineMeasure.value.addTo(mapInstance.value);\n\n  // Handle zoom events\n  mapInstance.value.on('zoomstart', () => {\n    const tempLines = document.querySelectorAll('.leaflet-polylinemeasure-temporary-layer');\n    const measureLines = document.querySelectorAll('.leaflet-polylinemeasure-permanent-layer');\n    \n    // Temporarily hide measurement lines during zoom\n    tempLines.forEach(line => { line.style.display = 'none'; });\n    measureLines.forEach(line => { line.style.display = 'none'; });\n  });\n\n  mapInstance.value.on('zoomend', () => {\n    const tempLines = document.querySelectorAll('.leaflet-polylinemeasure-temporary-layer');\n    const measureLines = document.querySelectorAll('.leaflet-polylinemeasure-permanent-layer');\n    \n    // Show them again after zoom is complete\n    tempLines.forEach(line => { line.style.display = ''; });\n    measureLines.forEach(line => { line.style.display = ''; });\n  });\n};\n//Instanz von controlInstance um auf Funktionen zugreifen zu können\nlet controlInstance = null;\nconst onLayerControlReady = (controlIns) => {\n    controlInstance = controlIns;\n\n    // Rest of the existing layer control setup...\n    if (resetMapLayer.value) {\n        const resetMapContainer = document.createElement('div');\n        resetMapContainer.className = 'reset-map-container hidden';\n        \n        const resetMapButton = document.createElement('div');\n        resetMapButton.className = 'reset-map-button';\n        resetMapButton.textContent = getLayerTranslation(\"ResetMap\");\n        \n        resetMapContainer.appendChild(resetMapButton);\n        \n        const layerControlContainer = controlInstance.getContainer();\n        layerControlContainer.appendChild(resetMapContainer);\n        \n        resetMapButton.addEventListener('click', resetMap);\n    }\n    \n    // Add Data Centers layer to control\n    if (clusteredDataCentersRef.value && clusteredDataCentersRef.value.dataCenterLayer) {\n    controlInstance.addOverlay(clusteredDataCentersRef.value.dataCenterLayer, 'Data Centers');\n  }\n    updateLayerControlNames();\n};\n\nonBeforeUnmount(() => {\n  if (polylineMeasure.value && mapInstance.value) {\n    mapInstance.value.removeControl(polylineMeasure.value);\n  }\n});\n\nconst polylinesBounds = {};\n//set polyline to store\nconst onCreateLine = (polylineInstance, cableId) => {\n  // this overrides the line if a cable has more then one section. It will be better to set new bounds to whole system size\n  // TODO look for something like compine bounds\n  const bounds = polylineInstance.getBounds();\n  polylinesBounds[cableId] = polylinesBounds[cableId] ? polylinesBounds[cableId].extend(bounds) : bounds;\n\n  polylineInstance.on('mouseover', () => {\n    polylineInstance.openTooltip();\n  });\n  polylineInstance.on('mouseout', () => {\n    polylineInstance.closeTooltip();\n  });\n};\n\n//Bei Kabelwechsel Karte dort hin pannen und zoomen lassen\nwatch(() => cableStore.selectCable, (state) => {\n  if (cableStore.selectedFromSidebar) {\n    let bounds;\n    for(const cable of state) {\n      const bound = polylinesBounds[cable]\n      bounds = bounds ? bounds.extend(bound) : bound\n    }\n    if(bounds){\n      mapInstance.value.fitBounds(bounds)\n    }\n    cableStore.selectedFromSidebar = false;\n  }\n})\n\nwatch(\n  () => cableStore.viewingVesselTrack,\n  (newValue) => {\n    if (newValue) {\n      viewingVesselTrack.value = true;\n    } else {\n      viewingVesselTrack.value = false;\n    }\n  }\n);\n\nwatch(() => landingSiteStore.selectLandingSites, (state) => {\n  if (landingSiteStore.selectedFromSidebar) {\n    var latlng = L.latLng(state[0].geoData);\n    mapInstance.value.setView(latlng);\n    landingSiteStore.selectedFromSidebar = false;\n  }\n})\n\n//Function to update the Layer Names on the Layer Control which is called after the language has been changed\nfunction updateLayerControlNames() {\n  if (controlInstance) {\n    controlInstance._layers.forEach(layerObj => {\n      if(layerObj.originalName == null) layerObj.originalName = layerObj.name;\n      const translatedName = getLayerTranslation(layerObj.originalName);\n      layerObj.name = translatedName;\n    });\n    controlInstance._update();\n  }\n}\n\n//Tooltip for cable hover gets shown\nconst showTooltip = (e, cableName) => {\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(cableName)\n      .addTo(mapInstance.value);\n  }\n};\n\n//Tooltip for cable hover gets removed\nconst hideTooltip = () => {\n  if (mapInstance.value && tooltip) {\n    mapInstance.value.removeLayer(tooltip);\n  }\n};\n\nconst params = {\n  color: '#48ba0f',\n  interval: 'DAY',\n  'datasets[0]': 'public-global-fishing-effort:latest',\n  'date-range': '2023-11-01,2023-12-24' //Eventuell immer Standard Datum (bspw. vor einem Monat) nehmen\n};\n\nfishingWatch();\n\nasync function fishingWatch(){\n  try {\n    const response = await axios.post(apiUrl, null, {params: params})\n      postResponse.value = response; //TODO: evtl. ColorRamp rausschmeißen und nur URL speichern\n      modifiedPostUrl.value = response.data.url.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n      fishLayerReady.value = true;\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nconst cableShipsLayerGroup = ref(L.layerGroup());\n\nonMounted(() => {\n  processInfrastructureData();\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n});\n\n//Extracts Ocean Depth for current mouse position from GEBCO Web Map Service\nlet lastDepthQuery = '';\n\nasync function getOceanDepth(lat, lng) {\n  const queryString = `${lat.toFixed(4)},${lng.toFixed(4)}`;\n  if (queryString === lastDepthQuery) return;\n  lastDepthQuery = queryString;\n  try{\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n\n    let searchString = \"value_list\";\n    let searchIndex = response.data.indexOf(searchString);\n    let extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    currentOceanDepth.value = `${currentTranslations.value.oceanDepth}: ${extractedText}m`;\n  } catch(error) {\n    console.error(error);\n    currentOceanDepth.value = \"Ocean Depth: Unknown\";\n  }\n}\n\n//Translates picked Date from Datepicker to API Call to GlobalFishingWatch\nfunction datePicked(e){\n  if(e != null) {\n    let firstDay = formatDatePart(e[0].getDate());\n    let firstMonth = formatDatePart(e[0].getMonth() + 1);\n    let secondDay = formatDatePart(e[1].getDate());\n    let secondMonth = formatDatePart(e[1].getMonth() + 1);\n    params['date-range'] = e[0].getFullYear() + '-' + firstMonth + '-' +  firstDay + ',' + e[1].getFullYear() + '-' + secondMonth + '-' + secondDay;\n    fishingWatch();\n  }\n}\n\n//Helper Function to formate Dates\nfunction formatDatePart(part){\n  return part < 10 ? '0' + part : part;\n}\n\n// Funktion für Layerwechsel (@baselayerchanged Listener), um Popup bei Aktivierung/Deaktivierung des Ocean Layers zu öffnen/schließen\nfunction layerChanged(e) {\n  if (!mapInstance.value || !mapInstance.value._container) {\n    console.warn('Map instance not ready during layer change');\n    return;\n  }\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active', \n    'fishing-active', \n    'seismic-active'\n  );\n\n  /* if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  } */\n\n  if (e.originalName === \"Reset Map\") {\n    resetMap();\n    \n    // Find and switch to Base Layer\n    const baseLayer = controlInstance._layers.find(layer => \n      !layer.overlay && layer.originalName === \"Base Layer\"\n    );\n    \n    if (baseLayer && baseLayer.layer) {\n      // Remove current base layer if any\n      controlInstance._layers\n        .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n        .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n      \n      // Add Base Layer\n      mapInstance.value.addLayer(baseLayer.layer);\n      \n      // Update layer control\n      controlInstance._update();\n    }\n    return;\n  }\n  if(e.originalName === \"Base Layer\"){\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if(e.originalName === \"Seismic Activity\"){\n    mapContainer.classList.add('seismic-active');\n    fetchSeismicData();\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = true;\n  }\n  else if (e.originalName === \"Fishing Activity\"){\n    mapContainer.classList.add('fishing-active');\n    fishingSelected.value = true;\n    oceanSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if (e.originalName === \"Ocean Depth\") {\n    mapContainer.classList.add('ocean-depth-active');\n    oceanSelected.value = true;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  } else {\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n}\n\nfunction overlayAdded(e) {\n  const mapContainer = mapInstance.value._container;\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.add('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.show();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.add('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.show();\n    }\n  }\n}\n\nfunction overlayRemoved(e) {\n  const mapContainer = mapInstance.value._container;\n\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.remove('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.hide();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.remove('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.hide();\n    }\n  }\n}\n\nconst questionMarkClicked = () => {\n  if(functionalityOverviewRef.value){\n    functionalityOverviewRef.value.openModal();\n  }\n}\n\nlet set = false;\nconst onMapClick = ( event ) => { // onMapClick = (e: event) => { ... }\n  // TODO This is a workaround because the event is propagation to alls listeners\n  // Tested: mapInstance._container.stopPropgating(e)\n  // Tested: e.selected = true -> and then read in next handler\n  // Tested: @click.stop didn't work(see issue https://github.com/vue-leaflet/vue-leaflet/issues/362)\n  const previouslyHighlighted = highlightedPipelineId.value;\n  highlightedPipelineId.value = null;\n  \n  // Force redraw of previously highlighted pipeline if there was one\n  if (previouslyHighlighted && mapInstance.value) {\n    mapInstance.value.eachLayer((layer) => {\n      if (layer.feature && \n          layer.feature.properties && \n          layer.feature.properties.PipelineID === previouslyHighlighted) {\n        \n        const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n        \n        // Check if this is a border layer or a fill layer\n        const currentStyle = layer.options;\n        \n        // Apply appropriate style based on layer type\n        if (currentStyle.dashArray) {\n          layer.setStyle(borderStyle(layer.feature));\n        } else {\n          layer.setStyle(fillStyle(layer.feature));\n        }\n      }\n    });\n  }\n  if (maintenanceLayerToggleRef.value) {\n    const targetElement = event.originalEvent.target;\n    if (targetElement && !targetElement.classList.contains('leaflet-interactive')) {\n      maintenanceLayerToggleRef.value.clearHighlightedZones();\n    }\n  }  \n\n  if(!set) {\n    cableStore.deselectCables();\n    landingSiteStore.deselectLandingSite();\n  }\n  set = false\n}\n\nconst onCableClick = (e, cable) => {\n  set = true\n  if(!landingSiteStore.isOneSelected() && cableStore.isCableSelected(cable.id)) {\n    cableStore.deselectCables();\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(cable.id, false) // Set fromSidebar to false\n  }\n  \n  // Display cable name at click position\n  L.popup()\n    .setLatLng(e.latlng)\n    .setContent(cable.name)\n    .openOn(mapInstance.value);\n}\nconst onLandingSiteClick = (e, landingSite) => {\n  set = true\n  cableStore.deselectCables();\n  if(landingSiteStore.isLandingSiteSelected(toRaw(landingSite))) {\n    landingSiteStore.deselectLandingSite();\n  } else {\n    landingSiteStore.setSelectLandingSite(toRaw(landingSite))\n  }\n}\n\nconst updateMousePosition = debounce((e) => {\n  if(oceanSelected.value){\n    const latlng = e.latlng;\n    lattitude.value = latlng.lat;\n    longitude.value = latlng.lng;\n    if(!isDrawingModeActive.value){\n      getOceanDepth(latlng.lat, latlng.lng);\n      updateDepthTooltip(e);\n    }\n  }\n}, 100);\n\n//SEISMIC LAYER\nconst seismicDatePicked = (e) => {\n  if (e != null) {\n    let startDate = formatDatePart(e[0].getDate());\n    let startMonth = formatDatePart(e[0].getMonth() + 1);\n    let endDate = formatDatePart(e[1].getDate());\n    let endMonth = formatDatePart(e[1].getMonth() + 1);\n    const startTime = `${e[0].getFullYear()}-${startMonth}-${startDate}`;\n    const endTime = `${e[1].getFullYear()}-${endMonth}-${endDate}`;\n    // Clear existing seismic layer\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n      seismicLayer.value = null;\n    }\n    \n    fetchSeismicData(startTime, endTime);\n  } else {\n    // Clear existing seismic layer\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n      seismicLayer.value = null;\n    }\n    \n    fetchSeismicData();\n  }\n};\n\nconst fetchSeismicData = async (startTime = null, endTime = null) => {\n  try {\n    let url;\n    if (startTime && endTime) {\n      // Fetch data for the specified date range\n      url = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${startTime}&endtime=${endTime}`;\n    } else {\n      // Default to the last week's data\n      url = 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson';\n    }\n    const response = await axios.get(url);\n    seismicData.value = response.data;\n\n        // Add new seismic layer to the map\n        if (mapInstance.value && seismicData.value) {\n      seismicLayer.value = L.geoJSON(seismicData.value, {\n        pointToLayer: reactivePointToLayer.value\n      }).addTo(mapInstance.value);\n    }\n  } catch (error) {\n    console.error('Error fetching seismic data:', error);\n  }\n};\n\n// Fetch initial seismic data (last week's data) on component mount\n//fetchSeismicData();\n\nconst reactivePointToLayer = computed(() => (feature, latlng) => {\n  const magnitude = feature.properties.mag;\n  const radius = magnitude * 3;\n  const fillColor = magnitude > 5 ? 'red' : magnitude > 3 ? 'orange' : 'yellow';\n  return L.circleMarker(latlng, {\n    radius: radius,\n    fillColor: fillColor,\n    color: 'black',\n    weight: 1,\n    opacity: 1,\n    fillOpacity: 0.8\n  }).bindTooltip(`\n    <strong>${currentTranslations.value.magnitude}:</strong> ${magnitude}<br>\n    <strong>${currentTranslations.value.location}:</strong> ${feature.properties.place}<br>\n    <strong>${currentTranslations.value.time}:</strong> ${new Date(feature.properties.time).toLocaleString()}\n  `);\n});\n\n// Fetch seismic data on component mount\n//fetchSeismicData();\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(LMap), {\n      ref: map.value,\n      zoom: zoom.value,\n      center: center.value,\n      minZoom: 1.5,\n      options: { zoomControl: true, markerZoomAnimation: false, worldCopyJump: true },\n      onBaselayerchange: layerChanged,\n      onOverlayadd: overlayAdded,\n      onOverlayremove: overlayRemoved,\n      onClick: _cache[14] || (_cache[14] = (e) => onMapClick(e)),\n      onReady: onMapReady,\n      onMousemove: _cache[15] || (_cache[15] = (e) => _unref(updateMousePosition)(e))\n    }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(cableStore).dataCables, (cable) => {\n          return (_openBlock(), _createElementBlock(_Fragment, null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cable.geoData, (section) => {\n              return (_openBlock(), _createBlock(_unref(LPolyline), {\n                \"lat-lngs\": section,\n                key: section,\n                color: cable.color,\n                opacity: \n          !viewingVesselTrack.value && (_unref(cableStore).isNoneSelected ||_unref(cableStore).isCableSelected(cable.id))\n            ? 1\n            : 0.15\n        ,\n                dashArray: cable.outOfService ? '5 5' : null,\n                onClick: (e) => onCableClick(e, cable),\n                onReady: (e) => onCreateLine(e, cable.id),\n                onMouseover: (e) => showTooltip(e, cable.name),\n                onMouseout: _cache[0] || (_cache[0] = (e) => hideTooltip(e))\n              }, null, 8, [\"lat-lngs\", \"color\", \"opacity\", \"dashArray\", \"onClick\", \"onReady\", \"onMouseover\"]))\n            }), 128))\n          ], 64))\n        }), 256)),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(landingSiteStore).getLandingSites, (tee) => {\n          return (_openBlock(), _createBlock(_unref(LCircleMarker), {\n            \"lat-lng\": tee.geoData,\n            key: tee,\n            radius: \n        _unref(landingSiteStore).isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedRadius\n          : circle.radius\n      ,\n            color: \n        _unref(landingSiteStore).isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedColor\n          : circle.color\n      ,\n            onClick: (e) => onLandingSiteClick(e, tee)\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_unref(LTooltip), null, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(tee.name) + \", \" + _toDisplayString(tee.country), 1)\n                ]),\n                _: 2\n              }, 1024)\n            ]),\n            _: 2\n          }, 1032, [\"lat-lng\", \"radius\", \"color\", \"onClick\"]))\n        }), 128)),\n        _createVNode(_unref(LControlLayers), {\n          ref: \"layerControl\",\n          onReady: onLayerControlReady\n        }, null, 512),\n        _createVNode(_unref(LLayerGroup), {\n          visible: false,\n          name: \"Seismic Activity\",\n          \"layer-type\": \"base\"\n        }, {\n          default: _withCtx(() => [\n            (seismicData.value)\n              ? (_openBlock(), _createBlock(_unref(LGeoJson), {\n                  key: 0,\n                  geojson: seismicData.value,\n                  options: { pointToLayer: reactivePointToLayer.value }\n                }, null, 8, [\"geojson\", \"options\"]))\n              : _createCommentVNode(\"\", true),\n            (showSeismicOverlay.value)\n              ? (_openBlock(), _createBlock(_unref(LCircleMarker), {\n                  key: 1,\n                  \"lat-lng\": [5.7, 97.4],\n                  radius: 15,\n                  fillColor: \"red\",\n                  color: \"black\",\n                  weight: 1,\n                  opacity: 1,\n                  fillOpacity: 0.8\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(LTooltip), null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Dummy Earthquake\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LTileLayer), {\n          name: \"Fishing Activity\",\n          url: modifiedPostUrl.value,\n          visible: false,\n          attribution: \"<a href=\\\" https://globalfishingwatch.org\\\">Powered by Global Fishing Watch</a>\",\n          \"layer-type\": \"base\"\n        }, null, 8, [\"url\"]),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Ocean Depth\",\n          \"layer-type\": \"base\",\n          visible: false\n        }, {\n          default: _withCtx(() => [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tileProviders2, (tileProvider) => {\n              return _createVNode(_unref(LTileLayer), {\n                key: tileProvider.name,\n                name: tileProvider.name,\n                visible: tileProvider.visible,\n                url: tileProvider.url,\n                attribution: tileProvider.attribution,\n                maxZoom: tileProvider.maxZoom\n              }, null, 8, [\"name\", \"visible\", \"url\", \"attribution\", \"maxZoom\"])\n            }), 64))\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LGeoJson), {\n          geojson: _unref(eez12nmJson),\n          \"layer-type\": \"overlay\",\n          name: \"Territorial Waters (12nm)\",\n          visible: false,\n          \"options-style\": getTerritorialOptionsStyle\n        }, null, 8, [\"geojson\"]),\n        _createVNode(_unref(LGeoJson), {\n          geojson: _unref(eezBoundariesJson),\n          \"layer-type\": \"overlay\",\n          name: \"Exclusive Economic Zone (200nm)\",\n          visible: false,\n          \"options-style\": getEEZOptionsStyle\n        }, null, 8, [\"geojson\"]),\n        _createVNode(VesselTracking, {\n          mapReady: mapReady.value,\n          mapInstance: mapInstance.value,\n          controlInstance: _unref(controlInstance),\n          currentLanguage: currentLanguage.value,\n          cableStore: _unref(cableStore),\n          \"layer-group\": cableShipsLayerGroup.value,\n          vesselPositions: vesselPositions.value,\n          \"onUpdate:vesselPositions\": _cache[1] || (_cache[1] = ($event: any) => ((vesselPositions).value = $event)),\n          hoveredMarker: hoveredMarker.value,\n          \"onUpdate:hoveredMarker\": _cache[2] || (_cache[2] = ($event: any) => ((hoveredMarker).value = $event)),\n          viewingVesselTrack: viewingVesselTrack.value,\n          \"onUpdate:viewingVesselTrack\": _cache[3] || (_cache[3] = ($event: any) => ((viewingVesselTrack).value = $event)),\n          ref_key: \"vesselTrackingRef\",\n          ref: vesselTrackingRef\n        }, null, 8, [\"mapReady\", \"mapInstance\", \"controlInstance\", \"currentLanguage\", \"cableStore\", \"layer-group\", \"vesselPositions\", \"hoveredMarker\", \"viewingVesselTrack\"]),\n        _createVNode(_unref(LLayerGroup), {\n          visible: false,\n          name: \"Cable Ships\",\n          \"layer-type\": \"overlay\"\n        }, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(vesselPositions.value, (vessel) => {\n              return (_openBlock(), _createBlock(_unref(LMarker), {\n                key: vessel.id,\n                \"lat-lng\": vessel.position,\n                icon: createShipIcon(vessel, 'OVERLAY'),\n                onClick: (e) => onShipClick(e, vessel)\n              }, null, 8, [\"lat-lng\", \"icon\", \"onClick\"]))\n            }), 128))\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Anchorage and seabed use\",\n          \"layer-type\": \"overlay\",\n          visible: false\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LTileLayer), {\n              name: \"Seamarks\",\n              url: \"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\",\n              attribution: \"Map data: © <a href=\\\"http://www.openseamap.org\\\">OpenSeaMap</a> contributors\",\n              visible: false\n            }),\n            _createVNode(_unref(LLayerGroup), {\n              name: \"Fixed Infrastructure\",\n              \"layer-type\": \"overlay\"\n            }, {\n              default: _withCtx(() => [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(infrastructurePositions.value, (infrastructure) => {\n                  return (_openBlock(), _createBlock(_unref(LCircleMarker), {\n                    key: infrastructure.id,\n                    \"lat-lng\": infrastructure.position,\n                    radius: 5,\n                    color: \"#FFFFFF\",\n                    \"fill-color\": \"#1d8f82\",\n                    opacity: 1,\n                    \"fill-opacity\": 1,\n                    weight: 1\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_unref(LTooltip), null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(getTranslatedInfrastructureName(infrastructure)) + \", \" + _toDisplayString(currentTranslations.value.since) + \": \" + _toDisplayString(infrastructure.lastSeen), 1)\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"lat-lng\"]))\n                }), 128))\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          name: \"Base Layer\",\n          \"layer-type\": \"base\",\n          visible: true\n        }),\n        _createVNode(_unref(LLayerGroup), {\n          visible: false,\n          name: \"Gas Pipelines\",\n          \"layer-type\": \"overlay\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(LGeoJson), {\n              geojson: _unref(gasPipelinesJson),\n              \"options-style\": getGasPipelinesOptionsStyle()[0],\n              onClick: _cache[4] || (_cache[4] = (e) => onPipelineClick(e)),\n              onMouseover: _cache[5] || (_cache[5] = (e) => onPipelineHover(e)),\n              onMouseout: _cache[6] || (_cache[6] = (e) => onPipelineDehover(e))\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" >\")\n              ]),\n              _: 1\n            }, 8, [\"geojson\", \"options-style\"]),\n            _createVNode(_unref(LGeoJson), {\n              geojson: _unref(gasPipelinesJson),\n              \"options-style\": getGasPipelinesOptionsStyle()[1],\n              onClick: _cache[7] || (_cache[7] = (e) => onPipelineClick(e)),\n              onMouseover: _cache[8] || (_cache[8] = (e) => onPipelineHover(e)),\n              onMouseout: _cache[9] || (_cache[9] = (e) => onPipelineDehover(e))\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" >\")\n              ]),\n              _: 1\n            }, 8, [\"geojson\", \"options-style\"])\n          ]),\n          _: 1\n        }),\n        (oceanSelected.value)\n          ? (_openBlock(), _createBlock(_unref(LGeoJson), {\n              key: 0,\n              geojson: _unref(countries),\n              name: \"countries\",\n              visible: true,\n              \"options-style\": { color: '#000000', weight: '0.75' }\n            }, null, 8, [\"geojson\"]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          onClick: questionMarkClicked,\n          class: \"question-mark\"\n        }, _hoisted_2),\n        _createVNode(FunctionalityOverview, {\n          ref_key: \"functionalityOverviewRef\",\n          ref: functionalityOverviewRef\n        }, null, 512),\n        (oceanSelected.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n              _createElementVNode(\"h2\", null, _toDisplayString(currentTranslations.value.oceanMapLegend), 1),\n              _hoisted_4,\n              _hoisted_5,\n              _hoisted_6,\n              _hoisted_7\n            ]))\n          : _createCommentVNode(\"\", true),\n        (oceanSelected.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n              _createElementVNode(\"p\", null, _toDisplayString(currentTranslations.value.latitude) + \": \" + _toDisplayString(lattitude.value), 1),\n              _createElementVNode(\"p\", null, _toDisplayString(currentTranslations.value.longitude) + \": \" + _toDisplayString(longitude.value), 1)\n            ]))\n          : _createCommentVNode(\"\", true),\n        (fishingSelected.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n              _createVNode(_unref(VueDatePicker), {\n                modelValue: date.value,\n                \"onUpdate:modelValue\": [\n                  _cache[10] || (_cache[10] = ($event: any) => ((date).value = $event)),\n                  datePicked\n                ],\n                \"model-value\": date.value,\n                placeholder: currentTranslations.value.datePlaceholderFishing,\n                \"preview-format\": format,\n                format: format,\n                \"enable-time-picker\": false,\n                range: { partialRange: false },\n                dark: \"true\",\n                class: \"custom-datepicker\",\n                \"no-today\": \"\",\n                \"max-date\": new Date()\n              }, null, 8, [\"modelValue\", \"model-value\", \"placeholder\", \"max-date\"])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (showSeismicOverlay.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n              _createVNode(_unref(VueDatePicker), {\n                modelValue: _ctx.seismicDate,\n                \"onUpdate:modelValue\": [\n                  _cache[11] || (_cache[11] = ($event: any) => ((_ctx.seismicDate) = $event)),\n                  seismicDatePicked\n                ],\n                \"model-value\": _ctx.seismicDate,\n                placeholder: currentTranslations.value.datePlaceholderSeismic,\n                \"preview-format\": format,\n                format: format,\n                \"enable-time-picker\": false,\n                range: { partialRange: false },\n                dark: \"true\",\n                class: \"custom-datepicker\",\n                \"no-today\": \"\",\n                \"max-date\": new Date()\n              }, null, 8, [\"modelValue\", \"model-value\", \"placeholder\", \"max-date\"])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_11, [\n          _hoisted_12,\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((currentLanguage).value = $event)),\n            onChange: _cache[13] || (_cache[13] = ($event: any) => (changeLanguage(currentLanguage.value)))\n          }, _hoisted_19, 544), [\n            [_vModelSelect, currentLanguage.value]\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_20, [\n          _createVNode(CableSourceSelector)\n        ]),\n        _createVNode(ClusteredAnchorage, {\n          mapInstance: mapInstance.value,\n          controlInstance: _unref(controlInstance),\n          \"map-ready\": mapReady.value,\n          \"current-translations\": currentTranslations.value\n        }, null, 8, [\"mapInstance\", \"controlInstance\", \"map-ready\", \"current-translations\"]),\n        _createVNode(ClusteredDataCenters, {\n          ref_key: \"clusteredDataCentersRef\",\n          ref: clusteredDataCentersRef,\n          mapInstance: mapInstance.value,\n          controlInstance: _unref(controlInstance),\n          mapReady: mapReady.value,\n          currentTranslations: currentTranslations.value\n        }, null, 8, [\"mapInstance\", \"controlInstance\", \"mapReady\", \"currentTranslations\"]),\n        _createVNode(AnchorageLayerToggle, {\n          ref_key: \"anchorageLayerToggleRef\",\n          ref: anchorageLayerToggleRef,\n          \"map-instance\": mapInstance.value,\n          \"control-instance\": _unref(controlInstance),\n          \"current-translations\": currentTranslations.value\n        }, null, 8, [\"map-instance\", \"control-instance\", \"current-translations\"]),\n        _createVNode(MaintenanceLayerToggle, {\n          ref_key: \"maintenanceLayerToggleRef\",\n          ref: maintenanceLayerToggleRef,\n          \"map-instance\": mapInstance.value,\n          \"control-instance\": _unref(controlInstance),\n          \"current-translations\": currentTranslations.value,\n          viewingVesselTrack: viewingVesselTrack.value\n        }, null, 8, [\"map-instance\", \"control-instance\", \"current-translations\", \"viewingVesselTrack\"]),\n        _withDirectives(_createElementVNode(\"div\", null, [\n          _createVNode(DrawingLayer, {\n            \"map-instance\": mapInstance.value,\n            oceanSelected: oceanSelected.value,\n            ref_key: \"drawingLayerRef\",\n            ref: drawingLayerRef\n          }, null, 8, [\"map-instance\", \"oceanSelected\"])\n        ], 512), [\n          [_vShow, oceanSelected.value]\n        ])\n      ]),\n      _: 1\n    }, 8, [\"zoom\", \"center\"]),\n    (selectedEarthquake.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n          _createElementVNode(\"h2\", null, _toDisplayString(currentTranslations.value.selectedEarthquakeDetails) + \":\", 1),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.magnitude) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(selectedEarthquake.value.mag), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.location) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(selectedEarthquake.value.place), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _createElementVNode(\"strong\", null, _toDisplayString(currentTranslations.value.value.time) + \":\", 1),\n            _createTextVNode(\" \" + _toDisplayString(new Date(selectedEarthquake.value.time).toLocaleString()), 1)\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (oceanSelected.value && !isDrawingModeActive.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          ref_key: \"depthTooltip\",\n          ref: depthTooltip,\n          class: \"depth-tooltip\"\n        }, _toDisplayString(currentOceanDepth.value), 513))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\n  <l-map\n    :ref=\"map\"\n    :zoom=\"zoom\"\n    :center=\"center\"\n    :minZoom=\"1.5\"\n    :options=\"{ zoomControl: true, markerZoomAnimation: false, worldCopyJump: true }\"\n    @baselayerchange=\"layerChanged\"\n    @overlayadd=\"overlayAdded\"\n    @overlayremove=\"overlayRemoved\"\n    @click=\"(e) => onMapClick(e)\"\n    @ready=\"onMapReady\"\n    @mousemove=\"(e) => updateMousePosition(e)\"\n  >\n\n    <template v-for=\"cable in cableStore.dataCables\">\n      <l-polyline\n        v-for=\"section in cable.geoData\"\n        :lat-lngs=\"section\"\n        :key=\"section\"\n        :color=\"cable.color\"\n        :opacity=\"\n          !viewingVesselTrack && (cableStore.isNoneSelected ||cableStore.isCableSelected(cable.id))\n            ? 1\n            : 0.15\n        \"\n        :dashArray=\"cable.outOfService ? '5 5' : null\"\n        @click=\"(e) => onCableClick(e, cable)\"\n        @ready=\"(e) => onCreateLine(e, cable.id)\"\n        @mouseover=\"(e) => showTooltip(e, cable.name)\"\n        @mouseout=\"(e) => hideTooltip(e)\"\n      >\n      </l-polyline>\n    </template>\n    <l-circle-marker\n      v-for=\"tee in landingSiteStore.getLandingSites\"\n      :lat-lng=\"tee.geoData\"\n      :key=\"tee\"\n      :radius=\"\n        landingSiteStore.isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedRadius\n          : circle.radius\n      \"\n      :color=\"\n        landingSiteStore.isLandingSiteSelected(toRaw(tee))\n          ? circle.selectedColor\n          : circle.color\n      \"\n      @click=\"(e) => onLandingSiteClick(e, tee)\"\n    >\n      <l-tooltip>{{ tee.name }}, {{ tee.country }}</l-tooltip>\n    </l-circle-marker>\n\n    <!-- layer control-->\n    <l-control-layers ref=\"layerControl\" @ready=\"onLayerControlReady\"> </l-control-layers>\n\n    <!-- Seismic Layer -->\n    <l-layer-group :visible=\"false\" name=\"Seismic Activity\" layer-type=\"base\">\n        <l-geo-json\n          v-if=\"seismicData\"\n          :geojson=\"seismicData\"\n          :options=\"{ pointToLayer: reactivePointToLayer }\"\n        ></l-geo-json>\n        <!-- Dummy Earthquake for Usage Study -->\n        <l-circle-marker\n          v-if=\"showSeismicOverlay\"\n          :lat-lng=\"[5.7, 97.4]\"\n          :radius=\"15\"\n          fillColor=\"red\"\n          color=\"black\"\n          :weight=\"1\"\n          :opacity=\"1\"\n          :fillOpacity=\"0.8\"\n        >\n          <l-tooltip>Dummy Earthquake</l-tooltip>\n        </l-circle-marker>\n    </l-layer-group>\n\n    <!-- Fishing Layer -->\n    <l-tile-layer\n      name=\"Fishing Activity\"\n      :url=\"modifiedPostUrl\"\n      :visible=\"false\"\n      attribution='<a href=\" https://globalfishingwatch.org\">Powered by Global Fishing Watch</a>'\n      layer-type=\"base\"\n    ></l-tile-layer>\n\n    <!-- Ocean Layer -->\n    <l-layer-group name=\"Ocean Depth\" layer-type=\"base\" :visible=\"false\">\n      <l-tile-layer\n        v-for=\"tileProvider in tileProviders2\"\n        :key=\"tileProvider.name\"\n        :name=\"tileProvider.name\"\n        :visible=\"tileProvider.visible\"\n        :url=\"tileProvider.url\"\n        :attribution=\"tileProvider.attribution\"\n        :maxZoom=\"tileProvider.maxZoom\"\n      ></l-tile-layer>\n    </l-layer-group>\n\n    <l-geo-json\n      :geojson=\"eez12nmJson\"\n      layer-type=\"overlay\"\n      name=\"Territorial Waters (12nm)\"\n      :visible=\"false\"\n      :options-style=\"getTerritorialOptionsStyle\"\n    ></l-geo-json>\n\n    <l-geo-json\n      :geojson=\"eezBoundariesJson\"\n      layer-type=\"overlay\"\n      name=\"Exclusive Economic Zone (200nm)\"\n      :visible=\"false\"\n      :options-style=\"getEEZOptionsStyle\"\n    ></l-geo-json>\n\n    <!-- Layer für Schiffe -->\n    <VesselTracking\n      :mapReady=\"mapReady\"\n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :currentLanguage=\"currentLanguage\"\n      :cableStore=\"cableStore\"\n      :layer-group=\"cableShipsLayerGroup\"\n      v-model:vesselPositions=\"vesselPositions\"\n      v-model:hoveredMarker=\"hoveredMarker\"\n      v-model:viewingVesselTrack=\"viewingVesselTrack\"\n      ref=\"vesselTrackingRef\"\n    />\n\n    <l-layer-group\n      :visible=\"false\"\n      name=\"Cable Ships\"\n      layer-type=\"overlay\"\n    >\n      <l-marker \n        v-for=\"vessel in vesselPositions\" \n        :key=\"vessel.id\" \n        :lat-lng=\"vessel.position\" \n        :icon=\"createShipIcon(vessel, 'OVERLAY')\"\n        @click=\"(e) => onShipClick(e, vessel)\">\n      </l-marker>\n\n<!--       <l-geo-json \n        :geojson=\"maintenanceZonesJson\"\n        :options-style=\"getMaintenanceZonesStyle(feature)\"\n        @click=\"(e) => onMaintenanceZoneClick(e)\"\n        @mouseover=\"(e) => onMaintenanceZoneHover(e)\"\n        @mouseout=\"(e) => onMaintenanceZoneDehover(e)\"\n      ></l-geo-json>\n      <l-geo-json\n        :geojson=\"privateMaintenanceZonesJson\"\n        :options-style=\"getMaintenanceZonesStyle(feature)\"\n        @click=\"(e) => onMaintenanceZoneClick(e)\"\n        @mouseover=\"(e) => onMaintenanceZoneHover(e)\"\n        @mouseout=\"(e) => onMaintenanceZoneDehover(e)\"\n      ></l-geo-json> -->\n\n    </l-layer-group>\n\n    <!--Combined Anchorage and Seabed Use Layer-->\n    <l-layer-group \n      name=\"Anchorage and seabed use\" \n      layer-type=\"overlay\" \n      :visible=\"false\"\n    >\n      <!-- Seamarks Layer -->\n      <l-tile-layer\n        name=\"Seamarks\"\n        url=\"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\"\n        attribution='Map data: &copy; <a href=\"http://www.openseamap.org\">OpenSeaMap</a> contributors'\n        :visible=\"false\"\n      />\n\n      <!-- Fixed Infrastructure Layer -->\n      <l-layer-group name=\"Fixed Infrastructure\" layer-type=\"overlay\">\n        <l-circle-marker\n          v-for=\"infrastructure in infrastructurePositions\"\n          :key=\"infrastructure.id\"\n          :lat-lng=\"infrastructure.position\"\n          :radius=\"5\"\n          color=\"#FFFFFF\"\n          fill-color=\"#1d8f82\"\n          :opacity=\"1\"\n          :fill-opacity=\"1\"\n          :weight=\"1\"\n        >\n          <l-tooltip>\n            {{ getTranslatedInfrastructureName(infrastructure) }}, \n            {{ currentTranslations.since }}: {{ infrastructure.lastSeen }}\n          </l-tooltip>\n        </l-circle-marker>\n      </l-layer-group>\n    </l-layer-group>\n\n    <!-- sonstige Layer -->\n    <l-layer-group name=\"Base Layer\" layer-type=\"base\" :visible=\"true\">\n    </l-layer-group>\n    \n    <!-- individual geoJSONs -->\n    <l-layer-group\n      :visible=\"false\"\n      name=\"Gas Pipelines\"\n      layer-type=\"overlay\"\n    >\n      <l-geo-json\n        :geojson=\"gasPipelinesJson\"\n        :options-style=\"getGasPipelinesOptionsStyle()[0]\"\n        @click=\"(e) => onPipelineClick(e)\"\n        @mouseover=\"(e) => onPipelineHover(e)\"\n        @mouseout=\"(e) => onPipelineDehover(e)\"\n        >\n      ></l-geo-json>\n      <l-geo-json\n        :geojson=\"gasPipelinesJson\"\n        :options-style=\"getGasPipelinesOptionsStyle()[1]\"\n        @click=\"(e) => onPipelineClick(e)\"\n        @mouseover=\"(e) => onPipelineHover(e)\"\n        @mouseout=\"(e) => onPipelineDehover(e)\"\n        >\n      ></l-geo-json>\n    </l-layer-group>\n\n    <l-geo-json\n      v-if=\"oceanSelected\"\n      :geojson=\"countries\"\n      name=\"countries\"\n      :visible=\"true\"\n      :options-style=\"{ color: '#000000', weight: '0.75' }\"\n    ></l-geo-json>\n\n\n    <div @click=\"questionMarkClicked\" class=\"question-mark\">\n      <h2>?</h2>\n    </div>\n\n    <FunctionalityOverview ref=\"functionalityOverviewRef\"/>\n\n    <!-- Ocean Legende Popup -->\n    <div v-if=\"oceanSelected\" class=\"custom-popup\">\n      <h2>{{ currentTranslations.oceanMapLegend }}</h2>\n      <p>\n        <span style=\"color: #a2c3e2\">&#9632;</span>\n        : > -200m\n      </p>\n      <p>\n        <span style=\"color: #6d9cc8\">&#9632;</span>\n        : > -1000m\n      </p>\n      <p>\n        <span style=\"color: #426e9d\">&#9632;</span>\n        : > -6000m\n      </p>\n      <p>\n        <span style=\"color: #214d7c\">&#9632;</span>\n        : > -11000m\n      </p>\n    </div>\n\n    <div v-if=\"oceanSelected\" class=\"custom-popup3\">\n      <p>{{ currentTranslations.latitude }}: {{ lattitude }}</p>\n      <p>{{ currentTranslations.longitude }}: {{ longitude }}</p>\n    </div>\n\n    <div v-if=\"fishingSelected\" class=\"date-popup\">\n      <VueDatePicker\n        v-model=\"date\"\n        :model-value=\"date\"\n        @update:model-value=\"datePicked\"\n        :placeholder=\"currentTranslations.datePlaceholderFishing\"\n        :preview-format=\"format\"\n        :format=\"format\"\n        :enable-time-picker=\"false\"\n        :range=\"{ partialRange: false }\"\n        dark=true\n        class=\"custom-datepicker\"\n        no-today\n        :max-date=\"new Date()\"\n      />\n    </div>\n\n    <div v-if=\"showSeismicOverlay\" class=\"date-popup\">\n  <VueDatePicker\n    v-model=\"seismicDate\"\n    :model-value=\"seismicDate\"\n    @update:model-value=\"seismicDatePicked\"\n    :placeholder=\"currentTranslations.datePlaceholderSeismic\"\n    :preview-format=\"format\"\n    :format=\"format\"\n    :enable-time-picker=\"false\"\n    :range=\"{ partialRange: false }\"\n    dark=true\n    class=\"custom-datepicker\"\n    no-today\n    :max-date=\"new Date()\"\n    />\n  </div>\n\n    <div class=\"language-selector\">\n      <div class=\"language-icon\"></div>\n      <select v-model=\"currentLanguage\" @change=\"changeLanguage(currentLanguage)\">\n        <option value=\"ENGLISH\">English</option>\n        <option value=\"GERMAN\">Deutsch</option>\n        <option value=\"SPANISH\">Español</option>\n        <option value=\"FRENCH\">Français</option>\n        <option value=\"ITALIAN\">Italiano</option>\n        <option value=\"CHINESE\">中国</option>\n      </select>\n    </div>\n\n    <div class=\"cable-source-selector\">\n      <CableSourceSelector />\n    </div>\n\n      <!-- Clustered Anchorage -->\n    <ClusteredAnchorage \n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :map-ready=\"mapReady\"\n      :current-translations=\"currentTranslations\"\n    />\n\n    <!-- Clustered Data Centers -->\n    <ClusteredDataCenters\n      ref=\"clusteredDataCentersRef\"\n      :mapInstance=\"mapInstance\"\n      :controlInstance=\"controlInstance\"\n      :mapReady=\"mapReady\"\n      :currentTranslations=\"currentTranslations\"\n    />\n\n    <!-- Toggle component for Anchorage and seabed use bundled layer -->\n    <AnchorageLayerToggle \n      ref=\"anchorageLayerToggleRef\"\n      :map-instance=\"mapInstance\"\n      :control-instance=\"controlInstance\"\n      :current-translations=\"currentTranslations\"\n    />\n\n    <MaintenanceLayerToggle \n      ref=\"maintenanceLayerToggleRef\"\n      :map-instance=\"mapInstance\"\n      :control-instance=\"controlInstance\"\n      :current-translations=\"currentTranslations\"\n      :viewingVesselTrack=\"viewingVesselTrack\"\n    />\n\n    <!-- Draw Function for Depth Measurement Tool -->\n    <div v-show=\"oceanSelected\">\n      <DrawingLayer \n        :map-instance=\"mapInstance\"\n        :oceanSelected=\"oceanSelected\"\n        ref=\"drawingLayerRef\" \n      />\n    </div>\n\n  </l-map>\n\n  <div v-if=\"selectedEarthquake\" class=\"earthquake-details\">\n    <h2>{{ currentTranslations.selectedEarthquakeDetails }}:</h2>\n    <p><strong>{{ currentTranslations.value.magnitude }}:</strong> {{ selectedEarthquake.mag }}</p>\n    <p><strong>{{ currentTranslations.value.location }}:</strong> {{ selectedEarthquake.place }}</p>\n    <p><strong>{{ currentTranslations.value.time }}:</strong> {{ new Date(selectedEarthquake.time).toLocaleString() }}</p>\n  </div>\n\n  <div v-if=\"oceanSelected && !isDrawingModeActive\" ref=\"depthTooltip\" class=\"depth-tooltip\">\n    {{ currentOceanDepth }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport FunctionalityOverview from './FunctionalityOverview.vue';\n\nimport { ref, onMounted, watch, toRaw, computed, onBeforeUnmount } from 'vue';\nimport L from 'leaflet';\nimport 'leaflet.wms';\n//import tracker from '@/openreplay';\nimport { tracker } from '@openreplay/tracker';\n\nimport 'leaflet/dist/leaflet.css';\n// Import the PolylineMeasure plugin\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure.css';\nimport 'leaflet.polylinemeasure/Leaflet.PolylineMeasure';\n\nimport axios from 'axios';\nimport {\n  LMap,\n  LTileLayer,\n  LControlLayers,\n  LTooltip,\n  LPolyline,\n  LMarker,\n  LCircleMarker,\n  LGeoJson,\n  LLayerGroup,\n} from '@vue-leaflet/vue-leaflet';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\n\n\n//Cable Selection\nimport CableSourceSelector from './CableSourceSelector.vue';\n\nimport DrawingLayer from './DrawingLayer.vue'\n//Translation\nimport translations from \"@/assets/translations/translations.json\";\nimport layerTranslations from \"@/assets/translations/layerTranslations.json\";\n\n//Cable Ships\nimport VesselTracking from './VesselTracking.vue';\nimport MaintenanceLayerToggle from './MaintenanceLayerToggle.vue';\n\n//MaritimeZone Imports\nimport eezBoundariesJson from \"@/assets/eez_boundaries_v12.json\";\nimport eez12nmJson from \"@/assets/eez_12nm_v4.json\";\n\nimport countries from \"@/assets/countries.json\";\n\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport '@vuepic/vue-datepicker/dist/main.css'\n//GasPipelines\nimport gasPipelinesJson from \"@/assets/GEM-GGIT-Gas-Pipelines-2023-12.json\";\n//Infrastructures\nimport fixedInfrastructure from \"@/assets/fixedInfrastructure.json\";\nimport ClusteredDataCenters from './ClusteredDataCenters.vue';\n\n//Anchorage\nimport AnchorageLayerToggle from './AnchorageLayerToggle.vue';\nimport ClusteredAnchorage from './ClusteredAnchorage.vue';\n\nimport debounce from \"lodash.debounce\";\n\nimport \"@maptiler/leaflet-maptilersdk\";\nimport 'leaflet-arrowheads';\n\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\n\n// Define reactive data\nconst zoom = ref(2.5);\nconst center = ref([47.41322, -1.219482]);\nconst circle = {\n  radius: 3,\n  selectedRadius: 6,\n  color: 'grey',\n  selectedColor: 'red',\n};\nconst modifiedPostUrl = ref('https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png');\nconst date =  ref();\nconst map = ref(null);\nconst mapReady = ref(false);\n\nfunction getTerritorialOptionsStyle(){\n  return {\n    color: '#4a2727',\n    dashArray: '8',\n    fillColor: '#4a2727',\n    fillOpacity: '0.2',\n  };\n}\n\nfunction getGasPipelinesOptionsStyle() {\n  return [\n    // Border style\n    (feature: any) => {\n      const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n      return {\n        color: isPipelineHighlighted ? '#FF5733' : '#333333',\n        weight: isPipelineHighlighted ? 6 : 4,\n        opacity: isPipelineHighlighted ? 0.9 : 0.5,\n        dashArray: '5',\n      };\n    },\n    // Fill style\n    (feature: any) => {\n      const isPipelineHighlighted = highlightedPipelineId.value === feature.properties.PipelineID;\n      return {\n        color: isPipelineHighlighted ? '#FFAA33' : '#3dff98',\n        weight: isPipelineHighlighted ? 1.2 : 0.7,\n        opacity: isPipelineHighlighted ? 0.8 : 0.5,\n      };\n    }\n  ];\n}\n\nconst highlightedPipelineId = ref<string | null>(null);\n\nconst clusteredDataCentersRef = ref(null);\n\nfunction getEEZOptionsStyle(){\n  return{\n    color: '#8a3030', \n    dashArray: '8'\n  }\n}\n\n// Translation\nconst currentLanguage = ref('ENGLISH');\nconst changeLanguage = (language) => {\n  currentLanguage.value = language;\n  if (mapInstance.value) {\n    mtLayer.setLanguage(L.MaptilerLanguage[language]);\n    updateLayerControlNames();\n  }\n};\nfunction getLayerTranslation(layerName) {\n  if (layerTranslations[currentLanguage.value] && layerTranslations[currentLanguage.value][layerName]) {\n    return layerTranslations[currentLanguage.value][layerName];\n  }\n  return layerName;\n}\nconst currentTranslations = computed(() => translations[currentLanguage.value]);\nconst getTranslatedInfrastructureName = (infrastructure) => {\n  const name = currentTranslations.value[infrastructure.name] || currentTranslations.value.unknown;\n  const confidence = currentTranslations.value[infrastructure.confidence];\n  return `${name} (${currentTranslations.value.confidence} ${confidence})`;\n};\n//Reset Map Layer\nconst resetMapLayer = ref(null);\n\nlet resetMapCallCount = 0;\n\nconst resetMap = () => {\n  if (!mapInstance.value || !controlInstance) {\n    console.warn('Map instance or control instance not available');\n    return;\n  }\n\n  // Remove all overlay layers from the map\n  controlInstance._layers.forEach(layerObj => {\n    if (layerObj.overlay && mapInstance.value.hasLayer(layerObj.layer)) {\n      mapInstance.value.removeLayer(layerObj.layer);\n    }\n  });\n\n  // Uncheck all overlay layers in the layer control\n  if (controlInstance._layerControlInputs) {\n    controlInstance._layerControlInputs.forEach(input => {\n      if (input.overlay) {\n        input.checked = false;\n      }\n    });\n  }\n\n  // Force control to update its display\n  controlInstance._update();\n\n  // Remove class modifiers from map container\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active',\n    'fishing-active',\n    'seismic-active',\n    'anchorage-active',\n    'cable-ships-active'\n  );\n\n  // Reset state variables\n  oceanSelected.value = false;\n  fishingSelected.value = false;\n  showSeismicOverlay.value = false;\n\n  // Exit vessel tracking mode if active\n  if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  }\n\n  // Clear any selections\n  cableStore.deselectCables();\n  landingSiteStore.deselectLandingSite();\n\n  // Hide any open toggles\n  if (anchorageLayerToggleRef.value) {\n    anchorageLayerToggleRef.value.hide();\n  }\n  if (maintenanceLayerToggleRef.value) {\n    maintenanceLayerToggleRef.value.hide();\n  }\n\n  // Switch to the default base layer\n  const baseLayer = controlInstance._layers.find(layer => \n    !layer.overlay && layer.originalName === \"Base Layer\"\n  );\n  \n  if (baseLayer && baseLayer.layer) {\n    // Remove current base layer if any\n    controlInstance._layers\n      .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n      .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n    \n    // Add Base Layer\n    mapInstance.value.addLayer(baseLayer.layer);\n    \n    // Update layer control\n    controlInstance._update();\n  }\n};\n//Fishing\nconst format = \"dd/MM/yyyy\";\nconst fishLayerReady = ref(false);\nconst postResponse = ref(null);\nconst fishingSelected = ref(false);\n\n//Vessel Tracking\nconst hoveredMarker = ref(null);\nconst eventMarkerLayer = ref(null);\nconst viewingVesselTrack = ref(false);\n\nconst vesselTrackingRef = ref<any>(null);\nconst vesselLayerReady = ref(false);\nconst vesselPositions = ref([]);\nwatch(() => vesselTrackingRef.value?.vesselLayerReady, (newValue) => {\n  vesselLayerReady.value = newValue;  \n}, { immediate: true });\n\n // Watch for vesselPositions from VesselTracking\nwatch(\n  () => vesselPositions,\n  (newPositions) => {\n    if (newPositions && Array.isArray(newPositions) && newPositions.length > 0) {\n      vesselPositions.value = newPositions;\n    }\n  },\n  { deep: true }\n);\n\n//Watch for hoveredMarker changes and either add Marker or clear Marker\nwatch(\n  () => hoveredMarker.value,\n  (newMarker) => {\n    if (newMarker && eventMarkerLayer.value) {\n      eventMarkerLayer.value.addLayer(newMarker);\n    } else if (eventMarkerLayer.value && newMarker === null) {\n      eventMarkerLayer.value.clearLayers();\n    }\n  },\n  { deep: true }\n);\ninterface Vessel {\n  id: string;\n  position: [number, number];\n  flag: string;\n}\n\nconst exitVesselTrackingMode = () => {\n  vesselTrackingRef.value.exitVesselTrackingMode();\n}\n\nconst createShipIcon = (vessel: Vessel, caller : string) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return null;\n  }\n  return vesselTrackingRef.value.createShipIcon('#ff7800', vessel.flag, vessel);\n};\n\n// Wrapper function to call onShipClick from VesselTracking\nconst onShipClick = (e: Event, vessel: Vessel) => {\n  if (!vesselTrackingRef.value) {\n    console.warn('VesselTracking component reference not available');\n    return;\n  }\n  vesselTrackingRef.value.onShipClick(e, vessel);\n};\n\nconst maintenanceLayerToggleRef = ref(null);\n//Fixed Infrastructure\nconst anchorageLayerToggleRef = ref(null);\nconst clusteredAnchorageRef = ref(null);\n\nconst infrastructurePositions = ref([]);\nconst processInfrastructureData = () => {\n  infrastructurePositions.value = fixedInfrastructure.results\n    .filter(item => !(item.label === \"noise\") && item.structure_end_date === \"\")\n    .map(item => ({\n      id: item.detection_id,\n      position: [item.lat, item.lon],\n      name: item.label,\n      confidence: item.label_confidence,\n      lastSeen: item.detection_date\n    }));\n};\n\nconst onPipelineClick = (e) => {\n  L.DomEvent.stopPropagation(e);\n  const feature = e.layer.toGeoJSON();\n  const properties = feature.properties;\n  const pipelineId = properties.PipelineID;\n\n  // Store the previously highlighted pipeline ID before updating\n  const previouslyHighlighted = highlightedPipelineId.value;\n  \n  // Toggle highlighting - if clicking same pipeline, deselect it\n  if (highlightedPipelineId.value === pipelineId) {\n    highlightedPipelineId.value = null;\n  } else {\n    highlightedPipelineId.value = pipelineId;\n  }\n\n  // Force redraw of all pipeline segments\n  if (mapInstance.value) {\n    mapInstance.value.eachLayer((layer) => {\n      if (layer.feature && layer.feature.properties) {\n        const isSamePipeline = layer.feature.properties.PipelineID === pipelineId;\n        const wasPreviouslyHighlighted = layer.feature.properties.PipelineID === previouslyHighlighted;\n        \n        // Only update layers that are either newly selected or previously selected\n        if (isSamePipeline || wasPreviouslyHighlighted) {\n          const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n          \n          // Check if this is a border layer or a fill layer\n          const currentStyle = layer.options;\n          \n          if (currentStyle.dashArray) {\n            layer.setStyle(borderStyle(layer.feature));\n          } else {\n            layer.setStyle(fillStyle(layer.feature));\n          }\n        }\n      }\n    });\n  }\n\n  // Show popup with pipeline info if a new pipeline was selected\n  if (highlightedPipelineId.value === pipelineId) {\n    const cost = properties.CostUSD ?? properties.Cost;\n    const formattedCost = cost ? formatCost(cost) : 'N/A';\n    const popupContent = `<strong>${properties.PipelineName}</strong><br/>\n      <strong>${currentTranslations.value.startCountry}:</strong> ${properties.StartCountry}<br/>\n      <strong>${currentTranslations.value.endCountry}:</strong> ${properties.EndCountry}<br/>\n      <strong>${currentTranslations.value.countries}:</strong> ${properties.Countries}<br/>\n      <strong>${currentTranslations.value.owner}:</strong> ${properties.Owner}<br/>\n      <strong>${currentTranslations.value.startYear}:</strong> ${properties.StartYear1}<br/>\n      <strong>${currentTranslations.value.capacity}:</strong> <span title=\"${currentTranslations.value.capacityTooltip}\">${properties[\"CapacityBcm/y\"]} Bcm/y</span><br/>\n      <strong>${currentTranslations.value.cost}:</strong> ${formattedCost}$<br/>\n      <strong>${currentTranslations.value.length}:</strong> ${properties.LengthKnownKm} km<br/>`;\n    \n    const popup = L.popup()\n      .setLatLng(e.latlng)\n      .setContent(popupContent)\n      .openOn(mapInstance.value);\n  }\n};\n\n// Utility function to format large numbers into billions or millions\nconst formatCost = (cost) => {\n  if (cost >= 1e9) {\n    return `${(cost / 1e9).toFixed(2)} B`;\n  } else if (cost >= 1e6) {\n    return `${(cost / 1e6).toFixed(2)} M`;\n  } else {\n    return cost.toString();\n  }\n};\n\nconst onPipelineHover = (e: Event) => {\n  const feature = e.layer.toGeoJSON();\n\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(feature.properties.PipelineName)\n      .addTo(mapInstance.value);\n  }\n}\n\nconst onPipelineDehover = (e: Event) => {\n  mapInstance.value.removeLayer(tooltip);\n}\n\n//Ocean depth\nconst drawingLayerRef = ref<any>(null);\nconst isDrawingModeActive = ref(false);\n\nconst oceanSelected = ref(false);\nconst currentOceanDepth = ref(\"Ocean Depth at this point: -5000m\");\nconst depthTooltip = ref(null);\n\nwatch(() => drawingLayerRef.value?.isDrawingModeActive, (newValue) => {\n  isDrawingModeActive.value = newValue;  \n}, { immediate: true });\n\nconst updateDepthTooltip = (e) => {\n  if (oceanSelected.value && depthTooltip.value) {\n    const containerPoint = mapInstance.value.latLngToContainerPoint(e.latlng);\n    depthTooltip.value.style.left = `${containerPoint.x + 15}px`;\n    depthTooltip.value.style.top = `${containerPoint.y + 15}px`;\n    depthTooltip.value.style.display = 'block';\n  } else if (depthTooltip.value) {\n    depthTooltip.value.style.display = 'none';\n  }\n};\nconst lattitude = ref(15);\nconst longitude = ref(15);\nconst functionalityOverviewRef = ref(null);\n\nconst seismicData = ref(null);\nconst showSeismicOverlay = ref(false); \nconst selectedEarthquake = ref(null);\nconst seismicLayer = ref(null);\nwatch(currentLanguage, () => {\n  if (showSeismicOverlay.value) {\n    updateSeismicLayer();\n  }\n});\nwatch(showSeismicOverlay, (newValue) => {\n  if (newValue) {\n    updateSeismicLayer();\n  } else if (seismicLayer.value) {\n    mapInstance.value.removeLayer(seismicLayer.value);\n    seismicLayer.value = null;\n  }\n});\nconst updateSeismicLayer = () => {\n  if (mapInstance.value && showSeismicOverlay.value && seismicData.value) {\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n    }\n\n    seismicLayer.value = L.geoJSON(seismicData.value, {\n      pointToLayer: reactivePointToLayer.value\n    }).addTo(mapInstance.value);\n  }\n};\n\n//Tile Provider for Ocean Layer\nconst tileProviders2 = [\n      {\n        url:\"https://server.arcgisonline.com/ArcGIS/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}\",\n        attribution:\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n        name:\"Ocean Depth\",\n        maxZoom: 10,\n        visible: false,\n      },\n      {\n        url:\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_only_labels/{z}/{x}/{y}{r}.png\",\n        attribution:\"Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri\",\n        name:\"Ocean Depth\",\n        maxZoom: 10,\n        visible: false,\n      },\n    ]\n//Polyline Measurement Tool\nlet tooltip = null;\nlet mtLayer = null;\n//Instanz von Map um auf Funktionen zugreifen zu können\nconst mapInstance = ref(null);\nconst polylineMeasure = ref(null);\nconst onMapReady = (mapIns) => {\n  mapInstance.value = mapIns;\n  cableStore.setMapInstance(mapIns);\n\n  // Create Reset Map layer\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n\n  initializePolylineMeasure();\n\n  tooltip = L.tooltip({\n    permanent: false,\n    direction: 'top',\n    offset: L.point(0, -10),\n    className: 'custom-tooltip'\n  });\n\n  mtLayer = new L.MaptilerLayer({\n    apiKey: \"fpBo6pC8RABDYTlWtD7U\",\n    language: L.MaptilerLanguage[\"ENGLISH\"],\n    style: L.MaptilerStyle.DATAVIZ,\n    name: \"OceanDepth\",\n    layertype: \"base\",\n  });\n\n  mtLayer.addTo(mapInstance.value);\n  eventMarkerLayer.value = L.layerGroup().addTo(mapInstance.value);\n  \n  mapReady.value = true;\n  \n};\n\nconst initializePolylineMeasure = () => {\n  polylineMeasure.value = L.control.polylineMeasure({\n    position: 'topleft',\n    showUnitControl: true,\n    unitControlUnits: [\"kilometres\", \"nauticalmiles\", \"landmiles\"],\n    unitControlTitle: {\n      text: 'Change Units',\n      metres: 'metres',\n      nauticalmiles: 'nautical miles',\n      landmiles: 'land miles'\n    },\n    unitControlLabel: {\n      metres: 'm',\n      kilometres: 'km',\n      feet: 'ft',\n      landmiles: 'mi',\n      nauticalmiles: 'nm'\n    },\n    useMapZoomAnimation: false\n  });\n\n  polylineMeasure.value.addTo(mapInstance.value);\n\n  // Handle zoom events\n  mapInstance.value.on('zoomstart', () => {\n    const tempLines = document.querySelectorAll('.leaflet-polylinemeasure-temporary-layer');\n    const measureLines = document.querySelectorAll('.leaflet-polylinemeasure-permanent-layer');\n    \n    // Temporarily hide measurement lines during zoom\n    tempLines.forEach(line => { line.style.display = 'none'; });\n    measureLines.forEach(line => { line.style.display = 'none'; });\n  });\n\n  mapInstance.value.on('zoomend', () => {\n    const tempLines = document.querySelectorAll('.leaflet-polylinemeasure-temporary-layer');\n    const measureLines = document.querySelectorAll('.leaflet-polylinemeasure-permanent-layer');\n    \n    // Show them again after zoom is complete\n    tempLines.forEach(line => { line.style.display = ''; });\n    measureLines.forEach(line => { line.style.display = ''; });\n  });\n};\n//Instanz von controlInstance um auf Funktionen zugreifen zu können\nlet controlInstance = null;\nconst onLayerControlReady = (controlIns) => {\n    controlInstance = controlIns;\n\n    // Rest of the existing layer control setup...\n    if (resetMapLayer.value) {\n        const resetMapContainer = document.createElement('div');\n        resetMapContainer.className = 'reset-map-container hidden';\n        \n        const resetMapButton = document.createElement('div');\n        resetMapButton.className = 'reset-map-button';\n        resetMapButton.textContent = getLayerTranslation(\"ResetMap\");\n        \n        resetMapContainer.appendChild(resetMapButton);\n        \n        const layerControlContainer = controlInstance.getContainer();\n        layerControlContainer.appendChild(resetMapContainer);\n        \n        resetMapButton.addEventListener('click', resetMap);\n    }\n    \n    // Add Data Centers layer to control\n    if (clusteredDataCentersRef.value && clusteredDataCentersRef.value.dataCenterLayer) {\n    controlInstance.addOverlay(clusteredDataCentersRef.value.dataCenterLayer, 'Data Centers');\n  }\n    updateLayerControlNames();\n};\n\nonBeforeUnmount(() => {\n  if (polylineMeasure.value && mapInstance.value) {\n    mapInstance.value.removeControl(polylineMeasure.value);\n  }\n});\n\nconst polylinesBounds = {};\n//set polyline to store\nconst onCreateLine = (polylineInstance, cableId) => {\n  // this overrides the line if a cable has more then one section. It will be better to set new bounds to whole system size\n  // TODO look for something like compine bounds\n  const bounds = polylineInstance.getBounds();\n  polylinesBounds[cableId] = polylinesBounds[cableId] ? polylinesBounds[cableId].extend(bounds) : bounds;\n\n  polylineInstance.on('mouseover', () => {\n    polylineInstance.openTooltip();\n  });\n  polylineInstance.on('mouseout', () => {\n    polylineInstance.closeTooltip();\n  });\n};\n\n//Bei Kabelwechsel Karte dort hin pannen und zoomen lassen\nwatch(() => cableStore.selectCable, (state) => {\n  if (cableStore.selectedFromSidebar) {\n    let bounds;\n    for(const cable of state) {\n      const bound = polylinesBounds[cable]\n      bounds = bounds ? bounds.extend(bound) : bound\n    }\n    if(bounds){\n      mapInstance.value.fitBounds(bounds)\n    }\n    cableStore.selectedFromSidebar = false;\n  }\n})\n\nwatch(\n  () => cableStore.viewingVesselTrack,\n  (newValue) => {\n    if (newValue) {\n      viewingVesselTrack.value = true;\n    } else {\n      viewingVesselTrack.value = false;\n    }\n  }\n);\n\nwatch(() => landingSiteStore.selectLandingSites, (state) => {\n  if (landingSiteStore.selectedFromSidebar) {\n    var latlng = L.latLng(state[0].geoData);\n    mapInstance.value.setView(latlng);\n    landingSiteStore.selectedFromSidebar = false;\n  }\n})\n\n//Function to update the Layer Names on the Layer Control which is called after the language has been changed\nfunction updateLayerControlNames() {\n  if (controlInstance) {\n    controlInstance._layers.forEach(layerObj => {\n      if(layerObj.originalName == null) layerObj.originalName = layerObj.name;\n      const translatedName = getLayerTranslation(layerObj.originalName);\n      layerObj.name = translatedName;\n    });\n    controlInstance._update();\n  }\n}\n\n//Tooltip for cable hover gets shown\nconst showTooltip = (e, cableName) => {\n  if (mapInstance.value && tooltip) {\n    tooltip.setLatLng(e.latlng)\n      .setContent(cableName)\n      .addTo(mapInstance.value);\n  }\n};\n\n//Tooltip for cable hover gets removed\nconst hideTooltip = () => {\n  if (mapInstance.value && tooltip) {\n    mapInstance.value.removeLayer(tooltip);\n  }\n};\n\nconst apiUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/4wings/generate-png';\nconst params = {\n  color: '#48ba0f',\n  interval: 'DAY',\n  'datasets[0]': 'public-global-fishing-effort:latest',\n  'date-range': '2023-11-01,2023-12-24' //Eventuell immer Standard Datum (bspw. vor einem Monat) nehmen\n};\n\nfishingWatch();\n\nasync function fishingWatch(){\n  try {\n    const response = await axios.post(apiUrl, null, {params: params})\n      postResponse.value = response; //TODO: evtl. ColorRamp rausschmeißen und nur URL speichern\n      modifiedPostUrl.value = response.data.url.replace(\"gateway.api.globalfishingwatch.org\", \"sdcs-api.dev.peasec.de/fishing\");\n      fishLayerReady.value = true;\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nconst cableShipsLayerGroup = ref(L.layerGroup());\n\nonMounted(() => {\n  processInfrastructureData();\n  resetMapLayer.value = L.layerGroup();\n  resetMapLayer.value.on('add', () => {\n    resetMap();\n  });\n});\n\n//Extracts Ocean Depth for current mouse position from GEBCO Web Map Service\nlet lastDepthQuery = '';\n\nasync function getOceanDepth(lat, lng) {\n  const queryString = `${lat.toFixed(4)},${lng.toFixed(4)}`;\n  if (queryString === lastDepthQuery) return;\n  lastDepthQuery = queryString;\n  try{\n    const minx = lat - 0.0001;\n    const miny = lng - 0.0001;\n    const maxx = lat + 0.0001;\n    const maxy = lng + 0.0001;\n\n    const url = `https://wms.gebco.net/mapserv?service=WMS&version=1.3.0&request=GetFeatureInfo&layers=GEBCO_LATEST_2&styles=&bbox=${minx},${miny},${maxx},${maxy}&width=101&height=101&crs=EPSG:4326&query_layers=GEBCO_LATEST_2&info_format=text/plain&i=50&j=50`;\n    const response = await axios.get(url);\n\n    let searchString = \"value_list\";\n    let searchIndex = response.data.indexOf(searchString);\n    let extractedText = response.data.substring(searchIndex + searchString.length + 4, response.data.length - 2);\n    currentOceanDepth.value = `${currentTranslations.value.oceanDepth}: ${extractedText}m`;\n  } catch(error) {\n    console.error(error);\n    currentOceanDepth.value = \"Ocean Depth: Unknown\";\n  }\n}\n\n//Translates picked Date from Datepicker to API Call to GlobalFishingWatch\nfunction datePicked(e){\n  if(e != null) {\n    let firstDay = formatDatePart(e[0].getDate());\n    let firstMonth = formatDatePart(e[0].getMonth() + 1);\n    let secondDay = formatDatePart(e[1].getDate());\n    let secondMonth = formatDatePart(e[1].getMonth() + 1);\n    params['date-range'] = e[0].getFullYear() + '-' + firstMonth + '-' +  firstDay + ',' + e[1].getFullYear() + '-' + secondMonth + '-' + secondDay;\n    fishingWatch();\n  }\n}\n\n//Helper Function to formate Dates\nfunction formatDatePart(part){\n  return part < 10 ? '0' + part : part;\n}\n\n// Funktion für Layerwechsel (@baselayerchanged Listener), um Popup bei Aktivierung/Deaktivierung des Ocean Layers zu öffnen/schließen\nfunction layerChanged(e) {\n  if (!mapInstance.value || !mapInstance.value._container) {\n    console.warn('Map instance not ready during layer change');\n    return;\n  }\n  const mapContainer = mapInstance.value._container;\n  mapContainer.classList.remove(\n    'ocean-depth-active', \n    'fishing-active', \n    'seismic-active'\n  );\n\n  /* if (vesselTrackingRef.value?.isVesselTrackingMode.value) {\n    vesselTrackingRef.value.exitVesselTrackingMode();\n  } */\n\n  if (e.originalName === \"Reset Map\") {\n    resetMap();\n    \n    // Find and switch to Base Layer\n    const baseLayer = controlInstance._layers.find(layer => \n      !layer.overlay && layer.originalName === \"Base Layer\"\n    );\n    \n    if (baseLayer && baseLayer.layer) {\n      // Remove current base layer if any\n      controlInstance._layers\n        .filter(layer => !layer.overlay && mapInstance.value.hasLayer(layer.layer))\n        .forEach(layer => mapInstance.value.removeLayer(layer.layer));\n      \n      // Add Base Layer\n      mapInstance.value.addLayer(baseLayer.layer);\n      \n      // Update layer control\n      controlInstance._update();\n    }\n    return;\n  }\n  if(e.originalName === \"Base Layer\"){\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if(e.originalName === \"Seismic Activity\"){\n    mapContainer.classList.add('seismic-active');\n    fetchSeismicData();\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = true;\n  }\n  else if (e.originalName === \"Fishing Activity\"){\n    mapContainer.classList.add('fishing-active');\n    fishingSelected.value = true;\n    oceanSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n  else if (e.originalName === \"Ocean Depth\") {\n    mapContainer.classList.add('ocean-depth-active');\n    oceanSelected.value = true;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  } else {\n    oceanSelected.value = false;\n    fishingSelected.value = false;\n    showSeismicOverlay.value = false;\n  }\n}\n\nfunction overlayAdded(e) {\n  const mapContainer = mapInstance.value._container;\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.add('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.show();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.add('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.show();\n    }\n  }\n}\n\nfunction overlayRemoved(e) {\n  const mapContainer = mapInstance.value._container;\n\n  if (e.originalName === \"Anchorage and seabed use\") {\n    mapContainer.classList.remove('anchorage-active');\n    if (anchorageLayerToggleRef.value) {\n      anchorageLayerToggleRef.value.hide();\n    }\n  } else if (e.originalName === \"Cable Ships\") {\n    mapContainer.classList.remove('cable-ships-active');\n    if (maintenanceLayerToggleRef.value) {\n      maintenanceLayerToggleRef.value.hide();\n    }\n  }\n}\n\nconst questionMarkClicked = () => {\n  if(functionalityOverviewRef.value){\n    functionalityOverviewRef.value.openModal();\n  }\n}\n\nlet set = false;\nconst onMapClick = ( event ) => { // onMapClick = (e: event) => { ... }\n  // TODO This is a workaround because the event is propagation to alls listeners\n  // Tested: mapInstance._container.stopPropgating(e)\n  // Tested: e.selected = true -> and then read in next handler\n  // Tested: @click.stop didn't work(see issue https://github.com/vue-leaflet/vue-leaflet/issues/362)\n  const previouslyHighlighted = highlightedPipelineId.value;\n  highlightedPipelineId.value = null;\n  \n  // Force redraw of previously highlighted pipeline if there was one\n  if (previouslyHighlighted && mapInstance.value) {\n    mapInstance.value.eachLayer((layer) => {\n      if (layer.feature && \n          layer.feature.properties && \n          layer.feature.properties.PipelineID === previouslyHighlighted) {\n        \n        const [borderStyle, fillStyle] = getGasPipelinesOptionsStyle();\n        \n        // Check if this is a border layer or a fill layer\n        const currentStyle = layer.options;\n        \n        // Apply appropriate style based on layer type\n        if (currentStyle.dashArray) {\n          layer.setStyle(borderStyle(layer.feature));\n        } else {\n          layer.setStyle(fillStyle(layer.feature));\n        }\n      }\n    });\n  }\n  if (maintenanceLayerToggleRef.value) {\n    const targetElement = event.originalEvent.target;\n    if (targetElement && !targetElement.classList.contains('leaflet-interactive')) {\n      maintenanceLayerToggleRef.value.clearHighlightedZones();\n    }\n  }  \n\n  if(!set) {\n    cableStore.deselectCables();\n    landingSiteStore.deselectLandingSite();\n  }\n  set = false\n}\n\nconst onCableClick = (e, cable) => {\n  set = true\n  if(!landingSiteStore.isOneSelected() && cableStore.isCableSelected(cable.id)) {\n    cableStore.deselectCables();\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(cable.id, false) // Set fromSidebar to false\n  }\n  \n  // Display cable name at click position\n  L.popup()\n    .setLatLng(e.latlng)\n    .setContent(cable.name)\n    .openOn(mapInstance.value);\n}\nconst onLandingSiteClick = (e, landingSite) => {\n  set = true\n  cableStore.deselectCables();\n  if(landingSiteStore.isLandingSiteSelected(toRaw(landingSite))) {\n    landingSiteStore.deselectLandingSite();\n  } else {\n    landingSiteStore.setSelectLandingSite(toRaw(landingSite))\n  }\n}\n\nconst updateMousePosition = debounce((e) => {\n  if(oceanSelected.value){\n    const latlng = e.latlng;\n    lattitude.value = latlng.lat;\n    longitude.value = latlng.lng;\n    if(!isDrawingModeActive.value){\n      getOceanDepth(latlng.lat, latlng.lng);\n      updateDepthTooltip(e);\n    }\n  }\n}, 100);\n\n//SEISMIC LAYER\nconst seismicDatePicked = (e) => {\n  if (e != null) {\n    let startDate = formatDatePart(e[0].getDate());\n    let startMonth = formatDatePart(e[0].getMonth() + 1);\n    let endDate = formatDatePart(e[1].getDate());\n    let endMonth = formatDatePart(e[1].getMonth() + 1);\n    const startTime = `${e[0].getFullYear()}-${startMonth}-${startDate}`;\n    const endTime = `${e[1].getFullYear()}-${endMonth}-${endDate}`;\n    // Clear existing seismic layer\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n      seismicLayer.value = null;\n    }\n    \n    fetchSeismicData(startTime, endTime);\n  } else {\n    // Clear existing seismic layer\n    if (seismicLayer.value) {\n      mapInstance.value.removeLayer(seismicLayer.value);\n      seismicLayer.value = null;\n    }\n    \n    fetchSeismicData();\n  }\n};\n\nconst fetchSeismicData = async (startTime = null, endTime = null) => {\n  try {\n    let url;\n    if (startTime && endTime) {\n      // Fetch data for the specified date range\n      url = `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=${startTime}&endtime=${endTime}`;\n    } else {\n      // Default to the last week's data\n      url = 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojson';\n    }\n    const response = await axios.get(url);\n    seismicData.value = response.data;\n\n        // Add new seismic layer to the map\n        if (mapInstance.value && seismicData.value) {\n      seismicLayer.value = L.geoJSON(seismicData.value, {\n        pointToLayer: reactivePointToLayer.value\n      }).addTo(mapInstance.value);\n    }\n  } catch (error) {\n    console.error('Error fetching seismic data:', error);\n  }\n};\n\n// Fetch initial seismic data (last week's data) on component mount\n//fetchSeismicData();\n\nconst reactivePointToLayer = computed(() => (feature, latlng) => {\n  const magnitude = feature.properties.mag;\n  const radius = magnitude * 3;\n  const fillColor = magnitude > 5 ? 'red' : magnitude > 3 ? 'orange' : 'yellow';\n  return L.circleMarker(latlng, {\n    radius: radius,\n    fillColor: fillColor,\n    color: 'black',\n    weight: 1,\n    opacity: 1,\n    fillOpacity: 0.8\n  }).bindTooltip(`\n    <strong>${currentTranslations.value.magnitude}:</strong> ${magnitude}<br>\n    <strong>${currentTranslations.value.location}:</strong> ${feature.properties.place}<br>\n    <strong>${currentTranslations.value.time}:</strong> ${new Date(feature.properties.time).toLocaleString()}\n  `);\n});\n\n// Fetch seismic data on component mount\n//fetchSeismicData();\n\n</script>\n\n<style>\n  @import '@/assets/styles/mapStyles.css';\n</style>","import script from \"./LeafletMap.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LeafletMap.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LeafletMap.vue?vue&type=style&index=0&id=672df7a4&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b6de4676\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"py-2\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-arrow-return-left\",\n  \"aria-label\": \"return to cable list\",\n  id: \"return-icon\"\n}, null, -1))\nconst _hoisted_3 = { id: \"title\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = {\n  key: 0,\n  class: \"landing-site-details\"\n}\nconst _hoisted_6 = { class: \"list-group-item\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"country\", -1))\nconst _hoisted_8 = { class: \"field-value\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"list-group-item\"\n}\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"cables\", -1))\nconst _hoisted_11 = { class: \"field-value\" }\nconst _hoisted_12 = [\"onClick\"]\nconst _hoisted_13 = {\n  key: 1,\n  class: \"list-group-item\"\n}\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"field-label\" }, \"connected landing sites\", -1))\nconst _hoisted_15 = { class: \"field-value\" }\nconst _hoisted_16 = {\n  key: 0,\n  class: \"connected-site-item\"\n}\nconst _hoisted_17 = [\"onClick\"]\n\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { queryLandingSiteById } from \"@/service/hasura\";\nimport { ref } from \"vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LandingSiteViewer',\n  setup(__props) {\n\nconst landingSite = ref();\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\n\nconst handle = useClientHandle();\nconst loadLandingSite = async (id: string) => {\n  const result = await handle.client\n    .query(queryLandingSiteById, { id: id })\n    .toPromise();\n  if (result.error) {\n    console.error(result.error);\n    return;\n  }\n  const data = result.data.Landingsites[0];\n  landingSite.value = data;\n\n  await dataCableStore.initialize();\n  dataCableStore.setManySelectedCables(\n    data.CableSystem_X_Landingsites.map((cable: any) => cable.CableSystem.id)\n  );\n};\n\nconst route = useRoute();\nconst id = route.params.landingSiteId.toString();\nloadLandingSite(id);\n\nasync function setLandingSite() {\n  await dataCableStore.initialize();\n  if (!landingSitesStore.isLandingSiteSelectedById(id)) {\n    landingSitesStore.setSelectLandingSiteById(id);\n  }\n}\nsetLandingSite();\n\nonBeforeRouteUpdate((to) => {\n  loadLandingSite(to.params.landingSiteId.toString());\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"span\", _hoisted_1, [\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (\n        _unref(dataCableStore).deselectCables(), _unref(landingSitesStore).deselectLandingSite()\n      ))\n      }, {\n        default: _withCtx(() => [\n          _hoisted_2\n        ]),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"span\", _hoisted_3, [\n      _createElementVNode(\"strong\", null, _toDisplayString(landingSite.value?.name), 1),\n      _hoisted_4\n    ]),\n    (landingSite.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          _createElementVNode(\"div\", _hoisted_6, [\n            _hoisted_7,\n            _createElementVNode(\"div\", _hoisted_8, _toDisplayString(landingSite.value.country), 1)\n          ]),\n          (landingSite.value.CableSystem_X_Landingsites)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                _hoisted_10,\n                _createElementVNode(\"div\", _hoisted_11, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(landingSite.value.CableSystem_X_Landingsites, (cable) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: cable.CableSystem.id,\n                      class: \"cable-item\"\n                    }, [\n                      _createElementVNode(\"a\", {\n                        onClick: ($event: any) => (\n              _unref(landingSitesStore).deselectLandingSite(),\n              _unref(dataCableStore).setSelectCable(cable.CableSystem.id)\n            )\n                      }, _toDisplayString(cable.CableSystem.name), 9, _hoisted_12)\n                    ]))\n                  }), 128))\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (landingSite.value.CableSystem_X_Landingsites_t)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                _hoisted_14,\n                _createElementVNode(\"div\", _hoisted_15, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(landingSite.value.CableSystem_X_Landingsites_t, (connectedSite) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, { key: connectedSite }, [\n                      (!_unref(landingSitesStore).isLandingSiteSelectedById(connectedSite))\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                            _createElementVNode(\"a\", {\n                              onClick: ($event: any) => (_unref(landingSitesStore).setSelectLandingSiteById(connectedSite))\n                            }, _toDisplayString(connectedSite), 9, _hoisted_17)\n                          ]))\n                        : _createCommentVNode(\"\", true)\n                    ], 64))\n                  }), 128))\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\n  <span class=\"py-2\">\n    <router-link\n      to=\"/\"\n      @click=\"\n        dataCableStore.deselectCables(), landingSitesStore.deselectLandingSite()\n      \"\n    >\n      <i\n        class=\"bi bi-arrow-return-left\"\n        aria-label=\"return to cable list\"\n        id=\"return-icon\"\n      ></i>\n    </router-link>\n  </span>\n  <span id=\"title\">\n    <strong>{{ landingSite?.name }}</strong><br />\n  </span>\n\n  <div v-if=\"landingSite\" class=\"landing-site-details\">\n    <div class=\"list-group-item\">\n      <span class=\"field-label\">country</span>\n      <div class=\"field-value\">{{ landingSite.country }}</div>\n    </div>\n\n    <div \n      v-if=\"landingSite.CableSystem_X_Landingsites\" \n      class=\"list-group-item\"\n    >\n      <span class=\"field-label\">cables</span>\n      <div class=\"field-value\">\n        <div\n          v-for=\"cable in landingSite.CableSystem_X_Landingsites\"\n          :key=\"cable.CableSystem.id\"\n          class=\"cable-item\"\n        >\n          <a\n            @click=\"\n              landingSitesStore.deselectLandingSite(),\n              dataCableStore.setSelectCable(cable.CableSystem.id)\n            \"\n          >\n            {{ cable.CableSystem.name }}\n          </a>\n        </div>\n      </div>\n    </div>\n\n    <div \n      v-if=\"landingSite.CableSystem_X_Landingsites_t\" \n      class=\"list-group-item\"\n    >\n      <span class=\"field-label\">connected landing sites</span>\n      <div class=\"field-value\">\n        <template v-for=\"connectedSite in landingSite.CableSystem_X_Landingsites_t\" :key=\"connectedSite\">\n          <div \n            v-if=\"!landingSitesStore.isLandingSiteSelectedById(connectedSite)\"\n            class=\"connected-site-item\"\n          >\n            <a @click=\"landingSitesStore.setSelectLandingSiteById(connectedSite)\">\n              {{ connectedSite }}\n            </a>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useDataCablesStore } from \"@/store/datacables\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\nimport { onBeforeRouteUpdate, useRoute } from \"vue-router\";\nimport { useClientHandle } from \"@urql/vue\";\nimport { queryLandingSiteById } from \"@/service/hasura\";\nimport { ref } from \"vue\";\n\nconst landingSite = ref();\nconst dataCableStore = useDataCablesStore();\nconst landingSitesStore = useLandingSitesStore();\n\nconst handle = useClientHandle();\nconst loadLandingSite = async (id: string) => {\n  const result = await handle.client\n    .query(queryLandingSiteById, { id: id })\n    .toPromise();\n  if (result.error) {\n    console.error(result.error);\n    return;\n  }\n  const data = result.data.Landingsites[0];\n  landingSite.value = data;\n\n  await dataCableStore.initialize();\n  dataCableStore.setManySelectedCables(\n    data.CableSystem_X_Landingsites.map((cable: any) => cable.CableSystem.id)\n  );\n};\n\nconst route = useRoute();\nconst id = route.params.landingSiteId.toString();\nloadLandingSite(id);\n\nasync function setLandingSite() {\n  await dataCableStore.initialize();\n  if (!landingSitesStore.isLandingSiteSelectedById(id)) {\n    landingSitesStore.setSelectLandingSiteById(id);\n  }\n}\nsetLandingSite();\n\nonBeforeRouteUpdate((to) => {\n  loadLandingSite(to.params.landingSiteId.toString());\n});\n</script>\n\n<style scoped>\n#return-icon {\n  color: white;\n  font-size: 1.5rem;\n  padding: 0.5rem;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n#return-icon:hover {\n  background-color: #697fc7;\n}\n\n#title {\n  color: white;\n  font-size: 1.2rem;\n  margin-bottom: 1rem;\n  display: block;\n}\n\n.landing-site-details {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.list-group-item {\n  background: transparent;\n  border: none;\n  color: white;\n  padding: 0.5rem 0;\n}\n\n.field-label {\n  display: block;\n  color: #8b9dc7;\n  background-color: #2e3547;\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 0.25rem;\n  font-weight: 500;\n}\n\n.field-value {\n  color: white;\n  background-color: rgba(75, 86, 115, 0.5);\n  border-radius: 4px;\n  padding: 0.5rem 0.75rem;\n  margin-top: 0.25rem;\n}\n\n.cable-item,\n.connected-site-item {\n  padding: 0.25rem 0;\n}\n\n.cable-item:not(:last-child),\n.connected-site-item:not(:last-child) {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.cable-item a,\n.connected-site-item a {\n  color: white;\n  text-decoration: none;\n  cursor: pointer;\n  display: block;\n  transition: color 0.2s ease;\n}\n\n.cable-item a:hover,\n.connected-site-item a:hover {\n  color: #8b9dc7;\n  text-decoration: none;\n}\n</style>","import script from \"./LandingSiteViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LandingSiteViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LandingSiteViewer.vue?vue&type=style&index=0&id=b6de4676&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b6de4676\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\nimport SidebarList from \"@/components/SideBarList.vue\";\nimport CableViewer from '@/components/CableViewer.vue';\nimport LeafletMap from '@/components/LeafletMap.vue';\nimport LandingsiteViewer from '@/components/LandingSiteViewer.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'home',\n    components: {\n      main: LeafletMap,\n      sidebar: SidebarList,\n    },\n  },\n  {\n    path: '/cables/:cableId',\n    name: 'cables',\n    components: {\n      main: LeafletMap,\n      sidebar: CableViewer,\n    },\n  },\n  {\n    path: '/landingSites/:landingSiteId',\n    name: 'landingSites',\n    components: {\n      main: LeafletMap,\n      sidebar: LandingsiteViewer,\n    },\n  },\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { defineStore } from \"pinia\";\nimport router from \"@/router/index\";\nimport { loadCables } from \"@/service/hasura\";\nimport { useLandingSitesStore } from \"@/store/landingSites\";\n\nexport const useDataCablesStore = defineStore(\"dataCables\", {\n  state: () => ({\n    dataCables: [] as any[],\n    selectCable: [] as any[],\n    landingSite: useLandingSitesStore(),\n    firstLoad: null as any,\n    selectedFromSidebar: false,\n    cableDetails: null as any,\n    mapInstance: null as any,\n    viewingVesselTrack: false,\n  }),\n  getters: {\n    getDataCables: (state) => {\n      return state.dataCables;\n    },\n    isNoneSelected: (state) => {\n      return state.selectCable.length == 0;\n    },\n    getSelectedCable: (state) => {\n      const cableId = state.selectCable[0];\n      return state.dataCables.find(cable => cable.id === cableId);\n    },\n    getMapInstance: (state) => {\n      return state.mapInstance;\n    }\n  },\n  actions: {\n    async initialize() {\n      if (this.firstLoad) {\n        await this.firstLoad;\n      } else {\n        this.firstLoad = Promise.all([\n          this.fetchDataCables(),\n          this.landingSite.fetchLandingSites(),\n        ]);\n      }\n    },\n    async fetchDataCables() {\n      const cables = ((await loadCables()) as any).data._rawValue.CableSystems;\n      cables.forEach((e: any) => {\n        e.geoData = JSON.parse(e.geoData);\n        e.opacity = 1; // Ensure opacity is defined and reactive\n      });\n      this.dataCables = cables;\n    },\n    setAllCablesOpacity(opacity: number) {\n      this.dataCables.forEach(cable => {\n        cable.opacity = opacity;\n    \n        if (cable.layer && this.mapInstance.hasLayer(cable.layer)) {\n          // Remove the layer and re-add it to force a re-render\n          this.mapInstance.removeLayer(cable.layer);\n          cable.layer.options.opacity = opacity; // Update the layer's opacity\n          cable.layer.addTo(this.mapInstance);\n        }\n      });\n    },\n    setSelectCable(cableId: string, fromSidebar = false) {\n      this.selectCable = [cableId];\n      this.selectedFromSidebar = fromSidebar;\n      this.fetchCableDetails(cableId);\n      router.push({ path: `/cables/${cableId}` });\n    },\n    setManySelectedCables(cableIds: string[]) {\n      this.selectCable = cableIds;\n    },\n    deselectCables() {\n      if (this.selectCable.length) {\n        this.selectCable = [];\n        this.cableDetails = [];\n        router.push({ path: \"/\" });\n      }\n    },\n    isCableSelected(cableId: string): boolean {\n      return this.selectCable.includes(cableId);\n    },\n    async fetchCableDetails(cableId: string) {\n      const cable = this.dataCables.find(c => c.id === cableId);\n      if (cable) {\n        this.cableDetails = cable;\n      }\n    },\n    setMapInstance(map: any) {\n      this.mapInstance = map;\n    },\n    setViewingVesselTrack(value: boolean) {\n      this.viewingVesselTrack = value;\n    },\n  },\n});","<template>\n    <div>\n      <!-- Sources Link in Footer -->\n      <p class=\"text-white text-sm\">\n        Cable data by <a href=\"https://www2.telegeography.com/\" target=\"_blank\">Telegeography</a>\n        (<a href=\"https://www.submarinecablemap.com/\" target=\"_blank\">cable map</a>),\n        licensed under <a href=\"https://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\">Creative Commons Attribution-ShareAlike 4.0 International</a>,\n        merged with own data and data from <a href=\"https://subtelforum.com/\" target=\"_blank\">Submarine Telecoms Forum</a>\n        (<a href=\"https://subtelforum.com/online-map/\" target=\"_blank\">cable map</a>) used under fair use.\n        <button \n          @click=\"showModal = true\" \n          style=\"background-color: #48506a;\"\n          class=\"text-white text-xs px-2 py-0.5 rounded hover:brightness-110 transition-all ml-1\"\n        >\n          Data Sources\n        </button>\n      </p>\n  \n      <!-- Modal Content -->\n      <div v-if=\"showModal\" \n           class=\"fixed inset-0 z-[9999] flex items-center justify-center\"\n           @click.self=\"showModal = false\">\n        <!-- Overlay -->\n        <div class=\"fixed inset-0 bg-black bg-opacity-50\"></div>\n        \n        <!-- Modal Content -->\n        <div class=\"relative bg-[#48506a] text-white p-6 rounded-lg max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto z-[10000]\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h2 class=\"text-xl font-bold\">Data Sources</h2>\n            <button @click=\"showModal = false\" \n                    class=\"bg-[#48506a] hover:brightness-90 transition-colors rounded-full p-2 group\">\n              <span class=\"sr-only\">Close</span>\n              <svg class=\"w-6 h-6 text-gray-300 group-hover:text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          <div class=\"space-y-4\">\n            <div v-for=\"(source, index) in sources\" \n                 :key=\"index\" \n                 class=\"border-b border-gray-700 last:border-0 pb-3\">\n              <h3 class=\"font-semibold mb-1\">{{ source.title }}</h3>\n              <div class=\"space-y-1\">\n                <p v-if=\"source.sourceName\" class=\"text-gray-300\">\n                  Source: {{ source.sourceName }}\n                </p>\n                <a :href=\"source.url\" \n                   target=\"_blank\" \n                   class=\"text-blue-400 hover:text-blue-300 break-all transition-colors\">\n                  {{ source.url }}\n                </a>\n                <p v-if=\"source.description\" \n                   class=\"text-gray-300\">\n                  {{ source.description }}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n\n  \n  \n  <script setup>\n  import { ref, onMounted, onUnmounted } from 'vue';\n  \n  const showModal = ref(false);\n  \n  const sources = [\n    {\n      title: 'Cable Source \"Telegeography\"',\n      url: 'https://www2.telegeography.com/',\n      description: 'Mixed with own data'\n    },\n    {\n      title: 'Cable Source \"Mixed Sources\"',\n      url: 'https://kis-orca.org/map/',\n      description: 'Mixed with telegeography and own data'\n    },\n    {\n      title: 'Seismic Activity',\n      url: 'https://earthquake.usgs.gov/earthquakes/map/',\n      sourceName: 'U.S. Geological Survey (USGS)'\n    },\n    {\n      title: 'Fishing Activity',\n      url: 'https://globalfishingwatch.org/our-apis/documentation#4wings-introduction',\n      sourceName: 'Global Fishing Watch'\n    },\n    {\n      title: 'Ocean Depth',\n      url: 'https://www.gebco.net/data_and_products/gridded_bathymetry_data/',\n      sourceName: 'General Bathymetric Chart of the Oceans (GEBCO)'\n    },\n    {\n      title: 'Anchorage',\n      url: 'https://globalfishingwatch.org/datasets-and-code-anchorages/',\n      sourceName: 'Global Fishing Watch'\n    },\n    {\n      title: 'Fixed Infrastructure',\n      url: 'https://globalfishingwatch.org/our-apis/documentation#get-fixed-infrastructure-in-mvt-http-request',\n      sourceName: 'Global Fishing Watch'\n    },\n    {\n      title: 'Seamarks',\n      url: 'https://wiki.openstreetmap.org/wiki/Seamarks/Seamark_Objects',\n      sourceName: 'OpenStreetMap'\n    },\n    {\n      title: 'EEZ, Territorial Waters',\n      url: 'https://marineregions.org/downloads.php',\n      sourceName: 'Marine Regions'\n    },\n    {\n      title: 'Gas Pipelines',\n      url: 'https://globalenergymonitor.org/projects/global-gas-infrastructure-tracker/',\n      sourceName: 'Global Energy Monitor'\n    },\n    {\n      title: 'Cable Ships',\n      url: 'https://globalfishingwatch.org/our-apis/documentation#vessels-api',\n      sourceName: 'Global Fishing Watch'\n    },\n    {\n      title: 'Map',\n      url: 'https://www.maptiler.com/',\n      sourceName: 'MapTiler'\n    }\n  ];\n  \n  // Close modal on escape key\n  const handleKeydown = (event) => {\n    if (event.key === 'Escape' && showModal.value) {\n      showModal.value = false;\n    }\n  };\n  \n  // Add and remove event listener\n  onMounted(() => {\n    document.addEventListener('keydown', handleKeydown);\n  });\n  \n  onUnmounted(() => {\n    document.removeEventListener('keydown', handleKeydown);\n  });\n  </script>\n  \n  <style scoped>\n  .modal-enter-active,\n  .modal-leave-active {\n    transition: opacity 0.3s ease;\n  }\n  \n  .modal-enter-from,\n  .modal-leave-to {\n    opacity: 0;\n  }\n  </style>","import script from \"./SourcesModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourcesModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourcesModal.vue?vue&type=style&index=0&id=298ef3b7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-298ef3b7\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '../assets/logo.png'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1ffbf91c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  class: \"bg-dark d-flex flex-column\",\n  id: \"sidebar\"\n}\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"text-white\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"bi bi-search\" }),\n  /*#__PURE__*/_createTextVNode(\" Search... \")\n], -1))\nconst _hoisted_3 = { class: \"d-flex align-items-center\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"ship-icon-container me-2\"\n}\nconst _hoisted_5 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"ship-icon\"\n}\nconst _hoisted_6 = [\"fill\"]\nconst _hoisted_7 = [\"title\"]\nconst _hoisted_8 = {\n  key: 1,\n  class: \"cable-icon-container me-2\"\n}\nconst _hoisted_9 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"landing-icon\"\n}\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M4 8c4 8 12-8 16 8\",\n  fill: \"none\",\n  stroke: \"white\",\n  \"stroke-width\": \"2\",\n  \"stroke-linecap\": \"round\"\n}, null, -1))\nconst _hoisted_11 = [\"fill\"]\nconst _hoisted_12 = [\"fill\"]\nconst _hoisted_13 = {\n  key: 2,\n  class: \"landing-icon-container me-2\"\n}\nconst _hoisted_14 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  height: \"24\",\n  class: \"landing-icon\"\n}\nconst _hoisted_15 = [\"fill\"]\nconst _hoisted_16 = { class: \"list-group list-group-flush overflow-x-hidden overflow-y-auto my-0 py-0\" }\nconst _hoisted_17 = {\n  class: \"mt-auto p-2\",\n  id: \"footer\"\n}\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  style: { width: '250px', height: 'auto' }\n}, null, -1))\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\" Copyright © Jonas Franken, 2024\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\" Licensed under the \"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    target: \"blank\",\n    href: \"https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12\"\n  }, \"EUPL\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"mailto:franken@peasec.de\" }, \"franken@peasec.de\")\n], -1))\n\nimport { ref, watch, onMounted, nextTick } from 'vue';\nimport L from 'leaflet';\nimport VueMultiselect from 'vue-multiselect';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\nimport SourcesModal from './SourcesModal.vue';\nimport vesselIds from '@/assets/vesselIds.json';\nimport VesselTracking from './VesselTracking.vue';\nimport axios from 'axios';\n\nimport { tracker } from '@openreplay/tracker';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TheSidebar',\n  props: {\n  currentLanguage: { type: String, required: true },\n  cableStore: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  layerGroup: { type: Object, required: true },\n  mapReady: { type: Boolean, required: true },\n  vesselPositions: { type: Array, default: () => [] },\n  viewingVesselTrack: {\n    type: Boolean,\n    required: true\n  }\n},\n  emits: ['update:vesselPositions', 'update:hoveredMarker', 'update:viewingVesselTrack'],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emit = __emit;\n\nconst vesselTrackingRef = ref(null);\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\nconst selectedCables = ref([]);\nconst selectedLandingSite = ref(null);\nconst landingSitesAndCables = ref([]);\nconst isLoading = ref(false);\nlet inputArray = [];\nconst mapInstance = ref(cableStore.getMapInstance); \nconst hoveredMarker = ref(null);\n\nconst sidebarMarkerLayerGroup = ref<L.LayerGroup | null>(null);\n\n// Helper function to get ship color\nfunction getShipColor(vessel) {\n  return vessel.color || '#636363'; // Default color if none is provided\n}\n\n// Helper function to get flag emoji\nfunction getFlagEmoji(vessel) {\n  return vessel.flag || '🚩'; // Default flag emoji if none is provided\n}\n\n// Helper function to get cable color\nfunction getCableColor(cable) {\n  return cable.color || '#007BFF'; // Default color for cables\n}\n\n// Helper function to get landing site color\nfunction getLandingColor(landingSite) {\n  return landingSite.color || '#28A745'; // Default color for landing sites\n}\n\nconst onShipClickMethod = ref<((event: any, vessel: any) => void) | null>(null);\nconst currentSidebarMarker = ref(null);\n\n// Watch for hovered marker updates\nwatch(() => hoveredMarker.value, (newMarker) => {\n  if (newMarker && mapInstance.value) {\n    newMarker.addTo(mapInstance.value);\n  } else if (hoveredMarker.value && mapInstance.value && newMarker === null) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n    hoveredMarker.value = null;\n  }\n}, { deep: true });\n\nconst updateHoveredMarker = (marker) => {\n  if (hoveredMarker.value && mapInstance.value && mapInstance.value.hasLayer(hoveredMarker.value)) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n  }\n  hoveredMarker.value = marker;\n};\n\nconst updateVesselPositions = (positions) => {\n  emit('update:vesselPositions', positions);\n};\n\nconst updateViewingVesselTrack = (isViewing) => {\n  emit('update:viewingVesselTrack', isViewing);\n};\n\n// Function to clear sidebar vessel\nfunction clearSidebarVessel() {\n  if (sidebarMarkerLayerGroup.value) {\n    // Clear all markers from the layer group\n    sidebarMarkerLayerGroup.value.clearLayers();\n  }\n\n  // Update the vesselPositions array to exclude the sidebar-created vessel\n  if (props.vesselPositions && props.vesselPositions.length > 0) {\n    const updatedPositions = props.vesselPositions.filter(vessel => !vessel.fromSidebar);\n    emit('update:vesselPositions', updatedPositions);\n  }\n}\n\nasync function handleVesselSearchSelect(vessel) {\n  // Clear any existing sidebar vessel first\n  clearSidebarVessel();\n\n  if (!vesselTrackingRef.value) {\n    console.error('VesselTracking component not initialized');\n    return;\n  }\n\n  try {\n    const vesselInfo = vessel;\n    const latestPosition = await getVesselLatestPosition(vesselInfo.vesselId);\n\n    if (!latestPosition) {\n      console.error('Could not get latest position for vessel:', vesselInfo.vesselId);\n      return;\n    }\n\n    const vesselData = {\n      ...vessel,\n      ...latestPosition.vessel,\n      id: vesselInfo.vesselId,\n      position: latestPosition.position,\n      lastSeen: latestPosition.lastSeen || new Date().toISOString(),\n      eventType: latestPosition.eventType || 'Unknown',\n      flag: latestPosition.vessel?.flag || vessel.country || 'Unknown',\n      ssvid: vessel.ssvid || latestPosition.vessel?.ssvid,\n      name: vessel.name || latestPosition.vessel?.name || 'Unknown Vessel',\n      length: vesselInfo.length || 'Unknown',\n      beam: vesselInfo.beam || 'Unknown',\n      grossTonage: vesselInfo.grossTonage || 'Unknown',\n      purpose: vesselInfo.purpose || 'Unknown',\n      cableCapacity: vesselInfo.cableCapacity || 'Unknown',\n      notes: vesselInfo.notes || 'Unknown',\n      baseport: vesselInfo.baseport || 'Unknown',\n      owner: vesselInfo.owner || 'Unknown',\n      fromSidebar: true,\n    };\n\n    // Update parent component's vessel positions\n    if (Array.isArray(props.vesselPositions)) {\n      const updatedPositions = [...props.vesselPositions, vesselData];\n      emit('update:vesselPositions', updatedPositions);\n    } else {\n      emit('update:vesselPositions', [vesselData]);\n    }\n\n    // Center map on vessel position\n    if (mapInstance.value && vesselData.position) {\n      mapInstance.value.setView([vesselData.position.lat, vesselData.position.lon], 8);\n    }\n\n    await nextTick();\n\n    if (!vesselTrackingRef.value) {\n      console.error('VesselTracking component not initialized');\n      return;\n    }\n\n    // Create and add marker using Leaflet\n    const shipIcon = vesselTrackingRef.value.createShipIcon('#636363', vesselData.flag, vesselData);\n\n    if (mapInstance.value && vesselData.position) {\n      const marker = new L.Marker([vesselData.position.lat, vesselData.position.lon], {\n        icon: shipIcon,\n      });\n\n      // Add click handler to the marker\n      marker.on('click', (e) => {\n        const clickEvent = {\n          latlng: {\n            lat: vesselData.position.lat,\n            lng: vesselData.position.lon,\n          },\n          originalEvent: e.originalEvent,\n        };\n\n        if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n          vesselTrackingRef.value.onShipClick(clickEvent, vesselData);\n        }\n      });\n\n      // Add the marker to the sidebar marker layer group\n      if (sidebarMarkerLayerGroup.value) {\n        marker.addTo(sidebarMarkerLayerGroup.value);\n      }\n\n      // Store the marker reference for later removal\n      vesselData.marker = marker;\n      currentSidebarMarker.value = marker;\n      marker.fromSidebar = true; // Mark the marker as created from sidebar\n    }\n\n    // Trigger the initial popup with vessel information\n    const mockEvent = {\n      latlng: {\n        lat: vesselData.position.lat,\n        lng: vesselData.position.lon,\n      },\n      originalEvent: new Event('click'),\n    };\n\n    // Show the initial popup with vessel information\n    if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n      vesselTrackingRef.value.onShipClick(mockEvent, vesselData);\n    }\n  } catch (error) {\n    console.error('Error in handleVesselSearchSelect:', error);\n  }\n}\n\n// Wähle Kabel aus Liste aus, sobald eines selektiert wird\nwatch(() => cableStore.selectCable, (state) => {\n  if (state.length > 0) {\n    const selectedCable = inputArray.find((str) => state[0] == str.id);\n    selectedCables.value = selectedCable;\n  } else {\n    selectedCables.value = [];\n  }\n  \n  if (selectedLandingSite.value?.geoData?.length > 0) {\n    selectedCables.value = selectedLandingSite.value;\n  }\n});\n\nwatch(() => landingSiteStore.selectLandingSites, (selectedLandingSites) => {\n  if (selectedLandingSites.length > 0) {\n    selectedLandingSite.value = inputArray.find((str) => selectedLandingSites[0].id == str.id);\n  } else {\n    selectedLandingSite.value = null;\n    selectedCables.value = [];\n  }\n});\n\n// Watcher for selectedCables\nwatch(() => selectedCables.value, (newValue, oldValue) => {\n  if (!newValue || newValue.length === 0) {\n    clearSidebarVessel();\n    emit('update:viewingVesselTrack', false);\n  }\n});\n\nasync function getVesselLatestPosition(vesselId) {\n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const params = {\n    limit: 1,\n    offset: 0,\n    sort: '-start',\n    vessels: [vesselId]\n  };\n  \n  try {\n    // Try both loitering and port visit events\n    params['datasets[0]'] = 'public-global-loitering-events:latest';\n    const loiteringResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    params['datasets[0]'] = 'public-global-port-visits-c2-events:latest';\n    const portVisitResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    let latestEvent = null;\n    let eventType = '';\n    \n    // Get the latest event by comparing dates\n    if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0 &&\n        portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      // If we have both types of events, compare their dates\n      const loiteringEvent = loiteringResponse.data.entries[0];\n      const portVisitEvent = portVisitResponse.data.entries[0];\n      \n      const loiteringDate = new Date(loiteringEvent.end);\n      const portVisitDate = new Date(portVisitEvent.end);\n      \n      if (loiteringDate > portVisitDate) {\n        latestEvent = loiteringEvent;\n        eventType = 'Loitering';\n      } else {\n        latestEvent = portVisitEvent;\n        eventType = 'PortVisit';\n      }\n    } else if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n      // Only loitering events available\n      latestEvent = loiteringResponse.data.entries[0];\n      eventType = 'Loitering';\n    } else if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      // Only port visit events available\n      latestEvent = portVisitResponse.data.entries[0];\n      eventType = 'PortVisit';\n    }\n        \n    if (latestEvent) {\n      return {\n        position: latestEvent.position,\n        lastSeen: latestEvent.end,\n        ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n        eventType: eventType,\n        vessel: {\n          ...latestEvent.vessel,\n          name: latestEvent.vessel.name || 'Unknown Vessel'\n        }\n      };\n    }\n    \n    return null;\n  } catch (error) {\n    console.error(\"Error fetching vessel position:\", error);\n    return null;\n  }\n}\n\nasync function initializeSearchBar() {\n  await cableStore.initialize();\n  \n  // Create vessel options first\n  const vesselSearchOptions = Object.entries(vesselIds).map(([_, vessel]) => {\n    const flag = getCountryFlag(vessel.country);\n    \n    return {\n      id: vessel.vesselId,\n      name: vessel.shipname,\n      type: 'vessel',\n      ssvid: vessel.ssvid,\n      color: '#636363',\n      flag,\n      country: vessel.country,\n      vesselId: vessel.vesselId,\n      shipname: vessel.shipname,\n      ...vessel\n    };\n  });\n\n  // Create other options\n  const cableOptions = cableStore.getDataCables.map((cable) => ({\n    ...cable,\n    type: 'cable',\n  }));\n\n  const landingSiteOptions = landingSiteStore.getLandingSites.map((landingSite) => ({\n    ...landingSite,\n    type: 'landingSite',\n  }));\n\n  // Try putting vessels in second position since last position doesn't work\n  inputArray = [...cableOptions, ...vesselSearchOptions, ...landingSiteOptions];\n  landingSitesAndCables.value = inputArray;\n}\n\nfunction getCountryFlag(countryCode: string): string {\n  if (!countryCode) return '🚩'; // Default flag if no country code is provided\n\n  // Handle specific cases for country codes\n  const codeMapping: Record<string, string> = {\n    'KOR': 'KR', // South Korea\n    'SWE': 'SE', // Sweden\n    'ARE': 'AE', // United Arab Emirates\n    'ATG': 'AG', // Antigua and Barbuda\n    'BRB': 'BB'  // Barbados\n  };\n\n  // Use mapped code or original code\n  const normalizedCode = codeMapping[countryCode] || countryCode;\n\n  try {\n    // Ensure the code is exactly 2 characters long\n    const twoLetterCode = normalizedCode.slice(0, 2).toUpperCase();\n    \n    // Convert the two-letter code to a flag emoji\n    const codePoints = twoLetterCode\n      .split('')\n      .map(char => 127397 + char.charCodeAt());\n\n    return String.fromCodePoint(...codePoints);\n  } catch (error) {\n    console.error(`Error converting country code ${countryCode} to flag:`, error);\n    return '🚩'; // Fallback flag if conversion fails\n  }\n}\n\nonMounted(() => {\n  if (!mapInstance.value) {\n    console.error('mapInstance is null in TheSidebar.vue');\n  }\n});\n\nonMounted(async () => {\n  await initializeSearchBar();\n  mapInstance.value = cableStore.getMapInstance;\n  if (!mapInstance.value) {\n    console.error('mapInstance is null in TheSidebar.vue');\n    return;\n  }\n  sidebarMarkerLayerGroup.value = L.layerGroup().addTo(mapInstance.value);\n  \n  // Verify the initialization\n  console.log('First few items:', landingSitesAndCables.value.slice(0, 5).map(item => ({\n    type: item.type,\n    name: item.name,\n    flag: item.type === 'vessel' ? item.flag : undefined\n  })));\n});\n\ntracker.configure({\n  projectKey: 'ult5CxDyaNR1wM3DV71C',\n  privateMode: false,\n  canvas: {\n    disableCanvas: false,\n    useAnimationFrame: true,\n    fileExt: 'webp',\n  },\n  resourceBaseHref: 'https://juliansge.github.io/openreplay-assets//',\n});\n\ntracker.start();\n// find cable in list function\nasync function asyncFind(queryGiven: string) {\n  clearSidebarVessel();\n\n  if (!queryGiven) {\n    landingSitesAndCables.value = inputArray;\n    return;\n  }\n\n  const regex = new RegExp(queryGiven.replace(/[-[]{}()+?.,\\^$|#\\s]/g, '&'), 'i');\n  \n  // Filter maintaining the same order as initialization\n  const filteredCables = inputArray.filter(item => \n    item.type === 'cable' && item.name && regex.test(item.name)\n  );\n  \n  const filteredVessels = inputArray.filter(item => \n    item.type === 'vessel' && item.name && regex.test(item.name)\n  );\n  \n  const filteredLandingSites = inputArray.filter(item => \n    item.type === 'landingSite' && item.name && regex.test(item.name)\n  );\n\n  landingSitesAndCables.value = [\n    ...filteredCables,\n    ...filteredVessels,\n    ...filteredLandingSites\n  ];\n}\n\nfunction selectCableOrLandingSiteOrVessel(selection) {\n  if (selection.type === 'vessel') {\n    // Set viewingVesselTrack to true when a vessel is selected\n    emit('update:viewingVesselTrack', true);\n    handleVesselSearchSelect(selection);\n  } else if (selection.country) {\n    cableStore.deselectCables();\n    landingSiteStore.setSelectLandingSite(selection, true);\n    // Reset viewingVesselTrack when non-vessel is selected\n    emit('update:viewingVesselTrack', false);\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(selection.id, true);\n    // Reset viewingVesselTrack when non-vessel is selected\n    emit('update:viewingVesselTrack', false);\n  }\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_unref(VueMultiselect), {\n      modelValue: selectedCables.value,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedCables).value = $event)),\n      \"track-by\": \"id\",\n      label: \"name\",\n      options: landingSitesAndCables.value,\n      searchable: true,\n      loading: isLoading.value,\n      \"internal-search\": false,\n      \"show-no-options\": false,\n      placeholder: \"Search...\",\n      onSearchChange: asyncFind,\n      onSelect: selectCableOrLandingSiteOrVessel\n    }, {\n      placeholder: _withCtx(() => [\n        _hoisted_2\n      ]),\n      option: _withCtx(({ option }) => [\n        _createElementVNode(\"div\", _hoisted_3, [\n          (option.type === 'vessel')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                (_openBlock(), _createElementBlock(\"svg\", _hoisted_5, [\n                  _createElementVNode(\"path\", {\n                    d: \"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.64 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\",\n                    fill: getShipColor(option),\n                    stroke: \"white\",\n                    \"stroke-width\": \"1\"\n                  }, null, 8, _hoisted_6)\n                ])),\n                _createElementVNode(\"span\", {\n                  class: \"ship-flag\",\n                  title: `Country: ${option.country}`\n                }, _toDisplayString(getCountryFlag(option.flag)), 9, _hoisted_7)\n              ]))\n            : _createCommentVNode(\"\", true),\n          (option.type === 'cable')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n                (_openBlock(), _createElementBlock(\"svg\", _hoisted_9, [\n                  _hoisted_10,\n                  _createElementVNode(\"circle\", {\n                    cx: \"4\",\n                    cy: \"8\",\n                    r: \"2\",\n                    fill: getLandingColor(option),\n                    stroke: \"white\",\n                    \"stroke-width\": \"1\"\n                  }, null, 8, _hoisted_11),\n                  _createElementVNode(\"circle\", {\n                    cx: \"20\",\n                    cy: \"16\",\n                    r: \"2\",\n                    fill: getLandingColor(option),\n                    stroke: \"white\",\n                    \"stroke-width\": \"1\"\n                  }, null, 8, _hoisted_12)\n                ]))\n              ]))\n            : _createCommentVNode(\"\", true),\n          (option.type === 'landingSite')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                (_openBlock(), _createElementBlock(\"svg\", _hoisted_14, [\n                  _createElementVNode(\"path\", {\n                    d: \"M12 2C8.69 2 6 4.69 6 8c0 2.64 2.07 6.64 4.42 9.71 0 .01.01.02.02.03l1.28 1.56 1.28-1.56c.01-.01.02-.02.02-.03C15.93 14.64 18 10.64 18 8c0-3.31-2.69-6-6-6zm0 2c2.21 0 4 1.79 4 4 0 1.91-1.63 5.17-4 8.33-2.37-3.16-4-6.42-4-8.33 0-2.21 1.79-4 4-4zm-1 3v2h2V7h-2zm0 4v2h2v-2h-2zm-9 6v2h20v-2h-20z\",\n                    fill: getLandingColor(option),\n                    stroke: \"white\",\n                    \"stroke-width\": \"1\"\n                  }, null, 8, _hoisted_15)\n                ]))\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"span\", null, _toDisplayString(option.name), 1)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"modelValue\", \"options\", \"loading\"]),\n    _createVNode(VesselTracking, {\n      ref_key: \"vesselTrackingRef\",\n      ref: vesselTrackingRef,\n      mapInstance: mapInstance.value,\n      currentLanguage: __props.currentLanguage,\n      cableStore: _unref(cableStore),\n      controlInstance: __props.controlInstance,\n      layerGroup: __props.layerGroup,\n      mapReady: __props.mapReady,\n      vesselPositions: __props.vesselPositions,\n      \"onUpdate:vesselPositions\": updateVesselPositions,\n      \"onUpdate:hoveredMarker\": updateHoveredMarker,\n      \"onUpdate:viewingVesselTrack\": updateViewingVesselTrack\n    }, null, 8, [\"mapInstance\", \"currentLanguage\", \"cableStore\", \"controlInstance\", \"layerGroup\", \"mapReady\", \"vesselPositions\"]),\n    _createElementVNode(\"div\", _hoisted_16, [\n      _createVNode(_component_router_view, { name: \"sidebar\" }),\n      _createElementVNode(\"div\", _hoisted_17, [\n        _hoisted_18,\n        _createVNode(SourcesModal),\n        _hoisted_19\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"bg-dark d-flex flex-column\" id=\"sidebar\">\n    <VueMultiselect\n      v-model=\"selectedCables\"\n      track-by=\"id\"\n      label=\"name\"\n      :options=\"landingSitesAndCables\"\n      :searchable=\"true\"\n      :loading=\"isLoading\"\n      :internal-search=\"false\"\n      :show-no-options=\"false\"\n      placeholder=\"Search...\"\n      @search-change=\"asyncFind\"\n      @select=\"selectCableOrLandingSiteOrVessel\">\n      <!-- Custom placeholder with search icon -->\n      <template v-slot:placeholder>\n        <span class=\"text-white\">\n          <i class=\"bi bi-search\"></i> Search...\n        </span>\n      </template>\n      <!-- Custom option template -->\n      <template v-slot:option=\"{ option }\">\n        <div class=\"d-flex align-items-center\">\n          <!-- Ship icon for vessels with debug info -->\n          <div v-if=\"option.type === 'vessel'\" class=\"ship-icon-container me-2\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" class=\"ship-icon\">\n      <path d=\"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.64 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z\" :fill=\"getShipColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n    </svg>\n    <span \n              class=\"ship-flag\" \n              :title=\"`Country: ${option.country}`\"\n            >{{ getCountryFlag(option.flag) }}</span>\n  </div>\n          <!-- Cable icon for cable systems -->\n          <div v-if=\"option.type === 'cable'\" class=\"cable-icon-container me-2\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" class=\"landing-icon\">\n              <path d=\"M4 8c4 8 12-8 16 8\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n              <circle cx=\"4\" cy=\"8\" r=\"2\" :fill=\"getLandingColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n              <circle cx=\"20\" cy=\"16\" r=\"2\" :fill=\"getLandingColor(option)\" stroke=\"white\" stroke-width=\"1\"/>\n            </svg>\n          </div>\n          <!-- Landing site icon for landing sites -->\n          <div v-if=\"option.type === 'landingSite'\" class=\"landing-icon-container me-2\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              width=\"24\"\n              height=\"24\"\n              class=\"landing-icon\"\n            >\n              <path\n                d=\"M12 2C8.69 2 6 4.69 6 8c0 2.64 2.07 6.64 4.42 9.71 0 .01.01.02.02.03l1.28 1.56 1.28-1.56c.01-.01.02-.02.02-.03C15.93 14.64 18 10.64 18 8c0-3.31-2.69-6-6-6zm0 2c2.21 0 4 1.79 4 4 0 1.91-1.63 5.17-4 8.33-2.37-3.16-4-6.42-4-8.33 0-2.21 1.79-4 4-4zm-1 3v2h2V7h-2zm0 4v2h2v-2h-2zm-9 6v2h20v-2h-20z\"\n                :fill=\"getLandingColor(option)\"\n                stroke=\"white\"\n                stroke-width=\"1\"\n              />\n            </svg>\n          </div>\n          <!-- Option name -->\n          <span>{{option.name}}</span>\n        </div>\n      </template>\n    </VueMultiselect>\n\n    <!-- Rest of your template remains unchanged -->\n    <VesselTracking\n      ref=\"vesselTrackingRef\"\n      :mapInstance=\"mapInstance\"\n      :currentLanguage=\"currentLanguage\"\n      :cableStore=\"cableStore\"\n      :controlInstance=\"controlInstance\"\n      :layerGroup=\"layerGroup\"\n      :mapReady=\"mapReady\"\n      :vesselPositions=\"vesselPositions\"\n      @update:vesselPositions=\"updateVesselPositions\"\n      @update:hoveredMarker=\"updateHoveredMarker\"\n      @update:viewingVesselTrack=\"updateViewingVesselTrack\"\n    />\n\n    <!-- BODY -->\n    <div class=\"list-group list-group-flush overflow-x-hidden overflow-y-auto my-0 py-0\">\n      <router-view name=\"sidebar\" />\n\n      <!-- FOOTER -->\n      <div class=\"mt-auto p-2\" id=\"footer\">\n        <img src=\"../assets/logo.png\" :style=\"{ width: '250px', height: 'auto' }\" />\n        <SourcesModal />\n        <p>\n          Copyright © Jonas Franken, 2024<br />\n          Licensed under the\n          <a target=\"blank\" href=\"https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12\">EUPL</a><br />\n          <a href=\"mailto:franken@peasec.de\">franken@peasec.de</a>\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onMounted, nextTick } from 'vue';\nimport L from 'leaflet';\nimport VueMultiselect from 'vue-multiselect';\nimport { useDataCablesStore } from '@/store/datacables';\nimport { useLandingSitesStore } from '@/store/landingSites';\nimport SourcesModal from './SourcesModal.vue';\nimport vesselIds from '@/assets/vesselIds.json';\nimport VesselTracking from './VesselTracking.vue';\nimport axios from 'axios';\n\nconst props = defineProps({\n  currentLanguage: { type: String, required: true },\n  cableStore: { type: Object, required: true },\n  controlInstance: { type: Object, required: true },\n  layerGroup: { type: Object, required: true },\n  mapReady: { type: Boolean, required: true },\n  vesselPositions: { type: Array, default: () => [] },\n  viewingVesselTrack: {\n    type: Boolean,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['update:vesselPositions', 'update:hoveredMarker', 'update:viewingVesselTrack']);\n\nconst vesselTrackingRef = ref(null);\nconst cableStore = useDataCablesStore();\nconst landingSiteStore = useLandingSitesStore();\nconst selectedCables = ref([]);\nconst selectedLandingSite = ref(null);\nconst landingSitesAndCables = ref([]);\nconst isLoading = ref(false);\nlet inputArray = [];\nconst mapInstance = ref(cableStore.getMapInstance); \nconst hoveredMarker = ref(null);\n\nconst sidebarMarkerLayerGroup = ref<L.LayerGroup | null>(null);\n\n// Helper function to get ship color\nfunction getShipColor(vessel) {\n  return vessel.color || '#636363'; // Default color if none is provided\n}\n\n// Helper function to get flag emoji\nfunction getFlagEmoji(vessel) {\n  return vessel.flag || '🚩'; // Default flag emoji if none is provided\n}\n\n// Helper function to get cable color\nfunction getCableColor(cable) {\n  return cable.color || '#007BFF'; // Default color for cables\n}\n\n// Helper function to get landing site color\nfunction getLandingColor(landingSite) {\n  return landingSite.color || '#28A745'; // Default color for landing sites\n}\n\nconst onShipClickMethod = ref<((event: any, vessel: any) => void) | null>(null);\nconst currentSidebarMarker = ref(null);\n\n// Watch for hovered marker updates\nwatch(() => hoveredMarker.value, (newMarker) => {\n  if (newMarker && mapInstance.value) {\n    newMarker.addTo(mapInstance.value);\n  } else if (hoveredMarker.value && mapInstance.value && newMarker === null) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n    hoveredMarker.value = null;\n  }\n}, { deep: true });\n\nconst updateHoveredMarker = (marker) => {\n  if (hoveredMarker.value && mapInstance.value && mapInstance.value.hasLayer(hoveredMarker.value)) {\n    mapInstance.value.removeLayer(hoveredMarker.value);\n  }\n  hoveredMarker.value = marker;\n};\n\nconst updateVesselPositions = (positions) => {\n  emit('update:vesselPositions', positions);\n};\n\nconst updateViewingVesselTrack = (isViewing) => {\n  emit('update:viewingVesselTrack', isViewing);\n};\n\n// Function to clear sidebar vessel\nfunction clearSidebarVessel() {\n  if (sidebarMarkerLayerGroup.value) {\n    // Clear all markers from the layer group\n    sidebarMarkerLayerGroup.value.clearLayers();\n  }\n\n  // Update the vesselPositions array to exclude the sidebar-created vessel\n  if (props.vesselPositions && props.vesselPositions.length > 0) {\n    const updatedPositions = props.vesselPositions.filter(vessel => !vessel.fromSidebar);\n    emit('update:vesselPositions', updatedPositions);\n  }\n}\n\nasync function handleVesselSearchSelect(vessel) {\n  // Clear any existing sidebar vessel first\n  clearSidebarVessel();\n\n  if (!vesselTrackingRef.value) {\n    console.error('VesselTracking component not initialized');\n    return;\n  }\n\n  try {\n    const vesselInfo = vessel;\n    const latestPosition = await getVesselLatestPosition(vesselInfo.vesselId);\n\n    if (!latestPosition) {\n      console.error('Could not get latest position for vessel:', vesselInfo.vesselId);\n      return;\n    }\n\n    const vesselData = {\n      ...vessel,\n      ...latestPosition.vessel,\n      id: vesselInfo.vesselId,\n      position: latestPosition.position,\n      lastSeen: latestPosition.lastSeen || new Date().toISOString(),\n      eventType: latestPosition.eventType || 'Unknown',\n      flag: latestPosition.vessel?.flag || vessel.country || 'Unknown',\n      ssvid: vessel.ssvid || latestPosition.vessel?.ssvid,\n      name: vessel.name || latestPosition.vessel?.name || 'Unknown Vessel',\n      length: vesselInfo.length || 'Unknown',\n      beam: vesselInfo.beam || 'Unknown',\n      grossTonage: vesselInfo.grossTonage || 'Unknown',\n      purpose: vesselInfo.purpose || 'Unknown',\n      cableCapacity: vesselInfo.cableCapacity || 'Unknown',\n      notes: vesselInfo.notes || 'Unknown',\n      baseport: vesselInfo.baseport || 'Unknown',\n      owner: vesselInfo.owner || 'Unknown',\n      fromSidebar: true,\n    };\n\n    // Update parent component's vessel positions\n    if (Array.isArray(props.vesselPositions)) {\n      const updatedPositions = [...props.vesselPositions, vesselData];\n      emit('update:vesselPositions', updatedPositions);\n    } else {\n      emit('update:vesselPositions', [vesselData]);\n    }\n\n    // Center map on vessel position\n    if (mapInstance.value && vesselData.position) {\n      mapInstance.value.setView([vesselData.position.lat, vesselData.position.lon], 8);\n    }\n\n    await nextTick();\n\n    if (!vesselTrackingRef.value) {\n      console.error('VesselTracking component not initialized');\n      return;\n    }\n\n    // Create and add marker using Leaflet\n    const shipIcon = vesselTrackingRef.value.createShipIcon('#636363', vesselData.flag, vesselData);\n\n    if (mapInstance.value && vesselData.position) {\n      const marker = new L.Marker([vesselData.position.lat, vesselData.position.lon], {\n        icon: shipIcon,\n      });\n\n      // Add click handler to the marker\n      marker.on('click', (e) => {\n        const clickEvent = {\n          latlng: {\n            lat: vesselData.position.lat,\n            lng: vesselData.position.lon,\n          },\n          originalEvent: e.originalEvent,\n        };\n\n        if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n          vesselTrackingRef.value.onShipClick(clickEvent, vesselData);\n        }\n      });\n\n      // Add the marker to the sidebar marker layer group\n      if (sidebarMarkerLayerGroup.value) {\n        marker.addTo(sidebarMarkerLayerGroup.value);\n      }\n\n      // Store the marker reference for later removal\n      vesselData.marker = marker;\n      currentSidebarMarker.value = marker;\n      marker.fromSidebar = true; // Mark the marker as created from sidebar\n    }\n\n    // Trigger the initial popup with vessel information\n    const mockEvent = {\n      latlng: {\n        lat: vesselData.position.lat,\n        lng: vesselData.position.lon,\n      },\n      originalEvent: new Event('click'),\n    };\n\n    // Show the initial popup with vessel information\n    if (typeof vesselTrackingRef.value.onShipClick === 'function') {\n      vesselTrackingRef.value.onShipClick(mockEvent, vesselData);\n    }\n  } catch (error) {\n    console.error('Error in handleVesselSearchSelect:', error);\n  }\n}\n\n// Wähle Kabel aus Liste aus, sobald eines selektiert wird\nwatch(() => cableStore.selectCable, (state) => {\n  if (state.length > 0) {\n    const selectedCable = inputArray.find((str) => state[0] == str.id);\n    selectedCables.value = selectedCable;\n  } else {\n    selectedCables.value = [];\n  }\n  \n  if (selectedLandingSite.value?.geoData?.length > 0) {\n    selectedCables.value = selectedLandingSite.value;\n  }\n});\n\nwatch(() => landingSiteStore.selectLandingSites, (selectedLandingSites) => {\n  if (selectedLandingSites.length > 0) {\n    selectedLandingSite.value = inputArray.find((str) => selectedLandingSites[0].id == str.id);\n  } else {\n    selectedLandingSite.value = null;\n    selectedCables.value = [];\n  }\n});\n\n// Watcher for selectedCables\nwatch(() => selectedCables.value, (newValue, oldValue) => {\n  if (!newValue || newValue.length === 0) {\n    clearSidebarVessel();\n    emit('update:viewingVesselTrack', false);\n  }\n});\n\nasync function getVesselLatestPosition(vesselId) {\n  const vesselTrackingUrl = 'https://sdcs-api.dev.peasec.de/fishing/v3/events';\n  const params = {\n    limit: 1,\n    offset: 0,\n    sort: '-start',\n    vessels: [vesselId]\n  };\n  \n  try {\n    // Try both loitering and port visit events\n    params['datasets[0]'] = 'public-global-loitering-events:latest';\n    const loiteringResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    params['datasets[0]'] = 'public-global-port-visits-c2-events:latest';\n    const portVisitResponse = await axios.get(vesselTrackingUrl, { params });\n    \n    let latestEvent = null;\n    let eventType = '';\n    \n    // Get the latest event by comparing dates\n    if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0 &&\n        portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      // If we have both types of events, compare their dates\n      const loiteringEvent = loiteringResponse.data.entries[0];\n      const portVisitEvent = portVisitResponse.data.entries[0];\n      \n      const loiteringDate = new Date(loiteringEvent.end);\n      const portVisitDate = new Date(portVisitEvent.end);\n      \n      if (loiteringDate > portVisitDate) {\n        latestEvent = loiteringEvent;\n        eventType = 'Loitering';\n      } else {\n        latestEvent = portVisitEvent;\n        eventType = 'PortVisit';\n      }\n    } else if (loiteringResponse.data.entries && loiteringResponse.data.entries.length > 0) {\n      // Only loitering events available\n      latestEvent = loiteringResponse.data.entries[0];\n      eventType = 'Loitering';\n    } else if (portVisitResponse.data.entries && portVisitResponse.data.entries.length > 0) {\n      // Only port visit events available\n      latestEvent = portVisitResponse.data.entries[0];\n      eventType = 'PortVisit';\n    }\n        \n    if (latestEvent) {\n      return {\n        position: latestEvent.position,\n        lastSeen: latestEvent.end,\n        ssvid: latestEvent.vessel?.ssvid || 'Unknown',\n        eventType: eventType,\n        vessel: {\n          ...latestEvent.vessel,\n          name: latestEvent.vessel.name || 'Unknown Vessel'\n        }\n      };\n    }\n    \n    return null;\n  } catch (error) {\n    console.error(\"Error fetching vessel position:\", error);\n    return null;\n  }\n}\n\nasync function initializeSearchBar() {\n  await cableStore.initialize();\n  \n  // Create vessel options first\n  const vesselSearchOptions = Object.entries(vesselIds).map(([_, vessel]) => {\n    const flag = getCountryFlag(vessel.country);\n    \n    return {\n      id: vessel.vesselId,\n      name: vessel.shipname,\n      type: 'vessel',\n      ssvid: vessel.ssvid,\n      color: '#636363',\n      flag,\n      country: vessel.country,\n      vesselId: vessel.vesselId,\n      shipname: vessel.shipname,\n      ...vessel\n    };\n  });\n\n  // Create other options\n  const cableOptions = cableStore.getDataCables.map((cable) => ({\n    ...cable,\n    type: 'cable',\n  }));\n\n  const landingSiteOptions = landingSiteStore.getLandingSites.map((landingSite) => ({\n    ...landingSite,\n    type: 'landingSite',\n  }));\n\n  // Try putting vessels in second position since last position doesn't work\n  inputArray = [...cableOptions, ...vesselSearchOptions, ...landingSiteOptions];\n  landingSitesAndCables.value = inputArray;\n}\n\nfunction getCountryFlag(countryCode: string): string {\n  if (!countryCode) return '🚩'; // Default flag if no country code is provided\n\n  // Handle specific cases for country codes\n  const codeMapping: Record<string, string> = {\n    'KOR': 'KR', // South Korea\n    'SWE': 'SE', // Sweden\n    'ARE': 'AE', // United Arab Emirates\n    'ATG': 'AG', // Antigua and Barbuda\n    'BRB': 'BB'  // Barbados\n  };\n\n  // Use mapped code or original code\n  const normalizedCode = codeMapping[countryCode] || countryCode;\n\n  try {\n    // Ensure the code is exactly 2 characters long\n    const twoLetterCode = normalizedCode.slice(0, 2).toUpperCase();\n    \n    // Convert the two-letter code to a flag emoji\n    const codePoints = twoLetterCode\n      .split('')\n      .map(char => 127397 + char.charCodeAt());\n\n    return String.fromCodePoint(...codePoints);\n  } catch (error) {\n    console.error(`Error converting country code ${countryCode} to flag:`, error);\n    return '🚩'; // Fallback flag if conversion fails\n  }\n}\n\nonMounted(() => {\n  if (!mapInstance.value) {\n    console.error('mapInstance is null in TheSidebar.vue');\n  }\n});\n\nonMounted(async () => {\n  await initializeSearchBar();\n  mapInstance.value = cableStore.getMapInstance;\n  if (!mapInstance.value) {\n    console.error('mapInstance is null in TheSidebar.vue');\n    return;\n  }\n  sidebarMarkerLayerGroup.value = L.layerGroup().addTo(mapInstance.value);\n  \n  // Verify the initialization\n  console.log('First few items:', landingSitesAndCables.value.slice(0, 5).map(item => ({\n    type: item.type,\n    name: item.name,\n    flag: item.type === 'vessel' ? item.flag : undefined\n  })));\n});\n\nimport { tracker } from '@openreplay/tracker';\n\ntracker.configure({\n  projectKey: 'ult5CxDyaNR1wM3DV71C',\n  privateMode: false,\n  canvas: {\n    disableCanvas: false,\n    useAnimationFrame: true,\n    fileExt: 'webp',\n  },\n  resourceBaseHref: 'https://juliansge.github.io/openreplay-assets//',\n});\n\ntracker.start();\n// find cable in list function\nasync function asyncFind(queryGiven: string) {\n  clearSidebarVessel();\n\n  if (!queryGiven) {\n    landingSitesAndCables.value = inputArray;\n    return;\n  }\n\n  const regex = new RegExp(queryGiven.replace(/[-[]{}()+?.,\\^$|#\\s]/g, '&'), 'i');\n  \n  // Filter maintaining the same order as initialization\n  const filteredCables = inputArray.filter(item => \n    item.type === 'cable' && item.name && regex.test(item.name)\n  );\n  \n  const filteredVessels = inputArray.filter(item => \n    item.type === 'vessel' && item.name && regex.test(item.name)\n  );\n  \n  const filteredLandingSites = inputArray.filter(item => \n    item.type === 'landingSite' && item.name && regex.test(item.name)\n  );\n\n  landingSitesAndCables.value = [\n    ...filteredCables,\n    ...filteredVessels,\n    ...filteredLandingSites\n  ];\n}\n\nfunction selectCableOrLandingSiteOrVessel(selection) {\n  if (selection.type === 'vessel') {\n    // Set viewingVesselTrack to true when a vessel is selected\n    emit('update:viewingVesselTrack', true);\n    handleVesselSearchSelect(selection);\n  } else if (selection.country) {\n    cableStore.deselectCables();\n    landingSiteStore.setSelectLandingSite(selection, true);\n    // Reset viewingVesselTrack when non-vessel is selected\n    emit('update:viewingVesselTrack', false);\n  } else {\n    landingSiteStore.deselectLandingSite();\n    cableStore.setSelectCable(selection.id, true);\n    // Reset viewingVesselTrack when non-vessel is selected\n    emit('update:viewingVesselTrack', false);\n  }\n}\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.css\"></style>\n<style>\n.multiselect, .multiselect__input, .multiselect__single {\n  font-family: inherit;\n  font-size: 1rem;\n  touch-action: manipulation;\n  color: black;\n}\n.multiselect__tags {\n  border: none;\n  border-bottom: 1px solid white;\n  border-radius: 0px;\n  color: black;\n  width: 95%;\n  height: 100%;\n  background: #48506a;\n}\n.multiselect__tags:hover, .multiselect--active.multiselect__tags {\n  border: none;\n  border-bottom: 1px solid white;\n  border-radius: 0px;\n  color: black;\n  width: 100%;\n  height: 100%;\n  background: #697fc7;\n}\n.multiselect__tag {\n  border: none;\n  border-bottom: 1px solid white;\n  border-radius: 0px;\n  margin-bottom: 0px!important;\n  margin-right: 5px!important;\n}\n.multiselect__placeholder {\n  display: inline-block!important;\n  margin-bottom: 0px!important;\n  padding-top: 0px!important;\n}\n.multiselect__content-wrapper {\n  animation-duration: 0.15s;\n  animation-name: ease-in-out;\n  border-color: #697fc7;\n  outline: #697fc7 solid 0px;\n}\n.multiselect__option--highlight {\n  background: #364d63!important;\n  padding-top: 10px!important;\n}\n.multiselect__option--highlight:after {\n  background: #364d63!important;\n}\n.multiselect__tags:hover.multiselect__placeholder {\n  background: #697fc7;\n  margin-left: 0px;\n  margin-top: 0px;\n}\n.multiselect__option {\n  display: block;\n  background: #48506a;\n  color: #ffff;\n  padding: 12px;\n  min-height: 40px;\n  line-height: 16px;\n  text-decoration: none;\n  text-transform: none;\n  position: relative;\n  cursor: pointer;\n  white-space: nowrap;\n}\n.multiselect__option--selected {\n  background: #48506a;\n  color: #ffff;\n  font-weight: bold;\n}\n.multiselect__option--selected::after {\n  content: attr(data-selected);\n  color: silver;\n  background: #48506a;\n}\n.multiselect__input::placeholder {\n  color: #ffff;\n  background-color: #697fc7;\n  border-color: #697fc7;\n}\n.multiselect__input:hover, .multiselect__single:hover, .multiselect__input:focus, .multiselect__single:focus {\n  border-color: #697fc7;\n  background-color: #697fc7;\n  color: #ffff;\n}\n.multiselect__input, .multiselect__single {\n  position: relative;\n  display: inline-block;\n  min-height: 20px;\n  line-height: 20px;\n  border: none;\n  border-radius: 5px;\n  background: #697fc7!important;\n  color: #ffff;\n  padding: 0 0 0 5px;\n  width: 95%;\n  transition: border 0.1s ease;\n  box-sizing: border-box;\n  margin-bottom: 8px;\n  vertical-align: top;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style>\n<style scoped>\n#sidebar {\n  height: 100vh;\n  max-height: 100vh;\n  --bs-border-radius: 20px;\n  width: 100%;\n}\n\n#footer {\n  font-size: 0.8rem;\n  color: white;\n}\n\na {\n  color: white;\n}\n\n.cable-icon-container,\n.landing-icon-container,\n.ship-icon-container {\n  position: relative;\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n}\n\n.cable-icon,\n.landing-icon,\n.ship-icon {\n  width: 24px;\n  height: 24px;\n}\n\n.ship-flag {\n  position: absolute;\n  top: -2px;\n  right: -16px;\n  font-size: 12px;\n  z-index: 1;\n}\n</style>","import script from \"./TheSidebar.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TheSidebar.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"vue-multiselect/dist/vue-multiselect.css?vue&type=style&index=0&lang=css&external\"\nimport \"./TheSidebar.vue?vue&type=style&index=1&id=1ffbf91c&lang=css\"\nimport \"./TheSidebar.vue?vue&type=style&index=2&id=1ffbf91c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1ffbf91c\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-102066b4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"d-flex full-height resizable-container\" }\nconst _hoisted_2 = { class: \"map-container\" }\n\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport SidebarNav from '@/components/TheSidebar.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\nconst sidebarWidth = ref(250); // Initial sidebar width\nlet isResizing = false;\n\nconst startResizing = (event: MouseEvent) => {\n  isResizing = true;\n  document.addEventListener('mousemove', resizeSidebar);\n  document.addEventListener('mouseup', stopResizing);\n};\n\nconst resizeSidebar = (event: MouseEvent) => {\n  if (isResizing) {\n    sidebarWidth.value = event.clientX;\n  }\n};\n\nconst stopResizing = () => {\n  isResizing = false;\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n};\n\nonBeforeUnmount(() => {\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n});\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref: \"sidebar\",\n      class: \"sidebar-nav\",\n      style: _normalizeStyle({ width: sidebarWidth.value + 'px' })\n    }, [\n      _createVNode(SidebarNav)\n    ], 4),\n    _createElementVNode(\"div\", {\n      ref: \"resizer\",\n      class: \"resizer\",\n      onMousedown: startResizing\n    }, null, 544),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_router_view, { name: \"main\" })\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"d-flex full-height resizable-container\">\n    <!-- SIDEBAR -->\n    <div ref=\"sidebar\" class=\"sidebar-nav\" :style=\"{ width: sidebarWidth + 'px' }\">\n    <SidebarNav />\n    </div>\n\n    <div ref=\"resizer\" class=\"resizer\" @mousedown=\"startResizing\"></div>\n\n    \n    <!-- CONTENT -->\n    <div class=\"map-container\">\n      <router-view name=\"main\"/>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport SidebarNav from '@/components/TheSidebar.vue';\n\nconst sidebarWidth = ref(250); // Initial sidebar width\nlet isResizing = false;\n\nconst startResizing = (event: MouseEvent) => {\n  isResizing = true;\n  document.addEventListener('mousemove', resizeSidebar);\n  document.addEventListener('mouseup', stopResizing);\n};\n\nconst resizeSidebar = (event: MouseEvent) => {\n  if (isResizing) {\n    sidebarWidth.value = event.clientX;\n  }\n};\n\nconst stopResizing = () => {\n  isResizing = false;\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n};\n\nonBeforeUnmount(() => {\n  document.removeEventListener('mousemove', resizeSidebar);\n  document.removeEventListener('mouseup', stopResizing);\n});\n\n</script>\n\n<style scoped>\n/* Ensure the entire layout takes full viewport height */\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* Ensure the main container takes full height and uses flexbox */\n.full-height {\n  height: 100vh; /* Full viewport height */\n}\n\n.d-flex {\n  display: flex; /* Flexbox layout for the sidebar and main content */\n}\n\n/* SidebarNav component should be styled to take up the necessary width */\n.sidebar-nav {\n  min-width: 300px; /* or any width you need for the sidebar */\n  background-color: #f8f9fa; /* Background color for the sidebar */\n}\n\n/* The map container should take up all remaining space */\n.map-container {\n  flex-grow: 1; /* Take up the remaining space next to the sidebar */\n  height: 100%; /* Ensure it takes full height */\n  position: relative; /* Necessary for Leaflet or other map controls */\n}\n</style>\n","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=102066b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-102066b4\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport HomeView from \"@/views/HomeView.vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\n\n//first load of cables and landing sites\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\nconst dataCableStore = useDataCablesStore();\ndataCableStore.initialize();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(HomeView)\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <HomeView />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport HomeView from \"@/views/HomeView.vue\";\nimport { useDataCablesStore } from \"@/store/datacables\";\n\n//first load of cables and landing sites\nconst dataCableStore = useDataCablesStore();\ndataCableStore.initialize();\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  --bs-dark-rgb: 72, 80, 106;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a277d376&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { tracker } from '@openreplay/tracker';\n\ntracker.configure({\n  projectKey: 'ult5CxDyaNR1wM3DV71C',\n  privateMode: false,\n  canvas: {\n    disableCanvas: false,\n    useAnimationFrame: true,\n    fileExt: 'webp',\n  },\n  resourceBaseHref: 'https://juliansge.github.io/openreplay-assets/',\n});\n\nexport default tracker;\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport { createPinia } from 'pinia';\nimport urql, { Client, cacheExchange, fetchExchange } from '@urql/vue';\nimport tracker from './openreplay';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport 'bootstrap';\n// commented out because opening the app in a browser would not show the most recent state, \n// could be reintegrated in the future to improve loading time\n// import './registerServiceWorker';\n\nconsole.log(\"ENVIRONMENT: \", process.env.NODE_ENV);\nif (process.env.NODE_ENV === 'production') {\n  console.log('[OpenReplay] Starting tracker...');\n  tracker.start();\n}  \n\nconst client = new Client({\n    url: process.env.VUE_APP_GRAPHQL_SERVER_URL,\n    exchanges: [cacheExchange, fetchExchange],\n    fetchOptions: {\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret': process.env.VUE_APP_HASURA_ADMIN_SECRET,\n      },\n    },\n  });\n\ncreateApp(App).use(createPinia()).use(router).use(urql, client).mount('#app');\n//creates app instance of vue App and mounts it at ID app","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"32\":\"160655e9\",\"224\":\"f4a92431\",\"312\":\"0907f9cb\",\"384\":\"599d156f\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"sdcs-dashboard:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksdcs_dashboard\"] = self[\"webpackChunksdcs_dashboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [999], function() { return __webpack_require__(984); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","_hoisted_2","class","_hoisted_3","__name","setup","__props","dataCableStore","useDataCablesStore","_ctx","_cache","getDataCables","listItems","key","id","onClick","$event","setSelectCable","name","__exports__","loadCables","handle","useQuery","query","result","loadLandingSites","queryCableById","queryLandingSiteById","useLandingSitesStore","state","landingSites","selectLandingSites","isLoading","selectedFromSidebar","getters","getLandingSites","actions","fetchLandingSites","data","_rawValue","Landingsites","forEach","e","geoData","JSON","parse","this","setSelectLandingSiteById","landingSiteId","fromSidebar","landingSite","find","site","setSelectLandingSite","console","error","push","path","deselectLandingSite","length","isOneSelected","isLandingSiteSelectedById","some","isLandingSiteSelected","includes","n","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","props","mapInstance","type","Object","required","drawnGeometry","default","samplePointCount","Number","showPopup","Boolean","emits","__expose","__emit","emit","depthAnalysis","isAnalyzing","analysisStore","Map","geometryIdCounter","WeakMap","calculateDistance","point1","point2","R","lat1","lat","Math","PI","lat2","deltaLat","deltaLng","lng","a","sin","cos","c","atan2","sqrt","interpolateLinePoints","segments","totalPoints","totalLength","segmentLengths","i","pointsPerSegment","map","max","round","interpolatedPoints","start","end","numPoints","j","fraction","interpolatedLat","interpolatedLng","isPointInPolygon","point","polygon","inside","x","y","xi","yi","xj","yj","intersect","samplePolygonPoints","bounds","getBounds","polygonLatLngs","getLatLngs","points","adjustedPoints","geodesicArea","min","maxAttempts","attempts","getSouth","random","getNorth","getWest","getEast","contains","sampleCirclePoints","circle","center","getLatLng","radius","getRadius","angle","r","extractSamplePoints","geometry","latlngs","fetchOceanDepth","Promise","minx","miny","maxx","maxy","url","axios","get","response","searchString","searchIndex","indexOf","extractedText","substring","parseFloat","NaN","analyzeGeometryDepths","value","samplePoints","depthPromises","coord","all","depths","validDepths","filter","depth","isNaN","averageDepth","reduce","b","deepestPoint","shallowestPoint","geomId","set","feature","properties","analysisId","analysis","off","on","layer","target","setLatLng","latlng","setContent","openOn","newGeometry","oldGeometry","window","d3","showProfile","isFullscreen","fetchingPoints","fetchedPoints","resizeObserver","currentElevationControl","currentElevationLayer","isOceanDepthActive","isCableShipsActive","isAnchorageActive","oceanDepthFullscreenClass","baseClasses","fullscreen","_container","MutationObserver","mutations","mutation","attributeName","classList","observe","attributes","attributeFilter","isComponentMounted","disconnect","resizeTimeout","cleanupElevationProfile","showElevationProfile","options","_originalResizeChart","_resizeChart","_safeResizeChart","bind","_map","_data","chart","_chart","area","_area","select","document","body","warn","onAdd","_initEvents","clearTimeout","listeners","event","removeEventListener","_mousemoveHandler","onRemove","Elevation","elevationOptions","theme","detached","elevationDiv","followMarker","reverseCoords","autofitBounds","imperial","altitude","distance","summary","ruler","legend","edgeScale","hotline","preferCanvas","waypoints","_onRemove","setupResizeHandling","getElementById","ResizeObserver","debounce","func","wait","timeout","later","apply","args","setTimeout","toggleFullscreen","log","height","p1","p2","pow","findClosestSegment","currentEndPoint","minDistance","Infinity","closestSegmentIndex","shouldReverse","segment","index","used","distanceToStart","distanceToEnd","segmentIndex","calculateTotalPoints","minPointDensity","maxDistanceThreshold","total","Array","isArray","segmentToProcess","shouldInterpolateSegment","interpolateSegment","sortCableSegments","rawSegments","sortedSegments","unusedSegmentsExist","nextSegment","segmentToAdd","reverse","calculateSegmentLength","lng1","lng2","segmentLength","SHORT_SEGMENT_THRESHOLD","SHORT_SEGMENT_MIN_DENSITY","NORMAL_SEGMENT_MIN_DENSITY","pointDensity","requiredDensity","interpolatedSegment","SHORT_SEGMENT_DISTANCE","NORMAL_SEGMENT_DISTANCE","actualThreshold","numExtraPoints","ceil","convertToGeoJSON","coordinates","rawCoordinates","stringify","unsortedSegments","processedCoordinates","multiLineString","acc","removeCurrentElevationControl","removeControl","removeLayer","eachLayer","className","style","geoJson","SafeElevationControl","addTo","load","safeRemoveClasses","element","classNames","classes","split","trim","remove","clear","originalRemoveClass","removeClass","el","innerHTML","selectors","selector","querySelectorAll","HTMLElement","_path","disabled","width","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","for","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","landingSitesStore","route","cable","getMapInstance","oceanDepthAnalyzerRef","filteredDepthAnalysis","loadCable","client","toPromise","CableSystems","formatDate","dateString","Date","toLocaleDateString","year","month","day","selectCable","cableDetails","extractDepthInfo","cableGeo","flattenedCoordinates","flatMap","filterDepthAnalysis","fullAnalysis","filteredAnalysis","params","cableId","toString","isCableSelected","to","_component_router_link","deselectCables","_","outOfService","readyForService","CableSystem_X_Landingsites","Landingsite","Ownerships","entry","Company","nationality","count","OceanDepthAnalyzer","ref_key","ref","onDepthAnalysisComplete","ElevationProfile","src","show","clickToClose","styles","modalStyles","closeModal","components","VueFinalModal","openModal","overlay","zIndex","content","render","dataCablesStore","selectedSource","isOpen","originalCableData","currentHoveredItem","toggleDropdown","selectSource","source","updateCableSource","async","dataCables","updateMixedSourceCables","originalCable","orig","initialize","mixedSourceCable","item","oceanSelected","currentGeometry","drawControl","drawnItemsLayer","lastGeometry","drawnItems","isDrawingModeActive","isEditModeActive","drawControlsInitialized","removeMapEventListeners","Event","CREATED","DELETED","DRAWSTART","DELETESTART","DELETESTOP","EDITSTART","EDITSTOP","initializeDrawingControls","addLayer","drawOptions","draw","polyline","shapeOptions","color","metric","nautic","feet","showArea","rectangle","showRadius","marker","circlemarker","edit","featureGroup","position","Draw","handleDrawCreated","handleDrawDeleted","handleDrawStart","handleDeleteStart","handleDeleteStop","handleEditStart","handleEditStop","setupClickHandler","highlightedLayer","createHighlightedLayer","targetLayer","stopPropagation","fire","toggleDrawingMode","fromWatcher","addControl","cleanupGeometries","clearLayers","itemDetails","layerType","getLayerCoordinates","highlightStyles","weight","opacity","fillColor","fillOpacity","icon","html","iconSize","coords","smoothFactor","noClip","layers","findIndex","splice","newMap","newValue","alt","timeline","leftPosition","rightPosition","hoverPosition","currentStartDate","currentEndDate","minDate","maxDate","setMonth","getMonth","visibleRangeStart","visibleRangeEnd","showLeftTooltip","showRightTooltip","eventTooltipContent","eventTooltipStyle","initializeDates","now","oneYearAgo","getFullYear","getDate","updateDates","startDate","adjustVisibleRange","endDate","updateHoverPosition","timelineRect","getBoundingClientRect","clientX","left","hoveredEvent","visibleEvents","startPosition","endPosition","emitEventHover","showEventTooltip","hideEventTooltip","hoveredLine","interEventLines","line","handleLineHover","hideHoverEffect","hoverEffectStyle","display","backgroundColor","timeRange","extendedVisibleRangeForEvents","events","visibleTimeRange","getTime","eventStart","eventEnd","timelineMarkers","leftSliderTime","rightSliderTime","selectedTimeRange","dayInMs","monthInMs","yearInMs","interval","format","markers","current","currentTime","abs","label","toLocaleString","isFixed","sort","date","getEventBarStyle","isEventTooltipVisible","top","clientY","lines","sortedEvents","currentEvent","nextEvent","startEvent","endEvent","getInterEventLineStyle","lineStart","lineEnd","lineWidth","normalizedPosition","startTime","endTime","interpolatedTime","startLat","endLat","startLon","lon","endLon","interpolatedLon","time","startDrag","slider","preventDefault","initialX","initialLeft","initialRight","move","deltaX","deltaPct","extendVisibleRange","stop","resetSliderPositions","addEventListener","direction","distanceDragged","expansionFactor","newVisibleStart","leftTime","newVisibleEnd","rightTime","emitValue","setTime","showTooltip","hideTooltip","initializePositions","dataPoints","deep","vesselTrackingUrl","currentLanguage","String","cableStore","controlInstance","layerGroup","mapReady","vesselPositions","isSearchSelected","timelineContainerStyle","mapBounds","getContainer","localVesselPositions","vesselLayerReady","vesselPostResponse","vesselModifiedPostUrl","isVesselTrackingMode","vesselTrackingSelected","vesselEvents","hoveredMarker","currentTrackedVessel","vesselTrackLayer","interpolatedEvents","currentTranslations","newPositions","vesselTracking","isValidCoordinate","undefined","dateRange","onDatePickerChange","selectedDates","onEventHover","onMarkerHover","onInterEventHover","eventData","isInterpolated","markerData","mmsi","flag","tooltip","permanent","offset","vesselData","lastSeen","toISOString","eventType","createShipIcon","bindTooltip","openTooltip","baseColor","countryCode","vessel","flagEmoji","getFlagEmoji","lastDateSeen","currentDate","daysSinceLastSeen","getColorComponent","calculateColor","startColor","hexToRgb","endColor","g","rgbToHex","iconAnchor","hex","exec","parseInt","slice","codePoints","toUpperCase","char","charCodeAt","fromCodePoint","vesselIdsToArray","vessels","vesselIds","vesselId","vesselTrackingParams","limit","vesselIdsArray","allVesselPositions","loiteringParams","portVisitParams","loiteringResponse","portVisitResponse","latestEvent","entries","portVisitEvent","ssvid","beam","grossTonage","purpose","cableCapacity","notes","baseport","owner","replace","formattedEndDate","formattedStartDate","onDateChange","timeDiff","vesselTrack","d","join","extendedStartDate","extendedEndDate","baseParams","portVisitsResponse","portVisits","loiteringEvents","allEvents","formattedEvents","drawVesselTrack","trackData","mapInstanceToUse","filteredData","eventStartDate","eventEndDate","hasLayer","trackPoints","arrowheads","size","yawn","fill","isValid","fitBounds","viewVesselTrack","v","toggleVesselTracking","setAllCablesOpacity","exitVesselTrackingMode","popup","viewingVesselTrack","setViewingVesselTrack","onShipClick","lastSeenDate","formattedDate","hour","minute","second","hour12","popupContent","grossTonnage","viewOn","maxWidth","trackLink","Error","message","container","querySelector","onMousedown","onTouchstart","stopEvent","exitVesselTracking","modelValue","placeholder","datePlaceholder","range","partialRange","dark","TimelineSlider","isVisible","zoneLabels","highlightedLayers","zoneColors","ACMA","NAZ","MECMA","SEAIOCMA","YZ","APMA","AAPMMSAA","SPZ","translatedKey","defaultName","visible","geoJsonLayer","features","getZoneStyle","abbreviation","defaultStyle","createLabel","getCenter","labelColor","interactive","highlightZone","layerConfig","featureItem","highlightStyle","clearHighlightedZones","toggleLayer","onEachFeature","click","labelKey","resetLayers","hide","formatPropertyKey","word","charAt","createTooltipContent","excludeKeys","toLowerCase","startsWith","supercluster","maxZoom","originalGeometry","accumulated","formattedFeatures","dataCenterLayer","polygonLayer","isLayerVisible","createDataCenterIcon","bindInteractiveTooltip","getTooltip","tooltipElement","getElement","pointerEvents","updateClusters","zoom","floor","getZoom","bbox","clusters","getClusters","cluster","point_count","expansionZoom","getClusterExpansionZoom","cluster_id","setView","pane","tooltipContent","polygonErr","initializeLayer","addOverlay","zoomAnimation","controlInst","immediate","layerDefinitions","def","translatedName","initializeLayers","groupedLayerObj","_layers","layerObj","originalName","groupedLayer","allGroupLayers","getLayers","matchedLayer","sublabel","distance_from_shore_m","isDock","dock","anchorageLayer","clusterMarker","anchorIcon","distanceFromShore","anchorageOverlayLayer","apiUrl","landingSiteStore","selectedRadius","selectedColor","modifiedPostUrl","getTerritorialOptionsStyle","dashArray","getGasPipelinesOptionsStyle","isPipelineHighlighted","highlightedPipelineId","PipelineID","clusteredDataCentersRef","getEEZOptionsStyle","changeLanguage","language","mtLayer","setLanguage","updateLayerControlNames","getLayerTranslation","layerName","getTranslatedInfrastructureName","infrastructure","unknown","confidence","resetMapLayer","resetMap","_layerControlInputs","input","checked","_update","mapContainer","fishingSelected","showSeismicOverlay","vesselTrackingRef","anchorageLayerToggleRef","maintenanceLayerToggleRef","baseLayer","fishLayerReady","postResponse","eventMarkerLayer","newMarker","caller","infrastructurePositions","processInfrastructureData","structure_end_date","detection_id","label_confidence","detection_date","onPipelineClick","toGeoJSON","pipelineId","previouslyHighlighted","isSamePipeline","wasPreviouslyHighlighted","borderStyle","fillStyle","currentStyle","setStyle","cost","CostUSD","Cost","formattedCost","formatCost","PipelineName","startCountry","StartCountry","endCountry","EndCountry","countries","Countries","Owner","startYear","StartYear1","capacity","capacityTooltip","LengthKnownKm","toFixed","onPipelineHover","onPipelineDehover","drawingLayerRef","currentOceanDepth","depthTooltip","updateDepthTooltip","containerPoint","latLngToContainerPoint","lattitude","longitude","functionalityOverviewRef","seismicData","selectedEarthquake","seismicLayer","updateSeismicLayer","pointToLayer","reactivePointToLayer","tileProviders2","attribution","polylineMeasure","onMapReady","mapIns","setMapInstance","initializePolylineMeasure","apiKey","DATAVIZ","layertype","showUnitControl","unitControlUnits","unitControlTitle","text","metres","nauticalmiles","landmiles","unitControlLabel","kilometres","useMapZoomAnimation","tempLines","measureLines","onLayerControlReady","controlIns","resetMapContainer","createElement","resetMapButton","textContent","appendChild","layerControlContainer","polylinesBounds","onCreateLine","polylineInstance","extend","closeTooltip","bound","cableName","fishingWatch","post","cableShipsLayerGroup","lastDepthQuery","getOceanDepth","queryString","oceanDepth","datePicked","firstDay","formatDatePart","firstMonth","secondDay","secondMonth","part","layerChanged","add","fetchSeismicData","overlayAdded","overlayRemoved","questionMarkClicked","onMapClick","targetElement","originalEvent","onCableClick","onLandingSiteClick","updateMousePosition","seismicDatePicked","startMonth","endMonth","magnitude","mag","location","place","minZoom","zoomControl","markerZoomAnimation","worldCopyJump","onBaselayerchange","onOverlayadd","onOverlayremove","onReady","onMousemove","section","isNoneSelected","onMouseover","onMouseout","tee","country","geojson","tileProvider","VesselTracking","since","FunctionalityOverview","oceanMapLegend","latitude","datePlaceholderFishing","seismicDate","datePlaceholderSeismic","onChange","CableSourceSelector","ClusteredAnchorage","ClusteredDataCenters","AnchorageLayerToggle","MaintenanceLayerToggle","DrawingLayer","selectedEarthquakeDetails","loadLandingSite","setManySelectedCables","CableSystem","setLandingSite","CableSystem_X_Landingsites_t","connectedSite","routes","main","LeafletMap","sidebar","CableViewer","router","history","firstLoad","getSelectedCable","fetchDataCables","cables","fetchCableDetails","cableIds","showModal","sources","title","description","sourceName","handleKeydown","xmlns","viewBox","stroke","href","selectedCables","selectedLandingSite","landingSitesAndCables","inputArray","sidebarMarkerLayerGroup","getShipColor","getLandingColor","currentSidebarMarker","updateHoveredMarker","updateVesselPositions","positions","updateViewingVesselTrack","isViewing","clearSidebarVessel","updatedPositions","handleVesselSearchSelect","vesselInfo","getVesselLatestPosition","latestPosition","shipIcon","clickEvent","mockEvent","loiteringEvent","loiteringDate","portVisitDate","initializeSearchBar","vesselSearchOptions","getCountryFlag","shipname","cableOptions","landingSiteOptions","codeMapping","normalizedCode","twoLetterCode","asyncFind","queryGiven","regex","RegExp","filteredCables","test","filteredVessels","filteredLandingSites","selectCableOrLandingSiteOrVessel","selection","selectedCable","str","selectedLandingSites","oldValue","configure","projectKey","privateMode","canvas","disableCanvas","useAnimationFrame","fileExt","resourceBaseHref","_component_router_view","searchable","loading","onSearchChange","onSelect","option","cx","cy","SourcesModal","sidebarWidth","isResizing","startResizing","resizeSidebar","stopResizing","HomeView","exchanges","fetchOptions","headers","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","keys","every","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","then","ns","create","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","onerror","onload","doneFns","parentNode","removeChild","head","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","resolve","reject","loadingEnded","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}